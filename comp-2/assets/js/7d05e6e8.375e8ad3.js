"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[3141],{4367:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"apscheduler/triggers","title":"3. \ud2b8\ub9ac\uac70","description":"\ud2b8\ub9ac\uac70(Trigger)\ub294 \uc791\uc5c5\uc774 \uc5b8\uc81c \uc2e4\ud589\ub420\uc9c0\ub97c \uacb0\uc815\ud558\ub294 APScheduler\uc758 \ud575\uc2ec \ucef4\ud3ec\ub10c\ud2b8\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \ud2b8\ub9ac\uac70 \ud0c0\uc785\uacfc \ud65c\uc6a9\ubc95\uc744 \uc0c1\uc138\ud788 \ub2e4\ub8f9\ub2c8\ub2e4.","source":"@site/docs/apscheduler/triggers.md","sourceDirName":"apscheduler","slug":"/apscheduler/triggers","permalink":"/tobias-docs/comp-2/docs/apscheduler/triggers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/apscheduler/triggers.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"apschedulerSidebar","previous":{"title":"2. \uc2a4\ucf00\uc904\ub7ec","permalink":"/tobias-docs/comp-2/docs/apscheduler/schedulers"},"next":{"title":"4. Job \uad00\ub9ac","permalink":"/tobias-docs/comp-2/docs/apscheduler/jobs"}}');var i=r(4848),o=r(8453);const d={sidebar_position:4},s="3. \ud2b8\ub9ac\uac70",a={},l=[{value:"\ud2b8\ub9ac\uac70 \uac1c\uc694",id:"\ud2b8\ub9ac\uac70-\uac1c\uc694",level:2},{value:"DateTrigger",id:"datetrigger",level:2},{value:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95",id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95",level:3},{value:"Trigger \uac1d\uccb4 \uc9c1\uc811 \uc0ac\uc6a9",id:"trigger-\uac1d\uccb4-\uc9c1\uc811-\uc0ac\uc6a9",level:3},{value:"\uc5ec\ub7ec \uac1c\uc758 \uc77c\ud68c\uc131 \uc791\uc5c5",id:"\uc5ec\ub7ec-\uac1c\uc758-\uc77c\ud68c\uc131-\uc791\uc5c5",level:3},{value:"\uc870\uac74\ubd80 \uc77c\ud68c\uc131 \uc791\uc5c5",id:"\uc870\uac74\ubd80-\uc77c\ud68c\uc131-\uc791\uc5c5",level:3},{value:"IntervalTrigger",id:"intervaltrigger",level:2},{value:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95",id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95-1",level:3},{value:"\uc2dc\uc791 \uc2dc\uac04\uacfc \uc885\ub8cc \uc2dc\uac04 \uc9c0\uc815",id:"\uc2dc\uc791-\uc2dc\uac04\uacfc-\uc885\ub8cc-\uc2dc\uac04-\uc9c0\uc815",level:3},{value:"Trigger \uac1d\uccb4 \uc9c1\uc811 \uc0ac\uc6a9",id:"trigger-\uac1d\uccb4-\uc9c1\uc811-\uc0ac\uc6a9-1",level:3},{value:"Jitter\ub97c \ud65c\uc6a9\ud55c \ubd84\uc0b0 \uc2e4\ud589",id:"jitter\ub97c-\ud65c\uc6a9\ud55c-\ubd84\uc0b0-\uc2e4\ud589",level:3},{value:"\uc870\uac74\ubd80 \ubc18\ubcf5 \uc791\uc5c5",id:"\uc870\uac74\ubd80-\ubc18\ubcf5-\uc791\uc5c5",level:3},{value:"\ub3d9\uc801 \uac04\uaca9 \uc870\uc815",id:"\ub3d9\uc801-\uac04\uaca9-\uc870\uc815",level:3},{value:"CronTrigger",id:"crontrigger",level:2},{value:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95",id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95-2",level:3},{value:"Cron \ud45c\ud604\uc2dd \uc0c1\uc138",id:"cron-\ud45c\ud604\uc2dd-\uc0c1\uc138",level:3},{value:"CronTrigger \uac1d\uccb4 \uc0ac\uc6a9",id:"crontrigger-\uac1d\uccb4-\uc0ac\uc6a9",level:3},{value:"\uc2e4\uc804 Cron \ud328\ud134",id:"\uc2e4\uc804-cron-\ud328\ud134",level:3},{value:"Cron \ud45c\ud604\uc2dd \uac80\uc99d",id:"cron-\ud45c\ud604\uc2dd-\uac80\uc99d",level:3},{value:"Combining Triggers",id:"combining-triggers",level:2},{value:"OrTrigger: \uc5ec\ub7ec \uc870\uac74 \uc911 \ud558\ub098",id:"ortrigger-\uc5ec\ub7ec-\uc870\uac74-\uc911-\ud558\ub098",level:3},{value:"AndTrigger: \uc5ec\ub7ec \uc870\uac74 \ubaa8\ub450 \ub9cc\uc871",id:"andtrigger-\uc5ec\ub7ec-\uc870\uac74-\ubaa8\ub450-\ub9cc\uc871",level:3},{value:"\ubcf5\uc7a1\ud55c \uc2a4\ucf00\uc904 \uc870\ud569 \uc608\uc81c",id:"\ubcf5\uc7a1\ud55c-\uc2a4\ucf00\uc904-\uc870\ud569-\uc608\uc81c",level:3},{value:"\ucee4\uc2a4\ud140 \ud2b8\ub9ac\uac70 \uc870\ud569",id:"\ucee4\uc2a4\ud140-\ud2b8\ub9ac\uac70-\uc870\ud569",level:3},{value:"Timezone",id:"timezone",level:2},{value:"\uae30\ubcf8 \ud0c0\uc784\uc874 \uc124\uc815",id:"\uae30\ubcf8-\ud0c0\uc784\uc874-\uc124\uc815",level:3},{value:"\uc791\uc5c5\ubcc4 \ud0c0\uc784\uc874 \uc124\uc815",id:"\uc791\uc5c5\ubcc4-\ud0c0\uc784\uc874-\uc124\uc815",level:3},{value:"DST (\uc77c\uad11 \uc808\uc57d \uc2dc\uac04) \ucc98\ub9ac",id:"dst-\uc77c\uad11-\uc808\uc57d-\uc2dc\uac04-\ucc98\ub9ac",level:3},{value:"\ud0c0\uc784\uc874 \ubcc0\ud658 \uc720\ud2f8\ub9ac\ud2f0",id:"\ud0c0\uc784\uc874-\ubcc0\ud658-\uc720\ud2f8\ub9ac\ud2f0",level:3},{value:"\uae00\ub85c\ubc8c \uc11c\ube44\uc2a4 \uc2a4\ucf00\uc904\ub9c1",id:"\uae00\ub85c\ubc8c-\uc11c\ube44\uc2a4-\uc2a4\ucf00\uc904\ub9c1",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"3-\ud2b8\ub9ac\uac70",children:"3. \ud2b8\ub9ac\uac70"})}),"\n",(0,i.jsx)(n.p,{children:"\ud2b8\ub9ac\uac70(Trigger)\ub294 \uc791\uc5c5\uc774 \uc5b8\uc81c \uc2e4\ud589\ub420\uc9c0\ub97c \uacb0\uc815\ud558\ub294 APScheduler\uc758 \ud575\uc2ec \ucef4\ud3ec\ub10c\ud2b8\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \ud2b8\ub9ac\uac70 \ud0c0\uc785\uacfc \ud65c\uc6a9\ubc95\uc744 \uc0c1\uc138\ud788 \ub2e4\ub8f9\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h2,{id:"\ud2b8\ub9ac\uac70-\uac1c\uc694",children:"\ud2b8\ub9ac\uac70 \uac1c\uc694"}),"\n",(0,i.jsx)(n.p,{children:"APScheduler\ub294 \uc138 \uac00\uc9c0 \uae30\ubcf8 \ud2b8\ub9ac\uac70\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DateTrigger"}),": \ud2b9\uc815 \ub0a0\uc9dc/\uc2dc\uac04\uc5d0 \ud55c \ubc88 \uc2e4\ud589"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IntervalTrigger"}),": \uc77c\uc815\ud55c \uac04\uaca9\uc73c\ub85c \ubc18\ubcf5 \uc2e4\ud589"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CronTrigger"}),": Cron \ud45c\ud604\uc2dd\uc744 \uc0ac\uc6a9\ud55c \ubcf5\uc7a1\ud55c \uc2a4\ucf00\uc904\ub9c1"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\uac01 \ud2b8\ub9ac\uac70\ub294 \uc791\uc5c5\uc758 \uc2e4\ud589 \uc2dc\uc810\uc744 \uacc4\uc0b0\ud558\uace0, \ub2e4\uc74c \uc2e4\ud589 \uc2dc\uac04\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h2,{id:"datetrigger",children:"DateTrigger"}),"\n",(0,i.jsx)(n.p,{children:"DateTrigger\ub294 \uc9c0\uc815\ub41c \ub0a0\uc9dc\uc640 \uc2dc\uac04\uc5d0 \uc791\uc5c5\uc744 \ud55c \ubc88\ub9cc \uc2e4\ud589\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95",children:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime, timedelta\nimport time\n\ndef one_time_job():\n    print(f\"\uc77c\ud68c\uc131 \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# \ud2b9\uc815 \uc2dc\uac04\uc5d0 \uc2e4\ud589\nrun_date = datetime(2024, 12, 31, 23, 59, 59)\nscheduler.add_job(one_time_job, 'date', run_date=run_date)\n\n# 10\ucd08 \ud6c4 \uc2e4\ud589\nrun_date = datetime.now() + timedelta(seconds=10)\nscheduler.add_job(one_time_job, 'date', run_date=run_date)\n\nscheduler.start()\n\ntry:\n    time.sleep(60)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"trigger-\uac1d\uccb4-\uc9c1\uc811-\uc0ac\uc6a9",children:"Trigger \uac1d\uccb4 \uc9c1\uc811 \uc0ac\uc6a9"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.date import DateTrigger\nfrom datetime import datetime, timedelta\nfrom pytz import timezone\n\ndef notification():\n    print(\"\uc54c\ub9bc \uc804\uc1a1!\")\n\nscheduler = BackgroundScheduler()\n\n# \uc11c\uc6b8 \uc2dc\uac04\ub300 \uae30\uc900\uc73c\ub85c \ud2b9\uc815 \uc2dc\uac04\uc5d0 \uc2e4\ud589\nseoul_tz = timezone('Asia/Seoul')\nrun_time = datetime(2024, 12, 25, 9, 0, 0, tzinfo=seoul_tz)\n\ntrigger = DateTrigger(run_date=run_time)\nscheduler.add_job(notification, trigger=trigger)\n\nscheduler.start()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\uc5ec\ub7ec-\uac1c\uc758-\uc77c\ud68c\uc131-\uc791\uc5c5",children:"\uc5ec\ub7ec \uac1c\uc758 \uc77c\ud68c\uc131 \uc791\uc5c5"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime, timedelta\nimport time\n\nscheduler = BackgroundScheduler()\n\ndef send_email(recipient, message):\n    print(f"\uc774\uba54\uc77c \uc804\uc1a1 -> {recipient}: {message}")\n\n# \uc5ec\ub7ec \uc2dc\uac04\ub300\uc5d0 \uc54c\ub9bc \uc804\uc1a1\nnotifications = [\n    (5, "5\ucd08 \ud6c4 \uc54c\ub9bc"),\n    (10, "10\ucd08 \ud6c4 \uc54c\ub9bc"),\n    (15, "15\ucd08 \ud6c4 \uc54c\ub9bc")\n]\n\nfor delay, message in notifications:\n    run_time = datetime.now() + timedelta(seconds=delay)\n    scheduler.add_job(\n        send_email,\n        \'date\',\n        run_date=run_time,\n        args=[\'user@example.com\', message]\n    )\n\nscheduler.start()\n\ntry:\n    time.sleep(20)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\uc870\uac74\ubd80-\uc77c\ud68c\uc131-\uc791\uc5c5",children:"\uc870\uac74\ubd80 \uc77c\ud68c\uc131 \uc791\uc5c5"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime, timedelta\nimport time\n\ndef conditional_task():\n    """\uc870\uac74\uc744 \ud655\uc778\ud558\uace0 \ud544\uc694 \uc2dc \uc7ac\uc2a4\ucf00\uc904"""\n    print(f"\uc791\uc5c5 \uc2e4\ud589 \uc2dc\ub3c4: {datetime.now()}")\n\n    # \uc870\uac74 \ud655\uc778\n    if not check_condition():\n        print("\uc870\uac74 \ubbf8\ucda9\uc871, 5\ubd84 \ud6c4 \uc7ac\uc2dc\ub3c4")\n        # 5\ubd84 \ud6c4 \ub2e4\uc2dc \uc2a4\ucf00\uc904\n        retry_time = datetime.now() + timedelta(minutes=5)\n        scheduler.add_job(conditional_task, \'date\', run_date=retry_time)\n    else:\n        print("\uc791\uc5c5 \uc131\uacf5\uc801\uc73c\ub85c \uc644\ub8cc")\n\ndef check_condition():\n    """\uc870\uac74 \ud655\uc778 \ud568\uc218"""\n    # \uc2e4\uc81c \uc870\uac74 \ub85c\uc9c1\n    return datetime.now().second % 2 == 0\n\nscheduler = BackgroundScheduler()\n\n# \ucd08\uae30 \uc2e4\ud589\ninitial_run = datetime.now() + timedelta(seconds=3)\nscheduler.add_job(conditional_task, \'date\', run_date=initial_run)\n\nscheduler.start()\n\ntry:\n    time.sleep(30)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"intervaltrigger",children:"IntervalTrigger"}),"\n",(0,i.jsx)(n.p,{children:"IntervalTrigger\ub294 \uc77c\uc815\ud55c \uac04\uaca9\uc73c\ub85c \uc791\uc5c5\uc744 \ubc18\ubcf5 \uc2e4\ud589\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95-1",children:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\ndef periodic_task():\n    print(f\"\uc8fc\uae30\uc801 \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# 5\ucd08\ub9c8\ub2e4 \uc2e4\ud589\nscheduler.add_job(periodic_task, 'interval', seconds=5)\n\n# 2\ubd84\ub9c8\ub2e4 \uc2e4\ud589\nscheduler.add_job(periodic_task, 'interval', minutes=2)\n\n# 1\uc2dc\uac04\ub9c8\ub2e4 \uc2e4\ud589\nscheduler.add_job(periodic_task, 'interval', hours=1)\n\n# \ubcf5\ud569 \uac04\uaca9: 1\uc2dc\uac04 30\ubd84\ub9c8\ub2e4\nscheduler.add_job(periodic_task, 'interval', hours=1, minutes=30)\n\nscheduler.start()\n\ntry:\n    time.sleep(60)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\uc2dc\uc791-\uc2dc\uac04\uacfc-\uc885\ub8cc-\uc2dc\uac04-\uc9c0\uc815",children:"\uc2dc\uc791 \uc2dc\uac04\uacfc \uc885\ub8cc \uc2dc\uac04 \uc9c0\uc815"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime, timedelta\nimport time\n\ndef limited_task():\n    print(f\"\uc81c\ud55c\ub41c \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# 10\ucd08 \ud6c4\ubd80\ud130 \uc2dc\uc791\ud574\uc11c 1\ubd84 \ud6c4 \uc885\ub8cc\nstart_time = datetime.now() + timedelta(seconds=10)\nend_time = datetime.now() + timedelta(minutes=1)\n\nscheduler.add_job(\n    limited_task,\n    'interval',\n    seconds=5,\n    start_date=start_time,\n    end_date=end_time\n)\n\nscheduler.start()\n\ntry:\n    time.sleep(70)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"trigger-\uac1d\uccb4-\uc9c1\uc811-\uc0ac\uc6a9-1",children:"Trigger \uac1d\uccb4 \uc9c1\uc811 \uc0ac\uc6a9"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.interval import IntervalTrigger\nfrom datetime import datetime, timedelta\nimport time\n\ndef custom_interval_task():\n    print(f\"\ucee4\uc2a4\ud140 \uc778\ud130\ubc8c \uc791\uc5c5: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# IntervalTrigger \uac1d\uccb4 \uc0dd\uc131\ntrigger = IntervalTrigger(\n    weeks=0,\n    days=0,\n    hours=0,\n    minutes=0,\n    seconds=30,\n    start_date=datetime.now() + timedelta(seconds=5),\n    end_date=datetime.now() + timedelta(minutes=5),\n    timezone='Asia/Seoul',\n    jitter=5  # \uc2e4\ud589 \uc2dc\uac04\uc5d0 \xb15\ucd08\uc758 \ubb34\uc791\uc704\uc131 \ucd94\uac00\n)\n\nscheduler.add_job(custom_interval_task, trigger=trigger)\n\nscheduler.start()\n\ntry:\n    time.sleep(300)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"jitter\ub97c-\ud65c\uc6a9\ud55c-\ubd84\uc0b0-\uc2e4\ud589",children:"Jitter\ub97c \ud65c\uc6a9\ud55c \ubd84\uc0b0 \uc2e4\ud589"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\ndef api_call(service_name):\n    \"\"\"API \ud638\ucd9c \uc2dc\ubbac\ub808\uc774\uc158\"\"\"\n    print(f\"[{datetime.now():%H:%M:%S}] {service_name} API \ud638\ucd9c\")\n\nscheduler = BackgroundScheduler()\n\n# \uc5ec\ub7ec \uc11c\ube44\uc2a4\uc758 API\ub97c \ud638\ucd9c\ud558\ub418, jitter\ub85c \ubd80\ud558 \ubd84\uc0b0\nservices = ['Service A', 'Service B', 'Service C', 'Service D']\n\nfor service in services:\n    scheduler.add_job(\n        api_call,\n        'interval',\n        seconds=10,\n        args=[service],\n        jitter=3,  # \xb13\ucd08\uc758 \ubb34\uc791\uc704\uc131\uc73c\ub85c \ub3d9\uc2dc \uc2e4\ud589 \ubc29\uc9c0\n        id=f'api_call_{service}'\n    )\n\nscheduler.start()\n\ntry:\n    time.sleep(60)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\uc870\uac74\ubd80-\ubc18\ubcf5-\uc791\uc5c5",children:"\uc870\uac74\ubd80 \ubc18\ubcf5 \uc791\uc5c5"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\nclass ConditionalJob:\n    """\uc870\uac74\uc5d0 \ub530\ub77c \uacc4\uc18d \uc2e4\ud589\ud560\uc9c0 \uacb0\uc815\ud558\ub294 \uc791\uc5c5"""\n\n    def __init__(self, scheduler, max_runs=10):\n        self.scheduler = scheduler\n        self.run_count = 0\n        self.max_runs = max_runs\n\n    def run(self):\n        """\uc791\uc5c5 \uc2e4\ud589"""\n        self.run_count += 1\n        print(f"\uc2e4\ud589 {self.run_count}/{self.max_runs}: {datetime.now()}")\n\n        # \ucd5c\ub300 \uc2e4\ud589 \ud69f\uc218 \ub3c4\ub2ec \uc2dc \uc791\uc5c5 \uc81c\uac70\n        if self.run_count >= self.max_runs:\n            print("\ucd5c\ub300 \uc2e4\ud589 \ud69f\uc218 \ub3c4\ub2ec, \uc791\uc5c5 \uc81c\uac70")\n            self.scheduler.remove_job(\'conditional_job\')\n\nscheduler = BackgroundScheduler()\nconditional_job = ConditionalJob(scheduler, max_runs=5)\n\nscheduler.add_job(\n    conditional_job.run,\n    \'interval\',\n    seconds=2,\n    id=\'conditional_job\'\n)\n\nscheduler.start()\n\ntry:\n    time.sleep(15)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\ub3d9\uc801-\uac04\uaca9-\uc870\uc815",children:"\ub3d9\uc801 \uac04\uaca9 \uc870\uc815"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\nimport random\n\nclass AdaptiveIntervalJob:\n    """\uc2dc\uc2a4\ud15c \ubd80\ud558\uc5d0 \ub530\ub77c \uac04\uaca9\uc744 \uc870\uc815\ud558\ub294 \uc791\uc5c5"""\n\n    def __init__(self, scheduler, job_id):\n        self.scheduler = scheduler\n        self.job_id = job_id\n        self.current_interval = 5\n\n    def run(self):\n        """\uc791\uc5c5 \uc2e4\ud589 \ubc0f \uac04\uaca9 \uc870\uc815"""\n        print(f"\uc791\uc5c5 \uc2e4\ud589 (\ud604\uc7ac \uac04\uaca9: {self.current_interval}\ucd08)")\n\n        # \uc2dc\uc2a4\ud15c \ubd80\ud558 \uc2dc\ubbac\ub808\uc774\uc158\n        system_load = random.uniform(0, 1)\n\n        # \ubd80\ud558\uac00 \ub192\uc73c\uba74 \uac04\uaca9 \uc99d\uac00, \ub0ae\uc73c\uba74 \uac10\uc18c\n        if system_load > 0.7:\n            self.current_interval = min(self.current_interval + 2, 30)\n            print(f"\uc2dc\uc2a4\ud15c \ubd80\ud558 \ub192\uc74c ({system_load:.2f}), \uac04\uaca9 \uc99d\uac00: {self.current_interval}\ucd08")\n        elif system_load < 0.3:\n            self.current_interval = max(self.current_interval - 1, 3)\n            print(f"\uc2dc\uc2a4\ud15c \ubd80\ud558 \ub0ae\uc74c ({system_load:.2f}), \uac04\uaca9 \uac10\uc18c: {self.current_interval}\ucd08")\n\n        # \uc791\uc5c5 \uc7ac\uc2a4\ucf00\uc904\n        self.scheduler.reschedule_job(\n            self.job_id,\n            trigger=\'interval\',\n            seconds=self.current_interval\n        )\n\nscheduler = BackgroundScheduler()\nadaptive_job = AdaptiveIntervalJob(scheduler, \'adaptive_job\')\n\nscheduler.add_job(\n    adaptive_job.run,\n    \'interval\',\n    seconds=5,\n    id=\'adaptive_job\'\n)\n\nscheduler.start()\n\ntry:\n    time.sleep(60)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"crontrigger",children:"CronTrigger"}),"\n",(0,i.jsx)(n.p,{children:"CronTrigger\ub294 Unix cron\uacfc \uc720\uc0ac\ud55c \ubc29\uc2dd\uc73c\ub85c \ubcf5\uc7a1\ud55c \uc2a4\ucf00\uc904\uc744 \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95-2",children:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\ndef cron_job():\n    print(f\"Cron \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# \ub9e4\uc77c \uc624\uc804 9\uc2dc\nscheduler.add_job(cron_job, 'cron', hour=9, minute=0)\n\n# \ud3c9\uc77c \uc624\uc804 9\uc2dc\nscheduler.add_job(cron_job, 'cron', day_of_week='mon-fri', hour=9, minute=0)\n\n# \ub9e4\uc6d4 1\uc77c \uc790\uc815\nscheduler.add_job(cron_job, 'cron', day=1, hour=0, minute=0)\n\n# \ub9e4\uc8fc \uc6d4\uc694\uc77c \uc624\uc804 9\uc2dc\nscheduler.add_job(cron_job, 'cron', day_of_week='mon', hour=9, minute=0)\n\nscheduler.start()\n\ntry:\n    time.sleep(60)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cron-\ud45c\ud604\uc2dd-\uc0c1\uc138",children:"Cron \ud45c\ud604\uc2dd \uc0c1\uc138"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\n\nscheduler = BackgroundScheduler()\n\ndef task():\n    print(f\"\uc2e4\ud589: {datetime.now()}\")\n\n# \ub9e4 \ubd84\ub9c8\ub2e4\nscheduler.add_job(task, 'cron', minute='*')\n\n# \ub9e4 5\ubd84\ub9c8\ub2e4\nscheduler.add_job(task, 'cron', minute='*/5')\n\n# \ub9e4 \uc2dc\uac04 \uc815\uac01 (0\ubd84)\nscheduler.add_job(task, 'cron', minute=0)\n\n# \ub9e4 \uc2dc\uac04 15\ubd84\uacfc 45\ubd84\nscheduler.add_job(task, 'cron', minute='15,45')\n\n# \uc624\uc804 9\uc2dc\ubd80\ud130 \uc624\ud6c4 5\uc2dc\uae4c\uc9c0 \ub9e4\uc2dc\uac04\nscheduler.add_job(task, 'cron', hour='9-17', minute=0)\n\n# \ud3c9\uc77c \uc624\uc804 9\uc2dc\ubd80\ud130 \uc624\ud6c4 6\uc2dc\uae4c\uc9c0 30\ubd84\ub9c8\ub2e4\nscheduler.add_job(\n    task,\n    'cron',\n    day_of_week='mon-fri',\n    hour='9-18',\n    minute='0,30'\n)\n\n# \ub9e4\uc6d4 \uccab\uc9f8 \uc8fc \uc6d4\uc694\uc77c \uc624\uc804 9\uc2dc\nscheduler.add_job(\n    task,\n    'cron',\n    day_of_week='mon',\n    week='0',\n    hour=9,\n    minute=0\n)\n\n# \ub9e4 \ubd84\uae30 \uccab\ub0a0 (1, 4, 7, 10\uc6d4\uc758 1\uc77c)\nscheduler.add_job(\n    task,\n    'cron',\n    month='1,4,7,10',\n    day=1,\n    hour=0,\n    minute=0\n)\n\nscheduler.start()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"crontrigger-\uac1d\uccb4-\uc0ac\uc6a9",children:"CronTrigger \uac1d\uccb4 \uc0ac\uc6a9"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.cron import CronTrigger\nfrom pytz import timezone\n\ndef scheduled_task():\n    print(f\"\uc2a4\ucf00\uc904\ub41c \uc791\uc5c5: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# \uc11c\uc6b8 \uc2dc\uac04\ub300 \uae30\uc900 \ud3c9\uc77c \uc624\uc804 9\uc2dc\nseoul_tz = timezone('Asia/Seoul')\ntrigger = CronTrigger(\n    day_of_week='mon-fri',\n    hour=9,\n    minute=0,\n    timezone=seoul_tz\n)\n\nscheduler.add_job(scheduled_task, trigger=trigger)\n\n# \ub354 \ubcf5\uc7a1\ud55c \ud45c\ud604\uc2dd\ncomplex_trigger = CronTrigger(\n    year='2024',\n    month='1-6',\n    day='1-15',\n    day_of_week='mon,wed,fri',\n    hour='9-17',\n    minute='0,30',\n    timezone=seoul_tz\n)\n\nscheduler.add_job(scheduled_task, trigger=complex_trigger)\n\nscheduler.start()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\uc2e4\uc804-cron-\ud328\ud134",children:"\uc2e4\uc804 Cron \ud328\ud134"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\nscheduler = BackgroundScheduler()\n\n# 1. \ubc31\uc5c5 \uc791\uc5c5: \ub9e4\uc77c \uc0c8\ubcbd 2\uc2dc\ndef daily_backup():\n    print(f\"[{datetime.now()}] \uc77c\uc77c \ubc31\uc5c5 \uc2e4\ud589\")\n\nscheduler.add_job(daily_backup, 'cron', hour=2, minute=0, id='daily_backup')\n\n# 2. \uc8fc\uac04 \ub9ac\ud3ec\ud2b8: \ub9e4\uc8fc \uc6d4\uc694\uc77c \uc624\uc804 9\uc2dc\ndef weekly_report():\n    print(f\"[{datetime.now()}] \uc8fc\uac04 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131\")\n\nscheduler.add_job(\n    weekly_report,\n    'cron',\n    day_of_week='mon',\n    hour=9,\n    minute=0,\n    id='weekly_report'\n)\n\n# 3. \uc6d4\uac04 \uccad\uad6c: \ub9e4\uc6d4 1\uc77c \uc624\uc804 10\uc2dc\ndef monthly_billing():\n    print(f\"[{datetime.now()}] \uc6d4\uac04 \uccad\uad6c \ucc98\ub9ac\")\n\nscheduler.add_job(\n    monthly_billing,\n    'cron',\n    day=1,\n    hour=10,\n    minute=0,\n    id='monthly_billing'\n)\n\n# 4. \uc5c5\ubb34 \uc2dc\uac04 \uc911 \ubaa8\ub2c8\ud130\ub9c1: \ud3c9\uc77c 9\uc2dc~18\uc2dc \ub9e4 15\ubd84\ndef health_check():\n    print(f\"[{datetime.now()}] \uc2dc\uc2a4\ud15c \uc0c1\ud0dc \ud655\uc778\")\n\nscheduler.add_job(\n    health_check,\n    'cron',\n    day_of_week='mon-fri',\n    hour='9-18',\n    minute='*/15',\n    id='health_check'\n)\n\n# 5. \uce90\uc2dc \uc815\ub9ac: \ub9e4\uc2dc\uac04 \uc815\uac01\ndef clear_cache():\n    print(f\"[{datetime.now()}] \uce90\uc2dc \uc815\ub9ac\")\n\nscheduler.add_job(\n    clear_cache,\n    'cron',\n    minute=0,\n    id='clear_cache'\n)\n\n# 6. \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucd5c\uc801\ud654: \ub9e4\uc8fc \uc77c\uc694\uc77c \uc0c8\ubcbd 3\uc2dc\ndef optimize_database():\n    print(f\"[{datetime.now()}] \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucd5c\uc801\ud654\")\n\nscheduler.add_job(\n    optimize_database,\n    'cron',\n    day_of_week='sun',\n    hour=3,\n    minute=0,\n    id='db_optimize'\n)\n\n# 7. \ub85c\uadf8 \ub85c\ud14c\uc774\uc158: \ub9e4\uc77c \uc790\uc815\ndef rotate_logs():\n    print(f\"[{datetime.now()}] \ub85c\uadf8 \ud30c\uc77c \ub85c\ud14c\uc774\uc158\")\n\nscheduler.add_job(\n    rotate_logs,\n    'cron',\n    hour=0,\n    minute=0,\n    id='log_rotation'\n)\n\nscheduler.start()\n\nprint(\"\uc2e4\uc804 Cron \uc791\uc5c5\ub4e4\uc774 \uc2a4\ucf00\uc904\ub418\uc5c8\uc2b5\ub2c8\ub2e4:\")\nfor job in scheduler.get_jobs():\n    print(f\"  - {job.id}: \ub2e4\uc74c \uc2e4\ud589 {job.next_run_time}\")\n\ntry:\n    time.sleep(300)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cron-\ud45c\ud604\uc2dd-\uac80\uc99d",children:"Cron \ud45c\ud604\uc2dd \uac80\uc99d"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.triggers.cron import CronTrigger\nfrom datetime import datetime\n\ndef validate_cron_expression(**kwargs):\n    """Cron \ud45c\ud604\uc2dd \uc720\ud6a8\uc131 \uac80\uc99d \ubc0f \ub2e4\uc74c \uc2e4\ud589 \uc2dc\uac04 \uc608\uce21"""\n    try:\n        trigger = CronTrigger(**kwargs)\n\n        # \ub2e4\uc74c 10\ubc88\uc758 \uc2e4\ud589 \uc2dc\uac04 \ucd9c\ub825\n        now = datetime.now()\n        print(f"\ud604\uc7ac \uc2dc\uac04: {now}")\n        print(f"Cron \ud45c\ud604\uc2dd: {kwargs}")\n        print("\\n\ub2e4\uc74c \uc2e4\ud589 \uc2dc\uac04:")\n\n        for i in range(10):\n            next_time = trigger.get_next_fire_time(now, now)\n            if next_time:\n                print(f"  {i+1}. {next_time}")\n                now = next_time\n            else:\n                print("  \ub354 \uc774\uc0c1 \uc2e4\ud589 \uc2dc\uac04\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.")\n                break\n\n        return True\n    except Exception as e:\n        print(f"\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 Cron \ud45c\ud604\uc2dd: {e}")\n        return False\n\n# \uac80\uc99d \uc608\uc81c\nprint("=== \uac80\uc99d 1: \ud3c9\uc77c \uc624\uc804 9\uc2dc ===")\nvalidate_cron_expression(day_of_week=\'mon-fri\', hour=9, minute=0)\n\nprint("\\n=== \uac80\uc99d 2: \ub9e4\uc6d4 1\uc77c\uacfc 15\uc77c ===")\nvalidate_cron_expression(day=\'1,15\', hour=12, minute=0)\n\nprint("\\n=== \uac80\uc99d 3: \ub9e4\uc8fc \uc218\uc694\uc77c ===")\nvalidate_cron_expression(day_of_week=\'wed\', hour=14, minute=30)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"combining-triggers",children:"Combining Triggers"}),"\n",(0,i.jsx)(n.p,{children:"\uc5ec\ub7ec \ud2b8\ub9ac\uac70\ub97c \uc870\ud569\ud558\uc5ec \ub354 \ubcf5\uc7a1\ud55c \uc2a4\ucf00\uc904\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"ortrigger-\uc5ec\ub7ec-\uc870\uac74-\uc911-\ud558\ub098",children:"OrTrigger: \uc5ec\ub7ec \uc870\uac74 \uc911 \ud558\ub098"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.combining import OrTrigger\nfrom apscheduler.triggers.cron import CronTrigger\nfrom apscheduler.triggers.interval import IntervalTrigger\nfrom datetime import datetime\nimport time\n\ndef flexible_task():\n    print(f\"\uc720\uc5f0\ud55c \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# \ud3c9\uc77c \uc624\uc804 9\uc2dc \ub610\ub294 \uc8fc\ub9d0 \uc815\uc624\nweekday_trigger = CronTrigger(day_of_week='mon-fri', hour=9, minute=0)\nweekend_trigger = CronTrigger(day_of_week='sat,sun', hour=12, minute=0)\n\ncombined_trigger = OrTrigger([weekday_trigger, weekend_trigger])\n\nscheduler.add_job(flexible_task, trigger=combined_trigger)\n\nscheduler.start()\n\ntry:\n    time.sleep(300)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"andtrigger-\uc5ec\ub7ec-\uc870\uac74-\ubaa8\ub450-\ub9cc\uc871",children:"AndTrigger: \uc5ec\ub7ec \uc870\uac74 \ubaa8\ub450 \ub9cc\uc871"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.combining import AndTrigger\nfrom apscheduler.triggers.cron import CronTrigger\nfrom apscheduler.triggers.date import DateTrigger\nfrom datetime import datetime, timedelta\nimport time\n\ndef restricted_task():\n    print(f\"\uc81c\ud55c\ub41c \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\nscheduler = BackgroundScheduler()\n\n# \ud3c9\uc77c \uc624\uc804 9\uc2dc~\uc624\ud6c4 5\uc2dc AND \ud2b9\uc815 \uae30\uac04 \ub0b4\nwork_hours = CronTrigger(day_of_week='mon-fri', hour='9-17', minute=0)\nperiod_limit = DateTrigger(\n    run_date=datetime.now() + timedelta(days=30)\n)\n\n# \uc2e4\uc81c\ub85c AndTrigger\ub294 \ubcf5\uc7a1\ud558\ubbc0\ub85c, \ubcf4\ud1b5\uc740 CronTrigger\uc758 \ud30c\ub77c\ubbf8\ud130\ub97c \uc870\ud569\n# \ub610\ub294 \uc791\uc5c5 \ub0b4\ubd80\uc5d0\uc11c \uc870\uac74 \ud655\uc778\n\nscheduler.start()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\ubcf5\uc7a1\ud55c-\uc2a4\ucf00\uc904-\uc870\ud569-\uc608\uc81c",children:"\ubcf5\uc7a1\ud55c \uc2a4\ucf00\uc904 \uc870\ud569 \uc608\uc81c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.combining import OrTrigger\nfrom apscheduler.triggers.cron import CronTrigger\nfrom datetime import datetime\nimport time\n\nscheduler = BackgroundScheduler()\n\ndef notification_task():\n    """\uc54c\ub9bc \uc804\uc1a1 \uc791\uc5c5"""\n    print(f"\uc54c\ub9bc \uc804\uc1a1: {datetime.now()}")\n\n# \uc5ec\ub7ec \uc2dc\uac04\ub300\uc5d0 \uc54c\ub9bc \uc804\uc1a1\n# - \ud3c9\uc77c: \uc624\uc804 9\uc2dc, \uc815\uc624, \uc624\ud6c4 6\uc2dc\n# - \uc8fc\ub9d0: \uc815\uc624\nweekday_morning = CronTrigger(day_of_week=\'mon-fri\', hour=9, minute=0)\nweekday_noon = CronTrigger(day_of_week=\'mon-fri\', hour=12, minute=0)\nweekday_evening = CronTrigger(day_of_week=\'mon-fri\', hour=18, minute=0)\nweekend_noon = CronTrigger(day_of_week=\'sat,sun\', hour=12, minute=0)\n\nnotification_trigger = OrTrigger([\n    weekday_morning,\n    weekday_noon,\n    weekday_evening,\n    weekend_noon\n])\n\nscheduler.add_job(notification_task, trigger=notification_trigger)\n\nscheduler.start()\n\n# \ub2e4\uc74c 10\ubc88\uc758 \uc2e4\ud589 \uc2dc\uac04 \ucd9c\ub825\nprint("\ub2e4\uc74c \uc54c\ub9bc \uc804\uc1a1 \uc2dc\uac04:")\njob = scheduler.get_job(scheduler.get_jobs()[0].id)\nnow = datetime.now()\nfor i in range(10):\n    next_time = notification_trigger.get_next_fire_time(now, now)\n    if next_time:\n        print(f"  {i+1}. {next_time}")\n        now = next_time\n    else:\n        break\n\ntry:\n    time.sleep(300)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\ucee4\uc2a4\ud140-\ud2b8\ub9ac\uac70-\uc870\ud569",children:"\ucee4\uc2a4\ud140 \ud2b8\ub9ac\uac70 \uc870\ud569"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\nclass BusinessHoursTrigger:\n    """\uc5c5\ubb34 \uc2dc\uac04\uc5d0\ub9cc \uc2e4\ud589\ub418\ub294 \ucee4\uc2a4\ud140 \ud2b8\ub9ac\uac70"""\n\n    def __init__(self, interval_seconds=60):\n        self.interval_seconds = interval_seconds\n\n    def get_next_fire_time(self, previous_fire_time, now):\n        """\ub2e4\uc74c \uc2e4\ud589 \uc2dc\uac04 \uacc4\uc0b0"""\n        from datetime import timedelta\n\n        if previous_fire_time:\n            next_time = previous_fire_time + timedelta(seconds=self.interval_seconds)\n        else:\n            next_time = now + timedelta(seconds=self.interval_seconds)\n\n        # \uc5c5\ubb34 \uc2dc\uac04 \ud655\uc778 (\ud3c9\uc77c 9\uc2dc~18\uc2dc)\n        while True:\n            if next_time.weekday() < 5:  # \uc6d4~\uae08\n                if 9 <= next_time.hour < 18:\n                    return next_time\n\n            # \uc5c5\ubb34 \uc2dc\uac04\uc774 \uc544\ub2c8\uba74 \ub2e4\uc74c \uc5c5\ubb34\uc77c 9\uc2dc\ub85c \uc870\uc815\n            if next_time.weekday() >= 5:  # \uc8fc\ub9d0\n                days_to_add = 7 - next_time.weekday()\n                next_time = next_time.replace(\n                    hour=9, minute=0, second=0, microsecond=0\n                ) + timedelta(days=days_to_add)\n            elif next_time.hour >= 18:  # \uc5c5\ubb34 \uc2dc\uac04 \uc774\ud6c4\n                next_time = (next_time + timedelta(days=1)).replace(\n                    hour=9, minute=0, second=0, microsecond=0\n                )\n            else:  # \uc5c5\ubb34 \uc2dc\uac04 \uc774\uc804\n                next_time = next_time.replace(\n                    hour=9, minute=0, second=0, microsecond=0\n                )\n\nscheduler = BackgroundScheduler()\n\ndef business_task():\n    print(f"\uc5c5\ubb34 \uc2dc\uac04 \uc791\uc5c5: {datetime.now()}")\n\ntrigger = BusinessHoursTrigger(interval_seconds=300)  # 5\ubd84\ub9c8\ub2e4\nscheduler.add_job(business_task, trigger=trigger)\n\nscheduler.start()\n\ntry:\n    time.sleep(600)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"timezone",children:"Timezone"}),"\n",(0,i.jsx)(n.p,{children:"\ud0c0\uc784\uc874 \ucc98\ub9ac\ub294 \uae00\ub85c\ubc8c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ub9e4\uc6b0 \uc911\uc694\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h3,{id:"\uae30\ubcf8-\ud0c0\uc784\uc874-\uc124\uc815",children:"\uae30\ubcf8 \ud0c0\uc784\uc874 \uc124\uc815"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom pytz import timezone, utc\nfrom datetime import datetime\nimport time\n\n# UTC \uc2a4\ucf00\uc904\ub7ec\nscheduler_utc = BackgroundScheduler(timezone=utc)\n\n# \ud55c\uad6d \uc2dc\uac04\ub300 \uc2a4\ucf00\uc904\ub7ec\nseoul_tz = timezone('Asia/Seoul')\nscheduler_kr = BackgroundScheduler(timezone=seoul_tz)\n\ndef print_time(tz_name):\n    print(f\"[{tz_name}] \ud604\uc7ac \uc2dc\uac01: {datetime.now()}\")\n\n# UTC \uae30\uc900 \ub9e4\uc2dc\uac04 \uc815\uac01\nscheduler_utc.add_job(\n    print_time,\n    'cron',\n    hour='*',\n    minute=0,\n    args=['UTC']\n)\n\n# \uc11c\uc6b8 \uc2dc\uac04 \uae30\uc900 \ub9e4\uc2dc\uac04 \uc815\uac01\nscheduler_kr.add_job(\n    print_time,\n    'cron',\n    hour='*',\n    minute=0,\n    args=['Seoul']\n)\n\nscheduler_utc.start()\nscheduler_kr.start()\n\ntry:\n    time.sleep(7200)  # 2\uc2dc\uac04\nexcept KeyboardInterrupt:\n    scheduler_utc.shutdown()\n    scheduler_kr.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\uc791\uc5c5\ubcc4-\ud0c0\uc784\uc874-\uc124\uc815",children:"\uc791\uc5c5\ubcc4 \ud0c0\uc784\uc874 \uc124\uc815"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.cron import CronTrigger\nfrom pytz import timezone\nfrom datetime import datetime\nimport time\n\nscheduler = BackgroundScheduler()\n\ndef global_task(location):\n    print(f\"[{location}] \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\n# \ub274\uc695 \uc2dc\uac04 \uc624\uc804 9\uc2dc\nny_tz = timezone('America/New_York')\nny_trigger = CronTrigger(hour=9, minute=0, timezone=ny_tz)\nscheduler.add_job(global_task, trigger=ny_trigger, args=['New York'])\n\n# \ub7f0\ub358 \uc2dc\uac04 \uc624\uc804 9\uc2dc\nlondon_tz = timezone('Europe/London')\nlondon_trigger = CronTrigger(hour=9, minute=0, timezone=london_tz)\nscheduler.add_job(global_task, trigger=london_trigger, args=['London'])\n\n# \ub3c4\ucfc4 \uc2dc\uac04 \uc624\uc804 9\uc2dc\ntokyo_tz = timezone('Asia/Tokyo')\ntokyo_trigger = CronTrigger(hour=9, minute=0, timezone=tokyo_tz)\nscheduler.add_job(global_task, trigger=tokyo_trigger, args=['Tokyo'])\n\n# \uc11c\uc6b8 \uc2dc\uac04 \uc624\uc804 9\uc2dc\nseoul_tz = timezone('Asia/Seoul')\nseoul_trigger = CronTrigger(hour=9, minute=0, timezone=seoul_tz)\nscheduler.add_job(global_task, trigger=seoul_trigger, args=['Seoul'])\n\nscheduler.start()\n\nprint(\"\uae00\ub85c\ubc8c \uc791\uc5c5 \uc2a4\ucf00\uc904:\")\nfor job in scheduler.get_jobs():\n    print(f\"  - {job.args[0]}: \ub2e4\uc74c \uc2e4\ud589 {job.next_run_time}\")\n\ntry:\n    time.sleep(86400)  # 24\uc2dc\uac04\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"dst-\uc77c\uad11-\uc808\uc57d-\uc2dc\uac04-\ucc98\ub9ac",children:"DST (\uc77c\uad11 \uc808\uc57d \uc2dc\uac04) \ucc98\ub9ac"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.cron import CronTrigger\nfrom pytz import timezone\nfrom datetime import datetime\nimport time\n\ndef dst_aware_task():\n    """DST\ub97c \uace0\ub824\ud55c \uc791\uc5c5"""\n    now = datetime.now()\n    print(f"\uc791\uc5c5 \uc2e4\ud589: {now}")\n    print(f"  - \ud604\uc9c0 \uc2dc\uac04: {now.astimezone()}")\n    print(f"  - UTC: {now.astimezone(timezone(\'UTC\'))}")\n\nscheduler = BackgroundScheduler()\n\n# \ubbf8\uad6d \ub3d9\ubd80 \uc2dc\uac04\ub300 (DST \uc801\uc6a9)\neastern_tz = timezone(\'US/Eastern\')\n\n# \ub9e4\uc77c \uc624\uc804 9\uc2dc (DST\uc5d0 \ub530\ub77c UTC \uc2dc\uac04\uc774 \uc790\ub3d9 \uc870\uc815\ub428)\ntrigger = CronTrigger(\n    hour=9,\n    minute=0,\n    timezone=eastern_tz\n)\n\nscheduler.add_job(dst_aware_task, trigger=trigger)\n\nscheduler.start()\n\nprint(f"\ud604\uc7ac \uc2dc\uac01: {datetime.now()}")\nprint(f"\ub2e4\uc74c \uc2e4\ud589: {scheduler.get_jobs()[0].next_run_time}")\n\ntry:\n    time.sleep(3600)\nexcept KeyboardInterrupt:\n    scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\ud0c0\uc784\uc874-\ubcc0\ud658-\uc720\ud2f8\ub9ac\ud2f0",children:"\ud0c0\uc784\uc874 \ubcc0\ud658 \uc720\ud2f8\ub9ac\ud2f0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from datetime import datetime\nfrom pytz import timezone, utc, all_timezones\n\nclass TimezoneHelper:\n    """\ud0c0\uc784\uc874 \uad00\ub828 \uc720\ud2f8\ub9ac\ud2f0"""\n\n    @staticmethod\n    def convert_timezone(dt, from_tz, to_tz):\n        """\ud0c0\uc784\uc874 \ubcc0\ud658"""\n        if isinstance(from_tz, str):\n            from_tz = timezone(from_tz)\n        if isinstance(to_tz, str):\n            to_tz = timezone(to_tz)\n\n        if dt.tzinfo is None:\n            dt = from_tz.localize(dt)\n        else:\n            dt = dt.astimezone(from_tz)\n\n        return dt.astimezone(to_tz)\n\n    @staticmethod\n    def get_local_time(dt, tz):\n        """\ud2b9\uc815 \ud0c0\uc784\uc874\uc758 \ud604\uc9c0 \uc2dc\uac04 \uac00\uc838\uc624\uae30"""\n        if isinstance(tz, str):\n            tz = timezone(tz)\n\n        if dt.tzinfo is None:\n            dt = utc.localize(dt)\n\n        return dt.astimezone(tz)\n\n    @staticmethod\n    def list_timezones(filter_str=None):\n        """\ud0c0\uc784\uc874 \ubaa9\ub85d \uc870\ud68c"""\n        if filter_str:\n            return [tz for tz in all_timezones if filter_str in tz]\n        return all_timezones\n\n    @staticmethod\n    def get_timezone_offset(tz, dt=None):\n        """\ud0c0\uc784\uc874 \uc624\ud504\uc14b \uacc4\uc0b0"""\n        if isinstance(tz, str):\n            tz = timezone(tz)\n\n        if dt is None:\n            dt = datetime.now()\n\n        if dt.tzinfo is None:\n            dt = utc.localize(dt)\n\n        local_dt = dt.astimezone(tz)\n        offset = local_dt.utcoffset()\n\n        return offset.total_seconds() / 3600\n\n# \uc0ac\uc6a9 \uc608\uc81c\nhelper = TimezoneHelper()\n\n# \ud604\uc7ac \uc2dc\uac04\uc744 \uc5ec\ub7ec \ud0c0\uc784\uc874\uc73c\ub85c \ubcc0\ud658\nnow = datetime.now(utc)\nprint(f"UTC: {now}")\nprint(f"\ub274\uc695: {helper.get_local_time(now, \'America/New_York\')}")\nprint(f"\ub7f0\ub358: {helper.get_local_time(now, \'Europe/London\')}")\nprint(f"\uc11c\uc6b8: {helper.get_local_time(now, \'Asia/Seoul\')}")\nprint(f"\ub3c4\ucfc4: {helper.get_local_time(now, \'Asia/Tokyo\')}")\n\n# \ud0c0\uc784\uc874 \uc624\ud504\uc14b\nprint(f"\\n\ud0c0\uc784\uc874 \uc624\ud504\uc14b (UTC \uae30\uc900):")\nfor tz_name in [\'America/New_York\', \'Europe/London\', \'Asia/Seoul\', \'Asia/Tokyo\']:\n    offset = helper.get_timezone_offset(tz_name, now)\n    print(f"  {tz_name}: UTC{offset:+.1f}")\n\n# \uc544\uc2dc\uc544 \ud0c0\uc784\uc874 \ubaa9\ub85d\nprint(f"\\n\uc544\uc2dc\uc544 \ud0c0\uc784\uc874:")\nasia_timezones = helper.list_timezones(\'Asia\')\nfor tz in asia_timezones[:10]:\n    print(f"  - {tz}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\uae00\ub85c\ubc8c-\uc11c\ube44\uc2a4-\uc2a4\ucf00\uc904\ub9c1",children:"\uae00\ub85c\ubc8c \uc11c\ube44\uc2a4 \uc2a4\ucf00\uc904\ub9c1"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.triggers.cron import CronTrigger\nfrom pytz import timezone\nfrom datetime import datetime\nimport time\n\nclass GlobalScheduler:\n    """\uae00\ub85c\ubc8c \uc11c\ube44\uc2a4\ub97c \uc704\ud55c \uc2a4\ucf00\uc904\ub7ec"""\n\n    def __init__(self):\n        self.scheduler = BackgroundScheduler(timezone=timezone(\'UTC\'))\n        self.regions = {\n            \'us_east\': timezone(\'America/New_York\'),\n            \'us_west\': timezone(\'America/Los_Angeles\'),\n            \'europe\': timezone(\'Europe/London\'),\n            \'asia_pacific\': timezone(\'Asia/Tokyo\'),\n            \'korea\': timezone(\'Asia/Seoul\')\n        }\n\n    def add_regional_job(self, func, region, hour, minute=0, **kwargs):\n        """\uc9c0\uc5ed\ubcc4 \uc791\uc5c5 \ucd94\uac00"""\n        if region not in self.regions:\n            raise ValueError(f"\uc54c \uc218 \uc5c6\ub294 \uc9c0\uc5ed: {region}")\n\n        tz = self.regions[region]\n        trigger = CronTrigger(hour=hour, minute=minute, timezone=tz, **kwargs)\n\n        job_id = f"{region}_{func.__name__}"\n        return self.scheduler.add_job(\n            func,\n            trigger=trigger,\n            id=job_id,\n            name=f"{region} - {func.__name__}"\n        )\n\n    def add_global_job(self, func, hour, minute=0, **kwargs):\n        """\ubaa8\ub4e0 \uc9c0\uc5ed\uc5d0 \ub3d9\uc77c\ud55c \uc2dc\uac04\uc5d0 \uc2e4\ud589\ub418\ub294 \uc791\uc5c5 \ucd94\uac00"""\n        for region in self.regions:\n            self.add_regional_job(func, region, hour, minute, **kwargs)\n\n    def start(self):\n        """\uc2a4\ucf00\uc904\ub7ec \uc2dc\uc791"""\n        self.scheduler.start()\n\n    def shutdown(self):\n        """\uc2a4\ucf00\uc904\ub7ec \uc885\ub8cc"""\n        self.scheduler.shutdown()\n\n    def print_schedule(self):\n        """\uc2a4\ucf00\uc904 \ucd9c\ub825"""\n        print("\uae00\ub85c\ubc8c \uc791\uc5c5 \uc2a4\ucf00\uc904:")\n        for job in self.scheduler.get_jobs():\n            print(f"  - {job.name}")\n            print(f"    \ub2e4\uc74c \uc2e4\ud589: {job.next_run_time}")\n\n# \uc0ac\uc6a9 \uc608\uc81c\nglobal_scheduler = GlobalScheduler()\n\ndef morning_report():\n    """\uc544\uce68 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131"""\n    print(f"\uc544\uce68 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131: {datetime.now()}")\n\ndef end_of_day_summary():\n    """\uc77c\uc77c \uc694\uc57d"""\n    print(f"\uc77c\uc77c \uc694\uc57d: {datetime.now()}")\n\n# \uac01 \uc9c0\uc5ed \uc624\uc804 9\uc2dc\uc5d0 \uc544\uce68 \ub9ac\ud3ec\ud2b8\nglobal_scheduler.add_global_job(morning_report, hour=9, minute=0)\n\n# \uac01 \uc9c0\uc5ed \uc624\ud6c4 6\uc2dc\uc5d0 \uc77c\uc77c \uc694\uc57d\nglobal_scheduler.add_global_job(end_of_day_summary, hour=18, minute=0)\n\nglobal_scheduler.start()\nglobal_scheduler.print_schedule()\n\ntry:\n    time.sleep(300)\nexcept KeyboardInterrupt:\n    global_scheduler.shutdown()\n'})}),"\n",(0,i.jsx)(n.p,{children:"\uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 APScheduler\uc758 \ub2e4\uc591\ud55c \ud2b8\ub9ac\uac70 \ud0c0\uc785\uacfc \ud0c0\uc784\uc874 \ucc98\ub9ac \ubc29\ubc95\uc744 \ub2e4\ub8e8\uc5c8\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \uc791\uc5c5(Job)\uc744 \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>s});var t=r(6540);const i={},o=t.createContext(i);function d(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);