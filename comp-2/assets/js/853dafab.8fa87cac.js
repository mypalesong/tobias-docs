"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[1699],{3160:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>o,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"python/advanced/metaclasses","title":"1. \uba54\ud0c0\ud074\ub798\uc2a4","description":"\uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ud30c\uc774\uc36c\uc758 \uac00\uc7a5 \uace0\uae09 \uae30\ub2a5 \uc911 \ud558\ub098\ub85c, \\"\ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\ub294 \ud074\ub798\uc2a4\\"\uc785\ub2c8\ub2e4. \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc774\ud574\ud558\uba74 \ud30c\uc774\uc36c\uc758 \uac1d\uccb4 \uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d\uc758 \uae4a\uc740 \uc6d0\ub9ac\ub97c \ud30c\uc545\ud560 \uc218 \uc788\uc73c\uba70, \ud504\ub808\uc784\uc6cc\ud06c \uc218\uc900\uc758 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","source":"@site/docs/python/advanced/metaclasses.md","sourceDirName":"python/advanced","slug":"/python/advanced/metaclasses","permalink":"/docs/python/advanced/metaclasses","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python/advanced/metaclasses.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"pythonSidebar","next":{"title":"2. \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d","permalink":"/docs/python/advanced/async"}}');var a=s(4848),l=s(8453);const r={sidebar_position:1},i="1. \uba54\ud0c0\ud074\ub798\uc2a4",d={},c=[{value:"1.1 \uba54\ud0c0\ud074\ub798\uc2a4\ub780 \ubb34\uc5c7\uc778\uac00?",id:"11-\uba54\ud0c0\ud074\ub798\uc2a4\ub780-\ubb34\uc5c7\uc778\uac00",level:2},{value:"\uae30\ubcf8 \uac1c\ub150",id:"\uae30\ubcf8-\uac1c\ub150",level:3},{value:"\ud074\ub798\uc2a4 \uc0dd\uc131 \uacfc\uc815",id:"\ud074\ub798\uc2a4-\uc0dd\uc131-\uacfc\uc815",level:3},{value:"1.2 type()\uc744 \uba54\ud0c0\ud074\ub798\uc2a4\ub85c \uc0ac\uc6a9\ud558\uae30",id:"12-type\uc744-\uba54\ud0c0\ud074\ub798\uc2a4\ub85c-\uc0ac\uc6a9\ud558\uae30",level:2},{value:"type()\uc758 \ubb38\ubc95",id:"type\uc758-\ubb38\ubc95",level:3},{value:"\uc0c1\uc18d\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30",id:"\uc0c1\uc18d\uacfc-\ud568\uaed8-\uc0ac\uc6a9\ud558\uae30",level:3},{value:"1.3 \ucee4\uc2a4\ud140 \uba54\ud0c0\ud074\ub798\uc2a4 \uc0dd\uc131\ud558\uae30",id:"13-\ucee4\uc2a4\ud140-\uba54\ud0c0\ud074\ub798\uc2a4-\uc0dd\uc131\ud558\uae30",level:2},{value:"\uae30\ubcf8 \uba54\ud0c0\ud074\ub798\uc2a4",id:"\uae30\ubcf8-\uba54\ud0c0\ud074\ub798\uc2a4",level:3},{value:"<strong>init</strong> \uba54\uc11c\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9",id:"init-\uba54\uc11c\ub4dc\uc640-\ud568\uaed8-\uc0ac\uc6a9",level:3},{value:"1.4 <strong>new</strong> vs <strong>init</strong> in \uba54\ud0c0\ud074\ub798\uc2a4",id:"14-new-vs-init-in-\uba54\ud0c0\ud074\ub798\uc2a4",level:2},{value:"\ucc28\uc774\uc810 \uc774\ud574\ud558\uae30",id:"\ucc28\uc774\uc810-\uc774\ud574\ud558\uae30",level:3},{value:"\uc2e4\uc81c \ud65c\uc6a9 \uc608\uc81c",id:"\uc2e4\uc81c-\ud65c\uc6a9-\uc608\uc81c",level:3},{value:"1.5 \uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9 \uc0ac\ub840",id:"15-\uba54\ud0c0\ud074\ub798\uc2a4-\uc0ac\uc6a9-\uc0ac\ub840",level:2},{value:"1.5.1 \uc2f1\uae00\ud1a4 \ud328\ud134",id:"151-\uc2f1\uae00\ud1a4-\ud328\ud134",level:3},{value:"1.5.2 \ud074\ub798\uc2a4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac",id:"152-\ud074\ub798\uc2a4-\ub808\uc9c0\uc2a4\ud2b8\ub9ac",level:3},{value:"1.5.3 \uc790\ub3d9 \uac80\uc99d",id:"153-\uc790\ub3d9-\uac80\uc99d",level:3},{value:"1.5.4 ORM \uc2a4\ud0c0\uc77c \ubaa8\ub378",id:"154-orm-\uc2a4\ud0c0\uc77c-\ubaa8\ub378",level:3},{value:"1.6 \ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130 vs \uba54\ud0c0\ud074\ub798\uc2a4",id:"16-\ud074\ub798\uc2a4-\ub370\ucf54\ub808\uc774\ud130-vs-\uba54\ud0c0\ud074\ub798\uc2a4",level:2},{value:"\ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130",id:"\ud074\ub798\uc2a4-\ub370\ucf54\ub808\uc774\ud130",level:3},{value:"\uba54\ud0c0\ud074\ub798\uc2a4 vs \ub370\ucf54\ub808\uc774\ud130 \ube44\uad50",id:"\uba54\ud0c0\ud074\ub798\uc2a4-vs-\ub370\ucf54\ub808\uc774\ud130-\ube44\uad50",level:3},{value:"\uc0c1\uc18d\uacfc\uc758 \ucc28\uc774",id:"\uc0c1\uc18d\uacfc\uc758-\ucc28\uc774",level:3},{value:"1.7 \ucd94\uc0c1 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4 (ABC)",id:"17-\ucd94\uc0c1-\ubca0\uc774\uc2a4-\ud074\ub798\uc2a4-abc",level:2},{value:"\uae30\ubcf8 ABC \uc0ac\uc6a9\ubc95",id:"\uae30\ubcf8-abc-\uc0ac\uc6a9\ubc95",level:3},{value:"ABCMeta\ub97c \uc0ac\uc6a9\ud55c \ucee4\uc2a4\ud140 ABC",id:"abcmeta\ub97c-\uc0ac\uc6a9\ud55c-\ucee4\uc2a4\ud140-abc",level:3},{value:"\ucd94\uc0c1 \ud504\ub85c\ud37c\ud2f0",id:"\ucd94\uc0c1-\ud504\ub85c\ud37c\ud2f0",level:3},{value:"\ucd94\uc0c1 \ud074\ub798\uc2a4 \uba54\uc11c\ub4dc\uc640 \uc815\uc801 \uba54\uc11c\ub4dc",id:"\ucd94\uc0c1-\ud074\ub798\uc2a4-\uba54\uc11c\ub4dc\uc640-\uc815\uc801-\uba54\uc11c\ub4dc",level:3},{value:"1.8 \uc2e4\uc804 \uc608\uc81c",id:"18-\uc2e4\uc804-\uc608\uc81c",level:2},{value:"1.8.1 ORM \uc2a4\ud0c0\uc77c \uc2dc\uc2a4\ud15c",id:"181-orm-\uc2a4\ud0c0\uc77c-\uc2dc\uc2a4\ud15c",level:3},{value:"1.8.2 \ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c",id:"182-\ud50c\ub7ec\uadf8\uc778-\uc2dc\uc2a4\ud15c",level:3},{value:"1.8.3 \uc2f1\uae00\ud1a4 \ud328\ud134 (\uc2a4\ub808\ub4dc \uc548\uc804)",id:"183-\uc2f1\uae00\ud1a4-\ud328\ud134-\uc2a4\ub808\ub4dc-\uc548\uc804",level:3},{value:"1.9 \uc5b8\uc81c \uc0ac\uc6a9\ud558\uace0 \uc5b8\uc81c \uc0ac\uc6a9\ud558\uc9c0 \ub9d0\uc544\uc57c \ud558\ub294\uac00?",id:"19-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\uace0-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\uc9c0-\ub9d0\uc544\uc57c-\ud558\ub294\uac00",level:2},{value:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud574\uc57c \ud560 \ub54c",id:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c-\uc0ac\uc6a9\ud574\uc57c-\ud560-\ub54c",level:3},{value:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9d0\uc544\uc57c \ud560 \ub54c",id:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c-\uc0ac\uc6a9\ud558\uc9c0-\ub9d0\uc544\uc57c-\ud560-\ub54c",level:3},{value:"1.10 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4",id:"110-\ubca0\uc2a4\ud2b8-\ud504\ub799\ud2f0\uc2a4",level:2},{value:"1. \uba85\ud655\ud55c \ubb38\uc11c\ud654",id:"1-\uba85\ud655\ud55c-\ubb38\uc11c\ud654",level:3},{value:"2. \uba85\uc2dc\uc801 \uc778\ud130\ud398\uc774\uc2a4",id:"2-\uba85\uc2dc\uc801-\uc778\ud130\ud398\uc774\uc2a4",level:3},{value:"3. \uc131\ub2a5 \uace0\ub824",id:"3-\uc131\ub2a5-\uace0\ub824",level:3},{value:"4. \ud14c\uc2a4\ud2b8 \uac00\ub2a5\uc131",id:"4-\ud14c\uc2a4\ud2b8-\uac00\ub2a5\uc131",level:3},{value:"1.11 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"111-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9 \uc804 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"\uba54\ud0c0\ud074\ub798\uc2a4-\uc0ac\uc6a9-\uc804-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:3},{value:"\uba54\ud0c0\ud074\ub798\uc2a4 \uad6c\ud604 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"\uba54\ud0c0\ud074\ub798\uc2a4-\uad6c\ud604-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:3},{value:"\ub514\ubc84\uae45 \ud301",id:"\ub514\ubc84\uae45-\ud301",level:3},{value:"1.12 \uc5f0\uc2b5 \ubb38\uc81c",id:"112-\uc5f0\uc2b5-\ubb38\uc81c",level:2},{value:"\uc5f0\uc2b5 1: \uc790\ub3d9 \uc18d\uc131 \ucd94\uc801",id:"\uc5f0\uc2b5-1-\uc790\ub3d9-\uc18d\uc131-\ucd94\uc801",level:3},{value:"\uc5f0\uc2b5 2: \uc77d\uae30 \uc804\uc6a9 \ud074\ub798\uc2a4",id:"\uc5f0\uc2b5-2-\uc77d\uae30-\uc804\uc6a9-\ud074\ub798\uc2a4",level:3},{value:"\uc5f0\uc2b5 3: \uba54\uc11c\ub4dc \uc2e4\ud589 \uc2dc\uac04 \uce21\uc815",id:"\uc5f0\uc2b5-3-\uba54\uc11c\ub4dc-\uc2e4\ud589-\uc2dc\uac04-\uce21\uc815",level:3},{value:"\uc5f0\uc2b5 4: \ud0c0\uc785 \uccb4\ud06c ORM",id:"\uc5f0\uc2b5-4-\ud0c0\uc785-\uccb4\ud06c-orm",level:3},{value:"1.13 \ud575\uc2ec \uc815\ub9ac",id:"113-\ud575\uc2ec-\uc815\ub9ac",level:2},{value:"\uba54\ud0c0\ud074\ub798\uc2a4\uc758 \ud575\uc2ec \uac1c\ub150",id:"\uba54\ud0c0\ud074\ub798\uc2a4\uc758-\ud575\uc2ec-\uac1c\ub150",level:3},{value:"\uc0ac\uc6a9 \uac00\uc774\ub4dc\ub77c\uc778",id:"\uc0ac\uc6a9-\uac00\uc774\ub4dc\ub77c\uc778",level:3},{value:"\ucd94\uac00 \ud559\uc2b5 \uc790\ub8cc",id:"\ucd94\uac00-\ud559\uc2b5-\uc790\ub8cc",level:3}];function _(n){const e={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"1-\uba54\ud0c0\ud074\ub798\uc2a4",children:"1. \uba54\ud0c0\ud074\ub798\uc2a4"})}),"\n",(0,a.jsx)(e.p,{children:'\uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ud30c\uc774\uc36c\uc758 \uac00\uc7a5 \uace0\uae09 \uae30\ub2a5 \uc911 \ud558\ub098\ub85c, "\ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\ub294 \ud074\ub798\uc2a4"\uc785\ub2c8\ub2e4. \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc774\ud574\ud558\uba74 \ud30c\uc774\uc36c\uc758 \uac1d\uccb4 \uc9c0\ud5a5 \ud504\ub85c\uadf8\ub798\ubc0d\uc758 \uae4a\uc740 \uc6d0\ub9ac\ub97c \ud30c\uc545\ud560 \uc218 \uc788\uc73c\uba70, \ud504\ub808\uc784\uc6cc\ud06c \uc218\uc900\uc758 \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.'}),"\n",(0,a.jsx)(e.h2,{id:"11-\uba54\ud0c0\ud074\ub798\uc2a4\ub780-\ubb34\uc5c7\uc778\uac00",children:"1.1 \uba54\ud0c0\ud074\ub798\uc2a4\ub780 \ubb34\uc5c7\uc778\uac00?"}),"\n",(0,a.jsx)(e.p,{children:'\ud30c\uc774\uc36c\uc5d0\uc11c \ubaa8\ub4e0 \uac83\uc740 \uac1d\uccb4\uc785\ub2c8\ub2e4. \ud074\ub798\uc2a4\ub3c4 \uc608\uc678\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ud074\ub798\uc2a4\ub97c \uc0dd\uc131\ud558\ub294 "\ud074\ub798\uc2a4\uc758 \ud074\ub798\uc2a4"\uc785\ub2c8\ub2e4.'}),"\n",(0,a.jsx)(e.h3,{id:"\uae30\ubcf8-\uac1c\ub150",children:"\uae30\ubcf8 \uac1c\ub150"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \uc77c\ubc18\uc801\uc778 \ud074\ub798\uc2a4\uc640 \uc778\uc2a4\ud134\uc2a4\nclass MyClass:\n    pass\n\nobj = MyClass()\n\n# obj\ub294 MyClass\uc758 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4\nprint(type(obj))  # <class '__main__.MyClass'>\n\n# MyClass\ub294 type\uc758 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4\nprint(type(MyClass))  # <class 'type'>\n\n# type\uc740 \uc790\uae30 \uc790\uc2e0\uc758 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4\nprint(type(type))  # <class 'type'>\n"})}),"\n",(0,a.jsxs)(e.admonition,{type:"tip",children:[(0,a.jsx)(e.p,{children:"\ud30c\uc774\uc36c\uc758 \uac1d\uccb4 \uacc4\uce35 \uad6c\uc870:"}),(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\uc778\uc2a4\ud134\uc2a4"})," \u2192 \ud074\ub798\uc2a4\ub85c\ubd80\ud130 \uc0dd\uc131\ub428"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ud074\ub798\uc2a4"})," \u2192 \uba54\ud0c0\ud074\ub798\uc2a4\ub85c\ubd80\ud130 \uc0dd\uc131\ub428"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\uba54\ud0c0\ud074\ub798\uc2a4"})," \u2192 ",(0,a.jsx)(e.code,{children:"type"}),"\uc73c\ub85c\ubd80\ud130 \uc0dd\uc131\ub428"]}),"\n"]})]}),"\n",(0,a.jsx)(e.h3,{id:"\ud074\ub798\uc2a4-\uc0dd\uc131-\uacfc\uc815",children:"\ud074\ub798\uc2a4 \uc0dd\uc131 \uacfc\uc815"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \uc774 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc740 \ub3d9\uc77c\ud569\ub2c8\ub2e4\n\n# \ubc29\ubc95 1: \uc77c\ubc18\uc801\uc778 \ud074\ub798\uc2a4 \uc815\uc758\nclass Dog:\n    def __init__(self, name):\n        self.name = name\n\n    def bark(self):\n        return f\"{self.name} says woof!\"\n\n# \ubc29\ubc95 2: type()\uc744 \uc0ac\uc6a9\ud55c \ub3d9\uc801 \ud074\ub798\uc2a4 \uc0dd\uc131\nDog = type('Dog',\n           (object,),  # \uc0c1\uc18d\ubc1b\uc744 \ud074\ub798\uc2a4\ub4e4\n           {\n               '__init__': lambda self, name: setattr(self, 'name', name),\n               'bark': lambda self: f\"{self.name} says woof!\"\n           })\n\ndog = Dog(\"Buddy\")\nprint(dog.bark())  # Buddy says woof!\n"})}),"\n",(0,a.jsx)(e.h2,{id:"12-type\uc744-\uba54\ud0c0\ud074\ub798\uc2a4\ub85c-\uc0ac\uc6a9\ud558\uae30",children:"1.2 type()\uc744 \uba54\ud0c0\ud074\ub798\uc2a4\ub85c \uc0ac\uc6a9\ud558\uae30"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"type()"}),"\uc740 \ub450 \uac00\uc9c0 \uc6a9\ub3c4\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4:"]}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\uac1d\uccb4\uc758 \ud0c0\uc785 \ud655\uc778"}),"\n",(0,a.jsx)(e.li,{children:"\uc0c8\ub85c\uc6b4 \ud074\ub798\uc2a4 \ub3d9\uc801 \uc0dd\uc131"}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"type\uc758-\ubb38\ubc95",children:"type()\uc758 \ubb38\ubc95"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# type(name, bases, dict)\n# name: \ud074\ub798\uc2a4 \uc774\ub984\n# bases: \ubd80\ubaa8 \ud074\ub798\uc2a4\ub4e4\uc758 \ud29c\ud50c\n# dict: \ud074\ub798\uc2a4 \uc18d\uc131\uacfc \uba54\uc11c\ub4dc\ub97c \ub2f4\uc740 \ub515\uc154\ub108\ub9ac\n\n# \uac04\ub2e8\ud55c \uc608\uc81c\ndef init(self, x, y):\n    self.x = x\n    self.y = y\n\ndef get_sum(self):\n    return self.x + self.y\n\n# \ub3d9\uc801\uc73c\ub85c Point \ud074\ub798\uc2a4 \uc0dd\uc131\nPoint = type('Point',\n             (object,),\n             {\n                 '__init__': init,\n                 'get_sum': get_sum\n             })\n\np = Point(3, 4)\nprint(p.get_sum())  # 7\nprint(type(p))      # <class '__main__.Point'>\nprint(type(Point))  # <class 'type'>\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\uc0c1\uc18d\uacfc-\ud568\uaed8-\uc0ac\uc6a9\ud558\uae30",children:"\uc0c1\uc18d\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4\nclass Animal:\n    def speak(self):\n        return \"Some sound\"\n\n# type()\uc744 \uc0ac\uc6a9\ud574 Animal\uc744 \uc0c1\uc18d\ubc1b\ub294 \ud074\ub798\uc2a4 \uc0dd\uc131\nCat = type('Cat',\n           (Animal,),  # Animal\uc744 \uc0c1\uc18d\n           {\n               'speak': lambda self: \"Meow!\",\n               'purr': lambda self: \"Purr purr...\"\n           })\n\ncat = Cat()\nprint(cat.speak())  # Meow!\nprint(cat.purr())   # Purr purr...\nprint(isinstance(cat, Animal))  # True\n"})}),"\n",(0,a.jsx)(e.h2,{id:"13-\ucee4\uc2a4\ud140-\uba54\ud0c0\ud074\ub798\uc2a4-\uc0dd\uc131\ud558\uae30",children:"1.3 \ucee4\uc2a4\ud140 \uba54\ud0c0\ud074\ub798\uc2a4 \uc0dd\uc131\ud558\uae30"}),"\n",(0,a.jsx)(e.p,{children:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub798\uc2a4 \uc0dd\uc131 \uacfc\uc815\uc744 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsx)(e.h3,{id:"\uae30\ubcf8-\uba54\ud0c0\ud074\ub798\uc2a4",children:"\uae30\ubcf8 \uba54\ud0c0\ud074\ub798\uc2a4"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class MyMeta(type):\n    """\ucee4\uc2a4\ud140 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        """\ud074\ub798\uc2a4 \uac1d\uccb4\uac00 \uc0dd\uc131\ub420 \ub54c \ud638\ucd9c\ub428"""\n        print(f"Creating class {name}")\n\n        # \ubaa8\ub4e0 \uba54\uc11c\ub4dc \uc774\ub984\uc744 \ub300\ubb38\uc790\ub85c \ubcc0\uacbd\n        uppercase_attrs = {}\n        for attr_name, attr_value in attrs.items():\n            if not attr_name.startswith(\'__\'):\n                uppercase_attrs[attr_name.upper()] = attr_value\n            else:\n                uppercase_attrs[attr_name] = attr_value\n\n        return super().__new__(mcs, name, bases, uppercase_attrs)\n\n# \uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9\nclass MyClass(metaclass=MyMeta):\n    x = 100\n\n    def hello(self):\n        return "Hello"\n\n# Creating class MyClass \ucd9c\ub825\ub428\n\nobj = MyClass()\nprint(obj.X)  # 100 (x\uac00 X\ub85c \ubcc0\uacbd\ub428)\nprint(obj.HELLO())  # Hello (hello\uac00 HELLO\ub85c \ubcc0\uacbd\ub428)\n# print(obj.x)  # AttributeError\n'})}),"\n",(0,a.jsxs)(e.h3,{id:"init-\uba54\uc11c\ub4dc\uc640-\ud568\uaed8-\uc0ac\uc6a9",children:[(0,a.jsx)(e.strong,{children:"init"})," \uba54\uc11c\ub4dc\uc640 \ud568\uaed8 \uc0ac\uc6a9"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class ValidatedMeta(type):\n    """\ud074\ub798\uc2a4 \uc0dd\uc131 \uc2dc \uac80\uc99d\uc744 \uc218\ud589\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # \ud074\ub798\uc2a4 \uac1d\uccb4 \uc0dd\uc131\n        cls = super().__new__(mcs, name, bases, attrs)\n        return cls\n\n    def __init__(cls, name, bases, attrs):\n        """\ud074\ub798\uc2a4 \ucd08\uae30\ud654 \uc2dc \ud638\ucd9c\ub428"""\n        super().__init__(name, bases, attrs)\n\n        # \'validate\' \uba54\uc11c\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\n        if not hasattr(cls, \'validate\'):\n            raise TypeError(f"Class {name} must implement \'validate\' method")\n\n# \uc62c\ubc14\ub978 \uc0ac\uc6a9\nclass ValidUser(metaclass=ValidatedMeta):\n    def validate(self):\n        return True\n\n# \uc5d0\ub7ec \ubc1c\uc0dd\ntry:\n    class InvalidUser(metaclass=ValidatedMeta):\n        pass\nexcept TypeError as e:\n    print(f"Error: {e}")\n    # Error: Class InvalidUser must implement \'validate\' method\n'})}),"\n",(0,a.jsxs)(e.h2,{id:"14-new-vs-init-in-\uba54\ud0c0\ud074\ub798\uc2a4",children:["1.4 ",(0,a.jsx)(e.strong,{children:"new"})," vs ",(0,a.jsx)(e.strong,{children:"init"})," in \uba54\ud0c0\ud074\ub798\uc2a4"]}),"\n",(0,a.jsxs)(e.p,{children:["\uba54\ud0c0\ud074\ub798\uc2a4\uc5d0\uc11c ",(0,a.jsx)(e.code,{children:"__new__"}),"\uc640 ",(0,a.jsx)(e.code,{children:"__init__"}),"\uc740 \uc11c\ub85c \ub2e4\ub978 \uc2dc\uc810\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(e.h3,{id:"\ucc28\uc774\uc810-\uc774\ud574\ud558\uae30",children:"\ucc28\uc774\uc810 \uc774\ud574\ud558\uae30"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class DebugMeta(type):\n    """__new__\uc640 __init__\uc758 \ucc28\uc774\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        print(f"__new__ called for {name}")\n        print(f"  mcs: {mcs}")\n        print(f"  bases: {bases}")\n        print(f"  attrs keys: {list(attrs.keys())}")\n\n        # \uc5ec\uae30\uc11c \ud074\ub798\uc2a4 \uac1d\uccb4\uac00 \uc0dd\uc131\ub428\n        cls = super().__new__(mcs, name, bases, attrs)\n        print(f"  cls created: {cls}")\n        return cls\n\n    def __init__(cls, name, bases, attrs):\n        print(f"__init__ called for {name}")\n        print(f"  cls: {cls}")\n\n        # \uc5ec\uae30\uc11c \ud074\ub798\uc2a4 \uac1d\uccb4\ub97c \ucd08\uae30\ud654\ud568\n        super().__init__(name, bases, attrs)\n\n        # \ud074\ub798\uc2a4\uc5d0 \ucd94\uac00 \uc18d\uc131 \uc124\uc815 \uac00\ub2a5\n        cls.created_by = "DebugMeta"\n\nclass TestClass(metaclass=DebugMeta):\n    x = 10\n\n# \ucd9c\ub825:\n# __new__ called for TestClass\n#   mcs: <class \'__main__.DebugMeta\'>\n#   bases: ()\n#   attrs keys: [\'__module__\', \'__qualname__\', \'x\']\n#   cls created: <class \'__main__.TestClass\'>\n# __init__ called for TestClass\n#   cls: <class \'__main__.TestClass\'>\n\nprint(TestClass.created_by)  # DebugMeta\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\uc2e4\uc81c-\ud65c\uc6a9-\uc608\uc81c",children:"\uc2e4\uc81c \ud65c\uc6a9 \uc608\uc81c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"class AttributeDefaultMeta(type):\n    \"\"\"\ud074\ub798\uc2a4 \uc18d\uc131\uc5d0 \uae30\ubcf8\uac12\uc744 \uc790\ub3d9 \uc124\uc815\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\"\"\"\n\n    def __new__(mcs, name, bases, attrs):\n        # __new__\uc5d0\uc11c \uc18d\uc131 \uc218\uc815\n        if '_defaults' in attrs:\n            defaults = attrs['_defaults']\n            for key, value in defaults.items():\n                if key not in attrs:\n                    attrs[key] = value\n\n        return super().__new__(mcs, name, bases, attrs)\n\n    def __init__(cls, name, bases, attrs):\n        # __init__\uc5d0\uc11c \ucd94\uac00 \uc124\uc815\n        super().__init__(name, bases, attrs)\n        cls._initialized = True\n\nclass Config(metaclass=AttributeDefaultMeta):\n    _defaults = {\n        'debug': False,\n        'timeout': 30,\n        'retries': 3\n    }\n\n    # debug\ub9cc \uc624\ubc84\ub77c\uc774\ub4dc\n    debug = True\n\nprint(Config.debug)      # True (\uc624\ubc84\ub77c\uc774\ub4dc\ub428)\nprint(Config.timeout)    # 30 (\uae30\ubcf8\uac12)\nprint(Config.retries)    # 3 (\uae30\ubcf8\uac12)\nprint(Config._initialized)  # True\n"})}),"\n",(0,a.jsxs)(e.admonition,{type:"warning",children:[(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.strong,{children:[(0,a.jsx)(e.strong,{children:"new"})," vs ",(0,a.jsx)(e.strong,{children:"init"})," \uc120\ud0dd \uac00\uc774\ub4dc:"]})}),(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"__new__"}),": \ud074\ub798\uc2a4 \uac1d\uccb4\ub97c \uc0dd\uc131\ud558\uae30 \uc804\uc5d0 \uc18d\uc131\uc744 \uc218\uc815\ud558\uac70\ub098 \ud074\ub798\uc2a4 \uc0dd\uc131\uc744 \ub9c9\uc544\uc57c \ud560 \ub54c"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"__init__"}),": \ud074\ub798\uc2a4 \uac1d\uccb4\uac00 \uc0dd\uc131\ub41c \ud6c4 \ucd08\uae30\ud654\ub098 \uac80\uc99d\uc744 \uc218\ud589\ud560 \ub54c"]}),"\n"]})]}),"\n",(0,a.jsx)(e.h2,{id:"15-\uba54\ud0c0\ud074\ub798\uc2a4-\uc0ac\uc6a9-\uc0ac\ub840",children:"1.5 \uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9 \uc0ac\ub840"}),"\n",(0,a.jsx)(e.h3,{id:"151-\uc2f1\uae00\ud1a4-\ud328\ud134",children:"1.5.1 \uc2f1\uae00\ud1a4 \ud328\ud134"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class SingletonMeta(type):\n    """\uc2f1\uae00\ud1a4 \ud328\ud134\uc744 \uad6c\ud604\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n    _instances = {}\n\n    def __call__(cls, *args, **kwargs):\n        """\ud074\ub798\uc2a4\uac00 \ud638\ucd9c\ub420 \ub54c (\uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc2dc) \uc2e4\ud589\ub428"""\n        if cls not in cls._instances:\n            # \uc778\uc2a4\ud134\uc2a4\uac00 \uc5c6\uc73c\uba74 \uc0dd\uc131\n            instance = super().__call__(*args, **kwargs)\n            cls._instances[cls] = instance\n        return cls._instances[cls]\n\nclass Database(metaclass=SingletonMeta):\n    def __init__(self, url):\n        self.url = url\n        print(f"Database connection created: {url}")\n\n# \uccab \ubc88\uc9f8 \ud638\ucd9c: \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\ndb1 = Database("postgresql://localhost")\n# \ucd9c\ub825: Database connection created: postgresql://localhost\n\n# \ub450 \ubc88\uc9f8 \ud638\ucd9c: \uae30\uc874 \uc778\uc2a4\ud134\uc2a4 \ubc18\ud658\ndb2 = Database("mysql://localhost")\n# \uc544\ubb34\uac83\ub3c4 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc74c\n\nprint(db1 is db2)  # True\nprint(db1.url)     # postgresql://localhost\nprint(db2.url)     # postgresql://localhost\n'})}),"\n",(0,a.jsx)(e.h3,{id:"152-\ud074\ub798\uc2a4-\ub808\uc9c0\uc2a4\ud2b8\ub9ac",children:"1.5.2 \ud074\ub798\uc2a4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class RegistryMeta(type):\n    """\ubaa8\ub4e0 \uc11c\ube0c\ud074\ub798\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \ub4f1\ub85d\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n    _registry = {}\n\n    def __new__(mcs, name, bases, attrs):\n        cls = super().__new__(mcs, name, bases, attrs)\n\n        # \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4\uac00 \uc544\ub2cc \uacbd\uc6b0\ub9cc \ub4f1\ub85d\n        if bases:\n            mcs._registry[name] = cls\n\n        return cls\n\n    @classmethod\n    def get_registry(mcs):\n        """\ub4f1\ub85d\ub41c \ubaa8\ub4e0 \ud074\ub798\uc2a4 \ubc18\ud658"""\n        return mcs._registry.copy()\n\nclass Plugin(metaclass=RegistryMeta):\n    """\ubca0\uc774\uc2a4 \ud50c\ub7ec\uadf8\uc778 \ud074\ub798\uc2a4"""\n    pass\n\nclass EmailPlugin(Plugin):\n    def send(self, message):\n        return f"Sending email: {message}"\n\nclass SMSPlugin(Plugin):\n    def send(self, message):\n        return f"Sending SMS: {message}"\n\nclass PushPlugin(Plugin):\n    def send(self, message):\n        return f"Sending push: {message}"\n\n# \ubaa8\ub4e0 \ud50c\ub7ec\uadf8\uc778 \ud655\uc778\nprint(RegistryMeta.get_registry())\n# {\'EmailPlugin\': <class \'__main__.EmailPlugin\'>,\n#  \'SMSPlugin\': <class \'__main__.SMSPlugin\'>,\n#  \'PushPlugin\': <class \'__main__.PushPlugin\'>}\n\n# \ub3d9\uc801\uc73c\ub85c \ud50c\ub7ec\uadf8\uc778 \uc0ac\uc6a9\ndef send_notification(plugin_name, message):\n    registry = RegistryMeta.get_registry()\n    if plugin_name in registry:\n        plugin = registry[plugin_name]()\n        return plugin.send(message)\n    return "Plugin not found"\n\nprint(send_notification(\'EmailPlugin\', \'Hello!\'))\n# Sending email: Hello!\n'})}),"\n",(0,a.jsx)(e.h3,{id:"153-\uc790\ub3d9-\uac80\uc99d",children:"1.5.3 \uc790\ub3d9 \uac80\uc99d"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class ValidationMeta(type):\n    """\uc18d\uc131 \ud0c0\uc785 \uac80\uc99d\uc744 \uc790\ub3d9\ud654\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # _validators \ub515\uc154\ub108\ub9ac \ucc3e\uae30\n        validators = attrs.get(\'_validators\', {})\n\n        # \uc6d0\ub798 __init__ \uc800\uc7a5\n        original_init = attrs.get(\'__init__\', lambda self: None)\n\n        def new_init(self, *args, **kwargs):\n            # \uc6d0\ub798 __init__ \ud638\ucd9c\n            original_init(self, *args, **kwargs)\n\n            # \uac80\uc99d \uc218\ud589\n            for attr_name, expected_type in validators.items():\n                if hasattr(self, attr_name):\n                    value = getattr(self, attr_name)\n                    if not isinstance(value, expected_type):\n                        raise TypeError(\n                            f"{attr_name} must be {expected_type.__name__}, "\n                            f"got {type(value).__name__}"\n                        )\n\n        attrs[\'__init__\'] = new_init\n        return super().__new__(mcs, name, bases, attrs)\n\nclass User(metaclass=ValidationMeta):\n    _validators = {\n        \'name\': str,\n        \'age\': int,\n        \'email\': str\n    }\n\n    def __init__(self, name, age, email):\n        self.name = name\n        self.age = age\n        self.email = email\n\n# \uc62c\ubc14\ub978 \uc0ac\uc6a9\nuser1 = User("Alice", 30, "alice@example.com")\nprint(f"{user1.name}, {user1.age}")  # Alice, 30\n\n# \ud0c0\uc785 \uc5d0\ub7ec\ntry:\n    user2 = User("Bob", "thirty", "bob@example.com")\nexcept TypeError as e:\n    print(f"Error: {e}")\n    # Error: age must be int, got str\n'})}),"\n",(0,a.jsx)(e.h3,{id:"154-orm-\uc2a4\ud0c0\uc77c-\ubaa8\ub378",children:"1.5.4 ORM \uc2a4\ud0c0\uc77c \ubaa8\ub378"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class Field:\n    """\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud544\ub4dc\ub97c \ub098\ud0c0\ub0b4\ub294 \ud074\ub798\uc2a4"""\n    def __init__(self, field_type, required=True, default=None):\n        self.field_type = field_type\n        self.required = required\n        self.default = default\n\n    def validate(self, value):\n        if value is None:\n            if self.required and self.default is None:\n                raise ValueError("Required field cannot be None")\n            return self.default\n\n        if not isinstance(value, self.field_type):\n            raise TypeError(\n                f"Expected {self.field_type.__name__}, "\n                f"got {type(value).__name__}"\n            )\n        return value\n\nclass ModelMeta(type):\n    """ORM \uc2a4\ud0c0\uc77c \ubaa8\ub378\uc744 \uc704\ud55c \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # Field \uc18d\uc131\ub4e4\uc744 \uc218\uc9d1\n        fields = {}\n        for key, value in list(attrs.items()):\n            if isinstance(value, Field):\n                fields[key] = value\n                # \ud074\ub798\uc2a4 \uc815\uc758\uc5d0\uc11c Field \uc81c\uac70\n                attrs.pop(key)\n\n        # \ud544\ub4dc \uc815\ubcf4 \uc800\uc7a5\n        attrs[\'_fields\'] = fields\n\n        # __init__ \uba54\uc11c\ub4dc \uc0dd\uc131\n        def __init__(self, **kwargs):\n            for field_name, field in self._fields.items():\n                value = kwargs.get(field_name)\n                validated_value = field.validate(value)\n                setattr(self, field_name, validated_value)\n\n        attrs[\'__init__\'] = __init__\n\n        # __repr__ \uba54\uc11c\ub4dc \uc0dd\uc131\n        def __repr__(self):\n            field_strs = [\n                f"{name}={getattr(self, name)!r}"\n                for name in self._fields.keys()\n            ]\n            return f"{name}({\', \'.join(field_strs)})"\n\n        attrs[\'__repr__\'] = __repr__\n\n        return super().__new__(mcs, name, bases, attrs)\n\nclass Person(metaclass=ModelMeta):\n    name = Field(str)\n    age = Field(int)\n    email = Field(str, required=False, default="no-email@example.com")\n\n# \uc0ac\uc6a9 \uc608\uc81c\nperson1 = Person(name="Alice", age=30, email="alice@example.com")\nprint(person1)\n# Person(name=\'Alice\', age=30, email=\'alice@example.com\')\n\nperson2 = Person(name="Bob", age=25)\nprint(person2)\n# Person(name=\'Bob\', age=25, email=\'no-email@example.com\')\n\n# \uac80\uc99d \ud14c\uc2a4\ud2b8\ntry:\n    person3 = Person(name="Charlie", age="twenty")\nexcept TypeError as e:\n    print(f"Error: {e}")\n    # Error: Expected int, got str\n'})}),"\n",(0,a.jsx)(e.h2,{id:"16-\ud074\ub798\uc2a4-\ub370\ucf54\ub808\uc774\ud130-vs-\uba54\ud0c0\ud074\ub798\uc2a4",children:"1.6 \ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130 vs \uba54\ud0c0\ud074\ub798\uc2a4"}),"\n",(0,a.jsx)(e.p,{children:"\ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130\uc640 \uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ube44\uc2b7\ud55c \ubaa9\uc801\uc744 \ub2ec\uc131\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc0ac\uc6a9 \ubc29\ubc95\uacfc \uc2dc\uc810\uc774 \ub2e4\ub985\ub2c8\ub2e4."}),"\n",(0,a.jsx)(e.h3,{id:"\ud074\ub798\uc2a4-\ub370\ucf54\ub808\uc774\ud130",children:"\ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'def singleton(cls):\n    """\uc2f1\uae00\ud1a4 \ud328\ud134\uc744 \uad6c\ud604\ud558\ub294 \ub370\ucf54\ub808\uc774\ud130"""\n    instances = {}\n\n    def get_instance(*args, **kwargs):\n        if cls not in instances:\n            instances[cls] = cls(*args, **kwargs)\n        return instances[cls]\n\n    return get_instance\n\n@singleton\nclass DatabaseConnection:\n    def __init__(self, url):\n        self.url = url\n        print(f"Connected to {url}")\n\ndb1 = DatabaseConnection("localhost")  # Connected to localhost\ndb2 = DatabaseConnection("remote")\nprint(db1 is db2)  # True\nprint(db1.url)     # localhost\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\uba54\ud0c0\ud074\ub798\uc2a4-vs-\ub370\ucf54\ub808\uc774\ud130-\ube44\uad50",children:"\uba54\ud0c0\ud074\ub798\uc2a4 vs \ub370\ucf54\ub808\uc774\ud130 \ube44\uad50"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# 1. \uba54\ud0c0\ud074\ub798\uc2a4 \ubc29\uc2dd\nclass MetaLogger(type):\n    def __new__(mcs, name, bases, attrs):\n        for attr_name, attr_value in attrs.items():\n            if callable(attr_value) and not attr_name.startswith(\'_\'):\n                attrs[attr_name] = mcs.log_wrapper(attr_value, attr_name)\n        return super().__new__(mcs, name, bases, attrs)\n\n    @staticmethod\n    def log_wrapper(func, name):\n        def wrapper(*args, **kwargs):\n            print(f"Calling {name}")\n            result = func(*args, **kwargs)\n            print(f"{name} returned {result}")\n            return result\n        return wrapper\n\nclass Calculator1(metaclass=MetaLogger):\n    def add(self, a, b):\n        return a + b\n\n    def multiply(self, a, b):\n        return a * b\n\n# 2. \ub370\ucf54\ub808\uc774\ud130 \ubc29\uc2dd\ndef log_methods(cls):\n    for attr_name in dir(cls):\n        attr_value = getattr(cls, attr_name)\n        if callable(attr_value) and not attr_name.startswith(\'_\'):\n            def log_wrapper(func):\n                def wrapper(*args, **kwargs):\n                    print(f"Calling {func.__name__}")\n                    result = func(*args, **kwargs)\n                    print(f"{func.__name__} returned {result}")\n                    return result\n                return wrapper\n            setattr(cls, attr_name, log_wrapper(attr_value))\n    return cls\n\n@log_methods\nclass Calculator2:\n    def add(self, a, b):\n        return a + b\n\n    def multiply(self, a, b):\n        return a * b\n\n# \ud14c\uc2a4\ud2b8\ncalc1 = Calculator1()\ncalc1.add(2, 3)\n# Calling add\n# add returned 5\n\ncalc2 = Calculator2()\ncalc2.multiply(4, 5)\n# Calling multiply\n# multiply returned 20\n'})}),"\n",(0,a.jsxs)(e.admonition,{type:"tip",children:[(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uc5b8\uc81c \ubb34\uc5c7\uc744 \uc0ac\uc6a9\ud560\uae4c?"})}),(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9:"})}),(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\uac04\ub2e8\ud55c \ud074\ub798\uc2a4 \uc218\uc815\uc774 \ud544\uc694\ud560 \ub54c"}),"\n",(0,a.jsx)(e.li,{children:"\uac00\ub3c5\uc131\uc774 \uc911\uc694\ud560 \ub54c"}),"\n",(0,a.jsx)(e.li,{children:"\uc5ec\ub7ec \ud074\ub798\uc2a4\uc5d0 \uc120\ud0dd\uc801\uc73c\ub85c \uc801\uc6a9\ud560 \ub54c"}),"\n"]}),(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9:"})}),(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\uc0c1\uc18d \uacc4\uce35 \uc804\uccb4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uace0 \uc2f6\uc744 \ub54c"}),"\n",(0,a.jsx)(e.li,{children:"\ud074\ub798\uc2a4 \uc0dd\uc131 \uacfc\uc815 \uc790\uccb4\ub97c \uc81c\uc5b4\ud574\uc57c \ud560 \ub54c"}),"\n",(0,a.jsx)(e.li,{children:"\ud504\ub808\uc784\uc6cc\ud06c\ub098 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub9cc\ub4e4 \ub54c"}),"\n",(0,a.jsx)(e.li,{children:"\ub354 \uae4a\uc740 \uc218\uc900\uc758 \uc81c\uc5b4\uac00 \ud544\uc694\ud560 \ub54c"}),"\n"]})]}),"\n",(0,a.jsx)(e.h3,{id:"\uc0c1\uc18d\uacfc\uc758-\ucc28\uc774",children:"\uc0c1\uc18d\uacfc\uc758 \ucc28\uc774"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# \ub370\ucf54\ub808\uc774\ud130: \uc0c1\uc18d\ub418\uc9c0 \uc54a\uc74c\n@log_methods\nclass Parent:\n    def method(self):\n        return "parent"\n\nclass Child(Parent):\n    def method(self):\n        return "child"\n\n# Child.method\ub294 \ub85c\uae45\ub418\uc9c0 \uc54a\uc74c\nchild = Child()\nchild.method()  # \ub85c\uadf8 \ucd9c\ub825 \uc5c6\uc74c\n\n# \uba54\ud0c0\ud074\ub798\uc2a4: \uc0c1\uc18d\ub428\nclass ParentMeta(metaclass=MetaLogger):\n    def method(self):\n        return "parent"\n\nclass ChildMeta(ParentMeta):\n    def method(self):\n        return "child"\n\n# ChildMeta.method\ub3c4 \ub85c\uae45\ub428\nchild_meta = ChildMeta()\nchild_meta.method()\n# Calling method\n# method returned child\n'})}),"\n",(0,a.jsx)(e.h2,{id:"17-\ucd94\uc0c1-\ubca0\uc774\uc2a4-\ud074\ub798\uc2a4-abc",children:"1.7 \ucd94\uc0c1 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4 (ABC)"}),"\n",(0,a.jsx)(e.p,{children:"ABC\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \ud65c\uc6a9\ud55c \ud30c\uc774\uc36c \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc88b\uc740 \uc608\uc785\ub2c8\ub2e4."}),"\n",(0,a.jsx)(e.h3,{id:"\uae30\ubcf8-abc-\uc0ac\uc6a9\ubc95",children:"\uae30\ubcf8 ABC \uc0ac\uc6a9\ubc95"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'from abc import ABC, abstractmethod\n\nclass Shape(ABC):\n    """\ucd94\uc0c1 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4"""\n\n    @abstractmethod\n    def area(self):\n        """\uba74\uc801 \uacc4\uc0b0 (\ubc18\ub4dc\uc2dc \uad6c\ud604\ud574\uc57c \ud568)"""\n        pass\n\n    @abstractmethod\n    def perimeter(self):\n        """\ub458\ub808 \uacc4\uc0b0 (\ubc18\ub4dc\uc2dc \uad6c\ud604\ud574\uc57c \ud568)"""\n        pass\n\n    def description(self):\n        """\uc77c\ubc18 \uba54\uc11c\ub4dc (\uc120\ud0dd\uc801)"""\n        return f"This is a shape with area {self.area()}"\n\n# \ucd94\uc0c1 \ud074\ub798\uc2a4\ub294 \uc778\uc2a4\ud134\uc2a4\ud654\ud560 \uc218 \uc5c6\uc74c\ntry:\n    shape = Shape()\nexcept TypeError as e:\n    print(f"Error: {e}")\n    # Error: Can\'t instantiate abstract class Shape with abstract methods area, perimeter\n\n# \ubaa8\ub4e0 \ucd94\uc0c1 \uba54\uc11c\ub4dc\ub97c \uad6c\ud604\ud574\uc57c \ud568\nclass Circle(Shape):\n    def __init__(self, radius):\n        self.radius = radius\n\n    def area(self):\n        return 3.14159 * self.radius ** 2\n\n    def perimeter(self):\n        return 2 * 3.14159 * self.radius\n\ncircle = Circle(5)\nprint(circle.area())        # 78.53975\nprint(circle.description()) # This is a shape with area 78.53975\n\n# \uc77c\ubd80\ub9cc \uad6c\ud604\ud558\uba74 \uc5d0\ub7ec\ntry:\n    class Rectangle(Shape):\n        def area(self):\n            return 10\n        # perimeter\ub97c \uad6c\ud604\ud558\uc9c0 \uc54a\uc74c\n\n    rect = Rectangle()\nexcept TypeError as e:\n    print(f"Error: {e}")\n    # Error: Can\'t instantiate abstract class Rectangle with abstract methods perimeter\n'})}),"\n",(0,a.jsx)(e.h3,{id:"abcmeta\ub97c-\uc0ac\uc6a9\ud55c-\ucee4\uc2a4\ud140-abc",children:"ABCMeta\ub97c \uc0ac\uc6a9\ud55c \ucee4\uc2a4\ud140 ABC"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'from abc import ABCMeta, abstractmethod\n\nclass MyABC(metaclass=ABCMeta):\n    """ABCMeta\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud55c \ucd94\uc0c1 \ud074\ub798\uc2a4"""\n\n    @abstractmethod\n    def required_method(self):\n        pass\n\nclass Implementation(MyABC):\n    def required_method(self):\n        return "Implemented!"\n\nimpl = Implementation()\nprint(impl.required_method())  # Implemented!\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\ucd94\uc0c1-\ud504\ub85c\ud37c\ud2f0",children:"\ucd94\uc0c1 \ud504\ub85c\ud37c\ud2f0"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'from abc import ABC, abstractmethod\n\nclass Person(ABC):\n    @property\n    @abstractmethod\n    def name(self):\n        """\uc774\ub984 \ud504\ub85c\ud37c\ud2f0 (\ubc18\ub4dc\uc2dc \uad6c\ud604)"""\n        pass\n\n    @property\n    @abstractmethod\n    def age(self):\n        """\ub098\uc774 \ud504\ub85c\ud37c\ud2f0 (\ubc18\ub4dc\uc2dc \uad6c\ud604)"""\n        pass\n\nclass Student(Person):\n    def __init__(self, name, age, student_id):\n        self._name = name\n        self._age = age\n        self.student_id = student_id\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def age(self):\n        return self._age\n\nstudent = Student("Alice", 20, "S001")\nprint(f"{student.name}, {student.age}")  # Alice, 20\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\ucd94\uc0c1-\ud074\ub798\uc2a4-\uba54\uc11c\ub4dc\uc640-\uc815\uc801-\uba54\uc11c\ub4dc",children:"\ucd94\uc0c1 \ud074\ub798\uc2a4 \uba54\uc11c\ub4dc\uc640 \uc815\uc801 \uba54\uc11c\ub4dc"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'from abc import ABC, abstractmethod\n\nclass DataProcessor(ABC):\n    @abstractmethod\n    def process(self, data):\n        """\uc778\uc2a4\ud134\uc2a4 \uba54\uc11c\ub4dc"""\n        pass\n\n    @classmethod\n    @abstractmethod\n    def from_file(cls, filename):\n        """\ud074\ub798\uc2a4 \uba54\uc11c\ub4dc"""\n        pass\n\n    @staticmethod\n    @abstractmethod\n    def validate(data):\n        """\uc815\uc801 \uba54\uc11c\ub4dc"""\n        pass\n\nclass JSONProcessor(DataProcessor):\n    def __init__(self, data):\n        self.data = data\n\n    def process(self, data):\n        return f"Processing JSON: {data}"\n\n    @classmethod\n    def from_file(cls, filename):\n        # \ud30c\uc77c\uc5d0\uc11c JSON \uc77d\uae30\n        data = f"data from {filename}"\n        return cls(data)\n\n    @staticmethod\n    def validate(data):\n        return isinstance(data, dict)\n\nprocessor = JSONProcessor.from_file("data.json")\nprint(processor.process({"key": "value"}))\n# Processing JSON: {\'key\': \'value\'}\n\nprint(JSONProcessor.validate({"key": "value"}))  # True\n'})}),"\n",(0,a.jsx)(e.h2,{id:"18-\uc2e4\uc804-\uc608\uc81c",children:"1.8 \uc2e4\uc804 \uc608\uc81c"}),"\n",(0,a.jsx)(e.h3,{id:"181-orm-\uc2a4\ud0c0\uc77c-\uc2dc\uc2a4\ud15c",children:"1.8.1 ORM \uc2a4\ud0c0\uc77c \uc2dc\uc2a4\ud15c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class DatabaseField:\n    """\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud544\ub4dc \uae30\ubcf8 \ud074\ub798\uc2a4"""\n    def __init__(self, primary_key=False, nullable=True, default=None):\n        self.primary_key = primary_key\n        self.nullable = nullable\n        self.default = default\n        self.name = None  # \uba54\ud0c0\ud074\ub798\uc2a4\uc5d0\uc11c \uc124\uc815\ub428\n\n    def validate(self, value):\n        if value is None:\n            if not self.nullable and self.default is None:\n                raise ValueError(f"{self.name} cannot be None")\n            return self.default\n        return self.to_python(value)\n\n    def to_python(self, value):\n        """\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c \uad6c\ud604"""\n        return value\n\nclass IntegerField(DatabaseField):\n    def to_python(self, value):\n        try:\n            return int(value)\n        except (TypeError, ValueError):\n            raise ValueError(f"{self.name} must be an integer")\n\nclass CharField(DatabaseField):\n    def __init__(self, max_length=255, **kwargs):\n        super().__init__(**kwargs)\n        self.max_length = max_length\n\n    def to_python(self, value):\n        value = str(value)\n        if len(value) > self.max_length:\n            raise ValueError(\n                f"{self.name} exceeds max length {self.max_length}"\n            )\n        return value\n\nclass ModelMeta(type):\n    """ORM \ubaa8\ub378\uc744 \uc704\ud55c \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # \ubca0\uc774\uc2a4 Model \ud074\ub798\uc2a4\ub294 \uac74\ub108\ub6f0\uae30\n        if name == \'Model\':\n            return super().__new__(mcs, name, bases, attrs)\n\n        # \ud544\ub4dc \uc218\uc9d1\n        fields = {}\n        for key, value in list(attrs.items()):\n            if isinstance(value, DatabaseField):\n                value.name = key\n                fields[key] = value\n                attrs.pop(key)\n\n        attrs[\'_fields\'] = fields\n        attrs[\'_table_name\'] = name.lower()\n\n        # __init__ \uc0dd\uc131\n        original_init = attrs.get(\'__init__\')\n\n        def __init__(self, **kwargs):\n            # \ud544\ub4dc \ucd08\uae30\ud654\n            for field_name, field in self._fields.items():\n                value = kwargs.get(field_name)\n                validated_value = field.validate(value)\n                setattr(self, field_name, validated_value)\n\n            # \uc6d0\ub798 __init__ \ud638\ucd9c\n            if original_init:\n                original_init(self, **kwargs)\n\n        attrs[\'__init__\'] = __init__\n\n        # save \uba54\uc11c\ub4dc\n        def save(self):\n            field_names = list(self._fields.keys())\n            values = [getattr(self, name) for name in field_names]\n\n            # SQL \uc0dd\uc131 (\uc2e4\uc81c\ub85c\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5)\n            sql = f"INSERT INTO {self._table_name} ({\', \'.join(field_names)}) "\n            sql += f"VALUES ({\', \'.join(map(repr, values))})"\n            print(f"Executing: {sql}")\n            return True\n\n        attrs[\'save\'] = save\n\n        # __repr__ \uc0dd\uc131\n        def __repr__(self):\n            field_strs = [\n                f"{name}={getattr(self, name)!r}"\n                for name in self._fields.keys()\n            ]\n            return f"{name}({\', \'.join(field_strs)})"\n\n        attrs[\'__repr__\'] = __repr__\n\n        return super().__new__(mcs, name, bases, attrs)\n\nclass Model(metaclass=ModelMeta):\n    """ORM \ubaa8\ub378 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4"""\n    pass\n\n# \uc0ac\uc6a9 \uc608\uc81c\nclass User(Model):\n    id = IntegerField(primary_key=True, nullable=False)\n    username = CharField(max_length=50, nullable=False)\n    email = CharField(max_length=100)\n    age = IntegerField(nullable=True, default=0)\n\n# \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131\nuser = User(id=1, username="alice", email="alice@example.com", age=30)\nprint(user)\n# User(id=1, username=\'alice\', email=\'alice@example.com\', age=30)\n\n# \uc800\uc7a5\nuser.save()\n# Executing: INSERT INTO user (id, username, email, age) VALUES (1, \'alice\', \'alice@example.com\', 30)\n\n# \uac80\uc99d \ud14c\uc2a4\ud2b8\ntry:\n    invalid_user = User(id="not_a_number", username="bob")\nexcept ValueError as e:\n    print(f"Validation Error: {e}")\n    # Validation Error: id must be an integer\n'})}),"\n",(0,a.jsx)(e.h3,{id:"182-\ud50c\ub7ec\uadf8\uc778-\uc2dc\uc2a4\ud15c",children:"1.8.2 \ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class PluginMeta(type):\n    """\ud50c\ub7ec\uadf8\uc778 \uc790\ub3d9 \ub4f1\ub85d \uc2dc\uc2a4\ud15c"""\n    plugins = {}\n\n    def __new__(mcs, name, bases, attrs):\n        cls = super().__new__(mcs, name, bases, attrs)\n\n        # BasePlugin\uc774 \uc544\ub2cc \uc11c\ube0c\ud074\ub798\uc2a4\ub9cc \ub4f1\ub85d\n        if bases and bases[0].__name__ == \'BasePlugin\':\n            # plugin_name \uc18d\uc131 \ud655\uc778\n            plugin_name = attrs.get(\'plugin_name\')\n            if not plugin_name:\n                raise ValueError(\n                    f"Plugin {name} must define \'plugin_name\' attribute"\n                )\n\n            # \uc911\ubcf5 \ud655\uc778\n            if plugin_name in mcs.plugins:\n                raise ValueError(\n                    f"Plugin name \'{plugin_name}\' is already registered"\n                )\n\n            mcs.plugins[plugin_name] = cls\n            print(f"Registered plugin: {plugin_name}")\n\n        return cls\n\n    @classmethod\n    def get_plugin(mcs, plugin_name):\n        """\ud50c\ub7ec\uadf8\uc778 \uac00\uc838\uc624\uae30"""\n        if plugin_name not in mcs.plugins:\n            raise KeyError(f"Plugin \'{plugin_name}\' not found")\n        return mcs.plugins[plugin_name]\n\n    @classmethod\n    def list_plugins(mcs):\n        """\ubaa8\ub4e0 \ud50c\ub7ec\uadf8\uc778 \ubaa9\ub85d"""\n        return list(mcs.plugins.keys())\n\nclass BasePlugin(metaclass=PluginMeta):\n    """\ud50c\ub7ec\uadf8\uc778 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4"""\n    plugin_name = None\n\n    def execute(self, *args, **kwargs):\n        raise NotImplementedError("Plugins must implement \'execute\' method")\n\n# \ud50c\ub7ec\uadf8\uc778 \uc815\uc758\nclass EmailNotifier(BasePlugin):\n    plugin_name = "email"\n\n    def execute(self, recipient, message):\n        return f"Sending email to {recipient}: {message}"\n\nclass SMSNotifier(BasePlugin):\n    plugin_name = "sms"\n\n    def execute(self, phone, message):\n        return f"Sending SMS to {phone}: {message}"\n\nclass SlackNotifier(BasePlugin):\n    plugin_name = "slack"\n\n    def execute(self, channel, message):\n        return f"Posting to #{channel}: {message}"\n\n# \ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c \uc0ac\uc6a9\nprint("\\nAvailable plugins:", PluginMeta.list_plugins())\n# Available plugins: [\'email\', \'sms\', \'slack\']\n\ndef send_notification(plugin_name, *args, **kwargs):\n    """\ub3d9\uc801\uc73c\ub85c \ud50c\ub7ec\uadf8\uc778 \uc2e4\ud589"""\n    plugin_class = PluginMeta.get_plugin(plugin_name)\n    plugin = plugin_class()\n    return plugin.execute(*args, **kwargs)\n\n# \ud14c\uc2a4\ud2b8\nprint(send_notification(\'email\', \'user@example.com\', \'Hello!\'))\n# Sending email to user@example.com: Hello!\n\nprint(send_notification(\'sms\', \'+1234567890\', \'Alert!\'))\n# Sending SMS to +1234567890: Alert!\n\nprint(send_notification(\'slack\', \'general\', \'Meeting in 5 mins\'))\n# Posting to #general: Meeting in 5 mins\n\n# \uc5d0\ub7ec \ucc98\ub9ac\ntry:\n    send_notification(\'telegram\', \'user\', \'message\')\nexcept KeyError as e:\n    print(f"Error: {e}")\n    # Error: \'Plugin \'telegram\' not found\'\n'})}),"\n",(0,a.jsx)(e.h3,{id:"183-\uc2f1\uae00\ud1a4-\ud328\ud134-\uc2a4\ub808\ub4dc-\uc548\uc804",children:"1.8.3 \uc2f1\uae00\ud1a4 \ud328\ud134 (\uc2a4\ub808\ub4dc \uc548\uc804)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'import threading\n\nclass ThreadSafeSingletonMeta(type):\n    """\uc2a4\ub808\ub4dc \uc548\uc804\ud55c \uc2f1\uae00\ud1a4 \uba54\ud0c0\ud074\ub798\uc2a4"""\n    _instances = {}\n    _lock = threading.Lock()\n\n    def __call__(cls, *args, **kwargs):\n        # \ub354\ube14 \uccb4\ud06c \ub77d\ud0b9 \ud328\ud134\n        if cls not in cls._instances:\n            with cls._lock:\n                if cls not in cls._instances:\n                    instance = super().__call__(*args, **kwargs)\n                    cls._instances[cls] = instance\n        return cls._instances[cls]\n\nclass Configuration(metaclass=ThreadSafeSingletonMeta):\n    """\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uc815 \uc2f1\uae00\ud1a4"""\n\n    def __init__(self):\n        if not hasattr(self, \'initialized\'):\n            self.settings = {}\n            self.initialized = True\n            print("Configuration initialized")\n\n    def set(self, key, value):\n        self.settings[key] = value\n\n    def get(self, key, default=None):\n        return self.settings.get(key, default)\n\n# \uba40\ud2f0\uc2a4\ub808\ub4dc \ud14c\uc2a4\ud2b8\ndef worker(worker_id):\n    config = Configuration()\n    config.set(f\'worker_{worker_id}\', worker_id)\n    print(f"Worker {worker_id}: {id(config)}")\n\nthreads = []\nfor i in range(5):\n    t = threading.Thread(target=worker, args=(i,))\n    threads.append(t)\n    t.start()\n\nfor t in threads:\n    t.join()\n\n# \ubaa8\ub4e0 \uc6cc\ucee4\uac00 \uac19\uc740 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud588\ub294\uc9c0 \ud655\uc778\nconfig = Configuration()\nprint(f"\\nFinal config ID: {id(config)}")\nprint(f"Settings: {config.settings}")\n'})}),"\n",(0,a.jsx)(e.h2,{id:"19-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\uace0-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\uc9c0-\ub9d0\uc544\uc57c-\ud558\ub294\uac00",children:"1.9 \uc5b8\uc81c \uc0ac\uc6a9\ud558\uace0 \uc5b8\uc81c \uc0ac\uc6a9\ud558\uc9c0 \ub9d0\uc544\uc57c \ud558\ub294\uac00?"}),"\n",(0,a.jsx)(e.h3,{id:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c-\uc0ac\uc6a9\ud574\uc57c-\ud560-\ub54c",children:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud574\uc57c \ud560 \ub54c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# \u2705 \uc88b\uc740 \uc0ac\uc6a9 \uc0ac\ub840: \ud504\ub808\uc784\uc6cc\ud06c \ub808\ubca8\uc758 \uae30\ub2a5\n\nclass AutoPropertyMeta(type):\n    """\uc18d\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \ud504\ub85c\ud37c\ud2f0\ub85c \ubcc0\ud658"""\n\n    def __new__(mcs, name, bases, attrs):\n        new_attrs = {}\n\n        for attr_name, attr_value in attrs.items():\n            if attr_name.startswith(\'_\') or callable(attr_value):\n                new_attrs[attr_name] = attr_value\n            else:\n                # \uc18d\uc131\uc744 \ud504\ub85c\ud37c\ud2f0\ub85c \ubcc0\ud658\n                private_name = f\'_{attr_name}\'\n\n                def make_getter(pname):\n                    def getter(self):\n                        return getattr(self, pname, None)\n                    return getter\n\n                def make_setter(pname):\n                    def setter(self, value):\n                        setattr(self, pname, value)\n                    return setter\n\n                new_attrs[private_name] = attr_value\n                new_attrs[attr_name] = property(\n                    make_getter(private_name),\n                    make_setter(private_name)\n                )\n\n        return super().__new__(mcs, name, bases, new_attrs)\n\nclass Product(metaclass=AutoPropertyMeta):\n    name = ""\n    price = 0.0\n\n    def __init__(self, name, price):\n        self.name = name\n        self.price = price\n\nproduct = Product("Laptop", 999.99)\nprint(product.name)    # Laptop\nproduct.price = 899.99\nprint(product.price)   # 899.99\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c-\uc0ac\uc6a9\ud558\uc9c0-\ub9d0\uc544\uc57c-\ud560-\ub54c",children:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9d0\uc544\uc57c \ud560 \ub54c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# \u274c \ub098\uc05c \uc0ac\uc6a9 \uc0ac\ub840: \ub2e8\uc21c\ud55c \uae30\ub2a5\uc5d0 \uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9\n\n# \ub098\uc05c \uc608: \uba54\ud0c0\ud074\ub798\uc2a4\ub85c \ub85c\uae45\nclass LogMeta(type):\n    def __new__(mcs, name, bases, attrs):\n        # ... \ubcf5\uc7a1\ud55c \uba54\ud0c0\ud074\ub798\uc2a4 \ub85c\uc9c1\n        pass\n\nclass MyClass(metaclass=LogMeta):\n    pass\n\n# \u2705 \uc88b\uc740 \uc608: \ub370\ucf54\ub808\uc774\ud130 \uc0ac\uc6a9\ndef logged_class(cls):\n    original_init = cls.__init__\n\n    def new_init(self, *args, **kwargs):\n        print(f"Creating instance of {cls.__name__}")\n        original_init(self, *args, **kwargs)\n\n    cls.__init__ = new_init\n    return cls\n\n@logged_class\nclass MyClass:\n    def __init__(self):\n        pass\n\n# \u274c \ub098\uc05c \uc608: \uac04\ub2e8\ud55c \uac80\uc99d\uc5d0 \uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9\nclass ValidationMeta(type):\n    def __new__(mcs, name, bases, attrs):\n        if \'validate\' not in attrs:\n            raise TypeError("Must have validate method")\n        return super().__new__(mcs, name, bases, attrs)\n\n# \u2705 \uc88b\uc740 \uc608: ABC \uc0ac\uc6a9\nfrom abc import ABC, abstractmethod\n\nclass Validatable(ABC):\n    @abstractmethod\n    def validate(self):\n        pass\n'})}),"\n",(0,a.jsxs)(e.admonition,{type:"warning",children:[(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9 \uc2dc \uc8fc\uc758\uc0ac\ud56d:"})}),(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ubcf5\uc7a1\uc131"}),": \uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ucf54\ub4dc\ub97c \uc774\ud574\ud558\uae30 \uc5b4\ub835\uac8c \ub9cc\ub4ed\ub2c8\ub2e4"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ub514\ubc84\uae45"}),": \uba54\ud0c0\ud074\ub798\uc2a4 \uad00\ub828 \ubc84\uadf8\ub294 \ucd94\uc801\ud558\uae30 \uc5b4\ub835\uc2b5\ub2c8\ub2e4"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\uc720\uc9c0\ubcf4\uc218"}),": \ud300\uc6d0\ub4e4\uc774 \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc774\ud574\ud574\uc57c \ud569\ub2c8\ub2e4"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ub300\uc548 \uace0\ub824"}),": \ub370\ucf54\ub808\uc774\ud130, \ubbf9\uc2a4\uc778, ABC\uac00 \ub354 \ub098\uc740 \uc120\ud0dd\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4"]}),"\n"]}),(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Tim Peters\uc758 \uc870\uc5b8:"})}),(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:'"\uba54\ud0c0\ud074\ub798\uc2a4\ub294 99%\uc758 \uc0ac\uc6a9\uc790\uac00 \uc808\ub300 \uac71\uc815\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ub9c8\ubc95\uc785\ub2c8\ub2e4. \uba54\ud0c0\ud074\ub798\uc2a4\uac00 \ud544\uc694\ud55c\uc9c0 \uad81\uae08\ud558\ub2e4\uba74, \ud544\uc694 \uc5c6\ub294 \uac83\uc785\ub2c8\ub2e4."'}),"\n"]})]}),"\n",(0,a.jsx)(e.h2,{id:"110-\ubca0\uc2a4\ud2b8-\ud504\ub799\ud2f0\uc2a4",children:"1.10 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4"}),"\n",(0,a.jsx)(e.h3,{id:"1-\uba85\ud655\ud55c-\ubb38\uc11c\ud654",children:"1. \uba85\ud655\ud55c \ubb38\uc11c\ud654"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"class DocumentedMeta(type):\n    \"\"\"\n    \uc790\ub3d9 \ubb38\uc11c\ud654 \uba54\ud0c0\ud074\ub798\uc2a4\n\n    \uc774 \uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ud074\ub798\uc2a4 \uc0dd\uc131 \uc2dc \ub2e4\uc74c\uc744 \uc218\ud589\ud569\ub2c8\ub2e4:\n    1. \ubaa8\ub4e0 public \uba54\uc11c\ub4dc\uc758 docstring \ud655\uc778\n    2. docstring\uc774 \uc5c6\ub294 \uba54\uc11c\ub4dc\uc5d0 \uacbd\uace0 \ucd94\uac00\n    3. \ud074\ub798\uc2a4\uc5d0 _undocumented_methods \uc18d\uc131 \ucd94\uac00\n\n    Usage:\n        class MyClass(metaclass=DocumentedMeta):\n            def my_method(self):\n                '''\uba54\uc11c\ub4dc \uc124\uba85'''\n                pass\n    \"\"\"\n\n    def __new__(mcs, name, bases, attrs):\n        undocumented = []\n\n        for attr_name, attr_value in attrs.items():\n            if (callable(attr_value) and\n                not attr_name.startswith('_') and\n                not attr_value.__doc__):\n                undocumented.append(attr_name)\n\n        cls = super().__new__(mcs, name, bases, attrs)\n        cls._undocumented_methods = undocumented\n\n        if undocumented:\n            print(f\"Warning: {name} has undocumented methods: {undocumented}\")\n\n        return cls\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-\uba85\uc2dc\uc801-\uc778\ud130\ud398\uc774\uc2a4",children:"2. \uba85\uc2dc\uc801 \uc778\ud130\ud398\uc774\uc2a4"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class InterfaceMeta(type):\n    """\uba85\uc2dc\uc801 \uc778\ud130\ud398\uc774\uc2a4 \uc815\uc758\ub97c \uac15\uc81c\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # _required_methods \uccb4\ud06c\n        required_methods = attrs.get(\'_required_methods\', [])\n\n        if required_methods:\n            for method_name in required_methods:\n                if method_name not in attrs:\n                    raise TypeError(\n                        f"{name} must implement {method_name} method"\n                    )\n\n                if not callable(attrs[method_name]):\n                    raise TypeError(\n                        f"{method_name} must be callable"\n                    )\n\n        return super().__new__(mcs, name, bases, attrs)\n\nclass APIClient(metaclass=InterfaceMeta):\n    """API \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\ud130\ud398\uc774\uc2a4"""\n    _required_methods = [\'get\', \'post\', \'put\', \'delete\']\n\n    def get(self, url):\n        return f"GET {url}"\n\n    def post(self, url, data):\n        return f"POST {url}"\n\n    def put(self, url, data):\n        return f"PUT {url}"\n\n    def delete(self, url):\n        return f"DELETE {url}"\n'})}),"\n",(0,a.jsx)(e.h3,{id:"3-\uc131\ub2a5-\uace0\ub824",children:"3. \uc131\ub2a5 \uace0\ub824"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'import time\n\nclass CachedMeta(type):\n    """\uba54\uc11c\ub4dc \uacb0\uacfc\ub97c \uce90\uc2f1\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # _cached_methods \ub9ac\uc2a4\ud2b8\uc5d0 \uc788\ub294 \uba54\uc11c\ub4dc\ub9cc \uce90\uc2f1\n        cached_methods = attrs.get(\'_cached_methods\', [])\n\n        for method_name in cached_methods:\n            if method_name in attrs:\n                original_method = attrs[method_name]\n                attrs[method_name] = mcs._make_cached(original_method)\n\n        return super().__new__(mcs, name, bases, attrs)\n\n    @staticmethod\n    def _make_cached(method):\n        cache = {}\n\n        def cached_method(self, *args):\n            if args not in cache:\n                cache[args] = method(self, *args)\n            return cache[args]\n\n        cached_method.__name__ = method.__name__\n        cached_method.__doc__ = method.__doc__\n        return cached_method\n\nclass ExpensiveCalculator(metaclass=CachedMeta):\n    _cached_methods = [\'fibonacci\', \'factorial\']\n\n    def fibonacci(self, n):\n        """\ud53c\ubcf4\ub098\uce58 \uc218 \uacc4\uc0b0 (\uce90\uc2f1\ub428)"""\n        if n <= 1:\n            return n\n        return self.fibonacci(n-1) + self.fibonacci(n-2)\n\n    def factorial(self, n):\n        """\ud329\ud1a0\ub9ac\uc5bc \uacc4\uc0b0 (\uce90\uc2f1\ub428)"""\n        if n <= 1:\n            return 1\n        return n * self.factorial(n-1)\n\ncalc = ExpensiveCalculator()\n\n# \uccab \ubc88\uc9f8 \ud638\ucd9c: \ub290\ub9bc\nstart = time.time()\nresult1 = calc.fibonacci(30)\nprint(f"First call: {time.time() - start:.4f}s")\n\n# \ub450 \ubc88\uc9f8 \ud638\ucd9c: \ube60\ub984 (\uce90\uc2dc\ub428)\nstart = time.time()\nresult2 = calc.fibonacci(30)\nprint(f"Second call: {time.time() - start:.6f}s")\n'})}),"\n",(0,a.jsx)(e.h3,{id:"4-\ud14c\uc2a4\ud2b8-\uac00\ub2a5\uc131",children:"4. \ud14c\uc2a4\ud2b8 \uac00\ub2a5\uc131"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class TestableMetaclass(type):\n    """\ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \ud6c5\uc744 \uc81c\uacf5\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    # \ud14c\uc2a4\ud2b8 \ubaa8\ub4dc \ud50c\ub798\uadf8\n    _test_mode = False\n\n    def __new__(mcs, name, bases, attrs):\n        cls = super().__new__(mcs, name, bases, attrs)\n\n        # \ud14c\uc2a4\ud2b8 \ubaa8\ub4dc\uc5d0\uc11c\ub9cc \ucd94\uac00 \uac80\uc99d\n        if mcs._test_mode:\n            cls._creation_time = time.time()\n            cls._test_hooks = []\n\n        return cls\n\n    @classmethod\n    def enable_test_mode(mcs):\n        mcs._test_mode = True\n\n    @classmethod\n    def disable_test_mode(mcs):\n        mcs._test_mode = False\n\n# \ud14c\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\nTestableMetaclass.enable_test_mode()\n\nclass MyClass(metaclass=TestableMetaclass):\n    pass\n\nassert hasattr(MyClass, \'_creation_time\')\nassert hasattr(MyClass, \'_test_hooks\')\n\nTestableMetaclass.disable_test_mode()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"111-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"1.11 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,a.jsx)(e.h3,{id:"\uba54\ud0c0\ud074\ub798\uc2a4-\uc0ac\uc6a9-\uc804-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\uba54\ud0c0\ud074\ub798\uc2a4 \uc0ac\uc6a9 \uc804 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,a.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub370\ucf54\ub808\uc774\ud130\ub85c \ud574\uacb0\ud560 \uc218 \uc5c6\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc0c1\uc18d\uc774\ub098 \ubbf9\uc2a4\uc778\uc73c\ub85c \ud574\uacb0\ud560 \uc218 \uc5c6\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","ABC (\ucd94\uc0c1 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4)\ub85c \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud300\uc6d0\ub4e4\uc774 \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc774\ud574\ud560 \uc218 \uc788\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc720\uc9c0\ubcf4\uc218 \ube44\uc6a9\uc774 \uc815\ub2f9\ud654\ub418\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uba85\ud655\ud55c \ubb38\uc11c\ud654 \uacc4\ud68d\uc774 \uc788\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud14c\uc2a4\ud2b8 \uc804\ub7b5\uc774 \uc218\ub9bd\ub418\uc5b4 \uc788\ub294\uac00?"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"\uba54\ud0c0\ud074\ub798\uc2a4-\uad6c\ud604-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\uba54\ud0c0\ud074\ub798\uc2a4 \uad6c\ud604 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,a.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.code,{children:"__new__"})," \ub610\ub294 ",(0,a.jsx)(e.code,{children:"__init__"})," \uc911 \uc801\uc808\ud55c \uac83\uc744 \uc120\ud0dd\ud588\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.code,{children:"super()"}),"\ub97c \uc62c\ubc14\ub974\uac8c \ud638\ucd9c\ud588\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubca0\uc774\uc2a4 \ud074\ub798\uc2a4\ub97c \uc62c\ubc14\ub974\uac8c \ucc98\ub9ac\ud588\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub2e4\uc911 \uc0c1\uc18d \uc2dc\ub098\ub9ac\uc624\ub97c \uace0\ub824\ud588\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc5d0\ub7ec \uba54\uc2dc\uc9c0\uac00 \uba85\ud655\ud55c\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc0c1\uc138\ud55c docstring\uc744 \uc791\uc131\ud588\ub294\uac00?"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc5e3\uc9c0 \ucf00\uc774\uc2a4\ub97c \ud14c\uc2a4\ud2b8\ud588\ub294\uac00?"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"\ub514\ubc84\uae45-\ud301",children:"\ub514\ubc84\uae45 \ud301"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class DebugMeta(type):\n    """\ub514\ubc84\uae45\uc744 \uc704\ud55c \uba54\ud0c0\ud074\ub798\uc2a4 \ud15c\ud50c\ub9bf"""\n\n    def __new__(mcs, name, bases, attrs):\n        print(f"\\n=== Creating class: {name} ===")\n        print(f"Metaclass: {mcs}")\n        print(f"Bases: {bases}")\n        print(f"Attributes: {list(attrs.keys())}")\n\n        # \ud074\ub798\uc2a4 \uc0dd\uc131\n        cls = super().__new__(mcs, name, bases, attrs)\n\n        print(f"Class created: {cls}")\n        print(f"MRO: {cls.__mro__}")\n\n        return cls\n\n    def __init__(cls, name, bases, attrs):\n        print(f"\\n=== Initializing class: {name} ===")\n        super().__init__(name, bases, attrs)\n        print(f"Class initialized: {cls}")\n\n    def __call__(cls, *args, **kwargs):\n        print(f"\\n=== Creating instance of {cls.__name__} ===")\n        print(f"Args: {args}")\n        print(f"Kwargs: {kwargs}")\n\n        instance = super().__call__(*args, **kwargs)\n\n        print(f"Instance created: {instance}")\n        return instance\n\nclass DebugClass(metaclass=DebugMeta):\n    def __init__(self, value):\n        self.value = value\n\n# \ub514\ubc84\uadf8 \ucd9c\ub825\uacfc \ud568\uaed8 \uc2e4\ud589\nobj = DebugClass(42)\n'})}),"\n",(0,a.jsx)(e.h2,{id:"112-\uc5f0\uc2b5-\ubb38\uc81c",children:"1.12 \uc5f0\uc2b5 \ubb38\uc81c"}),"\n",(0,a.jsx)(e.h3,{id:"\uc5f0\uc2b5-1-\uc790\ub3d9-\uc18d\uc131-\ucd94\uc801",children:"\uc5f0\uc2b5 1: \uc790\ub3d9 \uc18d\uc131 \ucd94\uc801"}),"\n",(0,a.jsx)(e.p,{children:"\uc790\ub3d9\uc73c\ub85c \ubaa8\ub4e0 \uc18d\uc131 \ubcc0\uacbd\uc744 \ucd94\uc801\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc138\uc694."}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"class AttributeTrackerMeta(type):\n    \"\"\"\ubaa8\ub4e0 \uc18d\uc131 \ubcc0\uacbd\uc744 \ucd94\uc801\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\"\"\"\n\n    def __new__(mcs, name, bases, attrs):\n        # __setattr__ \ub798\ud551\n        original_setattr = attrs.get('__setattr__')\n\n        def tracked_setattr(self, attr_name, value):\n            # \ubcc0\uacbd \uc774\ub825 \ucd08\uae30\ud654\n            if not hasattr(self, '_attribute_history'):\n                object.__setattr__(self, '_attribute_history', {})\n\n            # \uc774\uc804 \uac12 \uc800\uc7a5\n            old_value = getattr(self, attr_name, None)\n\n            # \uc2e4\uc81c \uc124\uc815\n            if original_setattr:\n                original_setattr(self, attr_name, value)\n            else:\n                object.__setattr__(self, attr_name, value)\n\n            # \uc774\ub825 \uae30\ub85d\n            if attr_name != '_attribute_history':\n                if attr_name not in self._attribute_history:\n                    self._attribute_history[attr_name] = []\n\n                self._attribute_history[attr_name].append({\n                    'old': old_value,\n                    'new': value\n                })\n\n        attrs['__setattr__'] = tracked_setattr\n\n        # \uc774\ub825 \uc870\ud68c \uba54\uc11c\ub4dc\n        def get_history(self, attr_name=None):\n            if attr_name:\n                return self._attribute_history.get(attr_name, [])\n            return self._attribute_history\n\n        attrs['get_history'] = get_history\n\n        return super().__new__(mcs, name, bases, attrs)\n\nclass Person(metaclass=AttributeTrackerMeta):\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n# \ud14c\uc2a4\ud2b8\nperson = Person(\"Alice\", 25)\nperson.age = 26\nperson.age = 27\nperson.name = \"Alice Smith\"\n\nprint(person.get_history('age'))\n# [{'old': None, 'new': 25}, {'old': 25, 'new': 26}, {'old': 26, 'new': 27}]\n\nprint(person.get_history('name'))\n# [{'old': None, 'new': 'Alice'}, {'old': 'Alice', 'new': 'Alice Smith'}]\n"})})]}),"\n",(0,a.jsx)(e.h3,{id:"\uc5f0\uc2b5-2-\uc77d\uae30-\uc804\uc6a9-\ud074\ub798\uc2a4",children:"\uc5f0\uc2b5 2: \uc77d\uae30 \uc804\uc6a9 \ud074\ub798\uc2a4"}),"\n",(0,a.jsx)(e.p,{children:"\uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \ud6c4 \uc18d\uc131\uc744 \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub294 \uc77d\uae30 \uc804\uc6a9 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc138\uc694."}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class ImmutableMeta(type):\n    """\ubd88\ubcc0 \ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\ub294 \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        # __setattr__ \uc624\ubc84\ub77c\uc774\ub4dc\n        def __setattr__(self, name, value):\n            if hasattr(self, \'_initialized\'):\n                raise AttributeError(\n                    f"Cannot modify immutable instance. "\n                    f"Attempted to set {name} = {value}"\n                )\n            object.__setattr__(self, name, value)\n\n        attrs[\'__setattr__\'] = __setattr__\n\n        # __delattr__ \uc624\ubc84\ub77c\uc774\ub4dc\n        def __delattr__(self, name):\n            raise AttributeError(\n                f"Cannot delete attribute from immutable instance"\n            )\n\n        attrs[\'__delattr__\'] = __delattr__\n\n        # __init__ \ub798\ud551\n        original_init = attrs.get(\'__init__\')\n\n        def __init__(self, *args, **kwargs):\n            if original_init:\n                original_init(self, *args, **kwargs)\n            object.__setattr__(self, \'_initialized\', True)\n\n        attrs[\'__init__\'] = __init__\n\n        return super().__new__(mcs, name, bases, attrs)\n\nclass Point(metaclass=ImmutableMeta):\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __repr__(self):\n        return f"Point({self.x}, {self.y})"\n\n# \ud14c\uc2a4\ud2b8\npoint = Point(3, 4)\nprint(point)  # Point(3, 4)\n\ntry:\n    point.x = 5\nexcept AttributeError as e:\n    print(f"Error: {e}")\n    # Error: Cannot modify immutable instance. Attempted to set x = 5\n\ntry:\n    del point.y\nexcept AttributeError as e:\n    print(f"Error: {e}")\n    # Error: Cannot delete attribute from immutable instance\n'})})]}),"\n",(0,a.jsx)(e.h3,{id:"\uc5f0\uc2b5-3-\uba54\uc11c\ub4dc-\uc2e4\ud589-\uc2dc\uac04-\uce21\uc815",children:"\uc5f0\uc2b5 3: \uba54\uc11c\ub4dc \uc2e4\ud589 \uc2dc\uac04 \uce21\uc815"}),"\n",(0,a.jsx)(e.p,{children:"\ud074\ub798\uc2a4\uc758 \ubaa8\ub4e0 \uba54\uc11c\ub4dc \uc2e4\ud589 \uc2dc\uac04\uc744 \uc790\ub3d9\uc73c\ub85c \uce21\uc815\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\ub97c \ub9cc\ub4dc\uc138\uc694."}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import time\nimport functools\n\nclass TimingMeta(type):\n    \"\"\"\uba54\uc11c\ub4dc \uc2e4\ud589 \uc2dc\uac04\uc744 \uce21\uc815\ud558\ub294 \uba54\ud0c0\ud074\ub798\uc2a4\"\"\"\n\n    def __new__(mcs, name, bases, attrs):\n        for attr_name, attr_value in attrs.items():\n            if callable(attr_value) and not attr_name.startswith('_'):\n                attrs[attr_name] = mcs._time_method(attr_value)\n\n        cls = super().__new__(mcs, name, bases, attrs)\n        cls._timing_stats = {}\n\n        return cls\n\n    @staticmethod\n    def _time_method(method):\n        @functools.wraps(method)\n        def timed_method(self, *args, **kwargs):\n            start_time = time.time()\n            result = method(self, *args, **kwargs)\n            end_time = time.time()\n\n            execution_time = end_time - start_time\n            method_name = method.__name__\n\n            # \ud1b5\uacc4 \uc5c5\ub370\uc774\ud2b8\n            if method_name not in self._timing_stats:\n                self._timing_stats[method_name] = {\n                    'count': 0,\n                    'total_time': 0,\n                    'min_time': float('inf'),\n                    'max_time': 0\n                }\n\n            stats = self._timing_stats[method_name]\n            stats['count'] += 1\n            stats['total_time'] += execution_time\n            stats['min_time'] = min(stats['min_time'], execution_time)\n            stats['max_time'] = max(stats['max_time'], execution_time)\n\n            return result\n\n        return timed_method\n\nclass DataProcessor(metaclass=TimingMeta):\n    def process_data(self, data):\n        \"\"\"\ub370\uc774\ud130 \ucc98\ub9ac\"\"\"\n        time.sleep(0.1)  # \uc2dc\ubbac\ub808\uc774\uc158\n        return [x * 2 for x in data]\n\n    def analyze_data(self, data):\n        \"\"\"\ub370\uc774\ud130 \ubd84\uc11d\"\"\"\n        time.sleep(0.05)  # \uc2dc\ubbac\ub808\uc774\uc158\n        return sum(data) / len(data)\n\n    def get_timing_report(self):\n        \"\"\"\ud0c0\uc774\ubc0d \ub9ac\ud3ec\ud2b8 \uc0dd\uc131\"\"\"\n        report = []\n        for method_name, stats in self._timing_stats.items():\n            avg_time = stats['total_time'] / stats['count']\n            report.append(\n                f\"{method_name}:\\n\"\n                f\"  Calls: {stats['count']}\\n\"\n                f\"  Total: {stats['total_time']:.4f}s\\n\"\n                f\"  Average: {avg_time:.4f}s\\n\"\n                f\"  Min: {stats['min_time']:.4f}s\\n\"\n                f\"  Max: {stats['max_time']:.4f}s\"\n            )\n        return '\\n\\n'.join(report)\n\n# \ud14c\uc2a4\ud2b8\nprocessor = DataProcessor()\n\nfor _ in range(3):\n    processor.process_data([1, 2, 3, 4, 5])\n\nfor _ in range(5):\n    processor.analyze_data([1, 2, 3, 4, 5])\n\nprint(processor.get_timing_report())\n"})})]}),"\n",(0,a.jsx)(e.h3,{id:"\uc5f0\uc2b5-4-\ud0c0\uc785-\uccb4\ud06c-orm",children:"\uc5f0\uc2b5 4: \ud0c0\uc785 \uccb4\ud06c ORM"}),"\n",(0,a.jsx)(e.p,{children:"\uac04\ub2e8\ud55c \ud0c0\uc785 \uccb4\ud06c \uae30\ub2a5\uc774 \uc788\ub294 ORM \uc2a4\ud0c0\uc77c \ubaa8\ub378\uc744 \ub9cc\ub4dc\uc138\uc694."}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'class TypedField:\n    """\ud0c0\uc785 \uccb4\ud06c\ub97c \uc218\ud589\ud558\ub294 \ud544\ub4dc"""\n\n    def __init__(self, field_type, required=True, default=None, validator=None):\n        self.field_type = field_type\n        self.required = required\n        self.default = default\n        self.validator = validator\n        self.name = None\n\n    def validate(self, value):\n        # None \uccb4\ud06c\n        if value is None:\n            if self.required and self.default is None:\n                raise ValueError(f"{self.name} is required")\n            return self.default\n\n        # \ud0c0\uc785 \uccb4\ud06c\n        if not isinstance(value, self.field_type):\n            raise TypeError(\n                f"{self.name} must be {self.field_type.__name__}, "\n                f"got {type(value).__name__}"\n            )\n\n        # \ucee4\uc2a4\ud140 \uac80\uc99d\n        if self.validator:\n            if not self.validator(value):\n                raise ValueError(f"{self.name} validation failed")\n\n        return value\n\nclass ModelMeta(type):\n    """\ud0c0\uc785 \uccb4\ud06c ORM \uba54\ud0c0\ud074\ub798\uc2a4"""\n\n    def __new__(mcs, name, bases, attrs):\n        if name == \'Model\':\n            return super().__new__(mcs, name, bases, attrs)\n\n        # \ud544\ub4dc \uc218\uc9d1\n        fields = {}\n        for key, value in list(attrs.items()):\n            if isinstance(value, TypedField):\n                value.name = key\n                fields[key] = value\n                attrs.pop(key)\n\n        attrs[\'_fields\'] = fields\n\n        # __init__ \uc0dd\uc131\n        def __init__(self, **kwargs):\n            for field_name, field in self._fields.items():\n                value = kwargs.get(field_name)\n                validated_value = field.validate(value)\n                object.__setattr__(self, field_name, validated_value)\n\n            object.__setattr__(self, \'_initialized\', True)\n\n        attrs[\'__init__\'] = __init__\n\n        # __setattr__ \uc0dd\uc131 (\ud0c0\uc785 \uccb4\ud06c \uc720\uc9c0)\n        def __setattr__(self, name, value):\n            if hasattr(self, \'_initialized\') and name in self._fields:\n                validated_value = self._fields[name].validate(value)\n                object.__setattr__(self, name, validated_value)\n            else:\n                object.__setattr__(self, name, value)\n\n        attrs[\'__setattr__\'] = __setattr__\n\n        # to_dict \uba54\uc11c\ub4dc\n        def to_dict(self):\n            return {\n                name: getattr(self, name)\n                for name in self._fields.keys()\n            }\n\n        attrs[\'to_dict\'] = to_dict\n\n        return super().__new__(mcs, name, bases, attrs)\n\nclass Model(metaclass=ModelMeta):\n    """ORM \ubca0\uc774\uc2a4 \ubaa8\ub378"""\n    pass\n\n# \uc0ac\uc6a9 \uc608\uc81c\nclass User(Model):\n    name = TypedField(str, required=True)\n    age = TypedField(int, required=True, validator=lambda x: 0 <= x <= 150)\n    email = TypedField(str, required=False, default="")\n    score = TypedField(float, required=False, default=0.0)\n\n# \uc815\uc0c1 \uc0ac\uc6a9\nuser = User(name="Alice", age=30, email="alice@example.com", score=95.5)\nprint(user.to_dict())\n# {\'name\': \'Alice\', \'age\': 30, \'email\': \'alice@example.com\', \'score\': 95.5}\n\n# \uc218\uc815\ub3c4 \ud0c0\uc785 \uccb4\ud06c\ub428\nuser.age = 31\nprint(user.age)  # 31\n\n# \ud0c0\uc785 \uc5d0\ub7ec\ntry:\n    user.age = "thirty"\nexcept TypeError as e:\n    print(f"Error: {e}")\n    # Error: age must be int, got str\n\n# \uac80\uc99d \uc5d0\ub7ec\ntry:\n    user.age = 200\nexcept ValueError as e:\n    print(f"Error: {e}")\n    # Error: age validation failed\n\n# \ud544\uc218 \ud544\ub4dc \ub204\ub77d\ntry:\n    invalid_user = User(age=25)\nexcept ValueError as e:\n    print(f"Error: {e}")\n    # Error: name is required\n'})})]}),"\n",(0,a.jsx)(e.h2,{id:"113-\ud575\uc2ec-\uc815\ub9ac",children:"1.13 \ud575\uc2ec \uc815\ub9ac"}),"\n",(0,a.jsx)(e.h3,{id:"\uba54\ud0c0\ud074\ub798\uc2a4\uc758-\ud575\uc2ec-\uac1c\ub150",children:"\uba54\ud0c0\ud074\ub798\uc2a4\uc758 \ud575\uc2ec \uac1c\ub150"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uba54\ud0c0\ud074\ub798\uc2a4\ub294 \ud074\ub798\uc2a4\uc758 \ud074\ub798\uc2a4"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["\ud074\ub798\uc2a4\ub294 ",(0,a.jsx)(e.code,{children:"type"}),"\uc758 \uc778\uc2a4\ud134\uc2a4"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"type"}),"\uc740 \uae30\ubcf8 \uba54\ud0c0\ud074\ub798\uc2a4"]}),"\n",(0,a.jsxs)(e.li,{children:["\ucee4\uc2a4\ud140 \uba54\ud0c0\ud074\ub798\uc2a4\ub294 ",(0,a.jsx)(e.code,{children:"type"}),"\uc744 \uc0c1\uc18d"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsxs)(e.strong,{children:[(0,a.jsx)(e.code,{children:"__new__"})," vs ",(0,a.jsx)(e.code,{children:"__init__"})]})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"__new__"}),": \ud074\ub798\uc2a4 \uac1d\uccb4 \uc0dd\uc131 (\uc218\uc815 \uac00\ub2a5)"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"__init__"}),": \ud074\ub798\uc2a4 \uac1d\uccb4 \ucd08\uae30\ud654"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"__call__"}),": \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131 \uc81c\uc5b4"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uc8fc\uc694 \uc0ac\uc6a9 \uc0ac\ub840"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\uc2f1\uae00\ud1a4 \ud328\ud134"}),"\n",(0,a.jsx)(e.li,{children:"\ud074\ub798\uc2a4 \ub808\uc9c0\uc2a4\ud2b8\ub9ac"}),"\n",(0,a.jsx)(e.li,{children:"\uc790\ub3d9 \uac80\uc99d"}),"\n",(0,a.jsx)(e.li,{children:"ORM \uc2dc\uc2a4\ud15c"}),"\n",(0,a.jsx)(e.li,{children:"\ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\ub300\uc548 \uace0\ub824"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\ud074\ub798\uc2a4 \ub370\ucf54\ub808\uc774\ud130: \uac04\ub2e8\ud55c \uc218\uc815"}),"\n",(0,a.jsx)(e.li,{children:"\ucd94\uc0c1 \ubca0\uc774\uc2a4 \ud074\ub798\uc2a4: \uc778\ud130\ud398\uc774\uc2a4 \uc815\uc758"}),"\n",(0,a.jsx)(e.li,{children:"\ubbf9\uc2a4\uc778: \uae30\ub2a5 \uc7ac\uc0ac\uc6a9"}),"\n",(0,a.jsx)(e.li,{children:"\ub514\uc2a4\ud06c\ub9bd\ud130: \uc18d\uc131 \uc81c\uc5b4"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"\uc0ac\uc6a9-\uac00\uc774\ub4dc\ub77c\uc778",children:"\uc0ac\uc6a9 \uac00\uc774\ub4dc\ub77c\uc778"}),"\n",(0,a.jsxs)(e.admonition,{type:"tip",children:[(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uba54\ud0c0\ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0:"})}),(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\ub354 \uac04\ub2e8\ud55c \ubc29\ubc95\uc774 \uc5c6\ub294\uc9c0 \ud655\uc778"}),"\n",(0,a.jsx)(e.li,{children:"\ud300\uc758 \uc774\ud574\ub3c4 \uace0\ub824"}),"\n",(0,a.jsx)(e.li,{children:"\uba85\ud655\ud55c \ubb38\uc11c\ud654 \uacc4\ud68d \uc218\ub9bd"}),"\n",(0,a.jsx)(e.li,{children:"\uc720\uc9c0\ubcf4\uc218 \ube44\uc6a9 \ud3c9\uac00"}),"\n"]}),(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uba54\ud0c0\ud074\ub798\uc2a4\uac00 \uc801\ud569\ud55c \uacbd\uc6b0:"})}),(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\ud504\ub808\uc784\uc6cc\ud06c \uc218\uc900\uc758 \uae30\ub2a5"}),"\n",(0,a.jsx)(e.li,{children:"\uc0c1\uc18d \uacc4\uce35 \uc804\uccb4\uc5d0 \uc601\ud5a5"}),"\n",(0,a.jsx)(e.li,{children:"\ud074\ub798\uc2a4 \uc0dd\uc131 \uacfc\uc815 \uc81c\uc5b4 \ud544\uc694"}),"\n",(0,a.jsx)(e.li,{children:"\uc120\uc5b8\uc801 \ud504\ub85c\uadf8\ub798\ubc0d \uc2a4\ud0c0\uc77c"}),"\n"]})]}),"\n",(0,a.jsx)(e.h3,{id:"\ucd94\uac00-\ud559\uc2b5-\uc790\ub8cc",children:"\ucd94\uac00 \ud559\uc2b5 \uc790\ub8cc"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://www.python.org/dev/peps/pep-3115/",children:"PEP 3115 - Metaclasses in Python 3"})}),"\n",(0,a.jsx)(e.li,{children:"Python \uacf5\uc2dd \ubb38\uc11c: Data Model"}),"\n",(0,a.jsx)(e.li,{children:'"Python in a Nutshell" - Alex Martelli'}),"\n",(0,a.jsx)(e.li,{children:'"Fluent Python" - Luciano Ramalho'}),"\n"]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.p,{children:"\ub2e4\uc74c \uc139\uc158\uc5d0\uc11c\ub294 \ud30c\uc774\uc36c\uc758 \ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"./async",children:"\ube44\ub3d9\uae30 \ud504\ub85c\uadf8\ub798\ubc0d"})})]})}function o(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(_,{...n})}):_(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>i});var t=s(6540);const a={},l=t.createContext(a);function r(n){const e=t.useContext(l);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);