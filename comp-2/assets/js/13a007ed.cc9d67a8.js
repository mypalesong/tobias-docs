"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[6640],{3894:(n,e,d)=>{d.r(e),d.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>o,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"pandas/basics","title":"1. \uae30\ubcf8 \uac1c\ub150","description":"Pandas\ub294 Python\uc5d0\uc11c \ub370\uc774\ud130 \ubd84\uc11d\uc744 \uc704\ud55c \uac00\uc7a5 \uac15\ub825\ud558\uace0 \ub110\ub9ac \uc0ac\uc6a9\ub418\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 Pandas\uc758 \ud575\uc2ec \uac1c\ub150\uacfc \uae30\ubcf8\uc801\uc778 \uc0ac\uc6a9\ubc95\uc744 \ub2e4\ub8f9\ub2c8\ub2e4.","source":"@site/docs/pandas/basics.md","sourceDirName":"pandas","slug":"/pandas/basics","permalink":"/docs/pandas/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pandas/basics.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"pandasSidebar","next":{"title":"2. \ub370\uc774\ud130 \ub85c\ub529","permalink":"/docs/pandas/data-loading"}}');var s=d(4848),t=d(8453);const i={sidebar_position:1},a="1. \uae30\ubcf8 \uac1c\ub150",l={},c=[{value:"1.1 Pandas \uc2dc\uc791\ud558\uae30",id:"11-pandas-\uc2dc\uc791\ud558\uae30",level:2},{value:"1.2 Series - 1\ucc28\uc6d0 \ub370\uc774\ud130 \uad6c\uc870",id:"12-series---1\ucc28\uc6d0-\ub370\uc774\ud130-\uad6c\uc870",level:2},{value:"Series \uc0dd\uc131",id:"series-\uc0dd\uc131",level:3},{value:"Series \uc870\uc791",id:"series-\uc870\uc791",level:3},{value:"1.3 DataFrame - 2\ucc28\uc6d0 \ub370\uc774\ud130 \uad6c\uc870",id:"13-dataframe---2\ucc28\uc6d0-\ub370\uc774\ud130-\uad6c\uc870",level:2},{value:"\ub515\uc154\ub108\ub9ac\ub85c DataFrame \uc0dd\uc131",id:"\ub515\uc154\ub108\ub9ac\ub85c-dataframe-\uc0dd\uc131",level:3},{value:"\ub9ac\uc2a4\ud2b8\ub85c DataFrame \uc0dd\uc131",id:"\ub9ac\uc2a4\ud2b8\ub85c-dataframe-\uc0dd\uc131",level:3},{value:"CSV \ud30c\uc77c\ub85c DataFrame \uc0dd\uc131",id:"csv-\ud30c\uc77c\ub85c-dataframe-\uc0dd\uc131",level:3},{value:"1.4 \ub370\uc774\ud130 \ud0d0\uc0c9",id:"14-\ub370\uc774\ud130-\ud0d0\uc0c9",level:2},{value:"1.5 \uc778\ub371\uc2f1\uacfc \uc2ac\ub77c\uc774\uc2f1",id:"15-\uc778\ub371\uc2f1\uacfc-\uc2ac\ub77c\uc774\uc2f1",level:2},{value:"\uceec\ub7fc \uc120\ud0dd",id:"\uceec\ub7fc-\uc120\ud0dd",level:3},{value:"loc - \ub77c\ubca8 \uae30\ubc18 \uc778\ub371\uc2f1",id:"loc---\ub77c\ubca8-\uae30\ubc18-\uc778\ub371\uc2f1",level:3},{value:"iloc - \uc704\uce58 \uae30\ubc18 \uc778\ub371\uc2f1",id:"iloc---\uc704\uce58-\uae30\ubc18-\uc778\ub371\uc2f1",level:3},{value:"1.6 \ub370\uc774\ud130 \uc120\ud0dd \ubc0f \ud544\ud130\ub9c1",id:"16-\ub370\uc774\ud130-\uc120\ud0dd-\ubc0f-\ud544\ud130\ub9c1",level:2},{value:"1.7 \uceec\ub7fc \ucd94\uac00, \uc0ad\uc81c, \uc218\uc815",id:"17-\uceec\ub7fc-\ucd94\uac00-\uc0ad\uc81c-\uc218\uc815",level:2},{value:"\uceec\ub7fc \ucd94\uac00",id:"\uceec\ub7fc-\ucd94\uac00",level:3},{value:"\uceec\ub7fc \uc218\uc815",id:"\uceec\ub7fc-\uc218\uc815",level:3},{value:"\uceec\ub7fc \uc0ad\uc81c",id:"\uceec\ub7fc-\uc0ad\uc81c",level:3},{value:"\uceec\ub7fc\uba85 \ubcc0\uacbd",id:"\uceec\ub7fc\uba85-\ubcc0\uacbd",level:3},{value:"1.8 \uae30\ubcf8 \ud1b5\uacc4 \ud568\uc218",id:"18-\uae30\ubcf8-\ud1b5\uacc4-\ud568\uc218",level:2},{value:"1.9 \ub370\uc774\ud130 \ud0c0\uc785",id:"19-\ub370\uc774\ud130-\ud0c0\uc785",level:2},{value:"\ub370\uc774\ud130 \ud0c0\uc785 \ud655\uc778",id:"\ub370\uc774\ud130-\ud0c0\uc785-\ud655\uc778",level:3},{value:"\uc8fc\uc694 \ub370\uc774\ud130 \ud0c0\uc785",id:"\uc8fc\uc694-\ub370\uc774\ud130-\ud0c0\uc785",level:3},{value:"\ub370\uc774\ud130 \ud0c0\uc785 \ubcc0\ud658",id:"\ub370\uc774\ud130-\ud0c0\uc785-\ubcc0\ud658",level:3},{value:"\ub0a0\uc9dc/\uc2dc\uac04 \ub2e4\ub8e8\uae30",id:"\ub0a0\uc9dc\uc2dc\uac04-\ub2e4\ub8e8\uae30",level:3},{value:"\uacb0\uce21\uac12 \ucc98\ub9ac\uc640 \ud0c0\uc785",id:"\uacb0\uce21\uac12-\ucc98\ub9ac\uc640-\ud0c0\uc785",level:3},{value:"1.10 \uc2e4\uc2b5 \uc608\uc81c",id:"110-\uc2e4\uc2b5-\uc608\uc81c",level:2},{value:"\uc5f0\uc2b5 \ubb38\uc81c",id:"\uc5f0\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c 1: \ub370\uc774\ud130 \uc0dd\uc131 \ubc0f \uae30\ubcf8 \uc870\uc791",id:"\ubb38\uc81c-1-\ub370\uc774\ud130-\uc0dd\uc131-\ubc0f-\uae30\ubcf8-\uc870\uc791",level:3},{value:"\ubb38\uc81c 2: \ub370\uc774\ud130 \ud544\ud130\ub9c1 \ubc0f \ud1b5\uacc4",id:"\ubb38\uc81c-2-\ub370\uc774\ud130-\ud544\ud130\ub9c1-\ubc0f-\ud1b5\uacc4",level:3},{value:"\ubb38\uc81c 3: \ub370\uc774\ud130 \ud0c0\uc785 \ubc0f \ubcc0\ud658",id:"\ubb38\uc81c-3-\ub370\uc774\ud130-\ud0c0\uc785-\ubc0f-\ubcc0\ud658",level:3},{value:"\ub2e4\uc74c \ub2e8\uacc4",id:"\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function p(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components},{Details:d}=e;return d||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"1-\uae30\ubcf8-\uac1c\ub150",children:"1. \uae30\ubcf8 \uac1c\ub150"})}),"\n",(0,s.jsx)(e.p,{children:"Pandas\ub294 Python\uc5d0\uc11c \ub370\uc774\ud130 \ubd84\uc11d\uc744 \uc704\ud55c \uac00\uc7a5 \uac15\ub825\ud558\uace0 \ub110\ub9ac \uc0ac\uc6a9\ub418\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 Pandas\uc758 \ud575\uc2ec \uac1c\ub150\uacfc \uae30\ubcf8\uc801\uc778 \uc0ac\uc6a9\ubc95\uc744 \ub2e4\ub8f9\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h2,{id:"11-pandas-\uc2dc\uc791\ud558\uae30",children:"1.1 Pandas \uc2dc\uc791\ud558\uae30"}),"\n",(0,s.jsx)(e.p,{children:"\uba3c\uc800 Pandas\ub97c \uc124\uce58\ud558\uace0 \uc784\ud3ec\ud2b8\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\uc2dc\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Pandas \uc124\uce58\npip install pandas\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import pandas as pd\nimport numpy as np\n\n# \ubc84\uc804 \ud655\uc778\nprint(f"Pandas \ubc84\uc804: {pd.__version__}")\n'})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"pd"}),"\ub294 Pandas\uc758 \ud45c\uc900 \ubcc4\uce6d\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 Pandas \ucf54\ub4dc\uc5d0\uc11c \uc774 \ubcc4\uce6d\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c, \uc774 \uad00\ub840\ub97c \ub530\ub974\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"12-series---1\ucc28\uc6d0-\ub370\uc774\ud130-\uad6c\uc870",children:"1.2 Series - 1\ucc28\uc6d0 \ub370\uc774\ud130 \uad6c\uc870"}),"\n",(0,s.jsx)(e.p,{children:"Series\ub294 Pandas\uc758 \uae30\ubcf8 \ub370\uc774\ud130 \uad6c\uc870 \uc911 \ud558\ub098\ub85c, \uc778\ub371\uc2a4\uac00 \uc788\ub294 1\ucc28\uc6d0 \ubc30\uc5f4\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"series-\uc0dd\uc131",children:"Series \uc0dd\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ub9ac\uc2a4\ud2b8\ub85c Series \uc0dd\uc131\ns1 = pd.Series([10, 20, 30, 40, 50])\nprint(s1)\n# \ucd9c\ub825:\n# 0    10\n# 1    20\n# 2    30\n# 3    40\n# 4    50\n# dtype: int64\n\n# \uc778\ub371\uc2a4\ub97c \uc9c0\uc815\ud558\uc5ec Series \uc0dd\uc131\ns2 = pd.Series([10, 20, 30, 40, 50],\n               index=['a', 'b', 'c', 'd', 'e'])\nprint(s2)\n# \ucd9c\ub825:\n# a    10\n# b    20\n# c    30\n# d    40\n# e    50\n# dtype: int64\n\n# \ub515\uc154\ub108\ub9ac\ub85c Series \uc0dd\uc131\ndata_dict = {'\uc11c\uc6b8': 9720846, '\ubd80\uc0b0': 3404423, '\uc778\ucc9c': 2947217, '\ub300\uad6c': 2427954}\ns3 = pd.Series(data_dict)\nprint(s3)\n# \ucd9c\ub825:\n# \uc11c\uc6b8    9720846\n# \ubd80\uc0b0    3404423\n# \uc778\ucc9c    2947217\n# \ub300\uad6c    2427954\n# dtype: int64\n\n# NumPy \ubc30\uc5f4\ub85c Series \uc0dd\uc131\ns4 = pd.Series(np.random.randn(5))\nprint(s4)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"series-\uc870\uc791",children:"Series \uc870\uc791"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# Series \uac12\uacfc \uc778\ub371\uc2a4 \uc811\uadfc\nprint(s2.values)  # array([10, 20, 30, 40, 50])\nprint(s2.index)   # Index(['a', 'b', 'c', 'd', 'e'], dtype='object')\n\n# \uc778\ub371\uc2a4\ub85c \uac12 \uc120\ud0dd\nprint(s2['a'])    # 10\nprint(s2[['a', 'c', 'e']])  # \uc5ec\ub7ec \uac12 \uc120\ud0dd\n\n# \uc704\uce58 \uae30\ubc18 \uc120\ud0dd\nprint(s2[0])      # 10\nprint(s2[1:4])    # b, c, d \uc120\ud0dd\n\n# \uc870\uac74\ubd80 \uc120\ud0dd\nprint(s2[s2 > 25])  # 25\ubcf4\ub2e4 \ud070 \uac12\ub9cc \uc120\ud0dd\n\n# Series \uc5f0\uc0b0\nprint(s2 + 10)    # \ubaa8\ub4e0 \uac12\uc5d0 10 \ub354\ud558\uae30\nprint(s2 * 2)     # \ubaa8\ub4e0 \uac12\uc5d0 2 \uacf1\ud558\uae30\nprint(s2 ** 2)    # \ubaa8\ub4e0 \uac12 \uc81c\uacf1\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"Series\ub294 NumPy \ubc30\uc5f4\uacfc \ube44\uc2b7\ud558\uc9c0\ub9cc, \uc778\ub371\uc2a4\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4 \ub354 \uac15\ub825\ud569\ub2c8\ub2e4. \uc778\ub371\uc2a4\ub294 \uc22b\uc790\ubfd0\ub9cc \uc544\ub2c8\ub77c \ubb38\uc790\uc5f4, \ub0a0\uc9dc \ub4f1 \ub2e4\uc591\ud55c \ud0c0\uc785\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."})}),"\n",(0,s.jsx)(e.h2,{id:"13-dataframe---2\ucc28\uc6d0-\ub370\uc774\ud130-\uad6c\uc870",children:"1.3 DataFrame - 2\ucc28\uc6d0 \ub370\uc774\ud130 \uad6c\uc870"}),"\n",(0,s.jsx)(e.p,{children:"DataFrame\uc740 \ud589\uacfc \uc5f4\ub85c \uad6c\uc131\ub41c 2\ucc28\uc6d0 \ud14c\uc774\ube14 \ud615\ud0dc\uc758 \ub370\uc774\ud130 \uad6c\uc870\uc785\ub2c8\ub2e4. \uc5d1\uc140 \uc2a4\ud504\ub808\ub4dc\uc2dc\ud2b8\ub098 SQL \ud14c\uc774\ube14\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"\ub515\uc154\ub108\ub9ac\ub85c-dataframe-\uc0dd\uc131",children:"\ub515\uc154\ub108\ub9ac\ub85c DataFrame \uc0dd\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ub515\uc154\ub108\ub9ac\ub85c DataFrame \uc0dd\uc131\ndata = {\n    '\uc774\ub984': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4', '\ucd5c\ub3d9\uc6b1'],\n    '\ub098\uc774': [25, 30, 35, 28, 32],\n    '\ub3c4\uc2dc': ['\uc11c\uc6b8', '\ubd80\uc0b0', '\uc778\ucc9c', '\ub300\uad6c', '\uad11\uc8fc'],\n    '\uc810\uc218': [85, 92, 78, 88, 95]\n}\n\ndf = pd.DataFrame(data)\nprint(df)\n# \ucd9c\ub825:\n#     \uc774\ub984  \ub098\uc774  \ub3c4\uc2dc  \uc810\uc218\n# 0  \uae40\ucca0\uc218  25  \uc11c\uc6b8  85\n# 1  \uc774\uc601\ud76c  30  \ubd80\uc0b0  92\n# 2  \ubc15\ubbfc\uc218  35  \uc778\ucc9c  78\n# 3  \uc815\uc218\uc9c4  28  \ub300\uad6c  88\n# 4  \ucd5c\ub3d9\uc6b1  32  \uad11\uc8fc  95\n\n# \uc778\ub371\uc2a4 \uc9c0\uc815\ndf_with_index = pd.DataFrame(data, index=['A', 'B', 'C', 'D', 'E'])\nprint(df_with_index)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ub9ac\uc2a4\ud2b8\ub85c-dataframe-\uc0dd\uc131",children:"\ub9ac\uc2a4\ud2b8\ub85c DataFrame \uc0dd\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# 2\ucc28\uc6d0 \ub9ac\uc2a4\ud2b8\ub85c DataFrame \uc0dd\uc131\ndata_list = [\n    ['\uae40\ucca0\uc218', 25, '\uc11c\uc6b8', 85],\n    ['\uc774\uc601\ud76c', 30, '\ubd80\uc0b0', 92],\n    ['\ubc15\ubbfc\uc218', 35, '\uc778\ucc9c', 78],\n    ['\uc815\uc218\uc9c4', 28, '\ub300\uad6c', 88],\n    ['\ucd5c\ub3d9\uc6b1', 32, '\uad11\uc8fc', 95]\n]\n\ndf2 = pd.DataFrame(data_list, columns=['\uc774\ub984', '\ub098\uc774', '\ub3c4\uc2dc', '\uc810\uc218'])\nprint(df2)\n\n# \ub515\uc154\ub108\ub9ac \ub9ac\uc2a4\ud2b8\ub85c DataFrame \uc0dd\uc131\ndata_dict_list = [\n    {'\uc774\ub984': '\uae40\ucca0\uc218', '\ub098\uc774': 25, '\ub3c4\uc2dc': '\uc11c\uc6b8', '\uc810\uc218': 85},\n    {'\uc774\ub984': '\uc774\uc601\ud76c', '\ub098\uc774': 30, '\ub3c4\uc2dc': '\ubd80\uc0b0', '\uc810\uc218': 92},\n    {'\uc774\ub984': '\ubc15\ubbfc\uc218', '\ub098\uc774': 35, '\ub3c4\uc2dc': '\uc778\ucc9c', '\uc810\uc218': 78}\n]\n\ndf3 = pd.DataFrame(data_dict_list)\nprint(df3)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"csv-\ud30c\uc77c\ub85c-dataframe-\uc0dd\uc131",children:"CSV \ud30c\uc77c\ub85c DataFrame \uc0dd\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# CSV \ud30c\uc77c\uc5d0\uc11c DataFrame \uc0dd\uc131\ndf_csv = pd.read_csv('data.csv')\n\n# CSV \ud30c\uc77c\ub85c \uc800\uc7a5\ndf.to_csv('output.csv', index=False, encoding='utf-8-sig')\n\n# \uc5d1\uc140 \ud30c\uc77c\uc5d0\uc11c \uc77d\uae30 (openpyxl \ud544\uc694)\n# df_excel = pd.read_excel('data.xlsx', sheet_name='Sheet1')\n\n# \uc5d1\uc140 \ud30c\uc77c\ub85c \uc800\uc7a5\n# df.to_excel('output.xlsx', index=False, sheet_name='\ub370\uc774\ud130')\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:["CSV \ud30c\uc77c\uc744 \uc800\uc7a5\ud560 \ub54c ",(0,s.jsx)(e.code,{children:"encoding='utf-8-sig'"}),"\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5d1\uc140\uc5d0\uc11c \ud55c\uae00\uc774 \uae68\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. ",(0,s.jsx)(e.code,{children:"index=False"}),"\ub294 \uc778\ub371\uc2a4\ub97c \ud30c\uc77c\uc5d0 \ud3ec\ud568\ud558\uc9c0 \uc54a\ub294 \uc635\uc158\uc785\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"14-\ub370\uc774\ud130-\ud0d0\uc0c9",children:"1.4 \ub370\uc774\ud130 \ud0d0\uc0c9"}),"\n",(0,s.jsx)(e.p,{children:"DataFrame\uc758 \uad6c\uc870\uc640 \ub0b4\uc6a9\uc744 \ube60\ub974\uac8c \ud30c\uc545\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\uc2dc\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \ub370\uc774\ud130 \uc0dd\uc131\ndf = pd.DataFrame({\n    '\uc774\ub984': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4', '\ucd5c\ub3d9\uc6b1', '\uac15\uc9c0\ud6c8', '\uc724\uc11c\uc5f0'],\n    '\ub098\uc774': [25, 30, 35, 28, 32, 27, 29],\n    '\ub3c4\uc2dc': ['\uc11c\uc6b8', '\ubd80\uc0b0', '\uc778\ucc9c', '\ub300\uad6c', '\uad11\uc8fc', '\uc11c\uc6b8', '\ubd80\uc0b0'],\n    '\uc810\uc218': [85, 92, 78, 88, 95, 82, 90],\n    '\ud569\uaca9': [True, True, False, True, True, True, True]\n})\n\n# \ucc98\uc74c 5\ud589 \ubcf4\uae30\nprint(df.head())\n\n# \ucc98\uc74c 3\ud589 \ubcf4\uae30\nprint(df.head(3))\n\n# \ub9c8\uc9c0\ub9c9 5\ud589 \ubcf4\uae30\nprint(df.tail())\n\n# \ub9c8\uc9c0\ub9c9 2\ud589 \ubcf4\uae30\nprint(df.tail(2))\n\n# DataFrame \uc815\ubcf4 \ubcf4\uae30\nprint(df.info())\n# \ucd9c\ub825:\n# <class 'pandas.core.frame.DataFrame'>\n# RangeIndex: 7 entries, 0 to 6\n# Data columns (total 5 columns):\n#  #   Column  Non-Null Count  Dtype\n# ---  ------  --------------  -----\n#  0   \uc774\ub984      7 non-null      object\n#  1   \ub098\uc774      7 non-null      int64\n#  2   \ub3c4\uc2dc      7 non-null      object\n#  3   \uc810\uc218      7 non-null      int64\n#  4   \ud569\uaca9      7 non-null      bool\n# dtypes: bool(1), int64(2), object(2)\n# memory usage: 351.0+ bytes\n\n# \uae30\ubcf8 \ud1b5\uacc4 \uc815\ubcf4 \ubcf4\uae30\nprint(df.describe())\n# \ucd9c\ub825:\n#              \ub098\uc774         \uc810\uc218\n# count   7.000000   7.000000\n# mean   29.428571  87.142857\n# std     3.359034   5.903757\n# min    25.000000  78.000000\n# 25%    27.500000  83.500000\n# 50%    29.000000  88.000000\n# 75%    31.000000  91.000000\n# max    35.000000  95.000000\n\n# \ubaa8\ub4e0 \uceec\ub7fc \ud3ec\ud568 \ud1b5\uacc4 (object \ud0c0\uc785 \ud3ec\ud568)\nprint(df.describe(include='all'))\n\n# DataFrame \ud06c\uae30 \ud655\uc778\nprint(df.shape)  # (7, 5) - 7\ud589 5\uc5f4\n\n# \ud589 \uc218 \ud655\uc778\nprint(len(df))   # 7\n\n# \uceec\ub7fc\uba85 \ud655\uc778\nprint(df.columns)  # Index(['\uc774\ub984', '\ub098\uc774', '\ub3c4\uc2dc', '\uc810\uc218', '\ud569\uaca9'], dtype='object')\n\n# \uc778\ub371\uc2a4 \ud655\uc778\nprint(df.index)    # RangeIndex(start=0, stop=7, step=1)\n\n# \uace0\uc720\uac12 \uac1c\uc218 \ud655\uc778\nprint(df['\ub3c4\uc2dc'].nunique())  # 5\nprint(df['\ub3c4\uc2dc'].unique())   # array(['\uc11c\uc6b8', '\ubd80\uc0b0', '\uc778\ucc9c', '\ub300\uad6c', '\uad11\uc8fc'], dtype=object)\n\n# \uac12 \uac1c\uc218 \uc138\uae30\nprint(df['\ub3c4\uc2dc'].value_counts())\n# \ucd9c\ub825:\n# \uc11c\uc6b8    2\n# \ubd80\uc0b0    2\n# \uc778\ucc9c    1\n# \ub300\uad6c    1\n# \uad11\uc8fc    1\n# Name: \ub3c4\uc2dc, dtype: int64\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"info()"}),"\ub294 \ub370\uc774\ud130 \ud0c0\uc785\uacfc \uacb0\uce21\uac12\uc744 \ud655\uc778\ud558\ub294 \ub370 \uc720\uc6a9\ud558\uace0, ",(0,s.jsx)(e.code,{children:"describe()"}),"\ub294 \uc218\uce58\ud615 \ub370\uc774\ud130\uc758 \ubd84\ud3ec\ub97c \ube60\ub974\uac8c \ud30c\uc545\ud558\ub294 \ub370 \uc88b\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"15-\uc778\ub371\uc2f1\uacfc-\uc2ac\ub77c\uc774\uc2f1",children:"1.5 \uc778\ub371\uc2f1\uacfc \uc2ac\ub77c\uc774\uc2f1"}),"\n",(0,s.jsxs)(e.p,{children:["DataFrame\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc120\ud0dd\ud558\ub294 \ubc29\ubc95\uc740 \ud06c\uac8c ",(0,s.jsx)(e.code,{children:"loc"}),"(\ub77c\ubca8 \uae30\ubc18)\uacfc ",(0,s.jsx)(e.code,{children:"iloc"}),"(\uc704\uce58 \uae30\ubc18)\uac00 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(e.h3,{id:"\uceec\ub7fc-\uc120\ud0dd",children:"\uceec\ub7fc \uc120\ud0dd"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ub2e8\uc77c \uceec\ub7fc \uc120\ud0dd (Series \ubc18\ud658)\nprint(df['\uc774\ub984'])\nprint(df.\uc774\ub984)  # \uc810(.) \ud45c\uae30\ubc95 (\uceec\ub7fc\uba85\uc5d0 \uacf5\ubc31\uc774 \uc5c6\uc744 \ub54c\ub9cc \uc0ac\uc6a9 \uac00\ub2a5)\n\n# \uc5ec\ub7ec \uceec\ub7fc \uc120\ud0dd (DataFrame \ubc18\ud658)\nprint(df[['\uc774\ub984', '\uc810\uc218']])\n\n# \uccab \ubc88\uc9f8 \uceec\ub7fc \uc120\ud0dd\nprint(df.iloc[:, 0])\n"})}),"\n",(0,s.jsx)(e.h3,{id:"loc---\ub77c\ubca8-\uae30\ubc18-\uc778\ub371\uc2f1",children:"loc - \ub77c\ubca8 \uae30\ubc18 \uc778\ub371\uc2f1"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc778\ub371\uc2a4 \ub77c\ubca8\ub85c \ud589 \uc120\ud0dd\nprint(df.loc[0])        # 0\ubc88 \ud589 \uc120\ud0dd (Series \ubc18\ud658)\nprint(df.loc[[0, 2, 4]])  # \uc5ec\ub7ec \ud589 \uc120\ud0dd (DataFrame \ubc18\ud658)\n\n# \ud589\uacfc \uc5f4 \ub3d9\uc2dc \uc120\ud0dd\nprint(df.loc[0, '\uc774\ub984'])           # 0\ubc88 \ud589\uc758 '\uc774\ub984' \uac12\nprint(df.loc[0:2, '\uc774\ub984':'\uc810\uc218'])  # 0~2\ubc88 \ud589, '\uc774\ub984'~'\uc810\uc218' \uceec\ub7fc (\ub05d \ud3ec\ud568!)\nprint(df.loc[:, ['\uc774\ub984', '\uc810\uc218']])  # \ubaa8\ub4e0 \ud589, \ud2b9\uc815 \uceec\ub7fc\ub4e4\n\n# \uc870\uac74\uc73c\ub85c \ud589 \uc120\ud0dd\nprint(df.loc[df['\ub098\uc774'] > 30])\nprint(df.loc[df['\ub3c4\uc2dc'] == '\uc11c\uc6b8'])\nprint(df.loc[(df['\ub098\uc774'] > 28) & (df['\uc810\uc218'] >= 85)])\n"})}),"\n",(0,s.jsx)(e.h3,{id:"iloc---\uc704\uce58-\uae30\ubc18-\uc778\ub371\uc2f1",children:"iloc - \uc704\uce58 \uae30\ubc18 \uc778\ub371\uc2f1"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc704\uce58(\uc815\uc218)\ub85c \ud589 \uc120\ud0dd\nprint(df.iloc[0])       # \uccab \ubc88\uc9f8 \ud589\nprint(df.iloc[-1])      # \ub9c8\uc9c0\ub9c9 \ud589\nprint(df.iloc[0:3])     # 0~2\ubc88 \ud589 (\ub05d \uc81c\uc678!)\n\n# \ud589\uacfc \uc5f4 \ub3d9\uc2dc \uc120\ud0dd\nprint(df.iloc[0, 1])           # \uccab \ubc88\uc9f8 \ud589, \ub450 \ubc88\uc9f8 \uceec\ub7fc\nprint(df.iloc[0:3, 0:2])       # 0~2\ubc88 \ud589, 0~1\ubc88 \uceec\ub7fc\nprint(df.iloc[:, [0, 3]])      # \ubaa8\ub4e0 \ud589, \uccab \ubc88\uc9f8\uc640 \ub124 \ubc88\uc9f8 \uceec\ub7fc\nprint(df.iloc[1:5, 1:4])       # 1~4\ubc88 \ud589, 1~3\ubc88 \uceec\ub7fc\n\n# \ub9ac\uc2a4\ud2b8\ub85c \uc120\ud0dd\nprint(df.iloc[[0, 2, 4], [0, 3]])  # \ud2b9\uc815 \ud589\uacfc \uc5f4\ub9cc \uc120\ud0dd\n"})}),"\n",(0,s.jsxs)(e.admonition,{type:"tip",children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"loc vs iloc \ucc28\uc774\uc810:"})}),(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"loc"}),": \ub77c\ubca8(\uc774\ub984) \uae30\ubc18, \uc2ac\ub77c\uc774\uc2f1 \uc2dc ",(0,s.jsx)(e.strong,{children:"\ub05d \ud3ec\ud568"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"iloc"}),": \uc704\uce58(\uc815\uc218) \uae30\ubc18, \uc2ac\ub77c\uc774\uc2f1 \uc2dc ",(0,s.jsx)(e.strong,{children:"\ub05d \uc81c\uc678"})]}),"\n"]}),(0,s.jsxs)(e.p,{children:["\uc77c\ubc18\uc801\uc73c\ub85c \uc870\uac74 \ud544\ud130\ub9c1\uc740 ",(0,s.jsx)(e.code,{children:"loc"}),", \uc21c\uc218 \uc704\uce58 \uae30\ubc18 \uc120\ud0dd\uc740 ",(0,s.jsx)(e.code,{children:"iloc"}),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."]})]}),"\n",(0,s.jsx)(e.h2,{id:"16-\ub370\uc774\ud130-\uc120\ud0dd-\ubc0f-\ud544\ud130\ub9c1",children:"1.6 \ub370\uc774\ud130 \uc120\ud0dd \ubc0f \ud544\ud130\ub9c1"}),"\n",(0,s.jsx)(e.p,{children:"\ub2e4\uc591\ud55c \uc870\uac74\uc73c\ub85c \ub370\uc774\ud130\ub97c \ud544\ud130\ub9c1\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\uc2dc\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ub2e8\uc77c \uc870\uac74 \ud544\ud130\ub9c1\nhigh_scorers = df[df['\uc810\uc218'] > 85]\nprint(high_scorers)\n\nseoul_people = df[df['\ub3c4\uc2dc'] == '\uc11c\uc6b8']\nprint(seoul_people)\n\n# \uc5ec\ub7ec \uc870\uac74 \ud544\ud130\ub9c1 (AND: &)\nresult = df[(df['\ub098\uc774'] > 28) & (df['\uc810\uc218'] >= 85)]\nprint(result)\n\n# \uc5ec\ub7ec \uc870\uac74 \ud544\ud130\ub9c1 (OR: |)\nresult = df[(df['\ub3c4\uc2dc'] == '\uc11c\uc6b8') | (df['\ub3c4\uc2dc'] == '\ubd80\uc0b0')]\nprint(result)\n\n# NOT \uc870\uac74 (~)\nnot_seoul = df[~(df['\ub3c4\uc2dc'] == '\uc11c\uc6b8')]\nprint(not_seoul)\n\n# isin() \uba54\uc11c\ub4dc \uc0ac\uc6a9\ncities = ['\uc11c\uc6b8', '\ubd80\uc0b0', '\uc778\ucc9c']\nresult = df[df['\ub3c4\uc2dc'].isin(cities)]\nprint(result)\n\n# \ubb38\uc790\uc5f4 \uba54\uc11c\ub4dc \uc0ac\uc6a9\n# \uc774\ub984\uc5d0 '\uae40'\uc774 \ud3ec\ud568\ub41c \uc0ac\ub78c\nkim_people = df[df['\uc774\ub984'].str.contains('\uae40')]\nprint(kim_people)\n\n# \uc774\ub984\uc774 '\uc774'\ub85c \uc2dc\uc791\ud558\ub294 \uc0ac\ub78c\nlee_people = df[df['\uc774\ub984'].str.startswith('\uc774')]\nprint(lee_people)\n\n# \ubc94\uc704 \uc870\uac74\nage_range = df[df['\ub098\uc774'].between(27, 30)]\nprint(age_range)\n\n# query() \uba54\uc11c\ub4dc (SQL \uc2a4\ud0c0\uc77c)\nresult = df.query('\ub098\uc774 > 28 and \uc810\uc218 >= 85')\nprint(result)\n\nresult = df.query('\ub3c4\uc2dc in [\"\uc11c\uc6b8\", \"\ubd80\uc0b0\"]')\nprint(result)\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:["\ubcf5\uc7a1\ud55c \uc870\uac74\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac01 \uc870\uac74\uc744 \uad04\ud638 ",(0,s.jsx)(e.code,{children:"()"}),"\ub85c \ubb36\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uc5f0\uc0b0\uc790 \uc6b0\uc120\uc21c\uc704 \ub54c\ubb38\uc5d0 \uc608\uc0c1\uacfc \ub2e4\ub978 \uacb0\uacfc\uac00 \ub098\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"17-\uceec\ub7fc-\ucd94\uac00-\uc0ad\uc81c-\uc218\uc815",children:"1.7 \uceec\ub7fc \ucd94\uac00, \uc0ad\uc81c, \uc218\uc815"}),"\n",(0,s.jsx)(e.p,{children:"DataFrame\uc758 \uad6c\uc870\ub97c \ubcc0\uacbd\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\uc2dc\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"\uceec\ub7fc-\ucd94\uac00",children:"\uceec\ub7fc \ucd94\uac00"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc0c8\ub85c\uc6b4 \uceec\ub7fc \ucd94\uac00 (\uace0\uc815\uac12)\ndf['\uad6d\uc801'] = '\ud55c\uad6d'\nprint(df)\n\n# \uacc4\uc0b0\ub41c \uac12\uc73c\ub85c \uceec\ub7fc \ucd94\uac00\ndf['\uc810\uc218_100\uc810'] = df['\uc810\uc218']  # \ubcf5\uc0ac\ndf['\uc810\uc218_200\uc810'] = df['\uc810\uc218'] * 2  # \uacc4\uc0b0\n\n# \uc870\uac74\ubd80 \uceec\ub7fc \ucd94\uac00\ndf['\ub4f1\uae09'] = df['\uc810\uc218'].apply(lambda x: 'A' if x >= 90 else ('B' if x >= 80 else 'C'))\nprint(df)\n\n# numpy.where() \uc0ac\uc6a9\ndf['\uc131\uc778'] = np.where(df['\ub098\uc774'] >= 30, '\uc131\uc778', '\uccad\ub144')\nprint(df)\n\n# \uc5ec\ub7ec \uc870\uac74 (np.select \uc0ac\uc6a9)\nconditions = [\n    df['\uc810\uc218'] >= 90,\n    df['\uc810\uc218'] >= 80,\n    df['\uc810\uc218'] >= 70\n]\nchoices = ['A', 'B', 'C']\ndf['\ud559\uc810'] = np.select(conditions, choices, default='D')\nprint(df)\n\n# insert() \uba54\uc11c\ub4dc\ub85c \ud2b9\uc815 \uc704\uce58\uc5d0 \ucd94\uac00\ndf.insert(2, '\uc131\ubcc4', ['\ub0a8', '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8', '\ub0a8', '\uc5ec'])\nprint(df)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uceec\ub7fc-\uc218\uc815",children:"\uceec\ub7fc \uc218\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uae30\uc874 \uceec\ub7fc \uac12 \uc218\uc815\ndf['\uc810\uc218'] = df['\uc810\uc218'] + 5  # \ubaa8\ub4e0 \uc810\uc218\uc5d0 5\uc810 \ucd94\uac00\n\n# \uc870\uac74\ubd80 \uc218\uc815\ndf.loc[df['\ub098\uc774'] > 30, '\uc810\uc218'] = df['\uc810\uc218'] + 10\n\n# apply() \ud568\uc218\ub85c \uc218\uc815\ndf['\uc774\ub984'] = df['\uc774\ub984'].apply(lambda x: x + '\ub2d8')\n\n# map() \ud568\uc218\ub85c \uc218\uc815 (\ub515\uc154\ub108\ub9ac \ub9e4\ud551)\ncity_code = {'\uc11c\uc6b8': 'SEL', '\ubd80\uc0b0': 'PUS', '\uc778\ucc9c': 'ICN', '\ub300\uad6c': 'DAE', '\uad11\uc8fc': 'GWJ'}\ndf['\ub3c4\uc2dc\ucf54\ub4dc'] = df['\ub3c4\uc2dc'].map(city_code)\n\n# replace() \uba54\uc11c\ub4dc\ndf['\ub3c4\uc2dc'] = df['\ub3c4\uc2dc'].replace({'\uc11c\uc6b8': 'Seoul', '\ubd80\uc0b0': 'Busan'})\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uceec\ub7fc-\uc0ad\uc81c",children:"\uceec\ub7fc \uc0ad\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# drop() \uba54\uc11c\ub4dc (\uc6d0\ubcf8 \uc720\uc9c0)\ndf_dropped = df.drop('\uad6d\uc801', axis=1)\ndf_dropped = df.drop(['\uad6d\uc801', '\uc131\ubcc4'], axis=1)\n\n# drop() \uba54\uc11c\ub4dc (\uc6d0\ubcf8 \uc218\uc815)\ndf.drop('\uad6d\uc801', axis=1, inplace=True)\n\n# del \ud0a4\uc6cc\ub4dc (\uc6d0\ubcf8 \uc218\uc815)\ndel df['\uc131\ubcc4']\n\n# pop() \uba54\uc11c\ub4dc (\uceec\ub7fc \uc81c\uac70 \ud6c4 \ubc18\ud658)\nremoved_column = df.pop('\ub3c4\uc2dc\ucf54\ub4dc')\nprint(removed_column)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uceec\ub7fc\uba85-\ubcc0\uacbd",children:"\uceec\ub7fc\uba85 \ubcc0\uacbd"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# rename() \uba54\uc11c\ub4dc\ndf = df.rename(columns={'\uc774\ub984': 'name', '\ub098\uc774': 'age'})\n\n# \uc5ec\ub7ec \uceec\ub7fc \ud55c \ubc88\uc5d0 \ubcc0\uacbd\ndf = df.rename(columns={\n    'name': '\uc774\ub984',\n    'age': '\ub098\uc774',\n    '\ub3c4\uc2dc': '\uac70\uc8fc\uc9c0'\n})\n\n# \ubaa8\ub4e0 \uceec\ub7fc\uba85 \ubcc0\uacbd\ndf.columns = ['col1', 'col2', 'col3', 'col4', 'col5']\n\n# \uceec\ub7fc\uba85 \uc18c\ubb38\uc790\ub85c \ubcc0\uacbd\ndf.columns = df.columns.str.lower()\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"inplace=True"})," \uc635\uc158\uc740 \uc6d0\ubcf8 DataFrame\uc744 \uc9c1\uc811 \uc218\uc815\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\uba74 \uc0c8\ub85c\uc6b4 DataFrame\uc744 \ubc18\ud658\ud558\ubbc0\ub85c, \uacb0\uacfc\ub97c \ubcc0\uc218\uc5d0 \ud560\ub2f9\ud574\uc57c \ud569\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"18-\uae30\ubcf8-\ud1b5\uacc4-\ud568\uc218",children:"1.8 \uae30\ubcf8 \ud1b5\uacc4 \ud568\uc218"}),"\n",(0,s.jsx)(e.p,{children:"Pandas\ub294 \ub370\uc774\ud130 \ubd84\uc11d\uc744 \uc704\ud55c \ub2e4\uc591\ud55c \ud1b5\uacc4 \ud568\uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \ub370\uc774\ud130\ndf = pd.DataFrame({\n    '\uc218\ud559': [85, 92, 78, 88, 95, 82, 90],\n    '\uc601\uc5b4': [88, 85, 92, 78, 90, 85, 88],\n    '\uacfc\ud559': [90, 88, 85, 92, 88, 90, 85]\n})\n\n# \uae30\ubcf8 \ud1b5\uacc4\ub7c9\nprint(df.mean())        # \ud3c9\uade0\nprint(df.median())      # \uc911\uc559\uac12\nprint(df.mode())        # \ucd5c\ube48\uac12\nprint(df.std())         # \ud45c\uc900\ud3b8\ucc28\nprint(df.var())         # \ubd84\uc0b0\nprint(df.min())         # \ucd5c\uc19f\uac12\nprint(df.max())         # \ucd5c\ub313\uac12\nprint(df.sum())         # \ud569\uacc4\nprint(df.count())       # \uac1c\uc218 (\uacb0\uce21\uac12 \uc81c\uc678)\n\n# \ud2b9\uc815 \uceec\ub7fc \ud1b5\uacc4\nprint(df['\uc218\ud559'].mean())   # \uc218\ud559 \ud3c9\uade0\nprint(df['\uc601\uc5b4'].sum())    # \uc601\uc5b4 \ud569\uacc4\n\n# \ud589 \ubc29\ud5a5 \ud1b5\uacc4 (axis=1)\ndf['\ucd1d\uc810'] = df.sum(axis=1)\ndf['\ud3c9\uade0'] = df[['\uc218\ud559', '\uc601\uc5b4', '\uacfc\ud559']].mean(axis=1)\nprint(df)\n\n# \uc5f4 \ubc29\ud5a5 \ud1b5\uacc4 (axis=0, \uae30\ubcf8\uac12)\nsubject_avg = df[['\uc218\ud559', '\uc601\uc5b4', '\uacfc\ud559']].mean(axis=0)\nprint(subject_avg)\n\n# \ub204\uc801 \ud1b5\uacc4\nprint(df['\uc218\ud559'].cumsum())   # \ub204\uc801 \ud569\nprint(df['\uc218\ud559'].cumprod())  # \ub204\uc801 \uacf1\nprint(df['\uc218\ud559'].cummax())   # \ub204\uc801 \ucd5c\ub313\uac12\nprint(df['\uc218\ud559'].cummin())   # \ub204\uc801 \ucd5c\uc19f\uac12\n\n# \ubd84\uc704\uc218\nprint(df['\uc218\ud559'].quantile(0.25))  # 1\uc0ac\ubd84\uc704\uc218\nprint(df['\uc218\ud559'].quantile(0.50))  # 2\uc0ac\ubd84\uc704\uc218 (\uc911\uc559\uac12)\nprint(df['\uc218\ud559'].quantile(0.75))  # 3\uc0ac\ubd84\uc704\uc218\nprint(df['\uc218\ud559'].quantile([0.25, 0.50, 0.75]))  # \uc5ec\ub7ec \ubd84\uc704\uc218\n\n# \uc0c1\uad00\uad00\uacc4\nprint(df[['\uc218\ud559', '\uc601\uc5b4', '\uacfc\ud559']].corr())  # \uc0c1\uad00\uacc4\uc218 \ud589\ub82c\nprint(df['\uc218\ud559'].corr(df['\uc601\uc5b4']))  # \uc218\ud559\uacfc \uc601\uc5b4\uc758 \uc0c1\uad00\uacc4\uc218\n\n# \uacf5\ubd84\uc0b0\nprint(df[['\uc218\ud559', '\uc601\uc5b4', '\uacfc\ud559']].cov())\n\n# idxmax, idxmin (\ucd5c\ub313\uac12, \ucd5c\uc19f\uac12\uc758 \uc778\ub371\uc2a4)\nprint(df['\uc218\ud559'].idxmax())  # \uc218\ud559 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \ud559\uc0dd\uc758 \uc778\ub371\uc2a4\nprint(df['\uc218\ud559'].idxmin())  # \uc218\ud559 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \ud559\uc0dd\uc758 \uc778\ub371\uc2a4\n\n# value_counts() - \uac12\uc758 \ube48\ub3c4\ngrades = pd.Series(['A', 'B', 'A', 'C', 'B', 'A', 'B', 'A'])\nprint(grades.value_counts())\nprint(grades.value_counts(normalize=True))  # \ube44\uc728\ub85c \ud45c\uc2dc\n\n# \ubc18\uc62c\ub9bc\nprint(df.round(2))  # \uc18c\uc218\uc810 \ub458\uc9f8 \uc790\ub9ac\uae4c\uc9c0\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"axis=0"}),"\uc740 \uc5f4 \ubc29\ud5a5(\uc138\ub85c, \uac01 \uceec\ub7fc\ubcc4), ",(0,s.jsx)(e.code,{children:"axis=1"}),'\uc740 \ud589 \ubc29\ud5a5(\uac00\ub85c, \uac01 \ud589\ubcc4) \uc5f0\uc0b0\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ud5f7\uac08\ub9b4 \ub54c\ub294 "axis\ub294 \uc81c\uac70\ub418\ub294 \ucd95"\uc774\ub77c\uace0 \uc0dd\uac01\ud558\uba74 \uc27d\uc2b5\ub2c8\ub2e4.']})}),"\n",(0,s.jsx)(e.h2,{id:"19-\ub370\uc774\ud130-\ud0c0\uc785",children:"1.9 \ub370\uc774\ud130 \ud0c0\uc785"}),"\n",(0,s.jsx)(e.p,{children:"DataFrame\uc758 \uac01 \uceec\ub7fc\uc740 \ud2b9\uc815 \ub370\uc774\ud130 \ud0c0\uc785\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"\ub370\uc774\ud130-\ud0c0\uc785-\ud655\uc778",children:"\ub370\uc774\ud130 \ud0c0\uc785 \ud655\uc778"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \ub370\uc774\ud130\ndf = pd.DataFrame({\n    '\uc774\ub984': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218'],\n    '\ub098\uc774': [25, 30, 35],\n    '\uc810\uc218': [85.5, 92.3, 78.9],\n    '\ud569\uaca9': [True, True, False],\n    '\ub4f1\ub85d\uc77c': ['2024-01-01', '2024-01-02', '2024-01-03']\n})\n\n# \ub370\uc774\ud130 \ud0c0\uc785 \ud655\uc778\nprint(df.dtypes)\n# \ucd9c\ub825:\n# \uc774\ub984      object\n# \ub098\uc774       int64\n# \uc810\uc218     float64\n# \ud569\uaca9        bool\n# \ub4f1\ub85d\uc77c    object\n# dtype: object\n\n# \ud2b9\uc815 \uceec\ub7fc\uc758 \ub370\uc774\ud130 \ud0c0\uc785\nprint(df['\ub098\uc774'].dtype)  # int64\n\n# info()\ub85c \uc804\uccb4 \uc815\ubcf4 \ud655\uc778\nprint(df.info())\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc8fc\uc694-\ub370\uc774\ud130-\ud0c0\uc785",children:"\uc8fc\uc694 \ub370\uc774\ud130 \ud0c0\uc785"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Pandas \ud0c0\uc785"}),(0,s.jsx)(e.th,{children:"Python \ud0c0\uc785"}),(0,s.jsx)(e.th,{children:"\uc124\uba85"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"object"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"str"})}),(0,s.jsx)(e.td,{children:"\ubb38\uc790\uc5f4 \ub610\ub294 \ud63c\ud569 \ud0c0\uc785"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"int64"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"int"})}),(0,s.jsx)(e.td,{children:"\uc815\uc218"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"float64"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"float"})}),(0,s.jsx)(e.td,{children:"\uc2e4\uc218"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"bool"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"bool"})}),(0,s.jsx)(e.td,{children:"\ubd88\ub9b0 (True/False)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"datetime64"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"datetime"})}),(0,s.jsx)(e.td,{children:"\ub0a0\uc9dc/\uc2dc\uac04"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"category"})}),(0,s.jsx)(e.td,{children:"-"}),(0,s.jsx)(e.td,{children:"\uce74\ud14c\uace0\ub9ac (\uc81c\ud55c\ub41c \uac12)"})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"\ub370\uc774\ud130-\ud0c0\uc785-\ubcc0\ud658",children:"\ub370\uc774\ud130 \ud0c0\uc785 \ubcc0\ud658"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# astype() \uba54\uc11c\ub4dc\ub85c \ud0c0\uc785 \ubcc0\ud658\ndf['\ub098\uc774_str'] = df['\ub098\uc774'].astype(str)\ndf['\uc810\uc218_int'] = df['\uc810\uc218'].astype(int)\ndf['\ud569\uaca9_str'] = df['\ud569\uaca9'].astype(str)\n\nprint(df.dtypes)\n\n# \uc22b\uc790 -> \ubb38\uc790\uc5f4\ndf['\ub098\uc774'] = df['\ub098\uc774'].astype(str)\n\n# \ubb38\uc790\uc5f4 -> \uc22b\uc790\ndf['\ub098\uc774'] = df['\ub098\uc774'].astype(int)\n\n# \ubb38\uc790\uc5f4 -> \ub0a0\uc9dc\ndf['\ub4f1\ub85d\uc77c'] = pd.to_datetime(df['\ub4f1\ub85d\uc77c'])\nprint(df['\ub4f1\ub85d\uc77c'].dtype)  # datetime64[ns]\n\n# \ub0a0\uc9dc -> \ubb38\uc790\uc5f4\ndf['\ub4f1\ub85d\uc77c_str'] = df['\ub4f1\ub85d\uc77c'].dt.strftime('%Y\ub144 %m\uc6d4 %d\uc77c')\n\n# \uce74\ud14c\uace0\ub9ac \ud0c0\uc785\uc73c\ub85c \ubcc0\ud658 (\uba54\ubaa8\ub9ac \uc808\uc57d)\ndf['\uc774\ub984'] = df['\uc774\ub984'].astype('category')\nprint(df['\uc774\ub984'].dtype)  # category\n\n# \uc5ec\ub7ec \uceec\ub7fc \ud55c \ubc88\uc5d0 \ubcc0\ud658\ndf = df.astype({\n    '\ub098\uc774': int,\n    '\uc810\uc218': float,\n    '\ud569\uaca9': bool\n})\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ub0a0\uc9dc\uc2dc\uac04-\ub2e4\ub8e8\uae30",children:"\ub0a0\uc9dc/\uc2dc\uac04 \ub2e4\ub8e8\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ubb38\uc790\uc5f4\uc744 \ub0a0\uc9dc\ub85c \ubcc0\ud658\ndates = pd.Series(['2024-01-01', '2024-02-15', '2024-03-30'])\ndates = pd.to_datetime(dates)\n\n# \ub0a0\uc9dc \ud3ec\ub9f7 \uc9c0\uc815\ndates = pd.to_datetime(['01/01/2024', '02/15/2024'], format='%m/%d/%Y')\n\n# \ub0a0\uc9dc \ucef4\ud3ec\ub10c\ud2b8 \ucd94\ucd9c\ndf['\ub4f1\ub85d\uc77c'] = pd.to_datetime(df['\ub4f1\ub85d\uc77c'])\ndf['\ub144'] = df['\ub4f1\ub85d\uc77c'].dt.year\ndf['\uc6d4'] = df['\ub4f1\ub85d\uc77c'].dt.month\ndf['\uc77c'] = df['\ub4f1\ub85d\uc77c'].dt.day\ndf['\uc694\uc77c'] = df['\ub4f1\ub85d\uc77c'].dt.day_name()\ndf['\uc8fc\ucc28'] = df['\ub4f1\ub85d\uc77c'].dt.isocalendar().week\n\nprint(df)\n\n# \ub0a0\uc9dc \uc5f0\uc0b0\nfrom datetime import timedelta\ndf['\ub9cc\ub8cc\uc77c'] = df['\ub4f1\ub85d\uc77c'] + timedelta(days=30)\ndf['\uacbd\uacfc\uc77c'] = (pd.Timestamp.now() - df['\ub4f1\ub85d\uc77c']).dt.days\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uacb0\uce21\uac12-\ucc98\ub9ac\uc640-\ud0c0\uc785",children:"\uacb0\uce21\uac12 \ucc98\ub9ac\uc640 \ud0c0\uc785"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc22b\uc790 \ubcc0\ud658 \uc2dc \uc5d0\ub7ec \ucc98\ub9ac\ndata = pd.Series(['100', '200', 'abc', '400'])\n\n# \uc5d0\ub7ec \ubc1c\uc0dd (\uae30\ubcf8\uac12)\n# data.astype(int)  # ValueError\n\n# \uc5d0\ub7ec \ubb34\uc2dc (to_numeric \uc0ac\uc6a9)\ndata_numeric = pd.to_numeric(data, errors='coerce')  # 'abc' -> NaN\nprint(data_numeric)\n\n# errors='ignore' - \ubcc0\ud658 \uc2e4\ud328 \uc2dc \uc6d0\ubcf8 \uc720\uc9c0\ndata_ignore = pd.to_numeric(data, errors='ignore')\nprint(data_ignore)\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"object"})," \ud0c0\uc785\uc740 \uba54\ubaa8\ub9ac\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubc18\ubcf5\ub418\ub294 \ubb38\uc790\uc5f4 \uac12\uc774 \ub9ce\ub2e4\uba74 ",(0,s.jsx)(e.code,{children:"category"})," \ud0c0\uc785\uc73c\ub85c \ubcc0\ud658\ud558\uc5ec \uba54\ubaa8\ub9ac\ub97c \uc808\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 \ud070 \ub370\uc774\ud130\uc14b\uc5d0\uc11c \ud6a8\uacfc\uc801\uc785\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"110-\uc2e4\uc2b5-\uc608\uc81c",children:"1.10 \uc2e4\uc2b5 \uc608\uc81c"}),"\n",(0,s.jsx)(e.p,{children:"\uc2e4\uc81c \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294 \uc885\ud569 \uc608\uc81c\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import pandas as pd\nimport numpy as np\n\n# \uc2e4\uc2b5\uc6a9 \ub370\uc774\ud130 \uc0dd\uc131\nnp.random.seed(42)\n\nstudents = pd.DataFrame({\n    '\ud559\ubc88': range(1001, 1021),\n    '\uc774\ub984': [\n        '\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4', '\ucd5c\ub3d9\uc6b1',\n        '\uac15\uc9c0\ud6c8', '\uc724\uc11c\uc5f0', '\uc7a5\ubbfc\uc7ac', '\ud55c\uc18c\ud76c', '\uc624\uc900\uc11d',\n        '\uc2e0\uc608\ub9b0', '\uc870\uc131\ud6c8', '\ubc30\uc218\uc9c0', '\uc784\uc7ac\ud604', '\ud64d\uc9c0\uc544',\n        '\uc11c\ud604\uc6b0', '\uad8c\ub098\uc5f0', '\ub178\ud0dc\uc591', '\ubb38\uac00\uc740', '\ud669\ubbfc\ud638'\n    ],\n    '\uc131\ubcc4': ['\ub0a8', '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8', '\ub0a8', '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8',\n             '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8', '\uc5ec', '\ub0a8'],\n    '\ud559\ub144': np.random.choice([1, 2, 3, 4], size=20),\n    '\uc804\uacf5': np.random.choice(['\ucef4\ud4e8\ud130\uacf5\ud559', '\uacbd\uc601\ud559', '\uc804\uc790\uacf5\ud559', '\uc218\ud559'], size=20),\n    '\uc911\uac04\uace0\uc0ac': np.random.randint(60, 100, size=20),\n    '\uae30\ub9d0\uace0\uc0ac': np.random.randint(60, 100, size=20),\n    '\ucd9c\uc11d\uc810\uc218': np.random.randint(15, 21, size=20)\n})\n\n# 1. \ub370\uc774\ud130 \ud0d0\uc0c9\nprint(\"=== \ub370\uc774\ud130 \uae30\ubcf8 \uc815\ubcf4 ===\")\nprint(students.head())\nprint(\"\\n\", students.info())\nprint(\"\\n\", students.describe())\n\n# 2. \ucd1d\uc810 \ubc0f \ud3c9\uade0 \uacc4\uc0b0\nstudents['\ucd1d\uc810'] = (students['\uc911\uac04\uace0\uc0ac'] * 0.4 +\n                    students['\uae30\ub9d0\uace0\uc0ac'] * 0.4 +\n                    students['\ucd9c\uc11d\uc810\uc218'] * 0.2)\nstudents['\ud3c9\uade0'] = students['\ucd1d\uc810']\n\n# 3. \ud559\uc810 \ubd80\uc5ec\ndef assign_grade(score):\n    if score >= 90:\n        return 'A'\n    elif score >= 80:\n        return 'B'\n    elif score >= 70:\n        return 'C'\n    elif score >= 60:\n        return 'D'\n    else:\n        return 'F'\n\nstudents['\ud559\uc810'] = students['\ucd1d\uc810'].apply(assign_grade)\n\n# 4. \ub370\uc774\ud130 \ubd84\uc11d\nprint(\"\\n=== \uc804\uacf5\ubcc4 \ud3c9\uade0 \uc810\uc218 ===\")\nmajor_avg = students.groupby('\uc804\uacf5')['\ucd1d\uc810'].mean().sort_values(ascending=False)\nprint(major_avg)\n\nprint(\"\\n=== \ud559\ub144\ubcc4 \ud3c9\uade0 \uc810\uc218 ===\")\nyear_avg = students.groupby('\ud559\ub144')['\ucd1d\uc810'].mean().sort_values()\nprint(year_avg)\n\nprint(\"\\n=== \uc131\ubcc4 \ud3c9\uade0 \uc810\uc218 ===\")\ngender_avg = students.groupby('\uc131\ubcc4')['\ucd1d\uc810'].mean()\nprint(gender_avg)\n\nprint(\"\\n=== \ud559\uc810 \ubd84\ud3ec ===\")\nprint(students['\ud559\uc810'].value_counts().sort_index())\n\n# 5. \uc6b0\uc218 \ud559\uc0dd \uc120\ubc1c (\ucd1d\uc810 \uc0c1\uc704 30%)\ntop_30_percent = students.nlargest(int(len(students) * 0.3), '\ucd1d\uc810')\nprint(\"\\n=== \uc6b0\uc218 \ud559\uc0dd (\uc0c1\uc704 30%) ===\")\nprint(top_30_percent[['\ud559\ubc88', '\uc774\ub984', '\uc804\uacf5', '\ucd1d\uc810', '\ud559\uc810']])\n\n# 6. \uc870\uac74 \ud544\ud130\ub9c1\nprint(\"\\n=== \ucef4\ud4e8\ud130\uacf5\ud559 \uc804\uacf5 A\ud559\uc810 \ud559\uc0dd ===\")\ncs_a_students = students[(students['\uc804\uacf5'] == '\ucef4\ud4e8\ud130\uacf5\ud559') &\n                         (students['\ud559\uc810'] == 'A')]\nprint(cs_a_students[['\ud559\ubc88', '\uc774\ub984', '\ucd1d\uc810', '\ud559\uc810']])\n\n# 7. \ub370\uc774\ud130 \uc800\uc7a5\nstudents.to_csv('students_result.csv', index=False, encoding='utf-8-sig')\nprint(\"\\n\uacb0\uacfc\uac00 'students_result.csv'\uc5d0 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\")\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\uc5f0\uc2b5-\ubb38\uc81c",children:"\uc5f0\uc2b5 \ubb38\uc81c"}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-1-\ub370\uc774\ud130-\uc0dd\uc131-\ubc0f-\uae30\ubcf8-\uc870\uc791",children:"\ubb38\uc81c 1: \ub370\uc774\ud130 \uc0dd\uc131 \ubc0f \uae30\ubcf8 \uc870\uc791"}),"\n",(0,s.jsx)(e.p,{children:"\ub2e4\uc74c \ub370\uc774\ud130\ub97c \uac00\uc9c4 DataFrame\uc744 \uc0dd\uc131\ud558\uace0 \uae30\ubcf8\uc801\uc778 \uc870\uc791\uc744 \uc218\ud589\ud558\uc138\uc694."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc9c1\uc6d0 \ub370\uc774\ud130: \uc774\ub984, \ubd80\uc11c, \uc785\uc0ac\ub144\ub3c4, \uc5f0\ubd09\n# - \ucd5c\uc18c 5\uba85\uc758 \uc9c1\uc6d0 \ub370\uc774\ud130\n# - \ubd80\uc11c\ub294 '\uac1c\ubc1c\ud300', '\uc601\uc5c5\ud300', '\uc778\uc0ac\ud300' \uc911 \uc120\ud0dd\n# - \uc785\uc0ac\ub144\ub3c4\ub294 2018~2023\ub144 \uc0ac\uc774\n# - \uc5f0\ubd09\uc740 3000~7000\ub9cc\uc6d0 \uc0ac\uc774\n\n# \uc218\ud589\ud560 \uc791\uc5c5:\n# 1. DataFrame \uc0dd\uc131\n# 2. \uadfc\uc18d\uc5f0\uc218 \uceec\ub7fc \ucd94\uac00 (2024 - \uc785\uc0ac\ub144\ub3c4)\n# 3. \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uc5f0\ubd09 \uacc4\uc0b0\n# 4. \uadfc\uc18d\uc5f0\uc218\uac00 3\ub144 \uc774\uc0c1\uc778 \uc9c1\uc6d0 \ud544\ud130\ub9c1\n# 5. \uc5f0\ubd09 \uc0c1\uc704 3\uba85 \uc120\ud0dd\n"})}),"\n",(0,s.jsxs)(d,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import pandas as pd\n\n# 1. DataFrame \uc0dd\uc131\nemployees = pd.DataFrame({\n    '\uc774\ub984': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4', '\ucd5c\ub3d9\uc6b1', '\uac15\uc9c0\ud6c8', '\uc724\uc11c\uc5f0'],\n    '\ubd80\uc11c': ['\uac1c\ubc1c\ud300', '\uc601\uc5c5\ud300', '\uac1c\ubc1c\ud300', '\uc778\uc0ac\ud300', '\uc601\uc5c5\ud300', '\uac1c\ubc1c\ud300', '\uc778\uc0ac\ud300'],\n    '\uc785\uc0ac\ub144\ub3c4': [2018, 2020, 2019, 2021, 2022, 2018, 2023],\n    '\uc5f0\ubd09': [6500, 4500, 5500, 4000, 3800, 7000, 3500]\n})\n\nprint(\"=== \uc6d0\ubcf8 \ub370\uc774\ud130 ===\")\nprint(employees)\n\n# 2. \uadfc\uc18d\uc5f0\uc218 \uceec\ub7fc \ucd94\uac00\nemployees['\uadfc\uc18d\uc5f0\uc218'] = 2024 - employees['\uc785\uc0ac\ub144\ub3c4']\n\nprint(\"\\n=== \uadfc\uc18d\uc5f0\uc218 \ucd94\uac00 ===\")\nprint(employees)\n\n# 3. \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uc5f0\ubd09 \uacc4\uc0b0\ndept_avg_salary = employees.groupby('\ubd80\uc11c')['\uc5f0\ubd09'].mean()\nprint(\"\\n=== \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uc5f0\ubd09 ===\")\nprint(dept_avg_salary)\n\n# 4. \uadfc\uc18d\uc5f0\uc218\uac00 3\ub144 \uc774\uc0c1\uc778 \uc9c1\uc6d0 \ud544\ud130\ub9c1\nveteran_employees = employees[employees['\uadfc\uc18d\uc5f0\uc218'] >= 3]\nprint(\"\\n=== \uadfc\uc18d\uc5f0\uc218 3\ub144 \uc774\uc0c1 \uc9c1\uc6d0 ===\")\nprint(veteran_employees)\n\n# 5. \uc5f0\ubd09 \uc0c1\uc704 3\uba85 \uc120\ud0dd\ntop_3_salary = employees.nlargest(3, '\uc5f0\ubd09')\nprint(\"\\n=== \uc5f0\ubd09 \uc0c1\uc704 3\uba85 ===\")\nprint(top_3_salary)\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-2-\ub370\uc774\ud130-\ud544\ud130\ub9c1-\ubc0f-\ud1b5\uacc4",children:"\ubb38\uc81c 2: \ub370\uc774\ud130 \ud544\ud130\ub9c1 \ubc0f \ud1b5\uacc4"}),"\n",(0,s.jsx)(e.p,{children:"\uc628\ub77c\uc778 \uc1fc\ud551\ubab0\uc758 \uc8fc\ubb38 \ub370\uc774\ud130\ub97c \ubd84\uc11d\ud558\uc138\uc694."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc8fc\ubb38 \ub370\uc774\ud130: \uc8fc\ubb38\ubc88\ud638, \uace0\uac1d\uba85, \uc0c1\ud488, \uc218\ub7c9, \uac00\uaca9, \uc8fc\ubb38\uc77c\n# - \ucd5c\uc18c 10\uac1c\uc758 \uc8fc\ubb38 \ub370\uc774\ud130\n# - \uc0c1\ud488\uc740 '\ub178\ud2b8\ubd81', '\ub9c8\uc6b0\uc2a4', '\ud0a4\ubcf4\ub4dc', '\ubaa8\ub2c8\ud130' \uc911 \uc120\ud0dd\n# - \uc8fc\ubb38\uc77c\uc740 2024\ub144 1\uc6d4~3\uc6d4\n\n# \uc218\ud589\ud560 \uc791\uc5c5:\n# 1. \ucd1d \uc8fc\ubb38\uae08\uc561 \uceec\ub7fc \ucd94\uac00 (\uc218\ub7c9 \xd7 \uac00\uaca9)\n# 2. \uc0c1\ud488\ubcc4 \ucd1d \ud310\ub9e4\uae08\uc561 \uacc4\uc0b0\n# 3. 10\ub9cc\uc6d0 \uc774\uc0c1 \uc8fc\ubb38 \ud544\ud130\ub9c1\n# 4. \uc6d4\ubcc4 \uc8fc\ubb38 \uac74\uc218 \ubc0f \ud310\ub9e4\uae08\uc561\n# 5. \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \uc0c1\ud488 \ucc3e\uae30\n"})}),"\n",(0,s.jsxs)(d,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import pandas as pd\n\n# 1. DataFrame \uc0dd\uc131\norders = pd.DataFrame({\n    '\uc8fc\ubb38\ubc88\ud638': range(1001, 1011),\n    '\uace0\uac1d\uba85': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4', '\ucd5c\ub3d9\uc6b1',\n               '\uac15\uc9c0\ud6c8', '\uc724\uc11c\uc5f0', '\uc7a5\ubbfc\uc7ac', '\ud55c\uc18c\ud76c', '\uc624\uc900\uc11d'],\n    '\uc0c1\ud488': ['\ub178\ud2b8\ubd81', '\ub9c8\uc6b0\uc2a4', '\ud0a4\ubcf4\ub4dc', '\ub178\ud2b8\ubd81', '\ubaa8\ub2c8\ud130',\n             '\ub9c8\uc6b0\uc2a4', '\ud0a4\ubcf4\ub4dc', '\ub178\ud2b8\ubd81', '\ubaa8\ub2c8\ud130', '\ud0a4\ubcf4\ub4dc'],\n    '\uc218\ub7c9': [1, 2, 1, 1, 2, 3, 2, 1, 1, 1],\n    '\uac00\uaca9': [1200000, 30000, 80000, 1500000, 350000,\n             30000, 80000, 1300000, 400000, 85000],\n    '\uc8fc\ubb38\uc77c': pd.to_datetime([\n        '2024-01-15', '2024-01-20', '2024-02-05', '2024-02-10', '2024-02-15',\n        '2024-02-20', '2024-03-01', '2024-03-10', '2024-03-15', '2024-03-20'\n    ])\n})\n\nprint(\"=== \uc6d0\ubcf8 \ub370\uc774\ud130 ===\")\nprint(orders)\n\n# 1. \ucd1d \uc8fc\ubb38\uae08\uc561 \uceec\ub7fc \ucd94\uac00\norders['\ucd1d\uc8fc\ubb38\uae08\uc561'] = orders['\uc218\ub7c9'] * orders['\uac00\uaca9']\n\nprint(\"\\n=== \ucd1d\uc8fc\ubb38\uae08\uc561 \ucd94\uac00 ===\")\nprint(orders)\n\n# 2. \uc0c1\ud488\ubcc4 \ucd1d \ud310\ub9e4\uae08\uc561 \uacc4\uc0b0\nproduct_sales = orders.groupby('\uc0c1\ud488')['\ucd1d\uc8fc\ubb38\uae08\uc561'].sum().sort_values(ascending=False)\nprint(\"\\n=== \uc0c1\ud488\ubcc4 \ucd1d \ud310\ub9e4\uae08\uc561 ===\")\nprint(product_sales)\n\n# 3. 10\ub9cc\uc6d0 \uc774\uc0c1 \uc8fc\ubb38 \ud544\ud130\ub9c1\nhigh_value_orders = orders[orders['\ucd1d\uc8fc\ubb38\uae08\uc561'] >= 100000]\nprint(\"\\n=== 10\ub9cc\uc6d0 \uc774\uc0c1 \uc8fc\ubb38 ===\")\nprint(high_value_orders)\n\n# 4. \uc6d4\ubcc4 \uc8fc\ubb38 \uac74\uc218 \ubc0f \ud310\ub9e4\uae08\uc561\norders['\uc6d4'] = orders['\uc8fc\ubb38\uc77c'].dt.month\nmonthly_stats = orders.groupby('\uc6d4').agg({\n    '\uc8fc\ubb38\ubc88\ud638': 'count',\n    '\ucd1d\uc8fc\ubb38\uae08\uc561': 'sum'\n}).rename(columns={'\uc8fc\ubb38\ubc88\ud638': '\uc8fc\ubb38\uac74\uc218', '\ucd1d\uc8fc\ubb38\uae08\uc561': '\ud310\ub9e4\uae08\uc561'})\nprint(\"\\n=== \uc6d4\ubcc4 \ud1b5\uacc4 ===\")\nprint(monthly_stats)\n\n# 5. \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \uc0c1\ud488 \ucc3e\uae30\nproduct_quantity = orders.groupby('\uc0c1\ud488')['\uc218\ub7c9'].sum().sort_values(ascending=False)\nprint(\"\\n=== \uc0c1\ud488\ubcc4 \ud310\ub9e4 \uc218\ub7c9 ===\")\nprint(product_quantity)\nprint(f\"\\n\uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \uc0c1\ud488: {product_quantity.idxmax()} ({product_quantity.max()}\uac1c)\")\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-3-\ub370\uc774\ud130-\ud0c0\uc785-\ubc0f-\ubcc0\ud658",children:"\ubb38\uc81c 3: \ub370\uc774\ud130 \ud0c0\uc785 \ubc0f \ubcc0\ud658"}),"\n",(0,s.jsx)(e.p,{children:"\ub2e4\uc591\ud55c \ub370\uc774\ud130 \ud0c0\uc785\uc744 \ub2e4\ub8e8\ub294 \uc5f0\uc2b5\uc744 \ud558\uc138\uc694."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ub2e4\uc74c\uacfc \uac19\uc740 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ud0c0\uc785\uc744 \ubcc0\ud658\ud558\uc138\uc694.\n# - \ud68c\uc6d0\ubc88\ud638 (\ubb38\uc790\uc5f4): 'M001', 'M002', ...\n# - \uac00\uc785\uc77c (\ubb38\uc790\uc5f4): '2024-01-15', '2024-02-20', ...\n# - \ub098\uc774 (\ubb38\uc790\uc5f4): '25', '30', '35', ...\n# - \ub4f1\uae09 (\ubb38\uc790\uc5f4): 'Gold', 'Silver', 'Bronze', ...\n# - \ud65c\uc131\uc0c1\ud0dc (\ubb38\uc790\uc5f4): 'Y', 'N', 'Y', ...\n\n# \uc218\ud589\ud560 \uc791\uc5c5:\n# 1. \ub098\uc774\ub97c \uc815\uc218\ud615\uc73c\ub85c \ubcc0\ud658\n# 2. \uac00\uc785\uc77c\uc744 datetime\uc73c\ub85c \ubcc0\ud658\n# 3. \ud65c\uc131\uc0c1\ud0dc\ub97c \ubd88\ub9b0\uc73c\ub85c \ubcc0\ud658 (Y -> True, N -> False)\n# 4. \ub4f1\uae09\uc744 category\ub85c \ubcc0\ud658\n# 5. \uac00\uc785\uc77c\ub85c\ubd80\ud130 \uac00\uc785\uc77c\uc218 \uacc4\uc0b0\n# 6. \uc5f0\ub839\ub300 \uceec\ub7fc \ucd94\uac00 (20\ub300, 30\ub300, 40\ub300)\n"})}),"\n",(0,s.jsxs)(d,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import pandas as pd\nfrom datetime import datetime\n\n# DataFrame \uc0dd\uc131 (\ubaa8\ub450 \ubb38\uc790\uc5f4\ub85c)\nmembers = pd.DataFrame({\n    '\ud68c\uc6d0\ubc88\ud638': ['M001', 'M002', 'M003', 'M004', 'M005'],\n    '\uac00\uc785\uc77c': ['2024-01-15', '2024-02-20', '2023-06-10', '2024-03-05', '2023-12-25'],\n    '\ub098\uc774': ['25', '32', '45', '28', '35'],\n    '\ub4f1\uae09': ['Gold', 'Silver', 'Bronze', 'Gold', 'Silver'],\n    '\ud65c\uc131\uc0c1\ud0dc': ['Y', 'Y', 'N', 'Y', 'N']\n})\n\nprint(\"=== \uc6d0\ubcf8 \ub370\uc774\ud130 \ud0c0\uc785 ===\")\nprint(members.dtypes)\nprint(\"\\n\", members)\n\n# 1. \ub098\uc774\ub97c \uc815\uc218\ud615\uc73c\ub85c \ubcc0\ud658\nmembers['\ub098\uc774'] = members['\ub098\uc774'].astype(int)\n\n# 2. \uac00\uc785\uc77c\uc744 datetime\uc73c\ub85c \ubcc0\ud658\nmembers['\uac00\uc785\uc77c'] = pd.to_datetime(members['\uac00\uc785\uc77c'])\n\n# 3. \ud65c\uc131\uc0c1\ud0dc\ub97c \ubd88\ub9b0\uc73c\ub85c \ubcc0\ud658\nmembers['\ud65c\uc131\uc0c1\ud0dc'] = members['\ud65c\uc131\uc0c1\ud0dc'].map({'Y': True, 'N': False})\n\n# 4. \ub4f1\uae09\uc744 category\ub85c \ubcc0\ud658\nmembers['\ub4f1\uae09'] = members['\ub4f1\uae09'].astype('category')\n\nprint(\"\\n=== \ubcc0\ud658 \ud6c4 \ub370\uc774\ud130 \ud0c0\uc785 ===\")\nprint(members.dtypes)\nprint(\"\\n\", members)\n\n# 5. \uac00\uc785\uc77c\ub85c\ubd80\ud130 \uac00\uc785\uc77c\uc218 \uacc4\uc0b0\ntoday = pd.Timestamp.now()\nmembers['\uac00\uc785\uc77c\uc218'] = (today - members['\uac00\uc785\uc77c']).dt.days\n\n# 6. \uc5f0\ub839\ub300 \uceec\ub7fc \ucd94\uac00\nmembers['\uc5f0\ub839\ub300'] = (members['\ub098\uc774'] // 10 * 10).astype(str) + '\ub300'\n\nprint(\"\\n=== \ucd5c\uc885 \ub370\uc774\ud130 ===\")\nprint(members)\n\n# \ucd94\uac00 \ubd84\uc11d\nprint(\"\\n=== \ub4f1\uae09\ubcc4 \ud68c\uc6d0 \uc218 ===\")\nprint(members['\ub4f1\uae09'].value_counts())\n\nprint(\"\\n=== \ud65c\uc131 \ud68c\uc6d0 \uc218 ===\")\nprint(members['\ud65c\uc131\uc0c1\ud0dc'].value_counts())\n\nprint(\"\\n=== \uc5f0\ub839\ub300\ubcc4 \ud3c9\uade0 \uac00\uc785\uc77c\uc218 ===\")\nprint(members.groupby('\uc5f0\ub839\ub300')['\uac00\uc785\uc77c\uc218'].mean())\n"})})]}),"\n",(0,s.jsx)(e.h2,{id:"\ub2e4\uc74c-\ub2e8\uacc4",children:"\ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,s.jsx)(e.p,{children:"Pandas\uc758 \uae30\ubcf8 \uac1c\ub150\uc744 \uc775\ud614\ub2e4\uba74, \uc774\uc81c \uc2e4\uc81c \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubcfc \ucc28\ub840\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.p,{children:"\ub2e4\uc74c \ubb38\uc11c\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \ud615\uc2dd\uc758 \ub370\uc774\ud130\ub97c \ub85c\ub529\ud558\uace0 \uc800\uc7a5\ud558\ub294 \ubc29\ubc95\uc744 \uc790\uc138\ud788 \uc54c\uc544\ubd05\ub2c8\ub2e4:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"./data-loading",children:"\ub370\uc774\ud130 \ub85c\ub529"})})]})}function o(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},8453:(n,e,d)=>{d.d(e,{R:()=>i,x:()=>a});var r=d(6540);const s={},t=r.createContext(s);function i(n){const e=r.useContext(t);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);