"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9614],{5285:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"pandas/data-manipulation","title":"3. \ub370\uc774\ud130 \uc870\uc791","description":"Pandas\uc758 \ud575\uc2ec \uae30\ub2a5\uc778 \ub370\uc774\ud130 \uc870\uc791 \ubc29\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4. \uc815\ub82c, \ud544\ud130\ub9c1, \uadf8\ub8f9\ud654, \ud53c\ubc97 \ud14c\uc774\ube14 \ub4f1 \uc2e4\ubb34\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uae30\ubc95\ub4e4\uc744 \ub2e4\ub8f9\ub2c8\ub2e4.","source":"@site/docs/pandas/data-manipulation.md","sourceDirName":"pandas","slug":"/pandas/data-manipulation","permalink":"/tobias-docs/comp-2/docs/pandas/data-manipulation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pandas/data-manipulation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"pandasSidebar","previous":{"title":"2. \ub370\uc774\ud130 \ub85c\ub529","permalink":"/tobias-docs/comp-2/docs/pandas/data-loading"},"next":{"title":"4. \ub370\uc774\ud130 \uc815\uc81c","permalink":"/tobias-docs/comp-2/docs/pandas/data-cleaning"}}');var d=s(4848),t=s(8453);const r={sidebar_position:3},i="3. \ub370\uc774\ud130 \uc870\uc791",l={},o=[{value:"3.1 \uc815\ub82c (Sorting)",id:"31-\uc815\ub82c-sorting",level:2},{value:"sort_values() - \uac12 \uae30\uc900 \uc815\ub82c",id:"sort_values---\uac12-\uae30\uc900-\uc815\ub82c",level:3},{value:"sort_index() - \uc778\ub371\uc2a4 \uae30\uc900 \uc815\ub82c",id:"sort_index---\uc778\ub371\uc2a4-\uae30\uc900-\uc815\ub82c",level:3},{value:"3.2 \ud544\ud130\ub9c1 (Filtering)",id:"32-\ud544\ud130\ub9c1-filtering",level:2},{value:"Boolean Indexing",id:"boolean-indexing",level:3},{value:"query() \uba54\uc11c\ub4dc",id:"query-\uba54\uc11c\ub4dc",level:3},{value:"\uc0c1\uc704/\ud558\uc704 \ub370\uc774\ud130 \ucd94\ucd9c",id:"\uc0c1\uc704\ud558\uc704-\ub370\uc774\ud130-\ucd94\ucd9c",level:3},{value:"3.3 GroupBy \uadf8\ub8f9\ud654 \ubc0f \uc9d1\uacc4",id:"33-groupby-\uadf8\ub8f9\ud654-\ubc0f-\uc9d1\uacc4",level:2},{value:"\uae30\ubcf8 \uadf8\ub8f9\ud654",id:"\uae30\ubcf8-\uadf8\ub8f9\ud654",level:3},{value:"\uace0\uae09 \uc9d1\uacc4",id:"\uace0\uae09-\uc9d1\uacc4",level:3},{value:"\ud53c\ubc97 \ud14c\uc774\ube14 \uc2a4\ud0c0\uc77c \uacb0\uacfc",id:"\ud53c\ubc97-\ud14c\uc774\ube14-\uc2a4\ud0c0\uc77c-\uacb0\uacfc",level:3},{value:"3.4 apply, map, applymap \ud568\uc218",id:"34-apply-map-applymap-\ud568\uc218",level:2},{value:"apply() - \ud589/\uc5f4 \ub2e8\uc704 \ud568\uc218 \uc801\uc6a9",id:"apply---\ud589\uc5f4-\ub2e8\uc704-\ud568\uc218-\uc801\uc6a9",level:3},{value:"map() - Series \ubcc0\ud658",id:"map---series-\ubcc0\ud658",level:3},{value:"applymap() - \ubaa8\ub4e0 \uc6d0\uc18c\uc5d0 \ud568\uc218 \uc801\uc6a9 (DataFrame)",id:"applymap---\ubaa8\ub4e0-\uc6d0\uc18c\uc5d0-\ud568\uc218-\uc801\uc6a9-dataframe",level:3},{value:"3.5 \ud53c\ubc97 \ud14c\uc774\ube14 (Pivot Table)",id:"35-\ud53c\ubc97-\ud14c\uc774\ube14-pivot-table",level:2},{value:"pivot_table() \uae30\ubcf8",id:"pivot_table-\uae30\ubcf8",level:3},{value:"\uace0\uae09 \ud53c\ubc97 \ud14c\uc774\ube14",id:"\uace0\uae09-\ud53c\ubc97-\ud14c\uc774\ube14",level:3},{value:"pivot() vs pivot_table()",id:"pivot-vs-pivot_table",level:3},{value:"3.6 \ub370\uc774\ud130 \uc7ac\uad6c\uc870\ud654 (Reshaping)",id:"36-\ub370\uc774\ud130-\uc7ac\uad6c\uc870\ud654-reshaping",level:2},{value:"melt() - Wide to Long",id:"melt---wide-to-long",level:3},{value:"stack() / unstack() - \uc778\ub371\uc2a4 \uc7ac\uad6c\uc870\ud654",id:"stack--unstack---\uc778\ub371\uc2a4-\uc7ac\uad6c\uc870\ud654",level:3},{value:"pivot() - \uac04\ub2e8\ud55c \uc7ac\uad6c\uc870\ud654",id:"pivot---\uac04\ub2e8\ud55c-\uc7ac\uad6c\uc870\ud654",level:3},{value:"3.7 \uc870\uac74\ubd80 \ub85c\uc9c1 (Conditional Logic)",id:"37-\uc870\uac74\ubd80-\ub85c\uc9c1-conditional-logic",level:2},{value:"where() / mask()",id:"where--mask",level:3},{value:"np.where() - \uc870\uac74\ubd80 \uac12 \ud560\ub2f9",id:"npwhere---\uc870\uac74\ubd80-\uac12-\ud560\ub2f9",level:3},{value:"np.select() - \ub2e4\uc911 \uc870\uac74 \ucc98\ub9ac",id:"npselect---\ub2e4\uc911-\uc870\uac74-\ucc98\ub9ac",level:3},{value:"clip() - \uac12\uc758 \ubc94\uc704 \uc81c\ud55c",id:"clip---\uac12\uc758-\ubc94\uc704-\uc81c\ud55c",level:3},{value:"3.8 \ubb38\uc790\uc5f4 \uba54\uc11c\ub4dc (String Methods)",id:"38-\ubb38\uc790\uc5f4-\uba54\uc11c\ub4dc-string-methods",level:2},{value:"str accessor \uae30\ubcf8",id:"str-accessor-\uae30\ubcf8",level:3},{value:"\ubb38\uc790\uc5f4 \ubd84\ud560 \ubc0f \ucd94\ucd9c",id:"\ubb38\uc790\uc5f4-\ubd84\ud560-\ubc0f-\ucd94\ucd9c",level:3},{value:"\ubb38\uc790\uc5f4 \uc815\uc81c",id:"\ubb38\uc790\uc5f4-\uc815\uc81c",level:3},{value:"\uc815\uaddc\uc2dd \ud65c\uc6a9",id:"\uc815\uaddc\uc2dd-\ud65c\uc6a9",level:3},{value:"3.9 \ub0a0\uc9dc \uba54\uc11c\ub4dc (DateTime Methods)",id:"39-\ub0a0\uc9dc-\uba54\uc11c\ub4dc-datetime-methods",level:2},{value:"dt accessor \uae30\ubcf8",id:"dt-accessor-\uae30\ubcf8",level:3},{value:"\ub0a0\uc9dc \uc5f0\uc0b0",id:"\ub0a0\uc9dc-\uc5f0\uc0b0",level:3},{value:"\ub0a0\uc9dc \ud615\uc2dd \ubcc0\ud658",id:"\ub0a0\uc9dc-\ud615\uc2dd-\ubcc0\ud658",level:3},{value:"\ub0a0\uc9dc \ud544\ud130\ub9c1 \ubc0f \uadf8\ub8f9\ud654",id:"\ub0a0\uc9dc-\ud544\ud130\ub9c1-\ubc0f-\uadf8\ub8f9\ud654",level:3},{value:"3.10 \uc2e4\uc804 \uc608\uc81c",id:"310-\uc2e4\uc804-\uc608\uc81c",level:2},{value:"\uc608\uc81c 1: \ub9e4\ucd9c \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc",id:"\uc608\uc81c-1-\ub9e4\ucd9c-\ubd84\uc11d-\ub300\uc2dc\ubcf4\ub4dc",level:3},{value:"\uc608\uc81c 2: \uace0\uac1d \uc138\uadf8\uba3c\ud2b8 \ubd84\uc11d",id:"\uc608\uc81c-2-\uace0\uac1d-\uc138\uadf8\uba3c\ud2b8-\ubd84\uc11d",level:3},{value:"\uc608\uc81c 3: \uc2dc\uacc4\uc5f4 \ud2b8\ub80c\ub4dc \ubd84\uc11d",id:"\uc608\uc81c-3-\uc2dc\uacc4\uc5f4-\ud2b8\ub80c\ub4dc-\ubd84\uc11d",level:3},{value:"\uc5f0\uc2b5 \ubb38\uc81c",id:"\uc5f0\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c 1: \ud310\ub9e4 \ub370\uc774\ud130 \ubd84\uc11d",id:"\ubb38\uc81c-1-\ud310\ub9e4-\ub370\uc774\ud130-\ubd84\uc11d",level:3},{value:"\ubb38\uc81c 2: \uace0\uac1d \ub370\uc774\ud130 \uc815\uc81c",id:"\ubb38\uc81c-2-\uace0\uac1d-\ub370\uc774\ud130-\uc815\uc81c",level:3},{value:"\ubb38\uc81c 3: \ubcf5\ud569 \ubd84\uc11d",id:"\ubb38\uc81c-3-\ubcf5\ud569-\ubd84\uc11d",level:3},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2},{value:"\ub2e4\uc74c \ub2e8\uacc4",id:"\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.header,{children:(0,d.jsx)(e.h1,{id:"3-\ub370\uc774\ud130-\uc870\uc791",children:"3. \ub370\uc774\ud130 \uc870\uc791"})}),"\n",(0,d.jsx)(e.p,{children:"Pandas\uc758 \ud575\uc2ec \uae30\ub2a5\uc778 \ub370\uc774\ud130 \uc870\uc791 \ubc29\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4. \uc815\ub82c, \ud544\ud130\ub9c1, \uadf8\ub8f9\ud654, \ud53c\ubc97 \ud14c\uc774\ube14 \ub4f1 \uc2e4\ubb34\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uae30\ubc95\ub4e4\uc744 \ub2e4\ub8f9\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h2,{id:"31-\uc815\ub82c-sorting",children:"3.1 \uc815\ub82c (Sorting)"}),"\n",(0,d.jsx)(e.p,{children:"\ub370\uc774\ud130\ub97c \ud2b9\uc815 \uae30\uc900\uc5d0 \ub530\ub77c \uc815\ub82c\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"sort_values---\uac12-\uae30\uc900-\uc815\ub82c",children:"sort_values() - \uac12 \uae30\uc900 \uc815\ub82c"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"import pandas as pd\nimport numpy as np\n\n# \uc0d8\ud50c \ub370\uc774\ud130 \uc0dd\uc131\ndf = pd.DataFrame({\n    '\uc81c\ud488\uba85': ['\ub178\ud2b8\ubd81', '\ub9c8\uc6b0\uc2a4', '\ud0a4\ubcf4\ub4dc', '\ubaa8\ub2c8\ud130', '\ud5e4\ub4dc\uc14b'],\n    '\uce74\ud14c\uace0\ub9ac': ['\ucef4\ud4e8\ud130', '\uc8fc\ubcc0\uae30\uae30', '\uc8fc\ubcc0\uae30\uae30', '\ucef4\ud4e8\ud130', '\uc8fc\ubcc0\uae30\uae30'],\n    '\uac00\uaca9': [1200000, 35000, 89000, 450000, 120000],\n    '\uc7ac\uace0': [15, 150, 80, 25, 45],\n    '\ud3c9\uc810': [4.5, 4.2, 4.7, 4.3, 4.1]\n})\n\n# \ub2e8\uc77c \uceec\ub7fc \uc815\ub82c (\uc624\ub984\ucc28\uc21c)\ndf_sorted = df.sort_values('\uac00\uaca9')\nprint(df_sorted)\n\n# \ub0b4\ub9bc\ucc28\uc21c \uc815\ub82c\ndf_sorted_desc = df.sort_values('\uac00\uaca9', ascending=False)\nprint(df_sorted_desc)\n\n# \uc5ec\ub7ec \uceec\ub7fc \uae30\uc900 \uc815\ub82c\ndf_multi_sort = df.sort_values(['\uce74\ud14c\uace0\ub9ac', '\uac00\uaca9'], ascending=[True, False])\nprint(df_multi_sort)\n\n# \uc815\ub82c \ud6c4 \uc778\ub371\uc2a4 \ub9ac\uc14b\ndf_reset = df.sort_values('\ud3c9\uc810', ascending=False).reset_index(drop=True)\nprint(df_reset)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"sort_index---\uc778\ub371\uc2a4-\uae30\uc900-\uc815\ub82c",children:"sort_index() - \uc778\ub371\uc2a4 \uae30\uc900 \uc815\ub82c"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc778\ub371\uc2a4\uac00 \uc788\ub294 \ub370\uc774\ud130\ud504\ub808\uc784\ndf_indexed = df.set_index('\uc81c\ud488\uba85')\nprint(df_indexed)\n\n# \uc778\ub371\uc2a4 \uae30\uc900 \uc815\ub82c\ndf_index_sorted = df_indexed.sort_index()\nprint(df_index_sorted)\n\n# \uceec\ub7fc \uae30\uc900 \uc815\ub82c (axis=1)\ndf_col_sorted = df.sort_index(axis=1)\nprint(df_col_sorted)\n"})}),"\n",(0,d.jsx)(e.admonition,{title:"\uc815\ub82c \uc131\ub2a5 \ucd5c\uc801\ud654",type:"tip",children:(0,d.jsxs)(e.p,{children:["\ub300\uc6a9\ub7c9 \ub370\uc774\ud130\ub97c \uc815\ub82c\ud560 \ub54c\ub294 ",(0,d.jsx)(e.code,{children:"kind='mergesort'"})," \ub610\ub294 ",(0,d.jsx)(e.code,{children:"kind='heapsort'"})," \ud30c\ub77c\ubbf8\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc548\uc815\uc801\uc778 \uc815\ub82c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 ",(0,d.jsx)(e.code,{children:"quicksort"}),"\uc785\ub2c8\ub2e4."]})}),"\n",(0,d.jsx)(e.h2,{id:"32-\ud544\ud130\ub9c1-filtering",children:"3.2 \ud544\ud130\ub9c1 (Filtering)"}),"\n",(0,d.jsx)(e.p,{children:"\uc870\uac74\uc5d0 \ub9de\ub294 \ub370\uc774\ud130\ub9cc \ucd94\ucd9c\ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"boolean-indexing",children:"Boolean Indexing"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \ub9e4\ucd9c \ub370\uc774\ud130\nsales_df = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=10),\n    '\ub9e4\ucd9c\uc561': [350000, 420000, 380000, 520000, 490000,\n              610000, 580000, 450000, 390000, 560000],\n    '\uace0\uac1d\uc218': [25, 32, 28, 41, 38, 52, 48, 35, 29, 44],\n    '\uc9c0\uc5ed': ['\uc11c\uc6b8', '\uacbd\uae30', '\uc11c\uc6b8', '\ubd80\uc0b0', '\uc11c\uc6b8',\n            '\uacbd\uae30', '\ubd80\uc0b0', '\uc11c\uc6b8', '\uacbd\uae30', '\ubd80\uc0b0']\n})\n\n# \ub2e8\uc77c \uc870\uac74 \ud544\ud130\ub9c1\nhigh_sales = sales_df[sales_df['\ub9e4\ucd9c\uc561'] > 500000]\nprint(high_sales)\n\n# \uc5ec\ub7ec \uc870\uac74 \ud544\ud130\ub9c1 (AND)\nseoul_high = sales_df[(sales_df['\uc9c0\uc5ed'] == '\uc11c\uc6b8') & (sales_df['\ub9e4\ucd9c\uc561'] > 400000)]\nprint(seoul_high)\n\n# \uc5ec\ub7ec \uc870\uac74 \ud544\ud130\ub9c1 (OR)\ncondition = sales_df[(sales_df['\uc9c0\uc5ed'] == '\uc11c\uc6b8') | (sales_df['\uace0\uac1d\uc218'] > 40)]\nprint(condition)\n\n# NOT \uc870\uac74\nnot_seoul = sales_df[~(sales_df['\uc9c0\uc5ed'] == '\uc11c\uc6b8')]\nprint(not_seoul)\n\n# isin() \uba54\uc11c\ub4dc \ud65c\uc6a9\nmajor_cities = sales_df[sales_df['\uc9c0\uc5ed'].isin(['\uc11c\uc6b8', '\ubd80\uc0b0'])]\nprint(major_cities)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"query-\uba54\uc11c\ub4dc",children:"query() \uba54\uc11c\ub4dc"}),"\n",(0,d.jsx)(e.p,{children:"SQL \uc2a4\ud0c0\uc77c\uc758 \ubb38\uc790\uc5f4 \ud45c\ud604\uc2dd\uc73c\ub85c \ud544\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# query() \uba54\uc11c\ub4dc \uc0ac\uc6a9\nresult = sales_df.query('\ub9e4\ucd9c\uc561 > 500000')\nprint(result)\n\n# \uc5ec\ub7ec \uc870\uac74\nresult2 = sales_df.query('\uc9c0\uc5ed == \"\uc11c\uc6b8\" and \uace0\uac1d\uc218 > 25')\nprint(result2)\n\n# \ubcc0\uc218 \uc0ac\uc6a9 (@)\nthreshold = 450000\nresult3 = sales_df.query('\ub9e4\ucd9c\uc561 > @threshold')\nprint(result3)\n\n# in \uc5f0\uc0b0\uc790\nresult4 = sales_df.query('\uc9c0\uc5ed in [\"\uc11c\uc6b8\", \"\ubd80\uc0b0\"]')\nprint(result4)\n\n# \ubb38\uc790\uc5f4 \uba54\uc11c\ub4dc\uc640 \uacb0\ud569\ndf_products = pd.DataFrame({\n    '\uc81c\ud488\uba85': ['iPhone 15', 'Galaxy S24', 'iPad Pro', 'Galaxy Tab', 'MacBook'],\n    '\uac00\uaca9': [1200000, 1100000, 1500000, 800000, 2500000]\n})\nresult5 = df_products.query('\uc81c\ud488\uba85.str.contains(\"Galaxy\")', engine='python')\nprint(result5)\n"})}),"\n",(0,d.jsx)(e.admonition,{title:"query() vs Boolean Indexing",type:"tip",children:(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"query()"})," \uba54\uc11c\ub4dc\ub294 \uac00\ub3c5\uc131\uc774 \uc88b\uace0 \ubcf5\uc7a1\ud55c \uc870\uac74\uc744 \uac04\uacb0\ud558\uac8c \ud45c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc Boolean Indexing\uc774 \uc77c\ubc18\uc801\uc73c\ub85c \ub354 \ube60\ub974\uba70, \ubaa8\ub4e0 \uc0c1\ud669\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4."]})}),"\n",(0,d.jsx)(e.h3,{id:"\uc0c1\uc704\ud558\uc704-\ub370\uc774\ud130-\ucd94\ucd9c",children:"\uc0c1\uc704/\ud558\uc704 \ub370\uc774\ud130 \ucd94\ucd9c"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0c1\uc704 N\uac1c \ud589\ntop_3 = sales_df.nlargest(3, '\ub9e4\ucd9c\uc561')\nprint(top_3)\n\n# \ud558\uc704 N\uac1c \ud589\nbottom_3 = sales_df.nsmallest(3, '\ub9e4\ucd9c\uc561')\nprint(bottom_3)\n\n# \uc5ec\ub7ec \uceec\ub7fc \uae30\uc900\ntop_customers = sales_df.nlargest(5, ['\uace0\uac1d\uc218', '\ub9e4\ucd9c\uc561'])\nprint(top_customers)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"33-groupby-\uadf8\ub8f9\ud654-\ubc0f-\uc9d1\uacc4",children:"3.3 GroupBy \uadf8\ub8f9\ud654 \ubc0f \uc9d1\uacc4"}),"\n",(0,d.jsx)(e.p,{children:"\ub370\uc774\ud130\ub97c \uadf8\ub8f9\ud654\ud558\uc5ec \uc9d1\uacc4 \ubd84\uc11d\uc744 \uc218\ud589\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"\uae30\ubcf8-\uadf8\ub8f9\ud654",children:"\uae30\ubcf8 \uadf8\ub8f9\ud654"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uadf8\ub8f9\ubcc4 \uc9d1\uacc4\nregion_stats = sales_df.groupby('\uc9c0\uc5ed').agg({\n    '\ub9e4\ucd9c\uc561': ['sum', 'mean', 'count'],\n    '\uace0\uac1d\uc218': ['sum', 'mean']\n})\nprint(region_stats)\n\n# \ub2e8\uc77c \uc9d1\uacc4 \ud568\uc218\nregion_total = sales_df.groupby('\uc9c0\uc5ed')['\ub9e4\ucd9c\uc561'].sum()\nprint(region_total)\n\n# \uc5ec\ub7ec \uceec\ub7fc \uadf8\ub8f9\ud654\ndf_detail = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=12),\n    '\uc9c0\uc5ed': ['\uc11c\uc6b8', '\uacbd\uae30', '\ubd80\uc0b0'] * 4,\n    '\uce74\ud14c\uace0\ub9ac': ['\uc804\uc790', '\uc804\uc790', '\uc758\ub958', '\uc2dd\ud488'] * 3,\n    '\ub9e4\ucd9c\uc561': np.random.randint(100000, 1000000, 12)\n})\n\nmulti_group = df_detail.groupby(['\uc9c0\uc5ed', '\uce74\ud14c\uace0\ub9ac'])['\ub9e4\ucd9c\uc561'].sum()\nprint(multi_group)\n\n# DataFrame\uc73c\ub85c \ubcc0\ud658\nmulti_group_df = multi_group.reset_index()\nprint(multi_group_df)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\uace0\uae09-\uc9d1\uacc4",children:"\uace0\uae09 \uc9d1\uacc4"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0ac\uc6a9\uc790 \uc815\uc758 \uc9d1\uacc4 \ud568\uc218\ndef sales_range(x):\n    return x.max() - x.min()\n\ncustom_agg = sales_df.groupby('\uc9c0\uc5ed')['\ub9e4\ucd9c\uc561'].agg([\n    ('\ucd1d\ub9e4\ucd9c', 'sum'),\n    ('\ud3c9\uade0\ub9e4\ucd9c', 'mean'),\n    ('\ucd5c\ub300\ub9e4\ucd9c', 'max'),\n    ('\ucd5c\uc18c\ub9e4\ucd9c', 'min'),\n    ('\ub9e4\ucd9c\ubc94\uc704', sales_range),\n    ('\ud45c\uc900\ud3b8\ucc28', 'std')\n])\nprint(custom_agg)\n\n# transform() - \uadf8\ub8f9\ubcc4 \uc5f0\uc0b0 \uacb0\uacfc\ub97c \uc6d0\ubcf8 \ud06c\uae30\ub85c \ubc18\ud658\nsales_df['\uadf8\ub8f9\ud3c9\uade0'] = sales_df.groupby('\uc9c0\uc5ed')['\ub9e4\ucd9c\uc561'].transform('mean')\nsales_df['\ud3c9\uade0\ub300\ube44\ucc28\uc774'] = sales_df['\ub9e4\ucd9c\uc561'] - sales_df['\uadf8\ub8f9\ud3c9\uade0']\nprint(sales_df)\n\n# filter() - \uadf8\ub8f9 \ub2e8\uc704 \ud544\ud130\ub9c1\n# \ud3c9\uade0 \ub9e4\ucd9c\uc774 450000 \uc774\uc0c1\uc778 \uc9c0\uc5ed\uc758 \ub370\uc774\ud130\ub9cc \ucd94\ucd9c\nfiltered = sales_df.groupby('\uc9c0\uc5ed').filter(lambda x: x['\ub9e4\ucd9c\uc561'].mean() > 450000)\nprint(filtered)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\ud53c\ubc97-\ud14c\uc774\ube14-\uc2a4\ud0c0\uc77c-\uacb0\uacfc",children:"\ud53c\ubc97 \ud14c\uc774\ube14 \uc2a4\ud0c0\uc77c \uacb0\uacfc"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# unstack()\uc73c\ub85c \ud53c\ubc97 \ud615\ud0dc \ubcc0\ud658\npivot_style = df_detail.groupby(['\uc9c0\uc5ed', '\uce74\ud14c\uace0\ub9ac'])['\ub9e4\ucd9c\uc561'].sum().unstack(fill_value=0)\nprint(pivot_style)\n\n# \ud37c\uc13c\ud2b8 \uacc4\uc0b0\nregion_category_pct = df_detail.groupby(['\uc9c0\uc5ed', '\uce74\ud14c\uace0\ub9ac'])['\ub9e4\ucd9c\uc561'].sum()\nregion_category_pct = region_category_pct / region_category_pct.sum() * 100\nprint(region_category_pct)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"34-apply-map-applymap-\ud568\uc218",children:"3.4 apply, map, applymap \ud568\uc218"}),"\n",(0,d.jsx)(e.p,{children:"\ub370\uc774\ud130 \ubcc0\ud658\uc744 \uc704\ud55c \ud568\uc218 \uc801\uc6a9 \ubc29\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"apply---\ud589\uc5f4-\ub2e8\uc704-\ud568\uc218-\uc801\uc6a9",children:"apply() - \ud589/\uc5f4 \ub2e8\uc704 \ud568\uc218 \uc801\uc6a9"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \ub370\uc774\ud130\ndf_score = pd.DataFrame({\n    '\uc774\ub984': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4'],\n    '\uc218\ud559': [85, 92, 78, 95],\n    '\uc601\uc5b4': [88, 85, 90, 92],\n    '\uacfc\ud559': [90, 88, 85, 89]\n})\n\n# \uceec\ub7fc\uc5d0 \ud568\uc218 \uc801\uc6a9\ndf_score['\ucd1d\uc810'] = df_score[['\uc218\ud559', '\uc601\uc5b4', '\uacfc\ud559']].apply(sum, axis=1)\ndf_score['\ud3c9\uade0'] = df_score[['\uc218\ud559', '\uc601\uc5b4', '\uacfc\ud559']].apply(np.mean, axis=1)\nprint(df_score)\n\n# \uc0ac\uc6a9\uc790 \uc815\uc758 \ud568\uc218 \uc801\uc6a9\ndef grade(score):\n    if score >= 90:\n        return 'A'\n    elif score >= 80:\n        return 'B'\n    elif score >= 70:\n        return 'C'\n    else:\n        return 'D'\n\ndf_score['\ub4f1\uae09'] = df_score['\ud3c9\uade0'].apply(grade)\nprint(df_score)\n\n# lambda \ud568\uc218 \ud65c\uc6a9\ndf_score['\ud3c9\uade0(\ubc18\uc62c\ub9bc)'] = df_score['\ud3c9\uade0'].apply(lambda x: round(x, 1))\nprint(df_score)\n\n# \uc5ec\ub7ec \uac12 \ubc18\ud658 (Series \ubc18\ud658)\ndef calc_stats(row):\n    scores = [row['\uc218\ud559'], row['\uc601\uc5b4'], row['\uacfc\ud559']]\n    return pd.Series({\n        '\ucd5c\uace0\uc810\uc218': max(scores),\n        '\ucd5c\uc800\uc810\uc218': min(scores),\n        '\uc810\uc218\ucc28': max(scores) - min(scores)\n    })\n\nstats = df_score.apply(calc_stats, axis=1)\ndf_score = pd.concat([df_score, stats], axis=1)\nprint(df_score)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"map---series-\ubcc0\ud658",children:"map() - Series \ubcc0\ud658"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ub515\uc154\ub108\ub9ac \ub9e4\ud551\ncategory_map = {\n    '\uc804\uc790': 'Electronics',\n    '\uc758\ub958': 'Clothing',\n    '\uc2dd\ud488': 'Food'\n}\n\ndf_detail['Category_EN'] = df_detail['\uce74\ud14c\uace0\ub9ac'].map(category_map)\nprint(df_detail)\n\n# \ud568\uc218 \ub9e4\ud551\ndf_detail['\ub9e4\ucd9c\uc561_\uc6d0'] = df_detail['\ub9e4\ucd9c\uc561'].map(lambda x: f'{x:,}\uc6d0')\nprint(df_detail)\n\n# Series \ub9e4\ud551\nregion_code = pd.Series({\n    '\uc11c\uc6b8': 'SEL',\n    '\uacbd\uae30': 'GG',\n    '\ubd80\uc0b0': 'BS'\n})\ndf_detail['\uc9c0\uc5ed\ucf54\ub4dc'] = df_detail['\uc9c0\uc5ed'].map(region_code)\nprint(df_detail)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"applymap---\ubaa8\ub4e0-\uc6d0\uc18c\uc5d0-\ud568\uc218-\uc801\uc6a9-dataframe",children:"applymap() - \ubaa8\ub4e0 \uc6d0\uc18c\uc5d0 \ud568\uc218 \uc801\uc6a9 (DataFrame)"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# DataFrame \uc804\uccb4\uc5d0 \ud568\uc218 \uc801\uc6a9 (Pandas 2.1.0+ \uc5d0\uc11c\ub294 map() \uc0ac\uc6a9)\ndf_numbers = pd.DataFrame({\n    'A': [1.234, 2.567, 3.891],\n    'B': [4.123, 5.678, 6.234],\n    'C': [7.567, 8.123, 9.456]\n})\n\n# applymap() - \uad6c\ubc84\uc804\n# df_rounded = df_numbers.applymap(lambda x: round(x, 1))\n\n# map() - \uc2e0\ubc84\uc804 (Pandas 2.1.0+)\ntry:\n    df_rounded = df_numbers.map(lambda x: round(x, 1))\nexcept AttributeError:\n    # \uad6c\ubc84\uc804 Pandas\n    df_rounded = df_numbers.applymap(lambda x: round(x, 1))\n\nprint(df_rounded)\n\n# \ud3ec\ub9f7\ud305 \uc801\uc6a9\ntry:\n    df_formatted = df_numbers.map(lambda x: f'{x:.2f}')\nexcept AttributeError:\n    df_formatted = df_numbers.applymap(lambda x: f'{x:.2f}')\n\nprint(df_formatted)\n"})}),"\n",(0,d.jsx)(e.admonition,{title:"\uc131\ub2a5 \ucd5c\uc801\ud654",type:"tip",children:(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"apply()"})," \ud568\uc218\ub294 \ud3b8\ub9ac\ud558\uc9c0\ub9cc \uc0c1\ub300\uc801\uc73c\ub85c \ub290\ub9bd\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \ubca1\ud130\ud654\ub41c \uc5f0\uc0b0\uc774\ub098 \ub0b4\uc7a5 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc608: ",(0,d.jsx)(e.code,{children:"df['col'].apply(lambda x: x * 2)"})," \ub300\uc2e0 ",(0,d.jsx)(e.code,{children:"df['col'] * 2"})," \uc0ac\uc6a9"]})}),"\n",(0,d.jsx)(e.h2,{id:"35-\ud53c\ubc97-\ud14c\uc774\ube14-pivot-table",children:"3.5 \ud53c\ubc97 \ud14c\uc774\ube14 (Pivot Table)"}),"\n",(0,d.jsx)(e.p,{children:"\ub370\uc774\ud130\ub97c \uc7ac\uad6c\uc870\ud654\ud558\uc5ec \uc694\uc57d \ud1b5\uacc4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"pivot_table-\uae30\ubcf8",children:"pivot_table() \uae30\ubcf8"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0c1\uc138 \ub9e4\ucd9c \ub370\uc774\ud130\nsales_detail = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=20),\n    '\uc9c0\uc5ed': ['\uc11c\uc6b8', '\uacbd\uae30', '\ubd80\uc0b0', '\uc778\ucc9c', '\ub300\uad6c'] * 4,\n    '\uce74\ud14c\uace0\ub9ac': ['\uc804\uc790', '\uc758\ub958', '\uc2dd\ud488', '\uac00\uc804', '\uc11c\uc801'] * 4,\n    '\ub9e4\ucd9c\uc561': np.random.randint(100000, 1000000, 20),\n    '\uc218\ub7c9': np.random.randint(10, 100, 20),\n    '\ud560\uc778\uc561': np.random.randint(10000, 100000, 20)\n})\n\n# \uae30\ubcf8 \ud53c\ubc97 \ud14c\uc774\ube14\npivot1 = pd.pivot_table(\n    sales_detail,\n    values='\ub9e4\ucd9c\uc561',\n    index='\uc9c0\uc5ed',\n    columns='\uce74\ud14c\uace0\ub9ac',\n    aggfunc='sum',\n    fill_value=0\n)\nprint(pivot1)\n\n# \uc5ec\ub7ec \uc9d1\uacc4 \ud568\uc218\npivot2 = pd.pivot_table(\n    sales_detail,\n    values='\ub9e4\ucd9c\uc561',\n    index='\uc9c0\uc5ed',\n    columns='\uce74\ud14c\uace0\ub9ac',\n    aggfunc=['sum', 'mean', 'count'],\n    fill_value=0\n)\nprint(pivot2)\n\n# \uc5ec\ub7ec \uac12 \uceec\ub7fc\npivot3 = pd.pivot_table(\n    sales_detail,\n    values=['\ub9e4\ucd9c\uc561', '\uc218\ub7c9'],\n    index='\uc9c0\uc5ed',\n    columns='\uce74\ud14c\uace0\ub9ac',\n    aggfunc='sum',\n    fill_value=0\n)\nprint(pivot3)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\uace0\uae09-\ud53c\ubc97-\ud14c\uc774\ube14",children:"\uace0\uae09 \ud53c\ubc97 \ud14c\uc774\ube14"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ub2e4\uc911 \uc778\ub371\uc2a4 \ud53c\ubc97\nsales_detail['\uc6d4'] = sales_detail['\ub0a0\uc9dc'].dt.month\npivot4 = pd.pivot_table(\n    sales_detail,\n    values='\ub9e4\ucd9c\uc561',\n    index=['\uc6d4', '\uc9c0\uc5ed'],\n    columns='\uce74\ud14c\uace0\ub9ac',\n    aggfunc='sum',\n    fill_value=0,\n    margins=True,  # \ucd1d\uacc4 \ucd94\uac00\n    margins_name='\ucd1d\uacc4'\n)\nprint(pivot4)\n\n# \ud37c\uc13c\ud2b8 \uacc4\uc0b0\npivot_pct = pivot1.div(pivot1.sum(axis=1), axis=0) * 100\nprint(pivot_pct.round(2))\n\n# \uc0ac\uc6a9\uc790 \uc815\uc758 \uc9d1\uacc4 \ud568\uc218\ndef sales_per_quantity(x):\n    return x['\ub9e4\ucd9c\uc561'].sum() / x['\uc218\ub7c9'].sum()\n\npivot5 = pd.pivot_table(\n    sales_detail,\n    index='\uc9c0\uc5ed',\n    columns='\uce74\ud14c\uace0\ub9ac',\n    aggfunc=sales_per_quantity\n)\nprint(pivot5)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"pivot-vs-pivot_table",children:"pivot() vs pivot_table()"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# pivot() - \uc911\ubcf5 \uc5c6\ub294 \ub370\uc774\ud130\uc758 \uc7ac\uad6c\uc870\ud654\nsimple_data = pd.DataFrame({\n    '\ub0a0\uc9dc': ['2024-01-01', '2024-01-01', '2024-01-02', '2024-01-02'],\n    '\uc9c0\uc5ed': ['\uc11c\uc6b8', '\ubd80\uc0b0', '\uc11c\uc6b8', '\ubd80\uc0b0'],\n    '\ub9e4\ucd9c\uc561': [100000, 150000, 120000, 130000]\n})\n\npivot_simple = simple_data.pivot(index='\ub0a0\uc9dc', columns='\uc9c0\uc5ed', values='\ub9e4\ucd9c\uc561')\nprint(pivot_simple)\n\n# pivot_table() - \uc911\ubcf5 \ub370\uc774\ud130 \uc9d1\uacc4\n# \uc911\ubcf5\uc774 \uc788\ub294 \uacbd\uc6b0 pivot()\uc740 \uc5d0\ub7ec \ubc1c\uc0dd, pivot_table() \uc0ac\uc6a9\n"})}),"\n",(0,d.jsx)(e.h2,{id:"36-\ub370\uc774\ud130-\uc7ac\uad6c\uc870\ud654-reshaping",children:"3.6 \ub370\uc774\ud130 \uc7ac\uad6c\uc870\ud654 (Reshaping)"}),"\n",(0,d.jsx)(e.p,{children:"Wide \ud615\uc2dd\uacfc Long \ud615\uc2dd \uac04\uc758 \ubcc0\ud658\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"melt---wide-to-long",children:"melt() - Wide to Long"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# Wide \ud615\uc2dd \ub370\uc774\ud130\nwide_df = pd.DataFrame({\n    '\uc81c\ud488': ['\ub178\ud2b8\ubd81', '\ud0dc\ube14\ub9bf', '\uc2a4\ub9c8\ud2b8\ud3f0'],\n    '1\uc6d4': [100, 80, 150],\n    '2\uc6d4': [120, 85, 160],\n    '3\uc6d4': [110, 90, 155]\n})\nprint(\"Wide \ud615\uc2dd:\")\nprint(wide_df)\n\n# Long \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658\nlong_df = pd.melt(\n    wide_df,\n    id_vars='\uc81c\ud488',\n    var_name='\uc6d4',\n    value_name='\ud310\ub9e4\ub7c9'\n)\nprint(\"\\nLong \ud615\uc2dd:\")\nprint(long_df)\n\n# \uc5ec\ub7ec \uac12 \uceec\ub7fc\nwide_multi = pd.DataFrame({\n    '\uc81c\ud488': ['\ub178\ud2b8\ubd81', '\ud0dc\ube14\ub9bf'],\n    '\uc11c\uc6b8_\ub9e4\ucd9c': [1000000, 800000],\n    '\uc11c\uc6b8_\uc218\ub7c9': [10, 8],\n    '\ubd80\uc0b0_\ub9e4\ucd9c': [800000, 600000],\n    '\ubd80\uc0b0_\uc218\ub7c9': [8, 6]\n})\n\nlong_multi = pd.melt(\n    wide_multi,\n    id_vars='\uc81c\ud488',\n    value_vars=['\uc11c\uc6b8_\ub9e4\ucd9c', '\uc11c\uc6b8_\uc218\ub7c9', '\ubd80\uc0b0_\ub9e4\ucd9c', '\ubd80\uc0b0_\uc218\ub7c9']\n)\nprint(long_multi)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"stack--unstack---\uc778\ub371\uc2a4-\uc7ac\uad6c\uc870\ud654",children:"stack() / unstack() - \uc778\ub371\uc2a4 \uc7ac\uad6c\uc870\ud654"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# stack() - \uceec\ub7fc\uc744 \uc778\ub371\uc2a4\ub85c\ndf_sales = pd.DataFrame({\n    '\uc11c\uc6b8': [100, 120, 110],\n    '\ubd80\uc0b0': [80, 90, 85],\n    '\ub300\uad6c': [70, 75, 72]\n}, index=['1\uc6d4', '2\uc6d4', '3\uc6d4'])\n\nstacked = df_sales.stack()\nprint(\"Stacked:\")\nprint(stacked)\n\n# unstack() - \uc778\ub371\uc2a4\ub97c \uceec\ub7fc\uc73c\ub85c\nunstacked = stacked.unstack()\nprint(\"\\nUnstacked:\")\nprint(unstacked)\n\n# \ub2e4\uc911 \uc778\ub371\uc2a4\uc5d0\uc11c \ud65c\uc6a9\nmulti_idx_df = pd.DataFrame({\n    '\ub9e4\ucd9c\uc561': [100, 200, 150, 250, 120, 220],\n    '\uc218\ub7c9': [10, 20, 15, 25, 12, 22]\n}, index=pd.MultiIndex.from_product(\n    [['\uc11c\uc6b8', '\ubd80\uc0b0', '\ub300\uad6c'], ['\uc804\uc790', '\uc758\ub958']],\n    names=['\uc9c0\uc5ed', '\uce74\ud14c\uace0\ub9ac']\n))\n\nprint(\"\\n\ub2e4\uc911 \uc778\ub371\uc2a4:\")\nprint(multi_idx_df)\n\n# level \uc9c0\uc815 unstack\nunstacked_level0 = multi_idx_df.unstack(level=0)\nprint(\"\\nUnstack level 0:\")\nprint(unstacked_level0)\n\nunstacked_level1 = multi_idx_df.unstack(level=1)\nprint(\"\\nUnstack level 1:\")\nprint(unstacked_level1)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"pivot---\uac04\ub2e8\ud55c-\uc7ac\uad6c\uc870\ud654",children:"pivot() - \uac04\ub2e8\ud55c \uc7ac\uad6c\uc870\ud654"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# Long \ud615\uc2dd \ub370\uc774\ud130\nlong_sales = pd.DataFrame({\n    '\ub0a0\uc9dc': ['2024-01-01', '2024-01-01', '2024-01-02', '2024-01-02'],\n    '\uc9c0\uc5ed': ['\uc11c\uc6b8', '\ubd80\uc0b0', '\uc11c\uc6b8', '\ubd80\uc0b0'],\n    '\ub9e4\ucd9c\uc561': [100000, 80000, 120000, 85000]\n})\n\n# Wide \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658\nwide_sales = long_sales.pivot(index='\ub0a0\uc9dc', columns='\uc9c0\uc5ed', values='\ub9e4\ucd9c\uc561')\nprint(wide_sales)\n\n# \ub2e4\uc2dc Long \ud615\uc2dd\uc73c\ub85c\nback_to_long = wide_sales.reset_index().melt(\n    id_vars='\ub0a0\uc9dc',\n    var_name='\uc9c0\uc5ed',\n    value_name='\ub9e4\ucd9c\uc561'\n)\nprint(back_to_long)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"37-\uc870\uac74\ubd80-\ub85c\uc9c1-conditional-logic",children:"3.7 \uc870\uac74\ubd80 \ub85c\uc9c1 (Conditional Logic)"}),"\n",(0,d.jsx)(e.p,{children:"\uc870\uac74\uc5d0 \ub530\ub978 \uac12 \ubcc0\uacbd \ubc0f \uc120\ud0dd\uc744 \uc218\ud589\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"where--mask",children:"where() / mask()"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \ub370\uc774\ud130\ndf_temp = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=7),\n    '\uc628\ub3c4': [5, 8, 12, 15, 18, 22, 25],\n    '\uc2b5\ub3c4': [60, 65, 55, 50, 48, 45, 42]\n})\n\n# where() - \uc870\uac74\uc774 True\uc778 \uac12 \uc720\uc9c0, False\ub294 \ub2e4\ub978 \uac12\uc73c\ub85c \ub300\uccb4\ntemp_filtered = df_temp['\uc628\ub3c4'].where(df_temp['\uc628\ub3c4'] > 10, other='\ub0ae\uc74c')\nprint(temp_filtered)\n\n# mask() - \uc870\uac74\uc774 True\uc778 \uac12\uc744 \ub300\uccb4 (where\uc758 \ubc18\ub300)\ntemp_masked = df_temp['\uc628\ub3c4'].mask(df_temp['\uc628\ub3c4'] < 10, other='\ub0ae\uc74c')\nprint(temp_masked)\n\n# DataFrame \uc804\uccb4\uc5d0 \uc801\uc6a9\ndf_filtered = df_temp.where(df_temp > 50, -1)\nprint(df_filtered)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"npwhere---\uc870\uac74\ubd80-\uac12-\ud560\ub2f9",children:"np.where() - \uc870\uac74\ubd80 \uac12 \ud560\ub2f9"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ub2e8\uc77c \uc870\uac74\ndf_temp['\ub0a0\uc528'] = np.where(df_temp['\uc628\ub3c4'] > 20, '\ub354\uc6c0', '\uc801\ub2f9')\nprint(df_temp)\n\n# \ub2e4\uc911 \uc870\uac74 (\uc911\ucca9)\ndf_temp['\ub0a0\uc528\ubd84\ub958'] = np.where(\n    df_temp['\uc628\ub3c4'] < 10, '\ucd94\uc6c0',\n    np.where(df_temp['\uc628\ub3c4'] < 20, '\uc801\ub2f9', '\ub354\uc6c0')\n)\nprint(df_temp)\n\n# \uc5ec\ub7ec \uc870\uac74 \uc870\ud569\ndf_temp['\uad8c\uc7a5\ud65c\ub3d9'] = np.where(\n    (df_temp['\uc628\ub3c4'] > 15) & (df_temp['\uc2b5\ub3c4'] < 60),\n    '\uc57c\uc678\ud65c\ub3d9',\n    '\uc2e4\ub0b4\ud65c\ub3d9'\n)\nprint(df_temp)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"npselect---\ub2e4\uc911-\uc870\uac74-\ucc98\ub9ac",children:"np.select() - \ub2e4\uc911 \uc870\uac74 \ucc98\ub9ac"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ub9e4\ucd9c \ub4f1\uae09 \ubd84\ub958\nsales_data = pd.DataFrame({\n    '\uc9c1\uc6d0': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', '\uc815\uc218\uc9c4', '\ucd5c\uc601\uc218'],\n    '\ub9e4\ucd9c\uc561': [5000000, 12000000, 8000000, 15000000, 6000000]\n})\n\n# \uc870\uac74 \ubc0f \uac12 \uc815\uc758\nconditions = [\n    sales_data['\ub9e4\ucd9c\uc561'] >= 15000000,\n    sales_data['\ub9e4\ucd9c\uc561'] >= 10000000,\n    sales_data['\ub9e4\ucd9c\uc561'] >= 7000000,\n    sales_data['\ub9e4\ucd9c\uc561'] >= 5000000\n]\n\nchoices = ['S\ub4f1\uae09', 'A\ub4f1\uae09', 'B\ub4f1\uae09', 'C\ub4f1\uae09']\n\nsales_data['\ub4f1\uae09'] = np.select(conditions, choices, default='D\ub4f1\uae09')\nprint(sales_data)\n\n# \uc778\uc13c\ud2f0\ube0c \uacc4\uc0b0\nconditions_bonus = [\n    sales_data['\ub9e4\ucd9c\uc561'] >= 15000000,\n    sales_data['\ub9e4\ucd9c\uc561'] >= 10000000,\n    sales_data['\ub9e4\ucd9c\uc561'] >= 7000000\n]\n\nchoices_bonus = [\n    sales_data['\ub9e4\ucd9c\uc561'] * 0.15,\n    sales_data['\ub9e4\ucd9c\uc561'] * 0.10,\n    sales_data['\ub9e4\ucd9c\uc561'] * 0.05\n]\n\nsales_data['\uc778\uc13c\ud2f0\ube0c'] = np.select(conditions_bonus, choices_bonus, default=0)\nprint(sales_data)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"clip---\uac12\uc758-\ubc94\uc704-\uc81c\ud55c",children:"clip() - \uac12\uc758 \ubc94\uc704 \uc81c\ud55c"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uac12\uc758 \uc0c1\ud55c/\ud558\ud55c \uc124\uc815\nscores = pd.Series([45, 67, 89, 92, 105, 34, 78])\n\n# 0-100 \ubc94\uc704\ub85c \uc81c\ud55c\nnormalized = scores.clip(lower=0, upper=100)\nprint(normalized)\n\n# DataFrame\uc5d0 \uc801\uc6a9\ndf_scores = pd.DataFrame({\n    '\uc218\ud559': [45, 105, 78, 92],\n    '\uc601\uc5b4': [-10, 88, 95, 110]\n})\n\ndf_clipped = df_scores.clip(lower=0, upper=100)\nprint(df_clipped)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"38-\ubb38\uc790\uc5f4-\uba54\uc11c\ub4dc-string-methods",children:"3.8 \ubb38\uc790\uc5f4 \uba54\uc11c\ub4dc (String Methods)"}),"\n",(0,d.jsx)(e.p,{children:"\ubb38\uc790\uc5f4 \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294 \ub2e4\uc591\ud55c \uba54\uc11c\ub4dc\ub97c \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"str-accessor-\uae30\ubcf8",children:"str accessor \uae30\ubcf8"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc0d8\ud50c \uace0\uac1d \ub370\uc774\ud130\ncustomers = pd.DataFrame({\n    '\uace0\uac1d\uba85': ['\uae40\ucca0\uc218', '\uc774\uc601\ud76c', '\ubc15\ubbfc\uc218', 'JOHN DOE', 'jane smith'],\n    '\uc774\uba54\uc77c': ['kim@email.com', 'lee@Email.COM', 'park@email.com',\n              'john@EMAIL.com', 'jane@email.com'],\n    '\uc804\ud654\ubc88\ud638': ['010-1234-5678', '010-9876-5432', '011-1111-2222',\n                '010-5555-6666', '010-7777-8888'],\n    '\uc8fc\uc18c': ['\uc11c\uc6b8\uc2dc \uac15\ub0a8\uad6c', '\uacbd\uae30\ub3c4 \uc131\ub0a8\uc2dc', '\ubd80\uc0b0\uc2dc \ud574\uc6b4\ub300\uad6c',\n            '\uc11c\uc6b8\uc2dc \uc1a1\ud30c\uad6c', '\uc778\ucc9c\uc2dc \ub0a8\ub3d9\uad6c']\n})\n\n# \ub300\uc18c\ubb38\uc790 \ubcc0\ud658\ncustomers['\uc774\uba54\uc77c_\uc18c\ubb38\uc790'] = customers['\uc774\uba54\uc77c'].str.lower()\ncustomers['\uc774\uba54\uc77c_\ub300\ubb38\uc790'] = customers['\uc774\uba54\uc77c'].str.upper()\nprint(customers[['\uc774\uba54\uc77c', '\uc774\uba54\uc77c_\uc18c\ubb38\uc790', '\uc774\uba54\uc77c_\ub300\ubb38\uc790']])\n\n# \ubb38\uc790\uc5f4 \ud3ec\ud568 \uc5ec\ubd80 \ud655\uc778\nseoul_customers = customers[customers['\uc8fc\uc18c'].str.contains('\uc11c\uc6b8')]\nprint(seoul_customers)\n\n# \uc2dc\uc791/\ub05d \ubb38\uc790\uc5f4 \ud655\uc778\nemail_com = customers[customers['\uc774\uba54\uc77c'].str.endswith('.com')]\nprint(email_com)\n\n# \ubb38\uc790\uc5f4 \uce58\ud658\ncustomers['\uc804\ud654\ubc88\ud638_\uc22b\uc790\ub9cc'] = customers['\uc804\ud654\ubc88\ud638'].str.replace('-', '')\nprint(customers[['\uc804\ud654\ubc88\ud638', '\uc804\ud654\ubc88\ud638_\uc22b\uc790\ub9cc']])\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\ubb38\uc790\uc5f4-\ubd84\ud560-\ubc0f-\ucd94\ucd9c",children:"\ubb38\uc790\uc5f4 \ubd84\ud560 \ubc0f \ucd94\ucd9c"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# split() - \ubb38\uc790\uc5f4 \ubd84\ud560\ncustomers['\uc9c0\uc5ed'] = customers['\uc8fc\uc18c'].str.split().str[0]\ncustomers['\uc0c1\uc138\uc8fc\uc18c'] = customers['\uc8fc\uc18c'].str.split(expand=True)[1]\nprint(customers[['\uc8fc\uc18c', '\uc9c0\uc5ed', '\uc0c1\uc138\uc8fc\uc18c']])\n\n# \uc774\uba54\uc77c \ub3c4\uba54\uc778 \ucd94\ucd9c\ncustomers['\ub3c4\uba54\uc778'] = customers['\uc774\uba54\uc77c'].str.split('@').str[1]\nprint(customers[['\uc774\uba54\uc77c', '\ub3c4\uba54\uc778']])\n\n# extract() - \uc815\uaddc\uc2dd\uc73c\ub85c \ucd94\ucd9c\ncustomers['\uc9c0\uc5ed\ubc88\ud638'] = customers['\uc804\ud654\ubc88\ud638'].str.extract(r'(\\d{3})-')\nprint(customers[['\uc804\ud654\ubc88\ud638', '\uc9c0\uc5ed\ubc88\ud638']])\n\n# slice - \ubb38\uc790\uc5f4 \uc2ac\ub77c\uc774\uc2f1\ncustomers['\uc774\ub984_\uc774\ub2c8\uc15c'] = customers['\uace0\uac1d\uba85'].str[:1]\nprint(customers[['\uace0\uac1d\uba85', '\uc774\ub984_\uc774\ub2c8\uc15c']])\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\ubb38\uc790\uc5f4-\uc815\uc81c",children:"\ubb38\uc790\uc5f4 \uc815\uc81c"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uacf5\ubc31 \uc81c\uac70\nmessy_data = pd.DataFrame({\n    '\uc81c\ud488\uba85': ['  \ub178\ud2b8\ubd81  ', '\ub9c8\uc6b0\uc2a4', '  \ud0a4\ubcf4\ub4dc', '\ubaa8\ub2c8\ud130  ']\n})\n\nmessy_data['\uc81c\ud488\uba85_\uc815\uc81c'] = messy_data['\uc81c\ud488\uba85'].str.strip()\nprint(messy_data)\n\n# \ud328\ub529\ncodes = pd.Series([1, 23, 456, 7890])\ncodes_padded = codes.astype(str).str.pad(width=5, side='left', fillchar='0')\nprint(codes_padded)\n\n# \ubb38\uc790\uc5f4 \uae38\uc774\ncustomers['\uc774\ub984_\uae38\uc774'] = customers['\uace0\uac1d\uba85'].str.len()\nprint(customers[['\uace0\uac1d\uba85', '\uc774\ub984_\uae38\uc774']])\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\uc815\uaddc\uc2dd-\ud65c\uc6a9",children:"\uc815\uaddc\uc2dd \ud65c\uc6a9"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ud328\ud134 \ub9e4\uce6d\nproducts = pd.DataFrame({\n    '\uc0c1\ud488\ucf54\ub4dc': ['ELEC-001', 'FOOD-045', 'ELEC-123', 'CLOTH-067', 'FOOD-012']\n})\n\n# \ud2b9\uc815 \ud328\ud134 \ucd94\ucd9c\nproducts['\uce74\ud14c\uace0\ub9ac'] = products['\uc0c1\ud488\ucf54\ub4dc'].str.extract(r'([A-Z]+)-')\nproducts['\ubc88\ud638'] = products['\uc0c1\ud488\ucf54\ub4dc'].str.extract(r'-(\\d+)')\nprint(products)\n\n# \ud328\ud134 \uc77c\uce58 \ud655\uc778\nproducts['\uc804\uc790\uc81c\ud488'] = products['\uc0c1\ud488\ucf54\ub4dc'].str.match(r'ELEC-.*')\nprint(products)\n\n# \ubaa8\ub4e0 \uc77c\uce58 \ud56d\ubaa9 \ucc3e\uae30\ntext_data = pd.Series([\n    '\uac00\uaca9: 10,000\uc6d0, \ud560\uc778: 2,000\uc6d0',\n    '\uac00\uaca9: 50,000\uc6d0, \ud560\uc778: 5,000\uc6d0'\n])\n\nprices = text_data.str.findall(r'\\d+,\\d+')\nprint(prices)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"39-\ub0a0\uc9dc-\uba54\uc11c\ub4dc-datetime-methods",children:"3.9 \ub0a0\uc9dc \uba54\uc11c\ub4dc (DateTime Methods)"}),"\n",(0,d.jsx)(e.p,{children:"\ub0a0\uc9dc/\uc2dc\uac04 \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\ub294 \uba54\uc11c\ub4dc\ub97c \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"dt-accessor-\uae30\ubcf8",children:"dt accessor \uae30\ubcf8"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ub0a0\uc9dc \ub370\uc774\ud130 \uc0dd\uc131\ndate_df = pd.DataFrame({\n    '\uc8fc\ubb38\uc77c\uc2dc': pd.date_range('2024-01-01', periods=10, freq='D'),\n    '\ub9e4\ucd9c\uc561': np.random.randint(100000, 1000000, 10)\n})\n\n# \ub0a0\uc9dc \uad6c\uc131\uc694\uc18c \ucd94\ucd9c\ndate_df['\ub144'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.year\ndate_df['\uc6d4'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.month\ndate_df['\uc77c'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.day\ndate_df['\uc694\uc77c'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.day_name()\ndate_df['\uc8fc\ucc28'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.isocalendar().week\nprint(date_df)\n\n# \ubd84\uae30 \ucd94\ucd9c\ndate_df['\ubd84\uae30'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.quarter\nprint(date_df[['\uc8fc\ubb38\uc77c\uc2dc', '\ubd84\uae30']])\n\n# \uc694\uc77c \ubc88\ud638 (\uc6d4\uc694\uc77c=0)\ndate_df['\uc694\uc77c\ubc88\ud638'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.dayofweek\nprint(date_df[['\uc8fc\ubb38\uc77c\uc2dc', '\uc694\uc77c', '\uc694\uc77c\ubc88\ud638']])\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\ub0a0\uc9dc-\uc5f0\uc0b0",children:"\ub0a0\uc9dc \uc5f0\uc0b0"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ub0a0\uc9dc \ucc28\uc774 \uacc4\uc0b0\ndate_df['\uc624\ub298'] = pd.Timestamp.now()\ndate_df['\uacbd\uacfc\uc77c\uc218'] = (date_df['\uc624\ub298'] - date_df['\uc8fc\ubb38\uc77c\uc2dc']).dt.days\nprint(date_df[['\uc8fc\ubb38\uc77c\uc2dc', '\uacbd\uacfc\uc77c\uc218']])\n\n# \ub0a0\uc9dc \ub354\ud558\uae30/\ube7c\uae30\ndate_df['\ubc30\uc1a1\uc608\uc815\uc77c'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'] + pd.Timedelta(days=3)\ndate_df['\ubc18\ud488\ub9c8\uac10\uc77c'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'] + pd.Timedelta(days=30)\nprint(date_df[['\uc8fc\ubb38\uc77c\uc2dc', '\ubc30\uc1a1\uc608\uc815\uc77c', '\ubc18\ud488\ub9c8\uac10\uc77c']])\n\n# \uc6d4 \ub2e8\uc704 \uc5f0\uc0b0 (MonthEnd \uc0ac\uc6a9)\nfrom pandas.tseries.offsets import MonthEnd, MonthBegin\n\ndate_df['\uc6d4\ub9d0'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'] + MonthEnd(0)\ndate_df['\ub2e4\uc74c\uc6d4\ucd08'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'] + MonthBegin(1)\nprint(date_df[['\uc8fc\ubb38\uc77c\uc2dc', '\uc6d4\ub9d0', '\ub2e4\uc74c\uc6d4\ucd08']])\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\ub0a0\uc9dc-\ud615\uc2dd-\ubcc0\ud658",children:"\ub0a0\uc9dc \ud615\uc2dd \ubcc0\ud658"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ubb38\uc790\uc5f4\uc744 \ub0a0\uc9dc\ub85c \ubcc0\ud658\nstr_dates = pd.DataFrame({\n    '\ub0a0\uc9dc\ubb38\uc790\uc5f4': ['2024-01-01', '2024/02/15', '03-20-2024', '2024.04.10']\n})\n\nstr_dates['\ub0a0\uc9dc1'] = pd.to_datetime(str_dates['\ub0a0\uc9dc\ubb38\uc790\uc5f4'].iloc[0])\nstr_dates['\ub0a0\uc9dc2'] = pd.to_datetime(str_dates['\ub0a0\uc9dc\ubb38\uc790\uc5f4'].iloc[1])\n\n# format \uc9c0\uc815\nstr_dates['\ub0a0\uc9dc3'] = pd.to_datetime(str_dates['\ub0a0\uc9dc\ubb38\uc790\uc5f4'].iloc[2], format='%m-%d-%Y')\n\n# \ub0a0\uc9dc\ub97c \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ndate_df['\uc8fc\ubb38\uc77c_\ud3ec\ub9f7'] = date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.strftime('%Y\ub144 %m\uc6d4 %d\uc77c')\nprint(date_df[['\uc8fc\ubb38\uc77c\uc2dc', '\uc8fc\ubb38\uc77c_\ud3ec\ub9f7']])\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\ub0a0\uc9dc-\ud544\ud130\ub9c1-\ubc0f-\uadf8\ub8f9\ud654",children:"\ub0a0\uc9dc \ud544\ud130\ub9c1 \ubc0f \uadf8\ub8f9\ud654"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \ud2b9\uc815 \uae30\uac04 \ud544\ud130\ub9c1\njan_sales = date_df[date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.month == 1]\nprint(jan_sales)\n\n# \uc694\uc77c\ubcc4 \ud544\ud130\ub9c1 (\uc8fc\ub9d0 \ub9e4\ucd9c)\nweekend_sales = date_df[date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.dayofweek.isin([5, 6])]\nprint(weekend_sales)\n\n# \ub0a0\uc9dc\ubcc4 \uadf8\ub8f9\ud654\ndaily_sales = date_df.groupby(date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.date)['\ub9e4\ucd9c\uc561'].sum()\nprint(daily_sales)\n\n# \uc6d4\ubcc4 \uadf8\ub8f9\ud654\nmonthly_sales = date_df.groupby(date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.to_period('M'))['\ub9e4\ucd9c\uc561'].sum()\nprint(monthly_sales)\n\n# \uc694\uc77c\ubcc4 \uadf8\ub8f9\ud654\nweekday_sales = date_df.groupby(date_df['\uc8fc\ubb38\uc77c\uc2dc'].dt.day_name())['\ub9e4\ucd9c\uc561'].mean()\nprint(weekday_sales)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"310-\uc2e4\uc804-\uc608\uc81c",children:"3.10 \uc2e4\uc804 \uc608\uc81c"}),"\n",(0,d.jsx)(e.p,{children:"\uc2e4\ubb34\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294 \ubcf5\ud569 \ub370\uc774\ud130 \uc870\uc791 \uae30\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,d.jsx)(e.h3,{id:"\uc608\uc81c-1-\ub9e4\ucd9c-\ubd84\uc11d-\ub300\uc2dc\ubcf4\ub4dc",children:"\uc608\uc81c 1: \ub9e4\ucd9c \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc885\ud569 \ub9e4\ucd9c \ub370\uc774\ud130 \uc0dd\uc131\nnp.random.seed(42)\nsales_data = pd.DataFrame({\n    '\uc8fc\ubb38\uc77c\uc2dc': pd.date_range('2024-01-01', periods=100, freq='D'),\n    '\uc8fc\ubb38\ubc88\ud638': [f'ORD-{i:05d}' for i in range(1, 101)],\n    '\uace0\uac1dID': np.random.choice(['C001', 'C002', 'C003', 'C004', 'C005'], 100),\n    '\uc81c\ud488\uce74\ud14c\uace0\ub9ac': np.random.choice(['\uc804\uc790', '\uc758\ub958', '\uc2dd\ud488', '\uac00\uc804'], 100),\n    '\ub9e4\ucd9c\uc561': np.random.randint(50000, 2000000, 100),\n    '\uc218\ub7c9': np.random.randint(1, 20, 100),\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\uacbd\uae30', '\ubd80\uc0b0', '\ub300\uad6c', '\uc778\ucc9c'], 100)\n})\n\n# 1. \uc6d4\ubcc4 \ub9e4\ucd9c \ucd94\uc774\nsales_data['\ub144\uc6d4'] = sales_data['\uc8fc\ubb38\uc77c\uc2dc'].dt.to_period('M')\nmonthly_trend = sales_data.groupby('\ub144\uc6d4').agg({\n    '\ub9e4\ucd9c\uc561': ['sum', 'mean', 'count'],\n    '\uc218\ub7c9': 'sum'\n}).round(0)\nmonthly_trend.columns = ['\ucd1d\ub9e4\ucd9c', '\ud3c9\uade0\ub9e4\ucd9c', '\uc8fc\ubb38\uac74\uc218', '\ucd1d\uc218\ub7c9']\nprint(\"\uc6d4\ubcc4 \ub9e4\ucd9c \ucd94\uc774:\")\nprint(monthly_trend)\n\n# 2. \uce74\ud14c\uace0\ub9ac\ubcc4 \uc9c0\uc5ed\ubcc4 \ub9e4\ucd9c \ubd84\uc11d\ncategory_region_pivot = pd.pivot_table(\n    sales_data,\n    values='\ub9e4\ucd9c\uc561',\n    index='\uc81c\ud488\uce74\ud14c\uace0\ub9ac',\n    columns='\uc9c0\uc5ed',\n    aggfunc='sum',\n    fill_value=0,\n    margins=True\n)\nprint(\"\\n\uce74\ud14c\uace0\ub9ac\ubcc4 \uc9c0\uc5ed\ubcc4 \ub9e4\ucd9c:\")\nprint(category_region_pivot)\n\n# 3. \uace0\uac1d\ubcc4 \uad6c\ub9e4 \ud328\ud134 \ubd84\uc11d\ncustomer_analysis = sales_data.groupby('\uace0\uac1dID').agg({\n    '\uc8fc\ubb38\ubc88\ud638': 'count',\n    '\ub9e4\ucd9c\uc561': ['sum', 'mean', 'max'],\n    '\uc81c\ud488\uce74\ud14c\uace0\ub9ac': lambda x: x.value_counts().index[0],  # \ucd5c\ub2e4 \uad6c\ub9e4 \uce74\ud14c\uace0\ub9ac\n    '\uc8fc\ubb38\uc77c\uc2dc': ['min', 'max']\n})\ncustomer_analysis.columns = ['\uc8fc\ubb38\ud69f\uc218', '\ucd1d\uad6c\ub9e4\uc561', '\ud3c9\uade0\uad6c\ub9e4\uc561', '\ucd5c\ub300\uad6c\ub9e4\uc561',\n                             '\uc120\ud638\uce74\ud14c\uace0\ub9ac', '\uccab\uad6c\ub9e4\uc77c', '\ucd5c\uadfc\uad6c\ub9e4\uc77c']\n\n# \uace0\uac1d \ub4f1\uae09 \ubd80\uc5ec\ncustomer_analysis['\uace0\uac1d\ub4f1\uae09'] = pd.cut(\n    customer_analysis['\ucd1d\uad6c\ub9e4\uc561'],\n    bins=[0, 5000000, 10000000, 20000000, float('inf')],\n    labels=['\ube0c\ub860\uc988', '\uc2e4\ubc84', '\uace8\ub4dc', 'VIP']\n)\n\n# \uc7ac\uad6c\ub9e4 \uae30\uac04 \uacc4\uc0b0\ncustomer_analysis['\uad6c\ub9e4\uc8fc\uae30'] = (\n    customer_analysis['\ucd5c\uadfc\uad6c\ub9e4\uc77c'] - customer_analysis['\uccab\uad6c\ub9e4\uc77c']\n).dt.days / customer_analysis['\uc8fc\ubb38\ud69f\uc218']\n\nprint(\"\\n\uace0\uac1d\ubcc4 \ubd84\uc11d:\")\nprint(customer_analysis)\n\n# 4. \uc8fc\uc911/\uc8fc\ub9d0 \ub9e4\ucd9c \ube44\uad50\nsales_data['\uc8fc\uc911\uc5ec\ubd80'] = np.where(\n    sales_data['\uc8fc\ubb38\uc77c\uc2dc'].dt.dayofweek < 5,\n    '\uc8fc\uc911',\n    '\uc8fc\ub9d0'\n)\n\nweekday_analysis = sales_data.groupby(['\uc8fc\uc911\uc5ec\ubd80', '\uc81c\ud488\uce74\ud14c\uace0\ub9ac'])['\ub9e4\ucd9c\uc561'].agg([\n    'sum', 'mean', 'count'\n]).round(0)\nprint(\"\\n\uc8fc\uc911/\uc8fc\ub9d0 \ub9e4\ucd9c \ube44\uad50:\")\nprint(weekday_analysis)\n\n# 5. \uc0c1\uc704/\ud558\uc704 \uc131\uacfc \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\ntop_categories = sales_data.groupby('\uc81c\ud488\uce74\ud14c\uace0\ub9ac')['\ub9e4\ucd9c\uc561'].sum().nlargest(3)\nbottom_categories = sales_data.groupby('\uc81c\ud488\uce74\ud14c\uace0\ub9ac')['\ub9e4\ucd9c\uc561'].sum().nsmallest(3)\n\nprint(\"\\n\uc0c1\uc704 3\uac1c \uce74\ud14c\uace0\ub9ac:\")\nprint(top_categories)\nprint(\"\\n\ud558\uc704 3\uac1c \uce74\ud14c\uace0\ub9ac:\")\nprint(bottom_categories)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\uc608\uc81c-2-\uace0\uac1d-\uc138\uadf8\uba3c\ud2b8-\ubd84\uc11d",children:"\uc608\uc81c 2: \uace0\uac1d \uc138\uadf8\uba3c\ud2b8 \ubd84\uc11d"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# RFM \ubd84\uc11d (Recency, Frequency, Monetary)\nanalysis_date = sales_data['\uc8fc\ubb38\uc77c\uc2dc'].max()\n\nrfm = sales_data.groupby('\uace0\uac1dID').agg({\n    '\uc8fc\ubb38\uc77c\uc2dc': lambda x: (analysis_date - x.max()).days,  # Recency\n    '\uc8fc\ubb38\ubc88\ud638': 'count',  # Frequency\n    '\ub9e4\ucd9c\uc561': 'sum'  # Monetary\n})\nrfm.columns = ['Recency', 'Frequency', 'Monetary']\n\n# RFM \uc810\uc218 \uacc4\uc0b0 (5\uc810 \ucc99\ub3c4)\nrfm['R_Score'] = pd.qcut(rfm['Recency'], 5, labels=[5, 4, 3, 2, 1])\nrfm['F_Score'] = pd.qcut(rfm['Frequency'].rank(method='first'), 5, labels=[1, 2, 3, 4, 5])\nrfm['M_Score'] = pd.qcut(rfm['Monetary'], 5, labels=[1, 2, 3, 4, 5])\n\n# RFM \uc810\uc218 \ud569\uacc4\nrfm['RFM_Score'] = (\n    rfm['R_Score'].astype(int) +\n    rfm['F_Score'].astype(int) +\n    rfm['M_Score'].astype(int)\n)\n\n# \uace0\uac1d \uc138\uadf8\uba3c\ud2b8 \ubd84\ub958\ndef segment_customer(row):\n    if row['RFM_Score'] >= 12:\n        return 'Champions'\n    elif row['RFM_Score'] >= 9:\n        return 'Loyal'\n    elif row['RFM_Score'] >= 6:\n        return 'Potential'\n    else:\n        return 'At Risk'\n\nrfm['Segment'] = rfm.apply(segment_customer, axis=1)\n\nprint(\"RFM \ubd84\uc11d \uacb0\uacfc:\")\nprint(rfm.sort_values('RFM_Score', ascending=False))\n\n# \uc138\uadf8\uba3c\ud2b8\ubcc4 \ud1b5\uacc4\nsegment_stats = rfm.groupby('Segment').agg({\n    'Recency': 'mean',\n    'Frequency': 'mean',\n    'Monetary': 'mean',\n    'RFM_Score': 'count'\n}).round(2)\nsegment_stats.columns = ['\ud3c9\uade0\ucd5c\uadfc\uad6c\ub9e4\uc77c', '\ud3c9\uade0\uad6c\ub9e4\ube48\ub3c4', '\ud3c9\uade0\uad6c\ub9e4\uae08\uc561', '\uace0\uac1d\uc218']\nprint(\"\\n\uc138\uadf8\uba3c\ud2b8\ubcc4 \ud1b5\uacc4:\")\nprint(segment_stats)\n\n# \uc138\uadf8\uba3c\ud2b8\ubcc4 \ub9e4\ucd9c \uae30\uc5ec\ub3c4\nsegment_contribution = rfm.groupby('Segment')['Monetary'].sum()\nsegment_contribution_pct = (segment_contribution / segment_contribution.sum() * 100).round(2)\nprint(\"\\n\uc138\uadf8\uba3c\ud2b8\ubcc4 \ub9e4\ucd9c \uae30\uc5ec\ub3c4 (%):\")\nprint(segment_contribution_pct)\n"})}),"\n",(0,d.jsx)(e.h3,{id:"\uc608\uc81c-3-\uc2dc\uacc4\uc5f4-\ud2b8\ub80c\ub4dc-\ubd84\uc11d",children:"\uc608\uc81c 3: \uc2dc\uacc4\uc5f4 \ud2b8\ub80c\ub4dc \ubd84\uc11d"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# \uc77c\ubcc4 \ub9e4\ucd9c \ub370\uc774\ud130\ndaily_sales = sales_data.groupby(sales_data['\uc8fc\ubb38\uc77c\uc2dc'].dt.date).agg({\n    '\ub9e4\ucd9c\uc561': 'sum',\n    '\uc8fc\ubb38\ubc88\ud638': 'count'\n}).reset_index()\ndaily_sales.columns = ['\ub0a0\uc9dc', '\ub9e4\ucd9c\uc561', '\uc8fc\ubb38\uac74\uc218']\ndaily_sales['\ub0a0\uc9dc'] = pd.to_datetime(daily_sales['\ub0a0\uc9dc'])\n\n# \uc774\ub3d9\ud3c9\uade0 \uacc4\uc0b0 (7\uc77c)\ndaily_sales['\ub9e4\ucd9c_7\uc77c\ud3c9\uade0'] = daily_sales['\ub9e4\ucd9c\uc561'].rolling(window=7).mean()\n\n# \uc804\uc77c \ub300\ube44 \uc99d\uac10\ndaily_sales['\uc804\uc77c\ub300\ube44'] = daily_sales['\ub9e4\ucd9c\uc561'].diff()\ndaily_sales['\uc804\uc77c\ub300\ube44\uc728'] = daily_sales['\ub9e4\ucd9c\uc561'].pct_change() * 100\n\n# \uc804\uc8fc \ub3d9\uc77c \uc694\uc77c \ub300\ube44\ndaily_sales['\uc804\uc8fc\ub300\ube44'] = daily_sales['\ub9e4\ucd9c\uc561'].diff(7)\ndaily_sales['\uc804\uc8fc\ub300\ube44\uc728'] = (daily_sales['\ub9e4\ucd9c\uc561'] / daily_sales['\ub9e4\ucd9c\uc561'].shift(7) - 1) * 100\n\nprint(\"\uc2dc\uacc4\uc5f4 \ud2b8\ub80c\ub4dc \ubd84\uc11d:\")\nprint(daily_sales.tail(10))\n\n# \ub9e4\ucd9c \uae09\uc99d/\uae09\ub77d \ud0d0\uc9c0\nthreshold = daily_sales['\uc804\uc77c\ub300\ube44\uc728'].std() * 2\ndaily_sales['\uc774\uc0c1\uce58'] = np.where(\n    abs(daily_sales['\uc804\uc77c\ub300\ube44\uc728']) > threshold,\n    '\uc774\uc0c1',\n    '\uc815\uc0c1'\n)\n\nanomalies = daily_sales[daily_sales['\uc774\uc0c1\uce58'] == '\uc774\uc0c1']\nprint(f\"\\n\uc774\uc0c1\uce58 \ud0d0\uc9c0 (\xb1{threshold:.1f}% \ucd08\uacfc):\")\nprint(anomalies[['\ub0a0\uc9dc', '\ub9e4\ucd9c\uc561', '\uc804\uc77c\ub300\ube44\uc728']])\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\uc5f0\uc2b5-\ubb38\uc81c",children:"\uc5f0\uc2b5 \ubb38\uc81c"}),"\n",(0,d.jsx)(e.h3,{id:"\ubb38\uc81c-1-\ud310\ub9e4-\ub370\uc774\ud130-\ubd84\uc11d",children:"\ubb38\uc81c 1: \ud310\ub9e4 \ub370\uc774\ud130 \ubd84\uc11d"}),"\n",(0,d.jsx)(e.p,{children:"\ub2e4\uc74c \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uc138\uc694."}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"sales = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=30),\n    '\uc81c\ud488': np.random.choice(['A', 'B', 'C', 'D'], 30),\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\ubd80\uc0b0', '\ub300\uad6c'], 30),\n    '\ub9e4\ucd9c': np.random.randint(100000, 1000000, 30),\n    '\uc218\ub7c9': np.random.randint(10, 100, 30)\n})\n"})}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"\uc694\uad6c\uc0ac\ud56d:"})}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\uc81c\ud488\ubcc4 \ucd1d \ub9e4\ucd9c\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c"}),"\n",(0,d.jsx)(e.li,{children:"\ub9e4\ucd9c 500,000\uc6d0 \uc774\uc0c1\uc778 \uac70\ub798\ub9cc \ud544\ud130\ub9c1"}),"\n",(0,d.jsx)(e.li,{children:"\uc9c0\uc5ed\ubcc4, \uc81c\ud488\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c\uc744 \ud53c\ubc97 \ud14c\uc774\ube14\ub85c \uc0dd\uc131"}),"\n",(0,d.jsx)(e.li,{children:"\ub9e4\ucd9c \ub4f1\uae09 \ubd80\uc5ec (\uc0c1: 700,000 \uc774\uc0c1, \uc911: 400,000 \uc774\uc0c1, \ud558: \ub098\uba38\uc9c0)"}),"\n",(0,d.jsx)(e.li,{children:"\uc694\uc77c\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c \uacc4\uc0b0"}),"\n"]}),"\n",(0,d.jsxs)(s,{children:[(0,d.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# 1. \uc81c\ud488\ubcc4 \ucd1d \ub9e4\ucd9c (\ub0b4\ub9bc\ucc28\uc21c)\nproduct_sales = sales.groupby('\uc81c\ud488')['\ub9e4\ucd9c'].sum().sort_values(ascending=False)\nprint(\"\uc81c\ud488\ubcc4 \ucd1d \ub9e4\ucd9c:\")\nprint(product_sales)\n\n# 2. \ub9e4\ucd9c 500,000\uc6d0 \uc774\uc0c1 \ud544\ud130\ub9c1\nhigh_sales = sales[sales['\ub9e4\ucd9c'] >= 500000]\nprint(f\"\\n\uace0\ub9e4\ucd9c \uac70\ub798 \uac74\uc218: {len(high_sales)}\")\n\n# 3. \uc9c0\uc5ed\ubcc4, \uc81c\ud488\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c \ud53c\ubc97 \ud14c\uc774\ube14\npivot = pd.pivot_table(\n    sales,\n    values='\ub9e4\ucd9c',\n    index='\uc9c0\uc5ed',\n    columns='\uc81c\ud488',\n    aggfunc='mean',\n    fill_value=0\n).round(0)\nprint(\"\\n\uc9c0\uc5ed\ubcc4 \uc81c\ud488\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c:\")\nprint(pivot)\n\n# 4. \ub9e4\ucd9c \ub4f1\uae09 \ubd80\uc5ec\nsales['\ub4f1\uae09'] = pd.cut(\n    sales['\ub9e4\ucd9c'],\n    bins=[0, 400000, 700000, float('inf')],\n    labels=['\ud558', '\uc911', '\uc0c1']\n)\nprint(\"\\n\ub4f1\uae09\ubcc4 \uac70\ub798 \uac74\uc218:\")\nprint(sales['\ub4f1\uae09'].value_counts())\n\n# 5. \uc694\uc77c\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c\nsales['\uc694\uc77c'] = sales['\ub0a0\uc9dc'].dt.day_name()\nweekday_avg = sales.groupby('\uc694\uc77c')['\ub9e4\ucd9c'].mean().sort_values(ascending=False)\nprint(\"\\n\uc694\uc77c\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c:\")\nprint(weekday_avg.round(0))\n"})})]}),"\n",(0,d.jsx)(e.h3,{id:"\ubb38\uc81c-2-\uace0\uac1d-\ub370\uc774\ud130-\uc815\uc81c",children:"\ubb38\uc81c 2: \uace0\uac1d \ub370\uc774\ud130 \uc815\uc81c"}),"\n",(0,d.jsx)(e.p,{children:"\ub2e4\uc74c \uc9c0\uc800\ubd84\ud55c \uace0\uac1d \ub370\uc774\ud130\ub97c \uc815\uc81c\ud558\uc138\uc694."}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"customers = pd.DataFrame({\n    '\uc774\ub984': ['  \uae40\ucca0\uc218  ', 'LEE YOUNGHEE', 'park minsu', '\uc815\uc218\uc9c4'],\n    '\uc774\uba54\uc77c': ['KIM@email.com', 'lee@EMAIL.COM', 'Park@Email.com', 'jung@email.com'],\n    '\uc804\ud654': ['010-1234-5678', '01098765432', '010.1111.2222', '010-5555-6666'],\n    '\uac00\uc785\uc77c': ['2024-01-15', '2024/02/20', '03-10-2024', '2024.04.05']\n})\n"})}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"\uc694\uad6c\uc0ac\ud56d:"})}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\uc774\ub984\uc758 \uc55e\ub4a4 \uacf5\ubc31 \uc81c\uac70 \ubc0f \uccab \uae00\uc790\ub9cc \ub300\ubb38\uc790\ub85c \ubcc0\ud658"}),"\n",(0,d.jsx)(e.li,{children:"\uc774\uba54\uc77c\uc744 \ubaa8\ub450 \uc18c\ubb38\uc790\ub85c \ubcc0\ud658"}),"\n",(0,d.jsx)(e.li,{children:"\uc804\ud654\ubc88\ud638\ub97c '010-XXXX-XXXX' \ud615\uc2dd\uc73c\ub85c \ud1b5\uc77c"}),"\n",(0,d.jsx)(e.li,{children:"\uac00\uc785\uc77c\uc744 datetime \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658"}),"\n",(0,d.jsx)(e.li,{children:"\uac00\uc785 \ud6c4 \uacbd\uacfc \uc77c\uc218 \uacc4\uc0b0"}),"\n"]}),"\n",(0,d.jsxs)(s,{children:[(0,d.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# 1. \uc774\ub984 \uc815\uc81c\ncustomers['\uc774\ub984'] = customers['\uc774\ub984'].str.strip().str.title()\n\n# 2. \uc774\uba54\uc77c \uc18c\ubb38\uc790 \ubcc0\ud658\ncustomers['\uc774\uba54\uc77c'] = customers['\uc774\uba54\uc77c'].str.lower()\n\n# 3. \uc804\ud654\ubc88\ud638 \ud1b5\uc77c\n# \uba3c\uc800 \uc22b\uc790\ub9cc \ucd94\ucd9c\ncustomers['\uc804\ud654_\uc22b\uc790'] = customers['\uc804\ud654'].str.replace(r'[^0-9]', '', regex=True)\n# \ud615\uc2dd \uc801\uc6a9\ncustomers['\uc804\ud654'] = customers['\uc804\ud654_\uc22b\uc790'].str.replace(\n    r'(\\d{3})(\\d{4})(\\d{4})',\n    r'\\1-\\2-\\3',\n    regex=True\n)\ncustomers.drop('\uc804\ud654_\uc22b\uc790', axis=1, inplace=True)\n\n# 4. \uac00\uc785\uc77c \ubcc0\ud658\n# \uac01 \ud589\ub9c8\ub2e4 \ub2e4\ub978 \ud615\uc2dd\uc774\ubbc0\ub85c \uac1c\ubcc4 \ucc98\ub9ac \ub610\ub294 infer_datetime_format \uc0ac\uc6a9\ncustomers['\uac00\uc785\uc77c'] = pd.to_datetime(customers['\uac00\uc785\uc77c'], infer_datetime_format=True)\n\n# \ub354 \uc548\uc804\ud55c \ubc29\ubc95 (\uac1c\ubcc4 \ucc98\ub9ac)\ndef parse_date(date_str):\n    formats = ['%Y-%m-%d', '%Y/%m/%d', '%m-%d-%Y', '%Y.%m.%d']\n    for fmt in formats:\n        try:\n            return pd.to_datetime(date_str, format=fmt)\n        except:\n            continue\n    return pd.NaT\n\ncustomers['\uac00\uc785\uc77c'] = customers['\uac00\uc785\uc77c'].apply(parse_date)\n\n# 5. \uacbd\uacfc \uc77c\uc218 \uacc4\uc0b0\ncustomers['\uacbd\uacfc\uc77c\uc218'] = (pd.Timestamp.now() - customers['\uac00\uc785\uc77c']).dt.days\n\nprint(\"\uc815\uc81c\ub41c \uace0\uac1d \ub370\uc774\ud130:\")\nprint(customers)\n"})})]}),"\n",(0,d.jsx)(e.h3,{id:"\ubb38\uc81c-3-\ubcf5\ud569-\ubd84\uc11d",children:"\ubb38\uc81c 3: \ubcf5\ud569 \ubd84\uc11d"}),"\n",(0,d.jsx)(e.p,{children:"\ub2e4\uc74c \uc8fc\ubb38 \ub370\uc774\ud130\ub85c \uc885\ud569 \ubd84\uc11d\uc744 \uc218\ud589\ud558\uc138\uc694."}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"orders = pd.DataFrame({\n    '\uc8fc\ubb38ID': range(1, 51),\n    '\uace0\uac1dID': np.random.choice(['C01', 'C02', 'C03', 'C04', 'C05'], 50),\n    '\uc8fc\ubb38\uc77c': pd.date_range('2024-01-01', periods=50, freq='D'),\n    '\uce74\ud14c\uace0\ub9ac': np.random.choice(['\uc804\uc790', '\uc758\ub958', '\uc2dd\ud488'], 50),\n    '\uae08\uc561': np.random.randint(10000, 500000, 50),\n    '\uc0c1\ud0dc': np.random.choice(['\uc644\ub8cc', '\uc9c4\ud589\uc911', '\ucde8\uc18c'], 50, p=[0.7, 0.2, 0.1])\n})\n"})}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"\uc694\uad6c\uc0ac\ud56d:"})}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\uc644\ub8cc\ub41c \uc8fc\ubb38\ub9cc \ud544\ud130\ub9c1"}),"\n",(0,d.jsx)(e.li,{children:"\uace0\uac1d\ubcc4 \ucd1d \uc8fc\ubb38\uae08\uc561, \uc8fc\ubb38\ud69f\uc218, \ud3c9\uade0 \uc8fc\ubb38\uae08\uc561 \uacc4\uc0b0"}),"\n",(0,d.jsx)(e.li,{children:"\uc0c1\uc704 3\uba85\uc758 VIP \uace0\uac1d \uc120\uc815"}),"\n",(0,d.jsx)(e.li,{children:"\uc6d4\ubcc4 \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c \ud53c\ubc97 \ud14c\uc774\ube14"}),"\n",(0,d.jsx)(e.li,{children:"\uac01 \uace0\uac1d\uc758 \ucd5c\ub2e4 \uad6c\ub9e4 \uce74\ud14c\uace0\ub9ac \ucc3e\uae30"}),"\n"]}),"\n",(0,d.jsxs)(s,{children:[(0,d.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"# 1. \uc644\ub8cc\ub41c \uc8fc\ubb38\ub9cc \ud544\ud130\ub9c1\ncompleted_orders = orders[orders['\uc0c1\ud0dc'] == '\uc644\ub8cc'].copy()\nprint(f\"\uc644\ub8cc\ub41c \uc8fc\ubb38: {len(completed_orders)}\uac74\")\n\n# 2. \uace0\uac1d\ubcc4 \ubd84\uc11d\ncustomer_stats = completed_orders.groupby('\uace0\uac1dID').agg({\n    '\uae08\uc561': ['sum', 'count', 'mean']\n}).round(0)\ncustomer_stats.columns = ['\ucd1d\uc8fc\ubb38\uae08\uc561', '\uc8fc\ubb38\ud69f\uc218', '\ud3c9\uade0\uc8fc\ubb38\uae08\uc561']\nprint(\"\\n\uace0\uac1d\ubcc4 \ud1b5\uacc4:\")\nprint(customer_stats.sort_values('\ucd1d\uc8fc\ubb38\uae08\uc561', ascending=False))\n\n# 3. VIP \uace0\uac1d \uc120\uc815 (\ucd1d \uc8fc\ubb38\uae08\uc561 \uae30\uc900)\nvip_customers = customer_stats.nlargest(3, '\ucd1d\uc8fc\ubb38\uae08\uc561')\nprint(\"\\nVIP \uace0\uac1d (Top 3):\")\nprint(vip_customers)\n\n# 4. \uc6d4\ubcc4 \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c \ud53c\ubc97\ncompleted_orders['\uc6d4'] = completed_orders['\uc8fc\ubb38\uc77c'].dt.to_period('M')\nmonthly_category_pivot = pd.pivot_table(\n    completed_orders,\n    values='\uae08\uc561',\n    index='\uc6d4',\n    columns='\uce74\ud14c\uace0\ub9ac',\n    aggfunc='sum',\n    fill_value=0,\n    margins=True\n)\nprint(\"\\n\uc6d4\ubcc4 \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c:\")\nprint(monthly_category_pivot)\n\n# 5. \uace0\uac1d\ubcc4 \ucd5c\ub2e4 \uad6c\ub9e4 \uce74\ud14c\uace0\ub9ac\nfavorite_category = completed_orders.groupby('\uace0\uac1dID')['\uce74\ud14c\uace0\ub9ac'].agg(\n    lambda x: x.value_counts().index[0] if len(x) > 0 else None\n)\nprint(\"\\n\uace0\uac1d\ubcc4 \uc120\ud638 \uce74\ud14c\uace0\ub9ac:\")\nprint(favorite_category)\n\n# \ucd94\uac00: \uace0\uac1d\ubcc4 \uce74\ud14c\uace0\ub9ac\ubcc4 \uad6c\ub9e4 \uae08\uc561\ncustomer_category = completed_orders.groupby(['\uace0\uac1dID', '\uce74\ud14c\uace0\ub9ac'])['\uae08\uc561'].sum().unstack(fill_value=0)\nprint(\"\\n\uace0\uac1d\ubcc4 \uce74\ud14c\uace0\ub9ac\ubcc4 \uad6c\ub9e4 \uae08\uc561:\")\nprint(customer_category)\n"})})]}),"\n",(0,d.jsx)(e.h2,{id:"\uc694\uc57d",children:"\uc694\uc57d"}),"\n",(0,d.jsx)(e.p,{children:"\uc774 \ubb38\uc11c\uc5d0\uc11c \ud559\uc2b5\ud55c \uc8fc\uc694 \ub0b4\uc6a9:"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\uc815\ub82c"}),": ",(0,d.jsx)(e.code,{children:"sort_values()"}),", ",(0,d.jsx)(e.code,{children:"sort_index()"}),"\ub85c \ub370\uc774\ud130 \uc815\ub82c"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\ud544\ud130\ub9c1"}),": Boolean Indexing, ",(0,d.jsx)(e.code,{children:"query()"}),", ",(0,d.jsx)(e.code,{children:"isin()"}),", ",(0,d.jsx)(e.code,{children:"nlargest()"})," \ub4f1"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"GroupBy"}),": ",(0,d.jsx)(e.code,{children:"groupby()"}),", ",(0,d.jsx)(e.code,{children:"agg()"}),", ",(0,d.jsx)(e.code,{children:"transform()"}),", ",(0,d.jsx)(e.code,{children:"filter()"}),"\ub85c \uadf8\ub8f9 \ubd84\uc11d"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\ud568\uc218 \uc801\uc6a9"}),": ",(0,d.jsx)(e.code,{children:"apply()"}),", ",(0,d.jsx)(e.code,{children:"map()"}),", ",(0,d.jsx)(e.code,{children:"applymap()"}),"\ub85c \ub370\uc774\ud130 \ubcc0\ud658"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\ud53c\ubc97 \ud14c\uc774\ube14"}),": ",(0,d.jsx)(e.code,{children:"pivot_table()"}),"\ub85c \ub370\uc774\ud130 \uc694\uc57d"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\uc7ac\uad6c\uc870\ud654"}),": ",(0,d.jsx)(e.code,{children:"melt()"}),", ",(0,d.jsx)(e.code,{children:"stack()"}),", ",(0,d.jsx)(e.code,{children:"unstack()"}),", ",(0,d.jsx)(e.code,{children:"pivot()"}),"\uc73c\ub85c \ud615\ud0dc \ubcc0\ud658"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\uc870\uac74\ubd80 \ub85c\uc9c1"}),": ",(0,d.jsx)(e.code,{children:"where()"}),", ",(0,d.jsx)(e.code,{children:"mask()"}),", ",(0,d.jsx)(e.code,{children:"np.where()"}),", ",(0,d.jsx)(e.code,{children:"np.select()"})]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\ubb38\uc790\uc5f4 \ucc98\ub9ac"}),": ",(0,d.jsx)(e.code,{children:"str"})," accessor\ub85c \ud14d\uc2a4\ud2b8 \ub370\uc774\ud130 \uc870\uc791"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\ub0a0\uc9dc \ucc98\ub9ac"}),": ",(0,d.jsx)(e.code,{children:"dt"})," accessor\ub85c \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130 \ubd84\uc11d"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"\uc2e4\uc804 \uc608\uc81c"}),": \ub9e4\ucd9c \ubd84\uc11d, \uace0\uac1d \uc138\uadf8\uba3c\ud2b8, RFM \ubd84\uc11d"]}),"\n"]}),"\n",(0,d.jsx)(e.admonition,{title:"\ub2e4\uc74c \ub2e8\uacc4",type:"tip",children:(0,d.jsx)(e.p,{children:"\ub370\uc774\ud130 \uc870\uc791 \uae30\ubc95\uc744 \uc775\ud614\ub2e4\uba74, \ub2e4\uc74c \ub2e8\uacc4\ub85c \ub370\uc774\ud130 \uc815\uc81c(Cleaning) \ubc29\ubc95\uc744 \ud559\uc2b5\ud558\uc138\uc694.\n\uacb0\uce21\uce58 \ucc98\ub9ac, \uc911\ubcf5 \uc81c\uac70, \uc774\uc0c1\uce58 \ud0d0\uc9c0 \ub4f1 \uc2e4\ubb34\uc5d0 \ud544\uc218\uc801\uc778 \uae30\uc220\uc744 \ub2e4\ub8f9\ub2c8\ub2e4."})}),"\n",(0,d.jsx)(e.h2,{id:"\ub2e4\uc74c-\ub2e8\uacc4",children:"\ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,d.jsx)(e.p,{children:"\ub370\uc774\ud130 \uc870\uc791\uc758 \uae30\ubcf8\uc744 \ub9c8\uc2a4\ud130\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc2e4\uc81c \ub370\uc774\ud130\uc758 \ud488\uc9c8\uc744 \uac1c\uc120\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubcf4\uc138\uc694."}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:"\ub2e4\uc74c \ubb38\uc11c"}),": ",(0,d.jsx)(e.a,{href:"./data-cleaning",children:"\ub370\uc774\ud130 \uc815\uc81c"})]})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(c,{...n})}):c(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>i});var a=s(6540);const d={},t=a.createContext(d);function r(n){const e=a.useContext(t);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(d):n.components||d:r(n.components),a.createElement(t.Provider,{value:e},n.children)}}}]);