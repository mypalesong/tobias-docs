"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[7657],{7891:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"webapp/monitoring","title":"15. \ubaa8\ub2c8\ud130\ub9c1","description":"15.1 \ubaa8\ub2c8\ud130\ub9c1 \uc911\uc694\uc131","source":"@site/docs/webapp/monitoring.md","sourceDirName":"webapp","slug":"/webapp/monitoring","permalink":"/docs/webapp/monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/webapp/monitoring.md","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"sidebar_position":16},"sidebar":"webappSidebar","previous":{"title":"14. \ubc30\ud3ec","permalink":"/docs/webapp/deployment"}}');var s=t(4848),a=t(8453);const i={sidebar_position:16},o="15. \ubaa8\ub2c8\ud130\ub9c1",l={},c=[{value:"15.1 \ubaa8\ub2c8\ud130\ub9c1 \uc911\uc694\uc131",id:"151-\ubaa8\ub2c8\ud130\ub9c1-\uc911\uc694\uc131",level:2},{value:"\ubaa8\ub2c8\ud130\ub9c1\uc774 \ud544\uc694\ud55c \uc774\uc720",id:"\ubaa8\ub2c8\ud130\ub9c1\uc774-\ud544\uc694\ud55c-\uc774\uc720",level:3},{value:"\ubaa8\ub2c8\ud130\ub9c1 \uacc4\uce35",id:"\ubaa8\ub2c8\ud130\ub9c1-\uacc4\uce35",level:3},{value:"\ubaa8\ub2c8\ud130\ub9c1 Best Practices",id:"\ubaa8\ub2c8\ud130\ub9c1-best-practices",level:3},{value:"15.2 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8",id:"152-\uc560\ud50c\ub9ac\ucf00\uc774\uc158-\ub85c\uadf8",level:2},{value:"\ub85c\uac70 \uc124\uc815",id:"\ub85c\uac70-\uc124\uc815",level:3},{value:"Express \ubbf8\ub4e4\uc6e8\uc5b4 \ud1b5\ud569",id:"express-\ubbf8\ub4e4\uc6e8\uc5b4-\ud1b5\ud569",level:3},{value:"\ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \ub85c\uae45",id:"\ube44\uc988\ub2c8\uc2a4-\ub85c\uc9c1-\ub85c\uae45",level:3},{value:"\ub85c\uadf8 \ubd84\uc11d \ucffc\ub9ac \uc608\uc81c",id:"\ub85c\uadf8-\ubd84\uc11d-\ucffc\ub9ac-\uc608\uc81c",level:3},{value:"15.3 Prometheus \uba54\ud2b8\ub9ad",id:"153-prometheus-\uba54\ud2b8\ub9ad",level:2},{value:"Prometheus \uc124\uc815",id:"prometheus-\uc124\uc815",level:3},{value:"Node.js \uba54\ud2b8\ub9ad \uc218\uc9d1",id:"nodejs-\uba54\ud2b8\ub9ad-\uc218\uc9d1",level:3},{value:"\uba54\ud2b8\ub9ad \ubbf8\ub4e4\uc6e8\uc5b4",id:"\uba54\ud2b8\ub9ad-\ubbf8\ub4e4\uc6e8\uc5b4",level:3},{value:"\ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad \uc0ac\uc6a9 \uc608\uc81c",id:"\ucee4\uc2a4\ud140-\uba54\ud2b8\ub9ad-\uc0ac\uc6a9-\uc608\uc81c",level:3},{value:"PromQL \ucffc\ub9ac \uc608\uc81c",id:"promql-\ucffc\ub9ac-\uc608\uc81c",level:3},{value:"15.4 Grafana \ub300\uc2dc\ubcf4\ub4dc",id:"154-grafana-\ub300\uc2dc\ubcf4\ub4dc",level:2},{value:"Grafana \ub300\uc2dc\ubcf4\ub4dc JSON \uc124\uc815",id:"grafana-\ub300\uc2dc\ubcf4\ub4dc-json-\uc124\uc815",level:3},{value:"Grafana Provisioning",id:"grafana-provisioning",level:3},{value:"TypeScript\ub85c \ub300\uc2dc\ubcf4\ub4dc \uc0dd\uc131",id:"typescript\ub85c-\ub300\uc2dc\ubcf4\ub4dc-\uc0dd\uc131",level:3},{value:"15.5 \uc54c\ub9bc \uc124\uc815",id:"155-\uc54c\ub9bc-\uc124\uc815",level:2},{value:"Prometheus \uc54c\ub9bc \uaddc\uce59",id:"prometheus-\uc54c\ub9bc-\uaddc\uce59",level:3},{value:"Alertmanager \uc124\uc815",id:"alertmanager-\uc124\uc815",level:3},{value:"\uc54c\ub9bc \ud15c\ud50c\ub9bf",id:"\uc54c\ub9bc-\ud15c\ud50c\ub9bf",level:3},{value:"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub0b4 \uc54c\ub9bc \ud1b5\ud569",id:"\uc560\ud50c\ub9ac\ucf00\uc774\uc158-\ub0b4-\uc54c\ub9bc-\ud1b5\ud569",level:3},{value:"15.6 APM (Application Performance Monitoring)",id:"156-apm-application-performance-monitoring",level:2},{value:"New Relic \ud1b5\ud569",id:"new-relic-\ud1b5\ud569",level:3},{value:"Elastic APM \ud1b5\ud569",id:"elastic-apm-\ud1b5\ud569",level:3},{value:"APM \uc0ac\uc6a9 \uc608\uc81c",id:"apm-\uc0ac\uc6a9-\uc608\uc81c",level:3},{value:"15.7 \ud5ec\uc2a4\uccb4\ud06c",id:"157-\ud5ec\uc2a4\uccb4\ud06c",level:2},{value:"\ud5ec\uc2a4\uccb4\ud06c \uad6c\ud604",id:"\ud5ec\uc2a4\uccb4\ud06c-\uad6c\ud604",level:3},{value:"\ud5ec\uc2a4\uccb4\ud06c \uc5d4\ub4dc\ud3ec\uc778\ud2b8",id:"\ud5ec\uc2a4\uccb4\ud06c-\uc5d4\ub4dc\ud3ec\uc778\ud2b8",level:3},{value:"Kubernetes \ud5ec\uc2a4\uccb4\ud06c \uc124\uc815",id:"kubernetes-\ud5ec\uc2a4\uccb4\ud06c-\uc124\uc815",level:3},{value:"15.8 \uc5d0\ub7ec \ucd94\uc801 (Sentry)",id:"158-\uc5d0\ub7ec-\ucd94\uc801-sentry",level:2},{value:"Sentry \uc124\uc815",id:"sentry-\uc124\uc815",level:3},{value:"Express \ud1b5\ud569",id:"express-\ud1b5\ud569",level:3},{value:"\ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc5d0\uc11c Sentry \uc0ac\uc6a9",id:"\ube44\uc988\ub2c8\uc2a4-\ub85c\uc9c1\uc5d0\uc11c-sentry-\uc0ac\uc6a9",level:3},{value:"\ud504\ub860\ud2b8\uc5d4\ub4dc Sentry \uc124\uc815",id:"\ud504\ub860\ud2b8\uc5d4\ub4dc-sentry-\uc124\uc815",level:3},{value:"15.9 \uc0ac\uc6a9\uc790 \ubd84\uc11d",id:"159-\uc0ac\uc6a9\uc790-\ubd84\uc11d",level:2},{value:"Google Analytics \ud1b5\ud569",id:"google-analytics-\ud1b5\ud569",level:3},{value:"Mixpanel \ud1b5\ud569",id:"mixpanel-\ud1b5\ud569",level:3},{value:"\ucee4\uc2a4\ud140 \ubd84\uc11d \uc2dc\uc2a4\ud15c",id:"\ucee4\uc2a4\ud140-\ubd84\uc11d-\uc2dc\uc2a4\ud15c",level:3},{value:"\ubd84\uc11d \ubbf8\ub4e4\uc6e8\uc5b4",id:"\ubd84\uc11d-\ubbf8\ub4e4\uc6e8\uc5b4",level:3},{value:"15.10 \uc131\ub2a5 \uba54\ud2b8\ub9ad",id:"1510-\uc131\ub2a5-\uba54\ud2b8\ub9ad",level:2},{value:"Web Vitals \uc218\uc9d1",id:"web-vitals-\uc218\uc9d1",level:3},{value:"\ubc31\uc5d4\ub4dc \uc131\ub2a5 \ubaa8\ub2c8\ud130\ub9c1",id:"\ubc31\uc5d4\ub4dc-\uc131\ub2a5-\ubaa8\ub2c8\ud130\ub9c1",level:3},{value:"15.11 \uc2e4\uc2b5",id:"1511-\uc2e4\uc2b5",level:2},{value:"\uc2e4\uc2b5 1: \uae30\ubcf8 \ubaa8\ub2c8\ud130\ub9c1 \uc2a4\ud0dd \uad6c\uc131",id:"\uc2e4\uc2b5-1-\uae30\ubcf8-\ubaa8\ub2c8\ud130\ub9c1-\uc2a4\ud0dd-\uad6c\uc131",level:3},{value:"\uc2e4\uc2b5 2: \uc885\ud569 \ubaa8\ub2c8\ud130\ub9c1 \ub300\uc2dc\ubcf4\ub4dc",id:"\uc2e4\uc2b5-2-\uc885\ud569-\ubaa8\ub2c8\ud130\ub9c1-\ub300\uc2dc\ubcf4\ub4dc",level:3},{value:"\uc2e4\uc2b5 3: \uc54c\ub9bc \ud14c\uc2a4\ud2b8",id:"\uc2e4\uc2b5-3-\uc54c\ub9bc-\ud14c\uc2a4\ud2b8",level:3},{value:"\uc2e4\uc2b5 4: \uc131\ub2a5 \ubcd1\ubaa9 \uc9c0\uc810 \ucc3e\uae30",id:"\uc2e4\uc2b5-4-\uc131\ub2a5-\ubcd1\ubaa9-\uc9c0\uc810-\ucc3e\uae30",level:3},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"15-\ubaa8\ub2c8\ud130\ub9c1",children:"15. \ubaa8\ub2c8\ud130\ub9c1"})}),"\n",(0,s.jsx)(e.h2,{id:"151-\ubaa8\ub2c8\ud130\ub9c1-\uc911\uc694\uc131",children:"15.1 \ubaa8\ub2c8\ud130\ub9c1 \uc911\uc694\uc131"}),"\n",(0,s.jsx)(e.p,{children:"\ubaa8\ub2c8\ud130\ub9c1\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc548\uc815\uc131\uacfc \uc131\ub2a5\uc744 \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc218\uc801\uc778 \uc694\uc18c\uc785\ub2c8\ub2e4. \ud6a8\uacfc\uc801\uc778 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uc740 \ubb38\uc81c\ub97c \uc870\uae30\uc5d0 \ubc1c\uacac\ud558\uace0, \uc2dc\uc2a4\ud15c\uc758 \uac74\uac15 \uc0c1\ud0dc\ub97c \ud30c\uc545\ud558\uba70, \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uac1c\uc120\ud558\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc90d\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"\ubaa8\ub2c8\ud130\ub9c1\uc774-\ud544\uc694\ud55c-\uc774\uc720",children:"\ubaa8\ub2c8\ud130\ub9c1\uc774 \ud544\uc694\ud55c \uc774\uc720"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"/**\n * \ubaa8\ub2c8\ud130\ub9c1\uc758 \ud575\uc2ec \uac00\uce58\n *\n * 1. \ubb38\uc81c \uc870\uae30 \ubc1c\uacac\n *    - \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uae30 \uc804\uc5d0 \uc9d5\ud6c4 \uac10\uc9c0\n *    - \uc131\ub2a5 \uc800\ud558 \uc989\uc2dc \ud30c\uc545\n *    - \ub9ac\uc18c\uc2a4 \ubd80\uc871 \uc608\uce21\n *\n * 2. \uc2e0\uc18d\ud55c \ub300\uc751\n *    - \uc2e4\uc2dc\uac04 \uc54c\ub9bc\uc744 \ud1b5\ud55c \ube60\ub978 \ub300\uc751\n *    - \ubb38\uc81c\uc758 \uadfc\ubcf8 \uc6d0\uc778 \ubd84\uc11d\n *    - \uc7a5\uc560 \ubcf5\uad6c \uc2dc\uac04 \ub2e8\ucd95\n *\n * 3. \ub370\uc774\ud130 \uae30\ubc18 \uc758\uc0ac\uacb0\uc815\n *    - \ud2b8\ub798\ud53d \ud328\ud134 \ubd84\uc11d\n *    - \uc0ac\uc6a9\uc790 \ud589\ub3d9 \uc774\ud574\n *    - \uc778\ud504\ub77c \ud655\uc7a5 \uacc4\ud68d \uc218\ub9bd\n *\n * 4. \uc0ac\uc6a9\uc790 \uacbd\ud5d8 \uac1c\uc120\n *    - \uc751\ub2f5 \uc2dc\uac04 \ucd5c\uc801\ud654\n *    - \uc5d0\ub7ec\uc728 \uac10\uc18c\n *    - \uac00\uc6a9\uc131 \ud5a5\uc0c1\n */\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ubaa8\ub2c8\ud130\ub9c1-\uacc4\uce35",children:"\ubaa8\ub2c8\ud130\ub9c1 \uacc4\uce35"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/layers.ts\n\nexport enum MonitoringLayer {\n  INFRASTRUCTURE = 'infrastructure',  // \uc778\ud504\ub77c \uacc4\uce35\n  APPLICATION = 'application',        // \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uacc4\uce35\n  BUSINESS = 'business',             // \ube44\uc988\ub2c8\uc2a4 \uacc4\uce35\n  USER = 'user'                      // \uc0ac\uc6a9\uc790 \uacbd\ud5d8 \uacc4\uce35\n}\n\nexport interface MonitoringStrategy {\n  layer: MonitoringLayer;\n  metrics: string[];\n  tools: string[];\n  alertThresholds: Record<string, number>;\n}\n\nexport const MONITORING_STRATEGIES: MonitoringStrategy[] = [\n  {\n    layer: MonitoringLayer.INFRASTRUCTURE,\n    metrics: ['cpu_usage', 'memory_usage', 'disk_io', 'network_traffic'],\n    tools: ['Prometheus', 'Node Exporter'],\n    alertThresholds: {\n      cpu_usage: 80,\n      memory_usage: 85,\n      disk_usage: 90\n    }\n  },\n  {\n    layer: MonitoringLayer.APPLICATION,\n    metrics: ['request_rate', 'error_rate', 'response_time', 'throughput'],\n    tools: ['Prometheus', 'Grafana', 'APM'],\n    alertThresholds: {\n      error_rate: 5,\n      response_time_p95: 1000,\n      response_time_p99: 2000\n    }\n  },\n  {\n    layer: MonitoringLayer.BUSINESS,\n    metrics: ['conversion_rate', 'user_signups', 'revenue', 'transactions'],\n    tools: ['Custom Dashboards', 'Analytics'],\n    alertThresholds: {\n      conversion_rate_drop: 20,\n      transaction_failure_rate: 1\n    }\n  },\n  {\n    layer: MonitoringLayer.USER,\n    metrics: ['page_load_time', 'time_to_interactive', 'cumulative_layout_shift'],\n    tools: ['Real User Monitoring', 'Google Analytics'],\n    alertThresholds: {\n      page_load_time_p75: 3000,\n      time_to_interactive: 5000\n    }\n  }\n];\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ubaa8\ub2c8\ud130\ub9c1-best-practices",children:"\ubaa8\ub2c8\ud130\ub9c1 Best Practices"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/best-practices.ts\n\nexport class MonitoringBestPractices {\n  // 1. The Four Golden Signals (Google SRE)\n  static readonly GOLDEN_SIGNALS = {\n    latency: 'How long it takes to service a request',\n    traffic: 'How much demand is placed on the system',\n    errors: 'The rate of requests that fail',\n    saturation: 'How \"full\" the service is'\n  };\n\n  // 2. RED Method (for request-driven services)\n  static readonly RED_METHOD = {\n    rate: 'Number of requests per second',\n    errors: 'Number of failed requests per second',\n    duration: 'Time taken to process requests'\n  };\n\n  // 3. USE Method (for resources)\n  static readonly USE_METHOD = {\n    utilization: 'Average time the resource is busy',\n    saturation: 'Degree of queued work',\n    errors: 'Count of error events'\n  };\n\n  // \uc2e4\uc6a9\uc801\uc778 \uac00\uc774\ub4dc\ub77c\uc778\n  static getGuidelines(): string[] {\n    return [\n      '\uc758\ubbf8 \uc788\ub294 \uba54\ud2b8\ub9ad\ub9cc \uc218\uc9d1\ud558\ub77c',\n      '\uc54c\ub9bc\uc740 \uc2e4\ud589 \uac00\ub2a5\ud55c \uac83\ub9cc \uc124\uc815\ud558\ub77c',\n      '\ub300\uc2dc\ubcf4\ub4dc\ub294 \uac04\uacb0\ud558\uac8c \uc720\uc9c0\ud558\ub77c',\n      '\ub85c\uadf8\ub294 \uad6c\uc870\ud654\ud558\uc5ec \uc800\uc7a5\ud558\ub77c',\n      '\uba54\ud2b8\ub9ad\uc5d0\ub294 \uc801\uc808\ud55c \ub808\uc774\ube14\uc744 \ubd99\uc5ec\ub77c',\n      '\uc815\uae30\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uc744 \uc810\uac80\ud558\ub77c',\n      'SLO(Service Level Objective)\ub97c \uc815\uc758\ud558\ub77c',\n      '\uc54c\ub9bc \ud53c\ub85c(Alert Fatigue)\ub97c \ubc29\uc9c0\ud558\ub77c'\n    ];\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"152-\uc560\ud50c\ub9ac\ucf00\uc774\uc158-\ub85c\uadf8",children:"15.2 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8"}),"\n",(0,s.jsx)(e.p,{children:"\uad6c\uc870\ud654\ub41c \ub85c\uadf8\ub294 \ubb38\uc81c \ud574\uacb0\uacfc \uc2dc\uc2a4\ud15c \ubd84\uc11d\uc758 \ud575\uc2ec\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"\ub85c\uac70-\uc124\uc815",children:"\ub85c\uac70 \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/utils/logger.ts\n\nimport winston from 'winston';\nimport DailyRotateFile from 'winston-daily-rotate-file';\n\nexport enum LogLevel {\n  ERROR = 'error',\n  WARN = 'warn',\n  INFO = 'info',\n  HTTP = 'http',\n  DEBUG = 'debug'\n}\n\nexport interface LogContext {\n  requestId?: string;\n  userId?: string;\n  action?: string;\n  resource?: string;\n  metadata?: Record<string, any>;\n}\n\nclass Logger {\n  private logger: winston.Logger;\n\n  constructor() {\n    this.logger = winston.createLogger({\n      level: process.env.LOG_LEVEL || 'info',\n      format: winston.format.combine(\n        winston.format.timestamp({\n          format: 'YYYY-MM-DD HH:mm:ss'\n        }),\n        winston.format.errors({ stack: true }),\n        winston.format.splat(),\n        winston.format.json()\n      ),\n      defaultMeta: {\n        service: process.env.SERVICE_NAME || 'webapp',\n        environment: process.env.NODE_ENV || 'development',\n        version: process.env.APP_VERSION || '1.0.0'\n      },\n      transports: this.getTransports()\n    });\n\n    // \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub294 \ucf58\uc194\uc5d0\ub3c4 \ucd9c\ub825\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.add(new winston.transports.Console({\n        format: winston.format.combine(\n          winston.format.colorize(),\n          winston.format.simple()\n        )\n      }));\n    }\n  }\n\n  private getTransports(): winston.transport[] {\n    return [\n      // \uc5d0\ub7ec \ub85c\uadf8 \ud30c\uc77c\n      new DailyRotateFile({\n        filename: 'logs/error-%DATE%.log',\n        datePattern: 'YYYY-MM-DD',\n        level: 'error',\n        maxSize: '20m',\n        maxFiles: '14d',\n        zippedArchive: true\n      }),\n      // \uacb0\ud569 \ub85c\uadf8 \ud30c\uc77c\n      new DailyRotateFile({\n        filename: 'logs/combined-%DATE%.log',\n        datePattern: 'YYYY-MM-DD',\n        maxSize: '20m',\n        maxFiles: '14d',\n        zippedArchive: true\n      })\n    ];\n  }\n\n  error(message: string, context?: LogContext, error?: Error): void {\n    this.logger.error(message, {\n      ...context,\n      error: error ? {\n        message: error.message,\n        stack: error.stack,\n        name: error.name\n      } : undefined\n    });\n  }\n\n  warn(message: string, context?: LogContext): void {\n    this.logger.warn(message, context);\n  }\n\n  info(message: string, context?: LogContext): void {\n    this.logger.info(message, context);\n  }\n\n  http(message: string, context?: LogContext): void {\n    this.logger.http(message, context);\n  }\n\n  debug(message: string, context?: LogContext): void {\n    this.logger.debug(message, context);\n  }\n\n  // \uad6c\uc870\ud654\ub41c \ub85c\uadf8 \uba54\uc11c\ub4dc\n  logRequest(req: any, res: any, duration: number): void {\n    this.http('HTTP Request', {\n      requestId: req.id,\n      userId: req.user?.id,\n      action: 'http_request',\n      metadata: {\n        method: req.method,\n        url: req.url,\n        statusCode: res.statusCode,\n        duration,\n        userAgent: req.get('user-agent'),\n        ip: req.ip\n      }\n    });\n  }\n\n  logDatabaseQuery(query: string, duration: number, context?: LogContext): void {\n    this.debug('Database Query', {\n      ...context,\n      action: 'database_query',\n      metadata: {\n        query: query.substring(0, 200), // \ucffc\ub9ac \uae38\uc774 \uc81c\ud55c\n        duration\n      }\n    });\n  }\n\n  logBusinessEvent(event: string, context: LogContext): void {\n    this.info(`Business Event: ${event}`, {\n      ...context,\n      action: 'business_event'\n    });\n  }\n}\n\nexport const logger = new Logger();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"express-\ubbf8\ub4e4\uc6e8\uc5b4-\ud1b5\ud569",children:"Express \ubbf8\ub4e4\uc6e8\uc5b4 \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/middleware/logging.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logger } from '../utils/logger';\n\n// \uc694\uccad ID \ucd94\uac00\nexport const requestIdMiddleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void => {\n  req.id = req.get('X-Request-Id') || uuidv4();\n  res.setHeader('X-Request-Id', req.id);\n  next();\n};\n\n// HTTP \uc694\uccad \ub85c\uae45\nexport const httpLoggingMiddleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void => {\n  const startTime = Date.now();\n\n  // \uc751\ub2f5 \uc644\ub8cc \uc2dc \ub85c\uadf8 \uae30\ub85d\n  res.on('finish', () => {\n    const duration = Date.now() - startTime;\n    logger.logRequest(req, res, duration);\n  });\n\n  next();\n};\n\n// \uc5d0\ub7ec \ub85c\uae45 \ubbf8\ub4e4\uc6e8\uc5b4\nexport const errorLoggingMiddleware = (\n  error: Error,\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void => {\n  logger.error('Unhandled Error', {\n    requestId: req.id,\n    userId: req.user?.id,\n    action: 'error_handler',\n    resource: req.url,\n    metadata: {\n      method: req.method,\n      body: req.body,\n      params: req.params,\n      query: req.query\n    }\n  }, error);\n\n  next(error);\n};\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ube44\uc988\ub2c8\uc2a4-\ub85c\uc9c1-\ub85c\uae45",children:"\ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \ub85c\uae45"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/services/user.service.ts\n\nimport { logger } from '../utils/logger';\n\nexport class UserService {\n  async createUser(userData: CreateUserDto): Promise<User> {\n    const startTime = Date.now();\n\n    try {\n      logger.info('Creating new user', {\n        action: 'user_create_start',\n        metadata: { email: userData.email }\n      });\n\n      const user = await this.userRepository.create(userData);\n\n      logger.logBusinessEvent('user_created', {\n        userId: user.id,\n        action: 'user_create_success',\n        metadata: {\n          duration: Date.now() - startTime,\n          email: user.email,\n          role: user.role\n        }\n      });\n\n      return user;\n    } catch (error) {\n      logger.error('Failed to create user', {\n        action: 'user_create_failed',\n        metadata: {\n          duration: Date.now() - startTime,\n          email: userData.email\n        }\n      }, error);\n      throw error;\n    }\n  }\n\n  async loginUser(email: string, password: string): Promise<LoginResult> {\n    logger.info('User login attempt', {\n      action: 'user_login_attempt',\n      metadata: { email }\n    });\n\n    try {\n      const user = await this.authenticate(email, password);\n\n      logger.logBusinessEvent('user_login_success', {\n        userId: user.id,\n        action: 'user_login_success',\n        metadata: { email }\n      });\n\n      return { user, token: this.generateToken(user) };\n    } catch (error) {\n      logger.warn('User login failed', {\n        action: 'user_login_failed',\n        metadata: { email, reason: error.message }\n      });\n      throw error;\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ub85c\uadf8-\ubd84\uc11d-\ucffc\ub9ac-\uc608\uc81c",children:"\ub85c\uadf8 \ubd84\uc11d \ucffc\ub9ac \uc608\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# \ud2b9\uc815 \uc0ac\uc6a9\uc790\uc758 \ud65c\ub3d9 \uc870\ud68c\ncat logs/combined-*.log | jq 'select(.userId == \"user123\")'\n\n# \uc5d0\ub7ec\uc728 \uacc4\uc0b0 (\ucd5c\uadfc 1\uc2dc\uac04)\ncat logs/combined-*.log | \\\n  jq -r 'select(.timestamp > (now - 3600)) | .level' | \\\n  sort | uniq -c\n\n# \ub290\ub9b0 \uc694\uccad \ucc3e\uae30 (1\ucd08 \uc774\uc0c1)\ncat logs/combined-*.log | \\\n  jq 'select(.metadata.duration > 1000) | {url: .metadata.url, duration: .metadata.duration}'\n\n# \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud55c \uc5d0\ub7ec\ncat logs/error-*.log | \\\n  jq -r '.error.message' | \\\n  sort | uniq -c | sort -rn | head -10\n"})}),"\n",(0,s.jsx)(e.h2,{id:"153-prometheus-\uba54\ud2b8\ub9ad",children:"15.3 Prometheus \uba54\ud2b8\ub9ad"}),"\n",(0,s.jsx)(e.p,{children:"Prometheus\ub294 \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c, \uba54\ud2b8\ub9ad \uc218\uc9d1\uacfc \ucffc\ub9ac\uc5d0 \ud2b9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"prometheus-\uc124\uc815",children:"Prometheus \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# prometheus.yml\n\nglobal:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n  external_labels:\n    cluster: 'production'\n    environment: 'prod'\n\n# \uc54c\ub9bc \uaddc\uce59 \ud30c\uc77c\nrule_files:\n  - 'alerts/*.yml'\n\n# Alertmanager \uc124\uc815\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n            - 'alertmanager:9093'\n\n# \uc2a4\ud06c\ub7a9 \uc124\uc815\nscrape_configs:\n  # Prometheus \uc790\uccb4 \ubaa8\ub2c8\ud130\ub9c1\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n\n  # Node Exporter (\uc2dc\uc2a4\ud15c \uba54\ud2b8\ub9ad)\n  - job_name: 'node'\n    static_configs:\n      - targets: ['node-exporter:9100']\n        labels:\n          instance: 'server-1'\n\n  # \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uba54\ud2b8\ub9ad\n  - job_name: 'webapp'\n    scrape_interval: 10s\n    static_configs:\n      - targets: ['webapp:3000']\n        labels:\n          app: 'webapp'\n          version: '1.0.0'\n    metric_relabel_configs:\n      # \ubd88\ud544\uc694\ud55c \uba54\ud2b8\ub9ad \uc81c\uc678\n      - source_labels: [__name__]\n        regex: 'go_.*'\n        action: drop\n\n  # PostgreSQL Exporter\n  - job_name: 'postgresql'\n    static_configs:\n      - targets: ['postgres-exporter:9187']\n\n  # Redis Exporter\n  - job_name: 'redis'\n    static_configs:\n      - targets: ['redis-exporter:9121']\n\n  # Nginx Exporter\n  - job_name: 'nginx'\n    static_configs:\n      - targets: ['nginx-exporter:9113']\n"})}),"\n",(0,s.jsx)(e.h3,{id:"nodejs-\uba54\ud2b8\ub9ad-\uc218\uc9d1",children:"Node.js \uba54\ud2b8\ub9ad \uc218\uc9d1"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/metrics.ts\n\nimport promClient from 'prom-client';\nimport { Request, Response } from 'express';\n\nexport class MetricsCollector {\n  private register: promClient.Registry;\n\n  // HTTP \uba54\ud2b8\ub9ad\n  private httpRequestDuration: promClient.Histogram;\n  private httpRequestTotal: promClient.Counter;\n  private httpRequestSize: promClient.Summary;\n  private httpResponseSize: promClient.Summary;\n\n  // \ube44\uc988\ub2c8\uc2a4 \uba54\ud2b8\ub9ad\n  private activeUsers: promClient.Gauge;\n  private userRegistrations: promClient.Counter;\n  private ordersTotal: promClient.Counter;\n  private orderValue: promClient.Histogram;\n\n  // \uc2dc\uc2a4\ud15c \uba54\ud2b8\ub9ad\n  private dbConnectionPool: promClient.Gauge;\n  private cacheHitRate: promClient.Counter;\n  private queueLength: promClient.Gauge;\n\n  constructor() {\n    this.register = new promClient.Registry();\n\n    // \uae30\ubcf8 \uba54\ud2b8\ub9ad \uc218\uc9d1 (CPU, Memory \ub4f1)\n    promClient.collectDefaultMetrics({\n      register: this.register,\n      prefix: 'webapp_',\n      gcDurationBuckets: [0.001, 0.01, 0.1, 1, 2, 5]\n    });\n\n    this.initializeMetrics();\n  }\n\n  private initializeMetrics(): void {\n    // HTTP \uc694\uccad \uc9c0\uc18d \uc2dc\uac04\n    this.httpRequestDuration = new promClient.Histogram({\n      name: 'http_request_duration_seconds',\n      help: 'Duration of HTTP requests in seconds',\n      labelNames: ['method', 'route', 'status_code'],\n      buckets: [0.01, 0.05, 0.1, 0.5, 1, 2, 5, 10]\n    });\n\n    // HTTP \uc694\uccad \ucd1d \uac1c\uc218\n    this.httpRequestTotal = new promClient.Counter({\n      name: 'http_requests_total',\n      help: 'Total number of HTTP requests',\n      labelNames: ['method', 'route', 'status_code']\n    });\n\n    // HTTP \uc694\uccad \ud06c\uae30\n    this.httpRequestSize = new promClient.Summary({\n      name: 'http_request_size_bytes',\n      help: 'Size of HTTP requests in bytes',\n      labelNames: ['method', 'route'],\n      percentiles: [0.5, 0.9, 0.95, 0.99]\n    });\n\n    // HTTP \uc751\ub2f5 \ud06c\uae30\n    this.httpResponseSize = new promClient.Summary({\n      name: 'http_response_size_bytes',\n      help: 'Size of HTTP responses in bytes',\n      labelNames: ['method', 'route'],\n      percentiles: [0.5, 0.9, 0.95, 0.99]\n    });\n\n    // \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218\n    this.activeUsers = new promClient.Gauge({\n      name: 'active_users_total',\n      help: 'Number of currently active users',\n      labelNames: ['type']\n    });\n\n    // \uc0ac\uc6a9\uc790 \ub4f1\ub85d \uc218\n    this.userRegistrations = new promClient.Counter({\n      name: 'user_registrations_total',\n      help: 'Total number of user registrations',\n      labelNames: ['source', 'plan']\n    });\n\n    // \uc8fc\ubb38 \ucd1d \uac1c\uc218\n    this.ordersTotal = new promClient.Counter({\n      name: 'orders_total',\n      help: 'Total number of orders',\n      labelNames: ['status', 'payment_method']\n    });\n\n    // \uc8fc\ubb38 \uae08\uc561\n    this.orderValue = new promClient.Histogram({\n      name: 'order_value_dollars',\n      help: 'Value of orders in dollars',\n      labelNames: ['currency'],\n      buckets: [10, 50, 100, 500, 1000, 5000, 10000]\n    });\n\n    // \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucee4\ub125\uc158 \ud480\n    this.dbConnectionPool = new promClient.Gauge({\n      name: 'db_connection_pool',\n      help: 'Database connection pool status',\n      labelNames: ['state'] // active, idle, waiting\n    });\n\n    // \uce90\uc2dc \ud788\ud2b8\uc728\n    this.cacheHitRate = new promClient.Counter({\n      name: 'cache_operations_total',\n      help: 'Total number of cache operations',\n      labelNames: ['operation', 'result'] // get/set, hit/miss\n    });\n\n    // \ud050 \uae38\uc774\n    this.queueLength = new promClient.Gauge({\n      name: 'queue_length',\n      help: 'Number of items in queue',\n      labelNames: ['queue_name']\n    });\n\n    // \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uba54\ud2b8\ub9ad \ub4f1\ub85d\n    this.register.registerMetric(this.httpRequestDuration);\n    this.register.registerMetric(this.httpRequestTotal);\n    this.register.registerMetric(this.httpRequestSize);\n    this.register.registerMetric(this.httpResponseSize);\n    this.register.registerMetric(this.activeUsers);\n    this.register.registerMetric(this.userRegistrations);\n    this.register.registerMetric(this.ordersTotal);\n    this.register.registerMetric(this.orderValue);\n    this.register.registerMetric(this.dbConnectionPool);\n    this.register.registerMetric(this.cacheHitRate);\n    this.register.registerMetric(this.queueLength);\n  }\n\n  // HTTP \uba54\ud2b8\ub9ad \uae30\ub85d\n  recordHttpRequest(\n    method: string,\n    route: string,\n    statusCode: number,\n    duration: number,\n    requestSize?: number,\n    responseSize?: number\n  ): void {\n    const labels = { method, route, status_code: statusCode.toString() };\n\n    this.httpRequestDuration.observe(labels, duration / 1000);\n    this.httpRequestTotal.inc(labels);\n\n    if (requestSize) {\n      this.httpRequestSize.observe({ method, route }, requestSize);\n    }\n    if (responseSize) {\n      this.httpResponseSize.observe({ method, route }, responseSize);\n    }\n  }\n\n  // \ube44\uc988\ub2c8\uc2a4 \uba54\ud2b8\ub9ad \uae30\ub85d\n  recordUserRegistration(source: string, plan: string): void {\n    this.userRegistrations.inc({ source, plan });\n  }\n\n  recordOrder(status: string, paymentMethod: string, value: number, currency: string): void {\n    this.ordersTotal.inc({ status, payment_method: paymentMethod });\n    this.orderValue.observe({ currency }, value);\n  }\n\n  setActiveUsers(count: number, type: string = 'total'): void {\n    this.activeUsers.set({ type }, count);\n  }\n\n  // \uc2dc\uc2a4\ud15c \uba54\ud2b8\ub9ad \uae30\ub85d\n  setDbConnectionPool(active: number, idle: number, waiting: number): void {\n    this.dbConnectionPool.set({ state: 'active' }, active);\n    this.dbConnectionPool.set({ state: 'idle' }, idle);\n    this.dbConnectionPool.set({ state: 'waiting' }, waiting);\n  }\n\n  recordCacheOperation(operation: 'get' | 'set', result: 'hit' | 'miss' | 'success'): void {\n    this.cacheHitRate.inc({ operation, result });\n  }\n\n  setQueueLength(queueName: string, length: number): void {\n    this.queueLength.set({ queue_name: queueName }, length);\n  }\n\n  // \uba54\ud2b8\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\n  async getMetrics(): Promise<string> {\n    return this.register.metrics();\n  }\n\n  getContentType(): string {\n    return this.register.contentType;\n  }\n}\n\nexport const metricsCollector = new MetricsCollector();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uba54\ud2b8\ub9ad-\ubbf8\ub4e4\uc6e8\uc5b4",children:"\uba54\ud2b8\ub9ad \ubbf8\ub4e4\uc6e8\uc5b4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/middleware/metrics.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { metricsCollector } from '../monitoring/metrics';\n\nexport const metricsMiddleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void => {\n  const startTime = Date.now();\n  const requestSize = parseInt(req.get('content-length') || '0', 10);\n\n  // \uc751\ub2f5 \uc644\ub8cc \uc2dc \uba54\ud2b8\ub9ad \uae30\ub85d\n  res.on('finish', () => {\n    const duration = Date.now() - startTime;\n    const responseSize = parseInt(res.get('content-length') || '0', 10);\n\n    // \ub77c\uc6b0\ud2b8 \uc815\uaddc\ud654 (\ud30c\ub77c\ubbf8\ud130\ub97c \uc77c\ubc18\ud654)\n    const route = req.route?.path || req.path;\n\n    metricsCollector.recordHttpRequest(\n      req.method,\n      route,\n      res.statusCode,\n      duration,\n      requestSize,\n      responseSize\n    );\n  });\n\n  next();\n};\n\n// \uba54\ud2b8\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\nexport const metricsEndpoint = async (\n  req: Request,\n  res: Response\n): Promise<void> => {\n  try {\n    res.set('Content-Type', metricsCollector.getContentType());\n    const metrics = await metricsCollector.getMetrics();\n    res.send(metrics);\n  } catch (error) {\n    res.status(500).send('Error collecting metrics');\n  }\n};\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ucee4\uc2a4\ud140-\uba54\ud2b8\ub9ad-\uc0ac\uc6a9-\uc608\uc81c",children:"\ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad \uc0ac\uc6a9 \uc608\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/services/order.service.ts\n\nimport { metricsCollector } from '../monitoring/metrics';\n\nexport class OrderService {\n  async createOrder(orderData: CreateOrderDto): Promise<Order> {\n    try {\n      const order = await this.orderRepository.create(orderData);\n\n      // \uc8fc\ubb38 \uba54\ud2b8\ub9ad \uae30\ub85d\n      metricsCollector.recordOrder(\n        order.status,\n        order.paymentMethod,\n        order.totalAmount,\n        order.currency\n      );\n\n      return order;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // \uc815\uae30\uc801\uc73c\ub85c \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218 \uc5c5\ub370\uc774\ud2b8\n  @Cron('*/1 * * * *') // \ub9e4 1\ubd84\ub9c8\ub2e4\n  async updateActiveUsersMetric(): Promise<void> {\n    const activeCount = await this.userRepository.countActiveUsers();\n    metricsCollector.setActiveUsers(activeCount);\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"promql-\ucffc\ub9ac-\uc608\uc81c",children:"PromQL \ucffc\ub9ac \uc608\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-promql",children:'# HTTP \uc694\uccad\ub960 (\ucd08\ub2f9 \uc694\uccad \uc218)\nrate(http_requests_total[5m])\n\n# \uba54\uc11c\ub4dc\ubcc4 \uc694\uccad\ub960\nsum(rate(http_requests_total[5m])) by (method)\n\n# \uc5d0\ub7ec\uc728 (5xx \uc5d0\ub7ec \ube44\uc728)\nsum(rate(http_requests_total{status_code=~"5.."}[5m])) /\nsum(rate(http_requests_total[5m])) * 100\n\n# P95 \uc751\ub2f5 \uc2dc\uac04\nhistogram_quantile(0.95,\n  sum(rate(http_request_duration_seconds_bucket[5m])) by (le, route)\n)\n\n# \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04 (\ub77c\uc6b0\ud2b8\ubcc4)\navg(rate(http_request_duration_seconds_sum[5m]) /\n    rate(http_request_duration_seconds_count[5m])) by (route)\n\n# \uac00\uc7a5 \ub290\ub9b0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 TOP 5\ntopk(5,\n  avg(rate(http_request_duration_seconds_sum[5m]) /\n      rate(http_request_duration_seconds_count[5m])) by (route)\n)\n\n# \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218 \ubcc0\ud654\ndelta(active_users_total[1h])\n\n# \uce90\uc2dc \ud788\ud2b8\uc728\nsum(rate(cache_operations_total{result="hit"}[5m])) /\nsum(rate(cache_operations_total{operation="get"}[5m])) * 100\n\n# \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucee4\ub125\uc158 \uc0ac\uc6a9\ub960\ndb_connection_pool{state="active"} /\n(db_connection_pool{state="active"} + db_connection_pool{state="idle"}) * 100\n'})}),"\n",(0,s.jsx)(e.h2,{id:"154-grafana-\ub300\uc2dc\ubcf4\ub4dc",children:"15.4 Grafana \ub300\uc2dc\ubcf4\ub4dc"}),"\n",(0,s.jsx)(e.p,{children:"Grafana\ub294 \uba54\ud2b8\ub9ad\uc744 \uc2dc\uac01\ud654\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac15\ub825\ud55c \ub3c4\uad6c\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"grafana-\ub300\uc2dc\ubcf4\ub4dc-json-\uc124\uc815",children:"Grafana \ub300\uc2dc\ubcf4\ub4dc JSON \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "dashboard": {\n    "title": "Web Application Monitoring",\n    "tags": ["webapp", "monitoring"],\n    "timezone": "browser",\n    "schemaVersion": 16,\n    "version": 1,\n    "refresh": "10s",\n    "time": {\n      "from": "now-6h",\n      "to": "now"\n    },\n    "panels": [\n      {\n        "id": 1,\n        "title": "Request Rate",\n        "type": "graph",\n        "gridPos": { "x": 0, "y": 0, "w": 12, "h": 8 },\n        "targets": [\n          {\n            "expr": "sum(rate(http_requests_total[5m])) by (method)",\n            "legendFormat": "{{method}}",\n            "refId": "A"\n          }\n        ],\n        "yaxes": [\n          {\n            "format": "reqps",\n            "label": "Requests/sec"\n          }\n        ]\n      },\n      {\n        "id": 2,\n        "title": "Error Rate",\n        "type": "graph",\n        "gridPos": { "x": 12, "y": 0, "w": 12, "h": 8 },\n        "targets": [\n          {\n            "expr": "sum(rate(http_requests_total{status_code=~\\"5..\\"}[5m])) / sum(rate(http_requests_total[5m])) * 100",\n            "legendFormat": "Error Rate %",\n            "refId": "A"\n          }\n        ],\n        "alert": {\n          "conditions": [\n            {\n              "evaluator": {\n                "params": [5],\n                "type": "gt"\n              },\n              "operator": {\n                "type": "and"\n              },\n              "query": {\n                "params": ["A", "5m", "now"]\n              },\n              "reducer": {\n                "params": [],\n                "type": "avg"\n              },\n              "type": "query"\n            }\n          ],\n          "executionErrorState": "alerting",\n          "frequency": "60s",\n          "handler": 1,\n          "name": "High Error Rate",\n          "noDataState": "no_data",\n          "notifications": []\n        }\n      },\n      {\n        "id": 3,\n        "title": "Response Time (P95, P99)",\n        "type": "graph",\n        "gridPos": { "x": 0, "y": 8, "w": 12, "h": 8 },\n        "targets": [\n          {\n            "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))",\n            "legendFormat": "P95",\n            "refId": "A"\n          },\n          {\n            "expr": "histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))",\n            "legendFormat": "P99",\n            "refId": "B"\n          }\n        ],\n        "yaxes": [\n          {\n            "format": "s",\n            "label": "Duration"\n          }\n        ]\n      },\n      {\n        "id": 4,\n        "title": "Active Users",\n        "type": "stat",\n        "gridPos": { "x": 12, "y": 8, "w": 6, "h": 4 },\n        "targets": [\n          {\n            "expr": "active_users_total",\n            "refId": "A"\n          }\n        ],\n        "options": {\n          "colorMode": "value",\n          "graphMode": "area",\n          "justifyMode": "auto",\n          "orientation": "auto",\n          "reduceOptions": {\n            "calcs": ["lastNotNull"],\n            "fields": "",\n            "values": false\n          }\n        }\n      },\n      {\n        "id": 5,\n        "title": "Cache Hit Rate",\n        "type": "gauge",\n        "gridPos": { "x": 18, "y": 8, "w": 6, "h": 4 },\n        "targets": [\n          {\n            "expr": "sum(rate(cache_operations_total{result=\\"hit\\"}[5m])) / sum(rate(cache_operations_total{operation=\\"get\\"}[5m])) * 100",\n            "refId": "A"\n          }\n        ],\n        "options": {\n          "showThresholdLabels": false,\n          "showThresholdMarkers": true\n        },\n        "fieldConfig": {\n          "defaults": {\n            "max": 100,\n            "min": 0,\n            "thresholds": {\n              "mode": "absolute",\n              "steps": [\n                {\n                  "color": "red",\n                  "value": 0\n                },\n                {\n                  "color": "yellow",\n                  "value": 70\n                },\n                {\n                  "color": "green",\n                  "value": 90\n                }\n              ]\n            },\n            "unit": "percent"\n          }\n        }\n      },\n      {\n        "id": 6,\n        "title": "Top 10 Slowest Endpoints",\n        "type": "table",\n        "gridPos": { "x": 0, "y": 16, "w": 24, "h": 8 },\n        "targets": [\n          {\n            "expr": "topk(10, avg(rate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m])) by (route))",\n            "format": "table",\n            "instant": true,\n            "refId": "A"\n          }\n        ],\n        "transformations": [\n          {\n            "id": "organize",\n            "options": {\n              "excludeByName": {\n                "Time": true\n              },\n              "indexByName": {},\n              "renameByName": {\n                "route": "Endpoint",\n                "Value": "Avg Duration (s)"\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"grafana-provisioning",children:"Grafana Provisioning"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# grafana/provisioning/datasources/prometheus.yml\n\napiVersion: 1\n\ndatasources:\n  - name: Prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    isDefault: true\n    editable: false\n    jsonData:\n      timeInterval: '15s'\n      queryTimeout: '60s'\n      httpMethod: 'POST'\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# grafana/provisioning/dashboards/dashboard.yml\n\napiVersion: 1\n\nproviders:\n  - name: 'Default'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10\n    allowUiUpdates: true\n    options:\n      path: /etc/grafana/provisioning/dashboards\n      foldersFromFilesStructure: true\n"})}),"\n",(0,s.jsx)(e.h3,{id:"typescript\ub85c-\ub300\uc2dc\ubcf4\ub4dc-\uc0dd\uc131",children:"TypeScript\ub85c \ub300\uc2dc\ubcf4\ub4dc \uc0dd\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/grafana-dashboard.ts\n\ninterface Panel {\n  id: number;\n  title: string;\n  type: string;\n  gridPos: { x: number; y: number; w: number; h: number };\n  targets: Array<{\n    expr: string;\n    legendFormat?: string;\n    refId: string;\n  }>;\n}\n\nexport class GrafanaDashboardBuilder {\n  private panels: Panel[] = [];\n  private currentId = 1;\n\n  addGraphPanel(\n    title: string,\n    queries: Array<{ expr: string; legend: string }>,\n    position: { x: number; y: number; w: number; h: number }\n  ): this {\n    this.panels.push({\n      id: this.currentId++,\n      title,\n      type: 'graph',\n      gridPos: position,\n      targets: queries.map((q, idx) => ({\n        expr: q.expr,\n        legendFormat: q.legend,\n        refId: String.fromCharCode(65 + idx) // A, B, C, ...\n      }))\n    });\n    return this;\n  }\n\n  addStatPanel(\n    title: string,\n    query: string,\n    position: { x: number; y: number; w: number; h: number }\n  ): this {\n    this.panels.push({\n      id: this.currentId++,\n      title,\n      type: 'stat',\n      gridPos: position,\n      targets: [{ expr: query, refId: 'A' }]\n    });\n    return this;\n  }\n\n  build(title: string): object {\n    return {\n      dashboard: {\n        title,\n        panels: this.panels,\n        timezone: 'browser',\n        schemaVersion: 16,\n        version: 1,\n        refresh: '10s'\n      }\n    };\n  }\n}\n\n// \uc0ac\uc6a9 \uc608\uc81c\nexport function createApplicationDashboard(): object {\n  const builder = new GrafanaDashboardBuilder();\n\n  return builder\n    .addGraphPanel(\n      'Request Rate',\n      [\n        { expr: 'sum(rate(http_requests_total[5m])) by (method)', legend: '{{method}}' }\n      ],\n      { x: 0, y: 0, w: 12, h: 8 }\n    )\n    .addGraphPanel(\n      'Response Time Percentiles',\n      [\n        {\n          expr: 'histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))',\n          legend: 'P95'\n        },\n        {\n          expr: 'histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))',\n          legend: 'P99'\n        }\n      ],\n      { x: 12, y: 0, w: 12, h: 8 }\n    )\n    .addStatPanel(\n      'Active Users',\n      'active_users_total',\n      { x: 0, y: 8, w: 6, h: 4 }\n    )\n    .build('Application Monitoring');\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"155-\uc54c\ub9bc-\uc124\uc815",children:"15.5 \uc54c\ub9bc \uc124\uc815"}),"\n",(0,s.jsx)(e.p,{children:"\uc801\uc808\ud55c \uc54c\ub9bc \uc124\uc815\uc740 \ubb38\uc81c\ub97c \uc2e0\uc18d\ud558\uac8c \uac10\uc9c0\ud558\uace0 \ub300\uc751\ud558\ub294 \ub370 \ud544\uc218\uc801\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"prometheus-\uc54c\ub9bc-\uaddc\uce59",children:"Prometheus \uc54c\ub9bc \uaddc\uce59"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'# alerts/application.yml\n\ngroups:\n  - name: application_alerts\n    interval: 30s\n    rules:\n      # \ub192\uc740 \uc5d0\ub7ec\uc728\n      - alert: HighErrorRate\n        expr: |\n          (sum(rate(http_requests_total{status_code=~"5.."}[5m]))\n          / sum(rate(http_requests_total[5m]))) * 100 > 5\n        for: 5m\n        labels:\n          severity: critical\n          component: backend\n        annotations:\n          summary: "High error rate detected"\n          description: "Error rate is {{ $value | humanize }}% (threshold: 5%)"\n          dashboard: "http://grafana/d/app-monitoring"\n\n      # \ub290\ub9b0 \uc751\ub2f5 \uc2dc\uac04\n      - alert: HighResponseTime\n        expr: |\n          histogram_quantile(0.95,\n            sum(rate(http_request_duration_seconds_bucket[5m])) by (le, route)\n          ) > 2\n        for: 10m\n        labels:\n          severity: warning\n          component: backend\n        annotations:\n          summary: "High response time on {{ $labels.route }}"\n          description: "P95 response time is {{ $value | humanize }}s (threshold: 2s)"\n\n      # \ub0ae\uc740 \uce90\uc2dc \ud788\ud2b8\uc728\n      - alert: LowCacheHitRate\n        expr: |\n          (sum(rate(cache_operations_total{result="hit"}[5m]))\n          / sum(rate(cache_operations_total{operation="get"}[5m]))) * 100 < 70\n        for: 15m\n        labels:\n          severity: warning\n          component: cache\n        annotations:\n          summary: "Low cache hit rate"\n          description: "Cache hit rate is {{ $value | humanize }}% (threshold: 70%)"\n\n      # \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucee4\ub125\uc158 \ubd80\uc871\n      - alert: DatabaseConnectionPoolExhausted\n        expr: |\n          db_connection_pool{state="waiting"} > 10\n        for: 5m\n        labels:\n          severity: critical\n          component: database\n        annotations:\n          summary: "Database connection pool exhausted"\n          description: "{{ $value }} connections are waiting"\n\n      # \ud050 \uc9c0\uc5f0\n      - alert: QueueBacklog\n        expr: |\n          queue_length > 1000\n        for: 10m\n        labels:\n          severity: warning\n          component: queue\n        annotations:\n          summary: "Queue backlog on {{ $labels.queue_name }}"\n          description: "Queue length is {{ $value }}"\n\n      # \ud65c\uc131 \uc0ac\uc6a9\uc790 \uae09\uac10\n      - alert: ActiveUsersDropped\n        expr: |\n          (active_users_total - active_users_total offset 1h)\n          / active_users_total offset 1h * 100 < -50\n        for: 5m\n        labels:\n          severity: warning\n          component: business\n        annotations:\n          summary: "Active users dropped significantly"\n          description: "Active users dropped by {{ $value | humanize }}%"\n\n  - name: infrastructure_alerts\n    interval: 30s\n    rules:\n      # \ub192\uc740 CPU \uc0ac\uc6a9\ub960\n      - alert: HighCPUUsage\n        expr: |\n          100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80\n        for: 10m\n        labels:\n          severity: warning\n          component: infrastructure\n        annotations:\n          summary: "High CPU usage on {{ $labels.instance }}"\n          description: "CPU usage is {{ $value | humanize }}%"\n\n      # \ub192\uc740 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960\n      - alert: HighMemoryUsage\n        expr: |\n          (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85\n        for: 10m\n        labels:\n          severity: warning\n          component: infrastructure\n        annotations:\n          summary: "High memory usage on {{ $labels.instance }}"\n          description: "Memory usage is {{ $value | humanize }}%"\n\n      # \ub514\uc2a4\ud06c \uacf5\uac04 \ubd80\uc871\n      - alert: DiskSpaceLow\n        expr: |\n          (node_filesystem_avail_bytes{fstype!="tmpfs"}\n          / node_filesystem_size_bytes{fstype!="tmpfs"}) * 100 < 10\n        for: 5m\n        labels:\n          severity: critical\n          component: infrastructure\n        annotations:\n          summary: "Low disk space on {{ $labels.instance }}"\n          description: "Only {{ $value | humanize }}% disk space available"\n\n      # \uc11c\ube44\uc2a4 \ub2e4\uc6b4\n      - alert: ServiceDown\n        expr: up == 0\n        for: 2m\n        labels:\n          severity: critical\n          component: infrastructure\n        annotations:\n          summary: "Service {{ $labels.job }} is down"\n          description: "{{ $labels.instance }} has been down for more than 2 minutes"\n'})}),"\n",(0,s.jsx)(e.h3,{id:"alertmanager-\uc124\uc815",children:"Alertmanager \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# alertmanager.yml\n\nglobal:\n  resolve_timeout: 5m\n  slack_api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'\n\n# \uc54c\ub9bc \ud15c\ud50c\ub9bf\ntemplates:\n  - '/etc/alertmanager/templates/*.tmpl'\n\n# \ub77c\uc6b0\ud305 \uaddc\uce59\nroute:\n  # \uae30\ubcf8 \uc218\uc2e0\uc790\n  receiver: 'team-notifications'\n\n  # \uadf8\ub8f9\ud654 \uc124\uc815\n  group_by: ['alertname', 'cluster', 'service']\n  group_wait: 10s\n  group_interval: 10s\n  repeat_interval: 12h\n\n  # \ub77c\uc6b0\ud305 \uaddc\uce59\n  routes:\n    # Critical \uc54c\ub9bc\uc740 \uc989\uc2dc \uc804\uc1a1\n    - match:\n        severity: critical\n      receiver: 'critical-alerts'\n      group_wait: 0s\n      repeat_interval: 5m\n      continue: true\n\n    # \uc778\ud504\ub77c \uad00\ub828 \uc54c\ub9bc\n    - match:\n        component: infrastructure\n      receiver: 'infrastructure-team'\n      group_interval: 5m\n\n    # \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uad00\ub828 \uc54c\ub9bc\n    - match:\n        component: database\n      receiver: 'database-team'\n\n    # \ube44\uc988\ub2c8\uc2a4 \uba54\ud2b8\ub9ad \uc54c\ub9bc\n    - match:\n        component: business\n      receiver: 'product-team'\n\n# \uc218\uc2e0\uc790 \uc124\uc815\nreceivers:\n  - name: 'team-notifications'\n    slack_configs:\n      - channel: '#monitoring'\n        title: 'Alert: {{ .GroupLabels.alertname }}'\n        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'\n        send_resolved: true\n\n  - name: 'critical-alerts'\n    slack_configs:\n      - channel: '#critical-alerts'\n        title: 'CRITICAL: {{ .GroupLabels.alertname }}'\n        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'\n        color: 'danger'\n    pagerduty_configs:\n      - service_key: 'YOUR_PAGERDUTY_KEY'\n        description: '{{ .GroupLabels.alertname }}'\n\n  - name: 'infrastructure-team'\n    email_configs:\n      - to: 'infrastructure@company.com'\n        headers:\n          Subject: '[ALERT] {{ .GroupLabels.alertname }}'\n\n  - name: 'database-team'\n    email_configs:\n      - to: 'database@company.com'\n        headers:\n          Subject: '[DB ALERT] {{ .GroupLabels.alertname }}'\n\n  - name: 'product-team'\n    slack_configs:\n      - channel: '#product'\n        title: 'Business Metric Alert: {{ .GroupLabels.alertname }}'\n\n# \uc5b5\uc81c \uaddc\uce59 (\ud2b9\uc815 \uc54c\ub9bc\uc774 \ubc1c\uc0dd\ud558\uba74 \ub2e4\ub978 \uc54c\ub9bc \uc5b5\uc81c)\ninhibit_rules:\n  # \uc11c\ube44\uc2a4\uac00 \ub2e4\uc6b4\ub418\uba74 \ub2e4\ub978 \uacbd\uace0 \uc5b5\uc81c\n  - source_match:\n      severity: 'critical'\n      alertname: 'ServiceDown'\n    target_match:\n      severity: 'warning'\n    equal: ['instance']\n\n  # Critical \uc54c\ub9bc\uc774 \uc788\uc73c\uba74 Warning \uc5b5\uc81c\n  - source_match:\n      severity: 'critical'\n    target_match:\n      severity: 'warning'\n    equal: ['alertname', 'instance']\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc54c\ub9bc-\ud15c\ud50c\ub9bf",children:"\uc54c\ub9bc \ud15c\ud50c\ub9bf"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-gotmpl",children:'{{/* slack.tmpl */}}\n\n{{ define "slack.title" }}\n[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.alertname }}\n{{ end }}\n\n{{ define "slack.text" }}\n{{ range .Alerts }}\n*Alert:* {{ .Labels.alertname }}\n*Severity:* {{ .Labels.severity }}\n*Summary:* {{ .Annotations.summary }}\n*Description:* {{ .Annotations.description }}\n{{ if .Annotations.dashboard }}\n*Dashboard:* {{ .Annotations.dashboard }}\n{{ end }}\n*Details:*\n{{ range .Labels.SortedPairs }}  \u2022 {{ .Name }}: `{{ .Value }}`\n{{ end }}\n{{ end }}\n{{ end }}\n\n{{ define "slack.color" }}\n{{ if eq .Status "firing" }}\n  {{ if eq .CommonLabels.severity "critical" }}danger{{ else }}warning{{ end }}\n{{ else }}good{{ end }}\n{{ end }}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\uc560\ud50c\ub9ac\ucf00\uc774\uc158-\ub0b4-\uc54c\ub9bc-\ud1b5\ud569",children:"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub0b4 \uc54c\ub9bc \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/alerting.ts\n\nimport axios from 'axios';\n\nexport interface Alert {\n  name: string;\n  severity: 'info' | 'warning' | 'critical';\n  message: string;\n  metadata?: Record<string, any>;\n}\n\nexport class AlertManager {\n  private slackWebhookUrl: string;\n  private pagerDutyApiKey: string;\n\n  constructor() {\n    this.slackWebhookUrl = process.env.SLACK_WEBHOOK_URL!;\n    this.pagerDutyApiKey = process.env.PAGERDUTY_API_KEY!;\n  }\n\n  async sendAlert(alert: Alert): Promise<void> {\n    // Slack \uc54c\ub9bc\n    if (alert.severity === 'warning' || alert.severity === 'critical') {\n      await this.sendSlackAlert(alert);\n    }\n\n    // PagerDuty \uc54c\ub9bc (Critical\ub9cc)\n    if (alert.severity === 'critical') {\n      await this.sendPagerDutyAlert(alert);\n    }\n\n    // \ub85c\uadf8\uc5d0\ub3c4 \uae30\ub85d\n    logger.warn('Alert sent', {\n      action: 'alert_sent',\n      metadata: alert\n    });\n  }\n\n  private async sendSlackAlert(alert: Alert): Promise<void> {\n    const color = alert.severity === 'critical' ? 'danger' : 'warning';\n\n    try {\n      await axios.post(this.slackWebhookUrl, {\n        attachments: [\n          {\n            color,\n            title: `${alert.severity.toUpperCase()}: ${alert.name}`,\n            text: alert.message,\n            fields: Object.entries(alert.metadata || {}).map(([key, value]) => ({\n              title: key,\n              value: String(value),\n              short: true\n            })),\n            footer: 'Application Monitoring',\n            ts: Math.floor(Date.now() / 1000)\n          }\n        ]\n      });\n    } catch (error) {\n      logger.error('Failed to send Slack alert', {}, error);\n    }\n  }\n\n  private async sendPagerDutyAlert(alert: Alert): Promise<void> {\n    try {\n      await axios.post(\n        'https://events.pagerduty.com/v2/enqueue',\n        {\n          routing_key: this.pagerDutyApiKey,\n          event_action: 'trigger',\n          payload: {\n            summary: alert.message,\n            severity: alert.severity,\n            source: 'webapp',\n            custom_details: alert.metadata\n          }\n        }\n      );\n    } catch (error) {\n      logger.error('Failed to send PagerDuty alert', {}, error);\n    }\n  }\n\n  // \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc5d0\uc11c \uc0ac\uc6a9\ud560 \ud5ec\ud37c \uba54\uc11c\ub4dc\n  async alertHighErrorRate(errorRate: number): Promise<void> {\n    await this.sendAlert({\n      name: 'High Error Rate',\n      severity: errorRate > 10 ? 'critical' : 'warning',\n      message: `Error rate is ${errorRate.toFixed(2)}%`,\n      metadata: { errorRate, threshold: 5 }\n    });\n  }\n\n  async alertDatabaseConnectionIssue(waitingConnections: number): Promise<void> {\n    await this.sendAlert({\n      name: 'Database Connection Pool Issue',\n      severity: 'critical',\n      message: `${waitingConnections} connections waiting in pool`,\n      metadata: { waitingConnections }\n    });\n  }\n}\n\nexport const alertManager = new AlertManager();\n"})}),"\n",(0,s.jsx)(e.h2,{id:"156-apm-application-performance-monitoring",children:"15.6 APM (Application Performance Monitoring)"}),"\n",(0,s.jsx)(e.p,{children:"APM \ub3c4\uad6c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc131\ub2a5\uc744 \uc2ec\uce35\uc801\uc73c\ub85c \ubd84\uc11d\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"new-relic-\ud1b5\ud569",children:"New Relic \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/newrelic.ts\n\nimport newrelic from 'newrelic';\n\nexport class NewRelicAPM {\n  // \ucee4\uc2a4\ud140 \ud2b8\ub79c\uc7ad\uc158\n  recordCustomTransaction(name: string, handler: () => Promise<any>): Promise<any> {\n    return newrelic.startWebTransaction(name, async () => {\n      try {\n        return await handler();\n      } catch (error) {\n        newrelic.noticeError(error);\n        throw error;\n      }\n    });\n  }\n\n  // \ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad\n  recordCustomMetric(name: string, value: number): void {\n    newrelic.recordMetric(name, value);\n  }\n\n  // \ucee4\uc2a4\ud140 \uc774\ubca4\ud2b8\n  recordCustomEvent(eventType: string, attributes: Record<string, any>): void {\n    newrelic.recordCustomEvent(eventType, attributes);\n  }\n\n  // \uc0ac\uc6a9\uc790 \ucd94\uc801\n  setUserContext(userId: string, attributes?: Record<string, any>): void {\n    newrelic.setUserId(userId);\n    if (attributes) {\n      Object.entries(attributes).forEach(([key, value]) => {\n        newrelic.addCustomAttribute(key, value);\n      });\n    }\n  }\n\n  // \uc678\ubd80 \uc11c\ube44\uc2a4 \ud638\ucd9c \ucd94\uc801\n  async recordExternalCall<T>(\n    host: string,\n    operation: string,\n    handler: () => Promise<T>\n  ): Promise<T> {\n    const segment = newrelic.startSegment(operation, true, () => {\n      return handler();\n    });\n\n    return segment;\n  }\n}\n\nexport const newRelicAPM = new NewRelicAPM();\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:"// newrelic.js (\uc124\uc815 \ud30c\uc77c)\n\n'use strict';\n\nexports.config = {\n  app_name: ['WebApp Production'],\n  license_key: process.env.NEW_RELIC_LICENSE_KEY,\n  logging: {\n    level: 'info'\n  },\n\n  // \ud2b8\ub79c\uc7ad\uc158 \ucd94\uc801\n  transaction_tracer: {\n    enabled: true,\n    transaction_threshold: 'apdex_f',\n    record_sql: 'obfuscated',\n    explain_threshold: 500\n  },\n\n  // \uc5d0\ub7ec \uc218\uc9d1\n  error_collector: {\n    enabled: true,\n    ignore_status_codes: [404]\n  },\n\n  // \ubd84\uc0b0 \ucd94\uc801\n  distributed_tracing: {\n    enabled: true\n  },\n\n  // \ucee4\uc2a4\ud140 \uc778\uc2a4\ud2b8\ub8e8\uba3c\ud14c\uc774\uc158\n  custom_insights_events: {\n    enabled: true,\n    max_samples_stored: 10000\n  },\n\n  // \ub290\ub9b0 SQL \ucffc\ub9ac \ucd94\uc801\n  slow_sql: {\n    enabled: true\n  }\n};\n"})}),"\n",(0,s.jsx)(e.h3,{id:"elastic-apm-\ud1b5\ud569",children:"Elastic APM \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/elastic-apm.ts\n\nimport apm from 'elastic-apm-node';\n\n// APM \ucd08\uae30\ud654\nexport const elasticAPM = apm.start({\n  serviceName: 'webapp',\n  serverUrl: process.env.ELASTIC_APM_SERVER_URL,\n  secretToken: process.env.ELASTIC_APM_SECRET_TOKEN,\n  environment: process.env.NODE_ENV,\n\n  // \ud2b8\ub79c\uc7ad\uc158 \uc0d8\ud50c \ube44\uc728 (1.0 = 100%)\n  transactionSampleRate: process.env.NODE_ENV === 'production' ? 0.1 : 1.0,\n\n  // \ud2b8\ub79c\uc7ad\uc158 \ucd5c\ub300 \uae38\uc774\n  transactionMaxSpans: 500,\n\n  // \ucea1\ucc98\ud560 \uc694\uccad \ubc14\ub514 \ud06c\uae30\n  captureBody: 'all',\n  captureHeaders: true,\n\n  // \ubd84\uc0b0 \ucd94\uc801\n  usePathAsTransactionName: true\n});\n\nexport class ElasticAPMMonitoring {\n  // \ucee4\uc2a4\ud140 \ud2b8\ub79c\uc7ad\uc158\n  startTransaction(name: string, type: string = 'custom'): any {\n    return apm.startTransaction(name, type);\n  }\n\n  // \uc2a4\ud32c (\ud2b8\ub79c\uc7ad\uc158 \ub0b4 \uc791\uc5c5 \ub2e8\uc704)\n  startSpan(name: string, type?: string): any {\n    return apm.startSpan(name, type);\n  }\n\n  // \uc5d0\ub7ec \ucea1\ucc98\n  captureError(error: Error, customContext?: Record<string, any>): void {\n    apm.captureError(error, {\n      custom: customContext\n    });\n  }\n\n  // \uc0ac\uc6a9\uc790 \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815\n  setUserContext(user: { id: string; username?: string; email?: string }): void {\n    apm.setUserContext(user);\n  }\n\n  // \ucee4\uc2a4\ud140 \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815\n  setCustomContext(context: Record<string, any>): void {\n    apm.setCustomContext(context);\n  }\n\n  // \ub808\uc774\ube14 \ucd94\uac00\n  addLabels(labels: Record<string, string | number | boolean>): void {\n    apm.addLabels(labels);\n  }\n\n  // \ub370\ucf54\ub808\uc774\ud130\ub85c \uc0ac\uc6a9\n  traced(name?: string) {\n    return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n      const originalMethod = descriptor.value;\n      const spanName = name || `${target.constructor.name}.${propertyKey}`;\n\n      descriptor.value = async function (...args: any[]) {\n        const span = apm.startSpan(spanName);\n        try {\n          const result = await originalMethod.apply(this, args);\n          span?.end();\n          return result;\n        } catch (error) {\n          apm.captureError(error);\n          span?.end();\n          throw error;\n        }\n      };\n\n      return descriptor;\n    };\n  }\n}\n\nexport const elasticAPMMonitoring = new ElasticAPMMonitoring();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"apm-\uc0ac\uc6a9-\uc608\uc81c",children:"APM \uc0ac\uc6a9 \uc608\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/services/payment.service.ts\n\nimport { elasticAPMMonitoring } from '../monitoring/elastic-apm';\n\nexport class PaymentService {\n  @elasticAPMMonitoring.traced('PaymentService.processPayment')\n  async processPayment(orderId: string, amount: number): Promise<Payment> {\n    const span = elasticAPMMonitoring.startSpan('validate-payment', 'validation');\n\n    try {\n      // \uacb0\uc81c \uac80\uc99d\n      await this.validatePayment(orderId, amount);\n      span.end();\n\n      // \uc678\ubd80 \uacb0\uc81c \uac8c\uc774\ud2b8\uc6e8\uc774 \ud638\ucd9c\n      const gatewaySpan = elasticAPMMonitoring.startSpan(\n        'payment-gateway-call',\n        'external.http'\n      );\n\n      try {\n        const result = await this.callPaymentGateway(orderId, amount);\n        gatewaySpan.addLabels({\n          gateway: 'stripe',\n          amount,\n          currency: 'USD'\n        });\n        gatewaySpan.end();\n\n        return result;\n      } catch (error) {\n        elasticAPMMonitoring.captureError(error, {\n          orderId,\n          amount,\n          gateway: 'stripe'\n        });\n        throw error;\n      }\n    } catch (error) {\n      elasticAPMMonitoring.captureError(error);\n      throw error;\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"157-\ud5ec\uc2a4\uccb4\ud06c",children:"15.7 \ud5ec\uc2a4\uccb4\ud06c"}),"\n",(0,s.jsx)(e.p,{children:"\ud5ec\uc2a4\uccb4\ud06c\ub294 \uc2dc\uc2a4\ud15c\uc758 \uc0c1\ud0dc\ub97c \ud655\uc778\ud558\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"\ud5ec\uc2a4\uccb4\ud06c-\uad6c\ud604",children:"\ud5ec\uc2a4\uccb4\ud06c \uad6c\ud604"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/health/health-check.service.ts\n\nexport enum HealthStatus {\n  UP = 'up',\n  DOWN = 'down',\n  DEGRADED = 'degraded'\n}\n\nexport interface HealthIndicator {\n  name: string;\n  status: HealthStatus;\n  details?: Record<string, any>;\n  responseTime?: number;\n}\n\nexport interface HealthCheckResult {\n  status: HealthStatus;\n  timestamp: Date;\n  uptime: number;\n  indicators: HealthIndicator[];\n}\n\nexport class HealthCheckService {\n  private startTime: Date = new Date();\n\n  async check(): Promise<HealthCheckResult> {\n    const indicators = await Promise.all([\n      this.checkDatabase(),\n      this.checkRedis(),\n      this.checkExternalAPIs(),\n      this.checkDiskSpace(),\n      this.checkMemory()\n    ]);\n\n    // \uc804\uccb4 \uc0c1\ud0dc \uacb0\uc815\n    const status = this.determineOverallStatus(indicators);\n\n    return {\n      status,\n      timestamp: new Date(),\n      uptime: Date.now() - this.startTime.getTime(),\n      indicators\n    };\n  }\n\n  // \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud5ec\uc2a4\uccb4\ud06c\n  private async checkDatabase(): Promise<HealthIndicator> {\n    const startTime = Date.now();\n\n    try {\n      await db.raw('SELECT 1');\n\n      const poolInfo = db.client.pool;\n      const responseTime = Date.now() - startTime;\n\n      return {\n        name: 'database',\n        status: responseTime < 1000 ? HealthStatus.UP : HealthStatus.DEGRADED,\n        responseTime,\n        details: {\n          activeConnections: poolInfo.numUsed(),\n          idleConnections: poolInfo.numFree(),\n          totalConnections: poolInfo.size,\n          maxConnections: poolInfo.max\n        }\n      };\n    } catch (error) {\n      return {\n        name: 'database',\n        status: HealthStatus.DOWN,\n        details: { error: error.message }\n      };\n    }\n  }\n\n  // Redis \ud5ec\uc2a4\uccb4\ud06c\n  private async checkRedis(): Promise<HealthIndicator> {\n    const startTime = Date.now();\n\n    try {\n      await redis.ping();\n      const info = await redis.info();\n      const responseTime = Date.now() - startTime;\n\n      return {\n        name: 'redis',\n        status: responseTime < 500 ? HealthStatus.UP : HealthStatus.DEGRADED,\n        responseTime,\n        details: {\n          connectedClients: this.parseRedisInfo(info, 'connected_clients'),\n          usedMemory: this.parseRedisInfo(info, 'used_memory_human'),\n          uptime: this.parseRedisInfo(info, 'uptime_in_seconds')\n        }\n      };\n    } catch (error) {\n      return {\n        name: 'redis',\n        status: HealthStatus.DOWN,\n        details: { error: error.message }\n      };\n    }\n  }\n\n  // \uc678\ubd80 API \ud5ec\uc2a4\uccb4\ud06c\n  private async checkExternalAPIs(): Promise<HealthIndicator> {\n    const checks = await Promise.allSettled([\n      this.checkAPI('payment-gateway', process.env.PAYMENT_API_URL + '/health'),\n      this.checkAPI('email-service', process.env.EMAIL_API_URL + '/health'),\n      this.checkAPI('sms-service', process.env.SMS_API_URL + '/health')\n    ]);\n\n    const results = checks.map((result, index) => {\n      if (result.status === 'fulfilled') {\n        return result.value;\n      }\n      return {\n        name: ['payment-gateway', 'email-service', 'sms-service'][index],\n        status: HealthStatus.DOWN\n      };\n    });\n\n    const allUp = results.every(r => r.status === HealthStatus.UP);\n    const someDown = results.some(r => r.status === HealthStatus.DOWN);\n\n    return {\n      name: 'external-apis',\n      status: allUp ? HealthStatus.UP : someDown ? HealthStatus.DEGRADED : HealthStatus.DOWN,\n      details: Object.fromEntries(results.map(r => [r.name, r.status]))\n    };\n  }\n\n  // \ub514\uc2a4\ud06c \uacf5\uac04 \ud5ec\uc2a4\uccb4\ud06c\n  private async checkDiskSpace(): Promise<HealthIndicator> {\n    try {\n      const diskUsage = await checkDiskSpace('/');\n      const usagePercent = ((diskUsage.size - diskUsage.free) / diskUsage.size) * 100;\n\n      return {\n        name: 'disk',\n        status: usagePercent < 90 ? HealthStatus.UP : HealthStatus.DEGRADED,\n        details: {\n          totalGB: (diskUsage.size / (1024 ** 3)).toFixed(2),\n          freeGB: (diskUsage.free / (1024 ** 3)).toFixed(2),\n          usagePercent: usagePercent.toFixed(2)\n        }\n      };\n    } catch (error) {\n      return {\n        name: 'disk',\n        status: HealthStatus.DOWN,\n        details: { error: error.message }\n      };\n    }\n  }\n\n  // \uba54\ubaa8\ub9ac \ud5ec\uc2a4\uccb4\ud06c\n  private async checkMemory(): Promise<HealthIndicator> {\n    const memUsage = process.memoryUsage();\n    const totalMem = os.totalmem();\n    const freeMem = os.freemem();\n    const usagePercent = ((totalMem - freeMem) / totalMem) * 100;\n\n    return {\n      name: 'memory',\n      status: usagePercent < 85 ? HealthStatus.UP : HealthStatus.DEGRADED,\n      details: {\n        heapUsedMB: (memUsage.heapUsed / 1024 / 1024).toFixed(2),\n        heapTotalMB: (memUsage.heapTotal / 1024 / 1024).toFixed(2),\n        rssMB: (memUsage.rss / 1024 / 1024).toFixed(2),\n        systemUsagePercent: usagePercent.toFixed(2)\n      }\n    };\n  }\n\n  private async checkAPI(name: string, url: string): Promise<HealthIndicator> {\n    const startTime = Date.now();\n    try {\n      const response = await axios.get(url, { timeout: 5000 });\n      return {\n        name,\n        status: response.status === 200 ? HealthStatus.UP : HealthStatus.DEGRADED,\n        responseTime: Date.now() - startTime\n      };\n    } catch (error) {\n      return {\n        name,\n        status: HealthStatus.DOWN,\n        responseTime: Date.now() - startTime\n      };\n    }\n  }\n\n  private determineOverallStatus(indicators: HealthIndicator[]): HealthStatus {\n    const hasDown = indicators.some(i => i.status === HealthStatus.DOWN);\n    const hasDegraded = indicators.some(i => i.status === HealthStatus.DEGRADED);\n\n    if (hasDown) return HealthStatus.DOWN;\n    if (hasDegraded) return HealthStatus.DEGRADED;\n    return HealthStatus.UP;\n  }\n\n  private parseRedisInfo(info: string, key: string): string {\n    const match = info.match(new RegExp(`${key}:(.+)`));\n    return match ? match[1].trim() : 'N/A';\n  }\n}\n\nexport const healthCheckService = new HealthCheckService();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud5ec\uc2a4\uccb4\ud06c-\uc5d4\ub4dc\ud3ec\uc778\ud2b8",children:"\ud5ec\uc2a4\uccb4\ud06c \uc5d4\ub4dc\ud3ec\uc778\ud2b8"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/controllers/health.controller.ts\n\nimport { Router, Request, Response } from 'express';\nimport { healthCheckService, HealthStatus } from '../health/health-check.service';\n\nconst router = Router();\n\n// \uc804\uccb4 \ud5ec\uc2a4\uccb4\ud06c (\uc0c1\uc138 \uc815\ubcf4 \ud3ec\ud568)\nrouter.get('/health', async (req: Request, res: Response) => {\n  try {\n    const result = await healthCheckService.check();\n    const statusCode = result.status === HealthStatus.UP ? 200 : 503;\n\n    res.status(statusCode).json(result);\n  } catch (error) {\n    res.status(503).json({\n      status: HealthStatus.DOWN,\n      error: error.message\n    });\n  }\n});\n\n// \uac04\ub2e8\ud55c liveness probe (K8s\uc6a9)\nrouter.get('/health/live', (req: Request, res: Response) => {\n  res.status(200).json({ status: 'alive' });\n});\n\n// Readiness probe (K8s\uc6a9)\nrouter.get('/health/ready', async (req: Request, res: Response) => {\n  try {\n    const result = await healthCheckService.check();\n\n    if (result.status === HealthStatus.UP) {\n      res.status(200).json({ status: 'ready' });\n    } else {\n      res.status(503).json({ status: 'not ready', details: result });\n    }\n  } catch (error) {\n    res.status(503).json({ status: 'not ready', error: error.message });\n  }\n});\n\nexport default router;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"kubernetes-\ud5ec\uc2a4\uccb4\ud06c-\uc124\uc815",children:"Kubernetes \ud5ec\uc2a4\uccb4\ud06c \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# k8s/deployment.yml\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webapp\nspec:\n  replicas: 3\n  template:\n    spec:\n      containers:\n        - name: webapp\n          image: webapp:latest\n          ports:\n            - containerPort: 3000\n\n          # Liveness Probe (\ucee8\ud14c\uc774\ub108\uac00 \uc0b4\uc544\uc788\ub294\uc9c0 \ud655\uc778)\n          livenessProbe:\n            httpGet:\n              path: /health/live\n              port: 3000\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n            failureThreshold: 3\n\n          # Readiness Probe (\ud2b8\ub798\ud53d\uc744 \ubc1b\uc744 \uc900\ube44\uac00 \ub418\uc5c8\ub294\uc9c0 \ud655\uc778)\n          readinessProbe:\n            httpGet:\n              path: /health/ready\n              port: 3000\n            initialDelaySeconds: 10\n            periodSeconds: 5\n            timeoutSeconds: 3\n            failureThreshold: 3\n\n          # Startup Probe (\ucd08\uae30 \uc2dc\uc791 \uc2dc\uac04\uc774 \uae34 \uacbd\uc6b0)\n          startupProbe:\n            httpGet:\n              path: /health/live\n              port: 3000\n            initialDelaySeconds: 0\n            periodSeconds: 10\n            timeoutSeconds: 3\n            failureThreshold: 30\n"})}),"\n",(0,s.jsx)(e.h2,{id:"158-\uc5d0\ub7ec-\ucd94\uc801-sentry",children:"15.8 \uc5d0\ub7ec \ucd94\uc801 (Sentry)"}),"\n",(0,s.jsx)(e.p,{children:"Sentry\ub294 \uc2e4\uc2dc\uac04 \uc5d0\ub7ec \ucd94\uc801 \ubc0f \ubaa8\ub2c8\ud130\ub9c1 \ud50c\ub7ab\ud3fc\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"sentry-\uc124\uc815",children:"Sentry \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/sentry.ts\n\nimport * as Sentry from '@sentry/node';\nimport * as Tracing from '@sentry/tracing';\nimport { Express } from 'express';\n\nexport class SentryMonitoring {\n  initialize(app: Express): void {\n    Sentry.init({\n      dsn: process.env.SENTRY_DSN,\n      environment: process.env.NODE_ENV,\n      release: `webapp@${process.env.APP_VERSION}`,\n\n      // \uc131\ub2a5 \ubaa8\ub2c8\ud130\ub9c1\n      tracesSampleRate: process.env.NODE_ENV === 'production' ? 0.1 : 1.0,\n\n      // \ud504\ub85c\ud30c\uc77c\ub9c1\n      profilesSampleRate: 0.1,\n\n      // \ud1b5\ud569\n      integrations: [\n        new Sentry.Integrations.Http({ tracing: true }),\n        new Tracing.Integrations.Express({ app }),\n        new Tracing.Integrations.Postgres(),\n        new Tracing.Integrations.Mongo(),\n      ],\n\n      // \uc5d0\ub7ec \ud544\ud130\ub9c1\n      beforeSend(event, hint) {\n        // \ud2b9\uc815 \uc5d0\ub7ec \ubb34\uc2dc\n        const error = hint.originalException;\n        if (error && error.message?.includes('ECONNREFUSED')) {\n          return null;\n        }\n\n        // \ubbfc\uac10\ud55c \uc815\ubcf4 \uc81c\uac70\n        if (event.request) {\n          delete event.request.cookies;\n          if (event.request.headers) {\n            delete event.request.headers.authorization;\n          }\n        }\n\n        return event;\n      },\n\n      // \ube0c\ub808\ub4dc\ud06c\ub7fc \ud544\ud130\ub9c1\n      beforeBreadcrumb(breadcrumb, hint) {\n        if (breadcrumb.category === 'console') {\n          return null;\n        }\n        return breadcrumb;\n      }\n    });\n  }\n\n  // Express \ubbf8\ub4e4\uc6e8\uc5b4\n  requestHandler(): any {\n    return Sentry.Handlers.requestHandler({\n      user: ['id', 'email', 'username'],\n      ip: true,\n      request: true,\n      transaction: 'methodPath'\n    });\n  }\n\n  tracingHandler(): any {\n    return Sentry.Handlers.tracingHandler();\n  }\n\n  errorHandler(): any {\n    return Sentry.Handlers.errorHandler({\n      shouldHandleError(error) {\n        // 4xx \uc5d0\ub7ec\ub294 Sentry\uc5d0 \ubcf4\uace0\ud558\uc9c0 \uc54a\uc74c\n        return error.status >= 500;\n      }\n    });\n  }\n\n  // \uc5d0\ub7ec \ucea1\ucc98\n  captureException(error: Error, context?: Sentry.CaptureContext): string {\n    return Sentry.captureException(error, context);\n  }\n\n  // \uba54\uc2dc\uc9c0 \ucea1\ucc98\n  captureMessage(message: string, level: Sentry.SeverityLevel = 'info'): string {\n    return Sentry.captureMessage(message, level);\n  }\n\n  // \uc0ac\uc6a9\uc790 \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815\n  setUser(user: { id: string; email?: string; username?: string }): void {\n    Sentry.setUser(user);\n  }\n\n  // \ud0dc\uadf8 \uc124\uc815\n  setTag(key: string, value: string): void {\n    Sentry.setTag(key, value);\n  }\n\n  // \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815\n  setContext(name: string, context: Record<string, any>): void {\n    Sentry.setContext(name, context);\n  }\n\n  // \ube0c\ub808\ub4dc\ud06c\ub7fc \ucd94\uac00\n  addBreadcrumb(breadcrumb: Sentry.Breadcrumb): void {\n    Sentry.addBreadcrumb(breadcrumb);\n  }\n\n  // \ud2b8\ub79c\uc7ad\uc158 \uc2dc\uc791\n  startTransaction(context: Sentry.TransactionContext): Sentry.Transaction {\n    return Sentry.startTransaction(context);\n  }\n\n  // \uc131\ub2a5 \ubaa8\ub2c8\ud130\ub9c1\n  async trace<T>(\n    operation: string,\n    handler: () => Promise<T>,\n    data?: Record<string, any>\n  ): Promise<T> {\n    const transaction = Sentry.startTransaction({\n      op: operation,\n      name: operation,\n      data\n    });\n\n    try {\n      const result = await handler();\n      transaction.setStatus('ok');\n      return result;\n    } catch (error) {\n      transaction.setStatus('internal_error');\n      throw error;\n    } finally {\n      transaction.finish();\n    }\n  }\n}\n\nexport const sentry = new SentryMonitoring();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"express-\ud1b5\ud569",children:"Express \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/app.ts\n\nimport express from 'express';\nimport { sentry } from './monitoring/sentry';\n\nconst app = express();\n\n// Sentry\ub294 \ub2e4\ub978 \ubbf8\ub4e4\uc6e8\uc5b4\ubcf4\ub2e4 \uba3c\uc800 \ucd08\uae30\ud654\nsentry.initialize(app);\n\n// Request handler\ub294 \uccab \ubc88\uc9f8 \ubbf8\ub4e4\uc6e8\uc5b4\uc5ec\uc57c \ud568\napp.use(sentry.requestHandler());\n\n// Tracing handler\ub294 request handler \ub2e4\uc74c\uc5d0\napp.use(sentry.tracingHandler());\n\n// \uc77c\ubc18 \ubbf8\ub4e4\uc6e8\uc5b4\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// \ub77c\uc6b0\ud2b8\napp.use('/api', routes);\n\n// Error handler\ub294 \ubaa8\ub4e0 \ubbf8\ub4e4\uc6e8\uc5b4/\ub77c\uc6b0\ud2b8 \ub4a4\uc5d0\napp.use(sentry.errorHandler());\n\n// \ucee4\uc2a4\ud140 \uc5d0\ub7ec \ud578\ub4e4\ub7ec\napp.use((err, req, res, next) => {\n  res.status(err.status || 500).json({\n    error: {\n      message: err.message,\n      ...(process.env.NODE_ENV === 'development' && { stack: err.stack })\n    }\n  });\n});\n\nexport default app;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ube44\uc988\ub2c8\uc2a4-\ub85c\uc9c1\uc5d0\uc11c-sentry-\uc0ac\uc6a9",children:"\ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1\uc5d0\uc11c Sentry \uc0ac\uc6a9"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/services/order.service.ts\n\nimport { sentry } from '../monitoring/sentry';\n\nexport class OrderService {\n  async createOrder(userId: string, orderData: CreateOrderDto): Promise<Order> {\n    // \uc0ac\uc6a9\uc790 \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815\n    sentry.setUser({ id: userId });\n\n    // \ube0c\ub808\ub4dc\ud06c\ub7fc \ucd94\uac00\n    sentry.addBreadcrumb({\n      category: 'order',\n      message: 'Creating new order',\n      level: 'info',\n      data: { items: orderData.items.length }\n    });\n\n    try {\n      // \ud2b8\ub79c\uc7ad\uc158\uc73c\ub85c \uc131\ub2a5 \ucd94\uc801\n      return await sentry.trace('order.create', async () => {\n        const order = await this.orderRepository.create({\n          userId,\n          ...orderData\n        });\n\n        // \uacb0\uc81c \ucc98\ub9ac\n        const payment = await this.processPayment(order);\n\n        // \uc7ac\uace0 \uc5c5\ub370\uc774\ud2b8\n        await this.updateInventory(order.items);\n\n        return order;\n      }, {\n        userId,\n        orderValue: orderData.totalAmount\n      });\n    } catch (error) {\n      // \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8\uc640 \ud568\uaed8 \uc5d0\ub7ec \ucea1\ucc98\n      sentry.captureException(error, {\n        tags: {\n          operation: 'create_order',\n          userId\n        },\n        contexts: {\n          order: {\n            items: orderData.items,\n            total: orderData.totalAmount\n          }\n        }\n      });\n      throw error;\n    }\n  }\n\n  async processPayment(order: Order): Promise<Payment> {\n    const transaction = sentry.startTransaction({\n      op: 'payment',\n      name: 'Process Payment'\n    });\n\n    try {\n      const span = transaction.startChild({\n        op: 'http.client',\n        description: 'Payment Gateway API Call'\n      });\n\n      const payment = await this.paymentGateway.charge({\n        amount: order.totalAmount,\n        currency: order.currency\n      });\n\n      span.finish();\n      transaction.setStatus('ok');\n      return payment;\n    } catch (error) {\n      transaction.setStatus('internal_error');\n\n      // \uacb0\uc81c \uc2e4\ud328\ub294 critical \ub808\ubca8\n      sentry.captureMessage(\n        `Payment failed for order ${order.id}`,\n        'error'\n      );\n\n      throw error;\n    } finally {\n      transaction.finish();\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud504\ub860\ud2b8\uc5d4\ub4dc-sentry-\uc124\uc815",children:"\ud504\ub860\ud2b8\uc5d4\ub4dc Sentry \uc124\uc815"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// frontend/src/monitoring/sentry.ts\n\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\n\nexport function initializeSentry(): void {\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    environment: process.env.NODE_ENV,\n    release: `webapp-frontend@${process.env.REACT_APP_VERSION}`,\n\n    integrations: [\n      new BrowserTracing(),\n      new Sentry.Replay({\n        maskAllText: true,\n        blockAllMedia: true\n      })\n    ],\n\n    // \uc131\ub2a5 \ubaa8\ub2c8\ud130\ub9c1\n    tracesSampleRate: 0.1,\n\n    // Session Replay\n    replaysSessionSampleRate: 0.1,\n    replaysOnErrorSampleRate: 1.0,\n\n    beforeSend(event, hint) {\n      // \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c\ub294 \ucf58\uc194\uc5d0 \ucd9c\ub825\n      if (process.env.NODE_ENV === 'development') {\n        console.error('Sentry Event:', event, hint);\n      }\n      return event;\n    }\n  });\n}\n\n// React \uc5d0\ub7ec \ubc14\uc6b4\ub354\ub9ac\nexport const SentryErrorBoundary = Sentry.ErrorBoundary;\n"})}),"\n",(0,s.jsx)(e.h2,{id:"159-\uc0ac\uc6a9\uc790-\ubd84\uc11d",children:"15.9 \uc0ac\uc6a9\uc790 \ubd84\uc11d"}),"\n",(0,s.jsx)(e.p,{children:"\uc0ac\uc6a9\uc790 \ud589\ub3d9 \ubd84\uc11d\uc740 \uc81c\ud488 \uac1c\uc120\uacfc \ube44\uc988\ub2c8\uc2a4 \uc758\uc0ac\uacb0\uc815\uc5d0 \ud544\uc218\uc801\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h3,{id:"google-analytics-\ud1b5\ud569",children:"Google Analytics \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/analytics/google-analytics.ts\n\nimport Analytics from 'analytics';\nimport googleAnalytics from '@analytics/google-analytics';\n\nexport const analytics = Analytics({\n  app: 'webapp',\n  plugins: [\n    googleAnalytics({\n      measurementIds: [process.env.GA_MEASUREMENT_ID!]\n    })\n  ]\n});\n\nexport class GoogleAnalytics {\n  // \ud398\uc774\uc9c0 \ubdf0 \ucd94\uc801\n  trackPageView(path: string, title?: string): void {\n    analytics.page({\n      path,\n      title\n    });\n  }\n\n  // \uc774\ubca4\ud2b8 \ucd94\uc801\n  trackEvent(\n    category: string,\n    action: string,\n    label?: string,\n    value?: number\n  ): void {\n    analytics.track('event', {\n      category,\n      action,\n      label,\n      value\n    });\n  }\n\n  // \uc0ac\uc6a9\uc790 \uc18d\uc131 \uc124\uc815\n  setUserProperties(properties: Record<string, any>): void {\n    analytics.identify(properties.userId, properties);\n  }\n\n  // E-commerce \uc774\ubca4\ud2b8\n  trackPurchase(transaction: {\n    transactionId: string;\n    revenue: number;\n    tax?: number;\n    shipping?: number;\n    items: Array<{\n      name: string;\n      sku: string;\n      price: number;\n      quantity: number;\n    }>;\n  }): void {\n    analytics.track('purchase', transaction);\n  }\n\n  // \ucee4\uc2a4\ud140 \uc774\ubca4\ud2b8\n  trackCustomEvent(eventName: string, properties?: Record<string, any>): void {\n    analytics.track(eventName, properties);\n  }\n}\n\nexport const ga = new GoogleAnalytics();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"mixpanel-\ud1b5\ud569",children:"Mixpanel \ud1b5\ud569"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/analytics/mixpanel.ts\n\nimport mixpanel from 'mixpanel';\n\nexport class MixpanelAnalytics {\n  private client: mixpanel.Mixpanel;\n\n  constructor() {\n    this.client = mixpanel.init(process.env.MIXPANEL_TOKEN!);\n  }\n\n  // \uc774\ubca4\ud2b8 \ucd94\uc801\n  track(userId: string, eventName: string, properties?: Record<string, any>): void {\n    this.client.track(eventName, {\n      distinct_id: userId,\n      ...properties,\n      time: Date.now(),\n      $insert_id: this.generateInsertId(userId, eventName)\n    });\n  }\n\n  // \uc0ac\uc6a9\uc790 \ud504\ub85c\ud544 \uc124\uc815\n  setUserProfile(userId: string, properties: Record<string, any>): void {\n    this.client.people.set(userId, {\n      ...properties,\n      $last_seen: new Date()\n    });\n  }\n\n  // \uc0ac\uc6a9\uc790 \ud504\ub85c\ud544 \uc5c5\ub370\uc774\ud2b8\n  incrementUserProperty(userId: string, property: string, value: number = 1): void {\n    this.client.people.increment(userId, property, value);\n  }\n\n  // \ub9e4\ucd9c \ucd94\uc801\n  trackRevenue(userId: string, amount: number, properties?: Record<string, any>): void {\n    this.client.people.track_charge(userId, amount, {\n      $time: new Date(),\n      ...properties\n    });\n  }\n\n  // Funnel \ubd84\uc11d\uc744 \uc704\ud55c \uc774\ubca4\ud2b8\n  trackFunnelStep(\n    userId: string,\n    funnel: string,\n    step: string,\n    properties?: Record<string, any>\n  ): void {\n    this.track(userId, `${funnel} - ${step}`, {\n      funnel,\n      step,\n      ...properties\n    });\n  }\n\n  // A/B \ud14c\uc2a4\ud2b8\n  trackExperiment(\n    userId: string,\n    experimentName: string,\n    variant: string,\n    properties?: Record<string, any>\n  ): void {\n    this.track(userId, 'Experiment Viewed', {\n      experiment_name: experimentName,\n      variant,\n      ...properties\n    });\n  }\n\n  private generateInsertId(userId: string, eventName: string): string {\n    return `${userId}-${eventName}-${Date.now()}`;\n  }\n}\n\nexport const mixpanel = new MixpanelAnalytics();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ucee4\uc2a4\ud140-\ubd84\uc11d-\uc2dc\uc2a4\ud15c",children:"\ucee4\uc2a4\ud140 \ubd84\uc11d \uc2dc\uc2a4\ud15c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/analytics/custom-analytics.ts\n\nexport interface AnalyticsEvent {\n  userId?: string;\n  sessionId: string;\n  eventName: string;\n  properties: Record<string, any>;\n  timestamp: Date;\n  userAgent?: string;\n  ip?: string;\n  referrer?: string;\n}\n\nexport class CustomAnalytics {\n  private eventQueue: AnalyticsEvent[] = [];\n  private flushInterval: NodeJS.Timeout;\n\n  constructor() {\n    // 10\ucd08\ub9c8\ub2e4 \uc774\ubca4\ud2b8 \ud50c\ub7ec\uc2dc\n    this.flushInterval = setInterval(() => this.flush(), 10000);\n  }\n\n  // \uc774\ubca4\ud2b8 \uae30\ub85d\n  track(event: Omit<AnalyticsEvent, 'timestamp'>): void {\n    this.eventQueue.push({\n      ...event,\n      timestamp: new Date()\n    });\n\n    // \ud050\uac00 100\uac1c \uc774\uc0c1\uc774\uba74 \uc989\uc2dc \ud50c\ub7ec\uc2dc\n    if (this.eventQueue.length >= 100) {\n      this.flush();\n    }\n  }\n\n  // \uc0ac\uc6a9\uc790 \ud589\ub3d9 \ucd94\uc801\n  trackUserAction(\n    userId: string,\n    sessionId: string,\n    action: string,\n    properties?: Record<string, any>\n  ): void {\n    this.track({\n      userId,\n      sessionId,\n      eventName: `user.${action}`,\n      properties: properties || {}\n    });\n  }\n\n  // \ud398\uc774\uc9c0 \ubdf0 \ucd94\uc801\n  trackPageView(\n    userId: string | undefined,\n    sessionId: string,\n    path: string,\n    properties?: Record<string, any>\n  ): void {\n    this.track({\n      userId,\n      sessionId,\n      eventName: 'page.view',\n      properties: {\n        path,\n        ...properties\n      }\n    });\n  }\n\n  // \ud074\ub9ad \ucd94\uc801\n  trackClick(\n    userId: string | undefined,\n    sessionId: string,\n    element: string,\n    properties?: Record<string, any>\n  ): void {\n    this.track({\n      userId,\n      sessionId,\n      eventName: 'click',\n      properties: {\n        element,\n        ...properties\n      }\n    });\n  }\n\n  // \uc774\ubca4\ud2b8\ub97c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\n  private async flush(): Promise<void> {\n    if (this.eventQueue.length === 0) return;\n\n    const events = [...this.eventQueue];\n    this.eventQueue = [];\n\n    try {\n      // \ubc30\uce58\ub85c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\n      await db('analytics_events').insert(events);\n\n      // Kafka\ub098 \ub2e4\ub978 \uc2a4\ud2b8\ub9bc \ucc98\ub9ac \uc2dc\uc2a4\ud15c\uc73c\ub85c \uc804\uc1a1\n      await this.sendToEventStream(events);\n    } catch (error) {\n      logger.error('Failed to flush analytics events', {}, error);\n      // \uc2e4\ud328\ud55c \uc774\ubca4\ud2b8\ub294 \ub2e4\uc2dc \ud050\uc5d0 \ucd94\uac00\n      this.eventQueue.unshift(...events);\n    }\n  }\n\n  private async sendToEventStream(events: AnalyticsEvent[]): Promise<void> {\n    // Kafka, Kinesis, Pub/Sub \ub4f1\uc73c\ub85c \uc804\uc1a1\n    // \uc2e4\uc2dc\uac04 \ubd84\uc11d\uc774\ub098 \ub370\uc774\ud130 \uc6e8\uc5b4\ud558\uc6b0\uc2a4\ub85c \uc804\ub2ec\n  }\n\n  // \uc815\ub9ac\n  destroy(): void {\n    clearInterval(this.flushInterval);\n    this.flush();\n  }\n}\n\nexport const customAnalytics = new CustomAnalytics();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ubd84\uc11d-\ubbf8\ub4e4\uc6e8\uc5b4",children:"\ubd84\uc11d \ubbf8\ub4e4\uc6e8\uc5b4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/middleware/analytics.middleware.ts\n\nimport { Request, Response, NextFunction } from 'express';\nimport { customAnalytics } from '../analytics/custom-analytics';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const analyticsMiddleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void => {\n  // \uc138\uc158 ID (\ucfe0\ud0a4\uc5d0\uc11c \uac00\uc838\uc624\uac70\ub098 \uc0dd\uc131)\n  const sessionId = req.cookies.session_id || uuidv4();\n  if (!req.cookies.session_id) {\n    res.cookie('session_id', sessionId, {\n      maxAge: 30 * 24 * 60 * 60 * 1000, // 30\uc77c\n      httpOnly: true\n    });\n  }\n\n  // \ud398\uc774\uc9c0 \ubdf0 \ucd94\uc801\n  customAnalytics.trackPageView(\n    req.user?.id,\n    sessionId,\n    req.path,\n    {\n      method: req.method,\n      query: req.query,\n      referrer: req.get('referrer'),\n      userAgent: req.get('user-agent')\n    }\n  );\n\n  next();\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"1510-\uc131\ub2a5-\uba54\ud2b8\ub9ad",children:"15.10 \uc131\ub2a5 \uba54\ud2b8\ub9ad"}),"\n",(0,s.jsx)(e.h3,{id:"web-vitals-\uc218\uc9d1",children:"Web Vitals \uc218\uc9d1"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// frontend/src/monitoring/web-vitals.ts\n\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nexport class WebVitalsMonitoring {\n  initialize(): void {\n    // Cumulative Layout Shift\n    getCLS(this.sendToAnalytics);\n\n    // First Input Delay\n    getFID(this.sendToAnalytics);\n\n    // First Contentful Paint\n    getFCP(this.sendToAnalytics);\n\n    // Largest Contentful Paint\n    getLCP(this.sendToAnalytics);\n\n    // Time to First Byte\n    getTTFB(this.sendToAnalytics);\n  }\n\n  private sendToAnalytics(metric: any): void {\n    const body = JSON.stringify({\n      name: metric.name,\n      value: metric.value,\n      rating: metric.rating,\n      delta: metric.delta,\n      id: metric.id,\n      navigationType: metric.navigationType,\n      url: window.location.href,\n      userAgent: navigator.userAgent\n    });\n\n    // Beacon API\ub85c \uc804\uc1a1 (\ud398\uc774\uc9c0 \uc774\ud0c8 \uc2dc\uc5d0\ub3c4 \uc804\uc1a1 \ubcf4\uc7a5)\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon('/api/analytics/web-vitals', body);\n    } else {\n      fetch('/api/analytics/web-vitals', {\n        body,\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        keepalive: true\n      });\n    }\n\n    // Google Analytics\ub85c\ub3c4 \uc804\uc1a1\n    if (window.gtag) {\n      window.gtag('event', metric.name, {\n        value: Math.round(metric.value),\n        event_category: 'Web Vitals',\n        event_label: metric.id,\n        non_interaction: true\n      });\n    }\n  }\n}\n\nexport const webVitals = new WebVitalsMonitoring();\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ubc31\uc5d4\ub4dc-\uc131\ub2a5-\ubaa8\ub2c8\ud130\ub9c1",children:"\ubc31\uc5d4\ub4dc \uc131\ub2a5 \ubaa8\ub2c8\ud130\ub9c1"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/performance.ts\n\nexport class PerformanceMonitor {\n  private metrics: Map<string, number[]> = new Map();\n\n  // \uc131\ub2a5 \uce21\uc815\n  measure<T>(name: string, fn: () => T): T {\n    const start = performance.now();\n    try {\n      return fn();\n    } finally {\n      const duration = performance.now() - start;\n      this.recordMetric(name, duration);\n    }\n  }\n\n  // \ube44\ub3d9\uae30 \uc131\ub2a5 \uce21\uc815\n  async measureAsync<T>(name: string, fn: () => Promise<T>): Promise<T> {\n    const start = performance.now();\n    try {\n      return await fn();\n    } finally {\n      const duration = performance.now() - start;\n      this.recordMetric(name, duration);\n    }\n  }\n\n  // \uba54\ud2b8\ub9ad \uae30\ub85d\n  private recordMetric(name: string, duration: number): void {\n    if (!this.metrics.has(name)) {\n      this.metrics.set(name, []);\n    }\n    this.metrics.get(name)!.push(duration);\n\n    // 100\uac1c \uc774\uc0c1\uc774\uba74 \uc624\ub798\ub41c \uac83 \uc81c\uac70\n    const values = this.metrics.get(name)!;\n    if (values.length > 100) {\n      values.shift();\n    }\n\n    // Prometheus \uba54\ud2b8\ub9ad \uae30\ub85d\n    metricsCollector.recordCustomMetric(\n      `performance_${name}_duration_ms`,\n      duration\n    );\n  }\n\n  // \ud1b5\uacc4 \uc870\ud68c\n  getStats(name: string): {\n    count: number;\n    avg: number;\n    min: number;\n    max: number;\n    p50: number;\n    p95: number;\n    p99: number;\n  } | null {\n    const values = this.metrics.get(name);\n    if (!values || values.length === 0) return null;\n\n    const sorted = [...values].sort((a, b) => a - b);\n    const sum = sorted.reduce((a, b) => a + b, 0);\n\n    return {\n      count: sorted.length,\n      avg: sum / sorted.length,\n      min: sorted[0],\n      max: sorted[sorted.length - 1],\n      p50: this.percentile(sorted, 0.5),\n      p95: this.percentile(sorted, 0.95),\n      p99: this.percentile(sorted, 0.99)\n    };\n  }\n\n  private percentile(sorted: number[], p: number): number {\n    const index = Math.ceil(sorted.length * p) - 1;\n    return sorted[index];\n  }\n\n  // \ubaa8\ub4e0 \ud1b5\uacc4 \uc870\ud68c\n  getAllStats(): Record<string, any> {\n    const stats: Record<string, any> = {};\n    for (const [name] of this.metrics) {\n      stats[name] = this.getStats(name);\n    }\n    return stats;\n  }\n}\n\nexport const performanceMonitor = new PerformanceMonitor();\n"})}),"\n",(0,s.jsx)(e.h2,{id:"1511-\uc2e4\uc2b5",children:"15.11 \uc2e4\uc2b5"}),"\n",(0,s.jsx)(e.h3,{id:"\uc2e4\uc2b5-1-\uae30\ubcf8-\ubaa8\ub2c8\ud130\ub9c1-\uc2a4\ud0dd-\uad6c\uc131",children:"\uc2e4\uc2b5 1: \uae30\ubcf8 \ubaa8\ub2c8\ud130\ub9c1 \uc2a4\ud0dd \uad6c\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"# docker-compose.monitoring.yml\n\nversion: '3.8'\n\nservices:\n  # Prometheus\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: prometheus\n    volumes:\n      - ./monitoring/prometheus:/etc/prometheus\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/usr/share/prometheus/console_libraries'\n      - '--web.console.templates=/usr/share/prometheus/consoles'\n    ports:\n      - \"9090:9090\"\n    networks:\n      - monitoring\n\n  # Grafana\n  grafana:\n    image: grafana/grafana:latest\n    container_name: grafana\n    volumes:\n      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning\n      - grafana_data:/var/lib/grafana\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n      - GF_USERS_ALLOW_SIGN_UP=false\n    ports:\n      - \"3001:3000\"\n    networks:\n      - monitoring\n    depends_on:\n      - prometheus\n\n  # Alertmanager\n  alertmanager:\n    image: prom/alertmanager:latest\n    container_name: alertmanager\n    volumes:\n      - ./monitoring/alertmanager:/etc/alertmanager\n    command:\n      - '--config.file=/etc/alertmanager/alertmanager.yml'\n    ports:\n      - \"9093:9093\"\n    networks:\n      - monitoring\n\n  # Node Exporter\n  node-exporter:\n    image: prom/node-exporter:latest\n    container_name: node-exporter\n    command:\n      - '--path.rootfs=/host'\n    pid: host\n    restart: unless-stopped\n    volumes:\n      - '/:/host:ro,rslave'\n    ports:\n      - \"9100:9100\"\n    networks:\n      - monitoring\n\n  # PostgreSQL Exporter\n  postgres-exporter:\n    image: prometheuscommunity/postgres-exporter:latest\n    container_name: postgres-exporter\n    environment:\n      DATA_SOURCE_NAME: \"postgresql://user:password@postgres:5432/dbname?sslmode=disable\"\n    ports:\n      - \"9187:9187\"\n    networks:\n      - monitoring\n    depends_on:\n      - postgres\n\n  # Redis Exporter\n  redis-exporter:\n    image: oliver006/redis_exporter:latest\n    container_name: redis-exporter\n    environment:\n      REDIS_ADDR: \"redis:6379\"\n    ports:\n      - \"9121:9121\"\n    networks:\n      - monitoring\n    depends_on:\n      - redis\n\nvolumes:\n  prometheus_data:\n  grafana_data:\n\nnetworks:\n  monitoring:\n    driver: bridge\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc2e4\uc2b5-2-\uc885\ud569-\ubaa8\ub2c8\ud130\ub9c1-\ub300\uc2dc\ubcf4\ub4dc",children:"\uc2e4\uc2b5 2: \uc885\ud569 \ubaa8\ub2c8\ud130\ub9c1 \ub300\uc2dc\ubcf4\ub4dc"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/dashboard.controller.ts\n\nimport { Router, Request, Response } from 'express';\nimport { performanceMonitor } from './performance';\nimport { healthCheckService } from '../health/health-check.service';\nimport { metricsCollector } from './metrics';\n\nconst router = Router();\n\n// \uc885\ud569 \ub300\uc2dc\ubcf4\ub4dc \ub370\uc774\ud130\nrouter.get('/dashboard', async (req: Request, res: Response) => {\n  try {\n    const [health, performance, metrics] = await Promise.all([\n      healthCheckService.check(),\n      performanceMonitor.getAllStats(),\n      getRealtimeMetrics()\n    ]);\n\n    res.json({\n      health,\n      performance,\n      metrics,\n      timestamp: new Date()\n    });\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\n// \uc2e4\uc2dc\uac04 \uba54\ud2b8\ub9ad\nasync function getRealtimeMetrics() {\n  const memUsage = process.memoryUsage();\n  const uptime = process.uptime();\n\n  return {\n    memory: {\n      heapUsed: memUsage.heapUsed,\n      heapTotal: memUsage.heapTotal,\n      rss: memUsage.rss,\n      external: memUsage.external\n    },\n    uptime,\n    activeConnections: await getActiveConnections(),\n    requestRate: await getRequestRate(),\n    errorRate: await getErrorRate()\n  };\n}\n\nasync function getActiveConnections(): Promise<number> {\n  const pool = db.client.pool;\n  return pool.numUsed();\n}\n\nasync function getRequestRate(): Promise<number> {\n  // \ucd5c\uadfc 1\ubd84\uac04 \uc694\uccad \uc218\n  const metrics = await metricsCollector.getMetrics();\n  // PromQL: rate(http_requests_total[1m])\n  return 0; // \uc2e4\uc81c \uad6c\ud604 \ud544\uc694\n}\n\nasync function getErrorRate(): Promise<number> {\n  // \ucd5c\uadfc 1\ubd84\uac04 \uc5d0\ub7ec\uc728\n  return 0; // \uc2e4\uc81c \uad6c\ud604 \ud544\uc694\n}\n\nexport default router;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc2e4\uc2b5-3-\uc54c\ub9bc-\ud14c\uc2a4\ud2b8",children:"\uc2e4\uc2b5 3: \uc54c\ub9bc \ud14c\uc2a4\ud2b8"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// src/monitoring/alert-test.ts\n\nimport { alertManager } from './alerting';\n\nexport class AlertTester {\n  async testAllAlerts(): Promise<void> {\n    console.log('Testing alert system...');\n\n    // 1. \uc815\ubcf4 \uc54c\ub9bc \ud14c\uc2a4\ud2b8\n    await this.testInfoAlert();\n\n    // 2. \uacbd\uace0 \uc54c\ub9bc \ud14c\uc2a4\ud2b8\n    await this.testWarningAlert();\n\n    // 3. \uc2ec\uac01 \uc54c\ub9bc \ud14c\uc2a4\ud2b8 (\uc8fc\uc11d \ucc98\ub9ac - \uc2e4\uc81c\ub85c\ub294 \ubcf4\ub0b4\uc9c0 \uc54a\uc74c)\n    // await this.testCriticalAlert();\n\n    console.log('Alert tests completed');\n  }\n\n  private async testInfoAlert(): Promise<void> {\n    await alertManager.sendAlert({\n      name: 'Test Info Alert',\n      severity: 'info',\n      message: 'This is a test information alert',\n      metadata: {\n        test: true,\n        timestamp: new Date()\n      }\n    });\n  }\n\n  private async testWarningAlert(): Promise<void> {\n    await alertManager.sendAlert({\n      name: 'Test Warning Alert',\n      severity: 'warning',\n      message: 'This is a test warning alert',\n      metadata: {\n        test: true,\n        metric: 'response_time',\n        value: 1500,\n        threshold: 1000\n      }\n    });\n  }\n\n  private async testCriticalAlert(): Promise<void> {\n    await alertManager.sendAlert({\n      name: 'Test Critical Alert',\n      severity: 'critical',\n      message: 'This is a test critical alert - DO NOT PAGE',\n      metadata: {\n        test: true,\n        service: 'test-service'\n      }\n    });\n  }\n}\n\n// \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\nif (require.main === module) {\n  const tester = new AlertTester();\n  tester.testAllAlerts()\n    .then(() => process.exit(0))\n    .catch((error) => {\n      console.error(error);\n      process.exit(1);\n    });\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc2e4\uc2b5-4-\uc131\ub2a5-\ubcd1\ubaa9-\uc9c0\uc810-\ucc3e\uae30",children:"\uc2e4\uc2b5 4: \uc131\ub2a5 \ubcd1\ubaa9 \uc9c0\uc810 \ucc3e\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"// scripts/find-bottlenecks.ts\n\nimport { performanceMonitor } from '../src/monitoring/performance';\n\nasync function analyzePerformance(): Promise<void> {\n  console.log('Analyzing performance bottlenecks...\\n');\n\n  const stats = performanceMonitor.getAllStats();\n  const bottlenecks: Array<{ name: string; p95: number; avg: number }> = [];\n\n  for (const [name, stat] of Object.entries(stats)) {\n    if (stat && stat.p95 > 1000) { // 1\ucd08 \uc774\uc0c1\n      bottlenecks.push({\n        name,\n        p95: stat.p95,\n        avg: stat.avg\n      });\n    }\n  }\n\n  // P95 \uae30\uc900\uc73c\ub85c \uc815\ub82c\n  bottlenecks.sort((a, b) => b.p95 - a.p95);\n\n  console.log('Performance Bottlenecks (P95 > 1000ms):\\n');\n  console.table(bottlenecks);\n\n  // \uad8c\uc7a5\uc0ac\ud56d \ucd9c\ub825\n  console.log('\\nRecommendations:');\n  bottlenecks.forEach((bottleneck, index) => {\n    console.log(`${index + 1}. Optimize \"${bottleneck.name}\"`);\n    console.log(`   - P95: ${bottleneck.p95.toFixed(2)}ms`);\n    console.log(`   - Avg: ${bottleneck.avg.toFixed(2)}ms`);\n    console.log(`   - Consider: caching, query optimization, or async processing\\n`);\n  });\n}\n\nanalyzePerformance();\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\uc694\uc57d",children:"\uc694\uc57d"}),"\n",(0,s.jsx)(e.p,{children:"\uc774 \uc7a5\uc5d0\uc11c\ub294 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \ub300\ud574 \ub2e4\uc74c \ub0b4\uc6a9\uc744 \ud559\uc2b5\ud588\uc2b5\ub2c8\ub2e4:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\ubaa8\ub2c8\ud130\ub9c1 \uc911\uc694\uc131"}),": \uc2dc\uc2a4\ud15c\uc758 \uac74\uac15 \uc0c1\ud0dc\ub97c \ud30c\uc545\ud558\uace0 \ubb38\uc81c\ub97c \uc870\uae30\uc5d0 \ubc1c\uacac"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8"}),": \uad6c\uc870\ud654\ub41c \ub85c\uadf8 \uc218\uc9d1 \ubc0f \ubd84\uc11d"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Prometheus \uba54\ud2b8\ub9ad"}),": \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130 \uc218\uc9d1 \ubc0f PromQL \ucffc\ub9ac"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Grafana \ub300\uc2dc\ubcf4\ub4dc"}),": \uba54\ud2b8\ub9ad \uc2dc\uac01\ud654 \ubc0f \ubaa8\ub2c8\ud130\ub9c1"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc54c\ub9bc \uc124\uc815"}),": Alertmanager\ub97c \ud1b5\ud55c \ud6a8\uacfc\uc801\uc778 \uc54c\ub9bc \uc2dc\uc2a4\ud15c"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"APM"}),": \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5 \uc2ec\uce35 \ubd84\uc11d"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\ud5ec\uc2a4\uccb4\ud06c"}),": \uc2dc\uc2a4\ud15c \uc0c1\ud0dc \ud655\uc778 \uc5d4\ub4dc\ud3ec\uc778\ud2b8"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc5d0\ub7ec \ucd94\uc801"}),": Sentry\ub97c \ud1b5\ud55c \uc2e4\uc2dc\uac04 \uc5d0\ub7ec \ubaa8\ub2c8\ud130\ub9c1"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc0ac\uc6a9\uc790 \ubd84\uc11d"}),": Google Analytics, Mixpanel \ub4f1\uc744 \ud1b5\ud55c \uc0ac\uc6a9\uc790 \ud589\ub3d9 \ubd84\uc11d"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc131\ub2a5 \uba54\ud2b8\ub9ad"}),": Web Vitals \ubc0f \ubc31\uc5d4\ub4dc \uc131\ub2a5 \uce21\uc815"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\ud6a8\uacfc\uc801\uc778 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uc744 \uad6c\ucd95\ud558\uba74 \uc2dc\uc2a4\ud15c\uc758 \uc548\uc815\uc131\uacfc \uc131\ub2a5\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>o});var r=t(6540);const s={},a=r.createContext(s);function i(n){const e=r.useContext(a);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);