"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9036],{2584:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"webapp/api-design","title":"3. API \uc124\uacc4","description":"FastAPI\ub97c \uc0ac\uc6a9\ud55c RESTful API \uc124\uacc4\uc758 \ud575\uc2ec \uc6d0\uce59\uacfc \uc2e4\uc804 \ud328\ud134\uc744 \ub2e4\ub8f9\ub2c8\ub2e4.","source":"@site/docs/webapp/api-design.md","sourceDirName":"webapp","slug":"/webapp/api-design","permalink":"/tobias-docs/comp-2/docs/webapp/api-design","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/webapp/api-design.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"webappSidebar","previous":{"title":"2. \uc778\uc99d \ubc0f \uc778\uac00","permalink":"/tobias-docs/comp-2/docs/webapp/authentication"},"next":{"title":"4. \ub370\uc774\ud130\ubca0\uc774\uc2a4","permalink":"/tobias-docs/comp-2/docs/webapp/database"}}');var r=s(4848),i=s(8453);const a={sidebar_position:4},o="3. API \uc124\uacc4",d={},l=[{value:"3.1 RESTful API \uc6d0\uce59",id:"31-restful-api-\uc6d0\uce59",level:2},{value:"\ud575\uc2ec \uc6d0\uce59",id:"\ud575\uc2ec-\uc6d0\uce59",level:3},{value:"\ub9ac\uc18c\uc2a4 \uc911\uc2ec \uc124\uacc4",id:"\ub9ac\uc18c\uc2a4-\uc911\uc2ec-\uc124\uacc4",level:3},{value:"3.2 HTTP \uba54\uc11c\ub4dc",id:"32-http-\uba54\uc11c\ub4dc",level:2},{value:"\uc8fc\uc694 \uba54\uc11c\ub4dc",id:"\uc8fc\uc694-\uba54\uc11c\ub4dc",level:3},{value:"FastAPI \uad6c\ud604 \uc608\uc81c",id:"fastapi-\uad6c\ud604-\uc608\uc81c",level:3},{value:"3.3 \uc0c1\ud0dc \ucf54\ub4dc",id:"33-\uc0c1\ud0dc-\ucf54\ub4dc",level:2},{value:"2xx - \uc131\uacf5",id:"2xx---\uc131\uacf5",level:3},{value:"4xx - \ud074\ub77c\uc774\uc5b8\ud2b8 \uc624\ub958",id:"4xx---\ud074\ub77c\uc774\uc5b8\ud2b8-\uc624\ub958",level:3},{value:"5xx - \uc11c\ubc84 \uc624\ub958",id:"5xx---\uc11c\ubc84-\uc624\ub958",level:3},{value:"3.4 FastAPI \ub77c\uc6b0\ud130 \uad6c\uc870",id:"34-fastapi-\ub77c\uc6b0\ud130-\uad6c\uc870",level:2},{value:"\ud504\ub85c\uc81d\ud2b8 \uad6c\uc870",id:"\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",level:3},{value:"main.py",id:"mainpy",level:3},{value:"api/v1/endpoints/users.py",id:"apiv1endpointsuserspy",level:3},{value:"api/v1/endpoints/posts.py",id:"apiv1endpointspostspy",level:3},{value:"api/v1/api.py",id:"apiv1apipy",level:3},{value:"3.5 Path Parameters vs Query Parameters",id:"35-path-parameters-vs-query-parameters",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Query Parameters",id:"query-parameters",level:3},{value:"\uc870\ud569 \uc0ac\uc6a9",id:"\uc870\ud569-\uc0ac\uc6a9",level:3},{value:"3.6 Request Body \uac80\uc99d (Pydantic)",id:"36-request-body-\uac80\uc99d-pydantic",level:2},{value:"\uae30\ubcf8 \uc2a4\ud0a4\ub9c8",id:"\uae30\ubcf8-\uc2a4\ud0a4\ub9c8",level:3},{value:"\uace0\uae09 \uac80\uc99d",id:"\uace0\uae09-\uac80\uc99d",level:3},{value:"\uc5ec\ub7ec Body \ub9e4\uac1c\ubcc0\uc218",id:"\uc5ec\ub7ec-body-\ub9e4\uac1c\ubcc0\uc218",level:3},{value:"Field \ud0c0\uc785\uacfc \uac80\uc99d",id:"field-\ud0c0\uc785\uacfc-\uac80\uc99d",level:3},{value:"3.7 Response Models",id:"37-response-models",level:2},{value:"\uae30\ubcf8 \uc751\ub2f5 \ubaa8\ub378",id:"\uae30\ubcf8-\uc751\ub2f5-\ubaa8\ub378",level:3},{value:"\ubbfc\uac10\ud55c \uc815\ubcf4 \uc81c\uc678",id:"\ubbfc\uac10\ud55c-\uc815\ubcf4-\uc81c\uc678",level:3},{value:"\uc870\uac74\ubd80 \uc751\ub2f5",id:"\uc870\uac74\ubd80-\uc751\ub2f5",level:3},{value:"\ud45c\uc900\ud654\ub41c \uc751\ub2f5 \ub798\ud37c",id:"\ud45c\uc900\ud654\ub41c-\uc751\ub2f5-\ub798\ud37c",level:3},{value:"\ubd80\ubd84 \uc751\ub2f5 (\ud544\ub4dc \uc120\ud0dd)",id:"\ubd80\ubd84-\uc751\ub2f5-\ud544\ub4dc-\uc120\ud0dd",level:3},{value:"\uc751\ub2f5 \uc608\uc81c \ucd94\uac00",id:"\uc751\ub2f5-\uc608\uc81c-\ucd94\uac00",level:3},{value:"3.8 API \ubc84\uc800\ub2dd",id:"38-api-\ubc84\uc800\ub2dd",level:2},{value:"URL \uacbd\ub85c \ubc84\uc800\ub2dd (\uad8c\uc7a5)",id:"url-\uacbd\ub85c-\ubc84\uc800\ub2dd-\uad8c\uc7a5",level:3},{value:"\ud30c\uc77c \uad6c\uc870\ub85c \ubc84\uc804 \ubd84\ub9ac",id:"\ud30c\uc77c-\uad6c\uc870\ub85c-\ubc84\uc804-\ubd84\ub9ac",level:3},{value:"\ud5e4\ub354 \uae30\ubc18 \ubc84\uc800\ub2dd (\uc120\ud0dd\uc801)",id:"\ud5e4\ub354-\uae30\ubc18-\ubc84\uc800\ub2dd-\uc120\ud0dd\uc801",level:3},{value:"\ubc84\uc804 \ud3d0\uae30(Deprecation) \ucc98\ub9ac",id:"\ubc84\uc804-\ud3d0\uae30deprecation-\ucc98\ub9ac",level:3},{value:"3.9 \ud398\uc774\uc9c0\ub124\uc774\uc158 \uad6c\ud604",id:"39-\ud398\uc774\uc9c0\ub124\uc774\uc158-\uad6c\ud604",level:2},{value:"\uc624\ud504\uc14b \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158",id:"\uc624\ud504\uc14b-\uae30\ubc18-\ud398\uc774\uc9c0\ub124\uc774\uc158",level:3},{value:"\ucee4\uc11c \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158",id:"\ucee4\uc11c-\uae30\ubc18-\ud398\uc774\uc9c0\ub124\uc774\uc158",level:3},{value:"\ub9c1\ud06c \ud5e4\ub354 \uae30\ubc18",id:"\ub9c1\ud06c-\ud5e4\ub354-\uae30\ubc18",level:3},{value:"\ud5ec\ud37c \ud568\uc218 \ud65c\uc6a9",id:"\ud5ec\ud37c-\ud568\uc218-\ud65c\uc6a9",level:3},{value:"3.10 \ud544\ud130\ub9c1 \ubc0f \uc815\ub82c",id:"310-\ud544\ud130\ub9c1-\ubc0f-\uc815\ub82c",level:2},{value:"\uae30\ubcf8 \ud544\ud130\ub9c1",id:"\uae30\ubcf8-\ud544\ud130\ub9c1",level:3},{value:"\ub3d9\uc801 \ud544\ud130\ub9c1",id:"\ub3d9\uc801-\ud544\ud130\ub9c1",level:3},{value:"\uc815\ub82c",id:"\uc815\ub82c",level:3},{value:"\ub2e4\uc911 \uc815\ub82c",id:"\ub2e4\uc911-\uc815\ub82c",level:3},{value:"\uace0\uae09 \uac80\uc0c9",id:"\uace0\uae09-\uac80\uc0c9",level:3},{value:"3.11 \uc790\ub3d9 \ubb38\uc11c \uc0dd\uc131 (Swagger UI, ReDoc)",id:"311-\uc790\ub3d9-\ubb38\uc11c-\uc0dd\uc131-swagger-ui-redoc",level:2},{value:"\uae30\ubcf8 \uc124\uc815",id:"\uae30\ubcf8-\uc124\uc815",level:3},{value:"\uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubb38\uc11c\ud654",id:"\uc5d4\ub4dc\ud3ec\uc778\ud2b8-\ubb38\uc11c\ud654",level:3},{value:"\uc751\ub2f5 \uc608\uc81c",id:"\uc751\ub2f5-\uc608\uc81c",level:3},{value:"\ud0dc\uadf8\uc640 \uadf8\ub8f9\ud654",id:"\ud0dc\uadf8\uc640-\uadf8\ub8f9\ud654",level:3},{value:"\ubb38\uc11c\uc5d0\uc11c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc228\uae30\uae30",id:"\ubb38\uc11c\uc5d0\uc11c-\uc5d4\ub4dc\ud3ec\uc778\ud2b8-\uc228\uae30\uae30",level:3},{value:"\ucee4\uc2a4\ud140 OpenAPI \uc2a4\ud0a4\ub9c8",id:"\ucee4\uc2a4\ud140-openapi-\uc2a4\ud0a4\ub9c8",level:3},{value:"\ubb38\uc11c UI \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",id:"\ubb38\uc11c-ui-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",level:3},{value:"3.12 CORS \uc124\uc815",id:"312-cors-\uc124\uc815",level:2},{value:"\uae30\ubcf8 CORS \uc124\uc815",id:"\uae30\ubcf8-cors-\uc124\uc815",level:3},{value:"\ud504\ub85c\ub355\uc158 CORS \uc124\uc815",id:"\ud504\ub85c\ub355\uc158-cors-\uc124\uc815",level:3},{value:"\ud658\uacbd\ubcc4 \uc124\uc815",id:"\ud658\uacbd\ubcc4-\uc124\uc815",level:3},{value:"\ub3d9\uc801 Origin \uac80\uc99d",id:"\ub3d9\uc801-origin-\uac80\uc99d",level:3},{value:"Preflight \uc694\uccad \ucc98\ub9ac",id:"preflight-\uc694\uccad-\ucc98\ub9ac",level:3},{value:"\ud2b9\uc815 \uacbd\ub85c\ub9cc CORS \ud5c8\uc6a9",id:"\ud2b9\uc815-\uacbd\ub85c\ub9cc-cors-\ud5c8\uc6a9",level:3},{value:"3.13 \uc2e4\uc2b5 \ubb38\uc81c",id:"313-\uc2e4\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c 1: \uc644\uc804\ud55c CRUD API \uad6c\ud604",id:"\ubb38\uc81c-1-\uc644\uc804\ud55c-crud-api-\uad6c\ud604",level:3},{value:"\ubb38\uc81c 2: \ud398\uc774\uc9c0\ub124\uc774\uc158\uacfc \ud544\ud130\ub9c1",id:"\ubb38\uc81c-2-\ud398\uc774\uc9c0\ub124\uc774\uc158\uacfc-\ud544\ud130\ub9c1",level:3},{value:"\ubb38\uc81c 3: \ubcf5\uc7a1\ud55c Pydantic \uac80\uc99d",id:"\ubb38\uc81c-3-\ubcf5\uc7a1\ud55c-pydantic-\uac80\uc99d",level:3},{value:"\ubb38\uc81c 4: API \ubc84\uc800\ub2dd",id:"\ubb38\uc81c-4-api-\ubc84\uc800\ub2dd",level:3}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"3-api-\uc124\uacc4",children:"3. API \uc124\uacc4"})}),"\n",(0,r.jsx)(n.p,{children:"FastAPI\ub97c \uc0ac\uc6a9\ud55c RESTful API \uc124\uacc4\uc758 \ud575\uc2ec \uc6d0\uce59\uacfc \uc2e4\uc804 \ud328\ud134\uc744 \ub2e4\ub8f9\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h2,{id:"31-restful-api-\uc6d0\uce59",children:"3.1 RESTful API \uc6d0\uce59"}),"\n",(0,r.jsx)(n.p,{children:"REST(Representational State Transfer)\ub294 \uc6f9 API \uc124\uacc4\ub97c \uc704\ud55c \uc544\ud0a4\ud14d\ucc98 \uc2a4\ud0c0\uc77c\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\ud575\uc2ec-\uc6d0\uce59",children:"\ud575\uc2ec \uc6d0\uce59"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud074\ub77c\uc774\uc5b8\ud2b8-\uc11c\ubc84 \ubd84\ub9ac"}),": \uc0ac\uc6a9\uc790 \uc778\ud130\ud398\uc774\uc2a4\uc640 \ub370\uc774\ud130 \uc800\uc7a5\uc18c\ub97c \ubd84\ub9ac"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ubb34\uc0c1\ud0dc\uc131(Stateless)"}),": \uac01 \uc694\uccad\uc740 \ub3c5\ub9bd\uc801\uc774\uba70 \ud544\uc694\ud55c \ubaa8\ub4e0 \uc815\ubcf4\ub97c \ud3ec\ud568"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uce90\uc2dc \uac00\ub2a5\uc131"}),": \uc751\ub2f5\uc740 \uce90\uc2dc \uac00\ub2a5 \uc5ec\ubd80\ub97c \uba85\uc2dc\ud574\uc57c \ud568"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uacc4\uce35\ud654 \uc2dc\uc2a4\ud15c"}),": \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc911\uac04 \uc11c\ubc84(\ud504\ub85d\uc2dc, \uac8c\uc774\ud2b8\uc6e8\uc774)\uc758 \uc874\uc7ac\ub97c \uc54c \uc218 \uc5c6\uc74c"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uade0\uc77c\ud55c \uc778\ud130\ud398\uc774\uc2a4"}),": \ud45c\uc900\ud654\ub41c \ubc29\uc2dd\uc73c\ub85c \ub9ac\uc18c\uc2a4\ub97c \uc870\uc791"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\ub9ac\uc18c\uc2a4-\uc911\uc2ec-\uc124\uacc4",children:"\ub9ac\uc18c\uc2a4 \uc911\uc2ec \uc124\uacc4"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# \uc88b\uc740 \uc608 - \ub9ac\uc18c\uc2a4 \uc911\uc2ec\nGET    /api/v1/users           # \uc0ac\uc6a9\uc790 \ubaa9\ub85d \uc870\ud68c\nGET    /api/v1/users/123       # \ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc870\ud68c\nPOST   /api/v1/users           # \uc0ac\uc6a9\uc790 \uc0dd\uc131\nPUT    /api/v1/users/123       # \uc0ac\uc6a9\uc790 \uc804\uccb4 \uc218\uc815\nDELETE /api/v1/users/123       # \uc0ac\uc6a9\uc790 \uc0ad\uc81c\n\n# \ub098\uc05c \uc608 - \ub3d9\uc791 \uc911\uc2ec\nGET    /api/v1/getAllUsers\nPOST   /api/v1/createUser\nPOST   /api/v1/updateUser\nPOST   /api/v1/deleteUser\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"API \uc124\uacc4 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\uba85\uc0ac\ub97c \uc0ac\uc6a9\ud558\uace0 \ub3d9\uc0ac\ub294 \ud53c\ud558\uc138\uc694 (\ub9ac\uc18c\uc2a4 \uc774\ub984)"}),"\n",(0,r.jsxs)(n.li,{children:["\ubcf5\uc218\ud615\uc744 \uc77c\uad00\ub418\uac8c \uc0ac\uc6a9\ud558\uc138\uc694 (",(0,r.jsx)(n.code,{children:"/users"}),", ",(0,r.jsx)(n.code,{children:"/posts"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["\uacc4\uce35 \uad6c\uc870\ub97c \uba85\ud655\ud788 \ud45c\ud604\ud558\uc138\uc694 (",(0,r.jsx)(n.code,{children:"/users/123/posts"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["\uc18c\ubb38\uc790\uc640 \ud558\uc774\ud508\uc744 \uc0ac\uc6a9\ud558\uc138\uc694 (",(0,r.jsx)(n.code,{children:"/user-profiles"}),")"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"32-http-\uba54\uc11c\ub4dc",children:"3.2 HTTP \uba54\uc11c\ub4dc"}),"\n",(0,r.jsx)(n.p,{children:"\uac01 HTTP \uba54\uc11c\ub4dc\ub294 \ud2b9\uc815 \uc791\uc5c5\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uc8fc\uc694-\uba54\uc11c\ub4dc",children:"\uc8fc\uc694 \uba54\uc11c\ub4dc"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"\uba54\uc11c\ub4dc"}),(0,r.jsx)(n.th,{children:"\uc6a9\ub3c4"}),(0,r.jsx)(n.th,{children:"\uba71\ub4f1\uc131"}),(0,r.jsx)(n.th,{children:"\uc548\uc804\uc131"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GET"}),(0,r.jsx)(n.td,{children:"\ub9ac\uc18c\uc2a4 \uc870\ud68c"}),(0,r.jsx)(n.td,{children:"O"}),(0,r.jsx)(n.td,{children:"O"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"POST"}),(0,r.jsx)(n.td,{children:"\ub9ac\uc18c\uc2a4 \uc0dd\uc131"}),(0,r.jsx)(n.td,{children:"X"}),(0,r.jsx)(n.td,{children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PUT"}),(0,r.jsx)(n.td,{children:"\ub9ac\uc18c\uc2a4 \uc804\uccb4 \uad50\uccb4"}),(0,r.jsx)(n.td,{children:"O"}),(0,r.jsx)(n.td,{children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PATCH"}),(0,r.jsx)(n.td,{children:"\ub9ac\uc18c\uc2a4 \ubd80\ubd84 \uc218\uc815"}),(0,r.jsx)(n.td,{children:"X"}),(0,r.jsx)(n.td,{children:"X"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DELETE"}),(0,r.jsx)(n.td,{children:"\ub9ac\uc18c\uc2a4 \uc0ad\uc81c"}),(0,r.jsx)(n.td,{children:"O"}),(0,r.jsx)(n.td,{children:"X"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"fastapi-\uad6c\ud604-\uc608\uc81c",children:"FastAPI \uad6c\ud604 \uc608\uc81c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, HTTPException\nfrom pydantic import BaseModel\nfrom typing import Optional\n\napp = FastAPI()\n\nclass User(BaseModel):\n    id: Optional[int] = None\n    name: str\n    email: str\n    age: int\n\nusers_db = {}\n\n# GET - \uc870\ud68c\n@app.get("/api/v1/users")\nasync def get_users():\n    """\ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \uc870\ud68c"""\n    return list(users_db.values())\n\n@app.get("/api/v1/users/{user_id}")\nasync def get_user(user_id: int):\n    """\ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc870\ud68c"""\n    if user_id not in users_db:\n        raise HTTPException(status_code=404, detail="User not found")\n    return users_db[user_id]\n\n# POST - \uc0dd\uc131\n@app.post("/api/v1/users", status_code=201)\nasync def create_user(user: User):\n    """\uc0c8 \uc0ac\uc6a9\uc790 \uc0dd\uc131"""\n    user.id = len(users_db) + 1\n    users_db[user.id] = user\n    return user\n\n# PUT - \uc804\uccb4 \uad50\uccb4\n@app.put("/api/v1/users/{user_id}")\nasync def update_user(user_id: int, user: User):\n    """\uc0ac\uc6a9\uc790 \uc804\uccb4 \uc815\ubcf4 \uc218\uc815"""\n    if user_id not in users_db:\n        raise HTTPException(status_code=404, detail="User not found")\n    user.id = user_id\n    users_db[user_id] = user\n    return user\n\n# PATCH - \ubd80\ubd84 \uc218\uc815\n@app.patch("/api/v1/users/{user_id}")\nasync def partial_update_user(user_id: int, updates: dict):\n    """\uc0ac\uc6a9\uc790 \ubd80\ubd84 \uc815\ubcf4 \uc218\uc815"""\n    if user_id not in users_db:\n        raise HTTPException(status_code=404, detail="User not found")\n\n    user = users_db[user_id]\n    for key, value in updates.items():\n        if hasattr(user, key):\n            setattr(user, key, value)\n    return user\n\n# DELETE - \uc0ad\uc81c\n@app.delete("/api/v1/users/{user_id}", status_code=204)\nasync def delete_user(user_id: int):\n    """\uc0ac\uc6a9\uc790 \uc0ad\uc81c"""\n    if user_id not in users_db:\n        raise HTTPException(status_code=404, detail="User not found")\n    del users_db[user_id]\n    return None\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"PUT vs PATCH",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PUT"}),": \ub9ac\uc18c\uc2a4 \uc804\uccb4\ub97c \uad50\uccb4\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc81c\uacf5\ud574\uc57c \ud569\ub2c8\ub2e4."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PATCH"}),": \ub9ac\uc18c\uc2a4\uc758 \uc77c\ubd80\ub9cc \uc218\uc815\ud569\ub2c8\ub2e4. \ubcc0\uacbd\ud560 \ud544\ub4dc\ub9cc \uc81c\uacf5\ud558\uba74 \ub429\ub2c8\ub2e4."]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"33-\uc0c1\ud0dc-\ucf54\ub4dc",children:"3.3 \uc0c1\ud0dc \ucf54\ub4dc"}),"\n",(0,r.jsx)(n.p,{children:"HTTP \uc0c1\ud0dc \ucf54\ub4dc\ub294 \uc694\uccad \ucc98\ub9ac \uacb0\uacfc\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"2xx---\uc131\uacf5",children:"2xx - \uc131\uacf5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import status\n\n# 200 OK - \uc131\uacf5 (\uae30\ubcf8\uac12)\n@app.get("/users")\nasync def get_users():\n    return {"users": []}\n\n# 201 Created - \ub9ac\uc18c\uc2a4 \uc0dd\uc131 \uc131\uacf5\n@app.post("/users", status_code=status.HTTP_201_CREATED)\nasync def create_user(user: User):\n    return user\n\n# 204 No Content - \uc131\uacf5\ud588\uc73c\ub098 \ubc18\ud658\ud560 \ub0b4\uc6a9 \uc5c6\uc74c\n@app.delete("/users/{user_id}", status_code=status.HTTP_204_NO_CONTENT)\nasync def delete_user(user_id: int):\n    return None\n\n# 202 Accepted - \uc694\uccad \uc218\ub77d\ub428 (\ube44\ub3d9\uae30 \ucc98\ub9ac)\n@app.post("/users/bulk-import", status_code=status.HTTP_202_ACCEPTED)\nasync def bulk_import(file: UploadFile):\n    # \ubc31\uadf8\ub77c\uc6b4\ub4dc \uc791\uc5c5 \uc2dc\uc791\n    return {"message": "Import started", "job_id": "12345"}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4xx---\ud074\ub77c\uc774\uc5b8\ud2b8-\uc624\ub958",children:"4xx - \ud074\ub77c\uc774\uc5b8\ud2b8 \uc624\ub958"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import HTTPException, status\n\n# 400 Bad Request - \uc798\ubabb\ub41c \uc694\uccad\n@app.post("/users")\nasync def create_user(user: User):\n    if not user.email:\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST,\n            detail="Email is required"\n        )\n    return user\n\n# 401 Unauthorized - \uc778\uc99d \ud544\uc694\n@app.get("/users/me")\nasync def get_current_user(token: str = None):\n    if not token:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail="Not authenticated",\n            headers={"WWW-Authenticate": "Bearer"}\n        )\n    return {"user": "current"}\n\n# 403 Forbidden - \uad8c\ud55c \uc5c6\uc74c\n@app.delete("/users/{user_id}")\nasync def delete_user(user_id: int, current_user: User = Depends(get_current_user)):\n    if not current_user.is_admin:\n        raise HTTPException(\n            status_code=status.HTTP_403_FORBIDDEN,\n            detail="Not enough permissions"\n        )\n    return None\n\n# 404 Not Found - \ub9ac\uc18c\uc2a4 \uc5c6\uc74c\n@app.get("/users/{user_id}")\nasync def get_user(user_id: int):\n    if user_id not in users_db:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=f"User {user_id} not found"\n        )\n    return users_db[user_id]\n\n# 409 Conflict - \ucda9\ub3cc\n@app.post("/users")\nasync def create_user(user: User):\n    if user.email in existing_emails:\n        raise HTTPException(\n            status_code=status.HTTP_409_CONFLICT,\n            detail="Email already exists"\n        )\n    return user\n\n# 422 Unprocessable Entity - \uc720\ud6a8\uc131 \uac80\uc0ac \uc2e4\ud328 (FastAPI \uc790\ub3d9 \ucc98\ub9ac)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5xx---\uc11c\ubc84-\uc624\ub958",children:"5xx - \uc11c\ubc84 \uc624\ub958"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# 500 Internal Server Error\n@app.get("/users")\nasync def get_users():\n    try:\n        # \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc791\uc5c5\n        result = db.query(User).all()\n        return result\n    except Exception as e:\n        raise HTTPException(\n            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,\n            detail="Internal server error occurred"\n        )\n\n# 503 Service Unavailable\n@app.get("/health")\nasync def health_check():\n    if not database_available():\n        raise HTTPException(\n            status_code=status.HTTP_503_SERVICE_UNAVAILABLE,\n            detail="Database is unavailable"\n        )\n    return {"status": "healthy"}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"34-fastapi-\ub77c\uc6b0\ud130-\uad6c\uc870",children:"3.4 FastAPI \ub77c\uc6b0\ud130 \uad6c\uc870"}),"\n",(0,r.jsx)(n.p,{children:"\ub300\uaddc\ubaa8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c\ub294 \ub77c\uc6b0\ud130\ub97c \ubd84\ub9ac\ud558\uc5ec \uad00\ub9ac\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",children:"\ud504\ub85c\uc81d\ud2b8 \uad6c\uc870"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"app/\n\u251c\u2500\u2500 main.py\n\u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 v1/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 endpoints/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 users.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 posts.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 comments.py\n\u2502   \u2502   \u2514\u2500\u2500 api.py\n\u2502   \u2514\u2500\u2500 deps.py\n\u251c\u2500\u2500 schemas/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2514\u2500\u2500 post.py\n\u2514\u2500\u2500 models/\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 user.py\n    \u2514\u2500\u2500 post.py\n"})}),"\n",(0,r.jsx)(n.h3,{id:"mainpy",children:"main.py"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom app.api.v1.api import api_router\n\napp = FastAPI(\n    title="My API",\n    description="API with organized routers",\n    version="1.0.0"\n)\n\napp.include_router(api_router, prefix="/api/v1")\n\n@app.get("/")\nasync def root():\n    return {"message": "Welcome to My API"}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"apiv1endpointsuserspy",children:"api/v1/endpoints/users.py"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import APIRouter, Depends, HTTPException, status\nfrom typing import List\nfrom app.schemas.user import User, UserCreate, UserUpdate\n\nrouter = APIRouter()\n\n@router.get("/", response_model=List[User])\nasync def get_users(\n    skip: int = 0,\n    limit: int = 100\n):\n    """\ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \uc870\ud68c"""\n    return users_db[skip:skip + limit]\n\n@router.post("/", response_model=User, status_code=status.HTTP_201_CREATED)\nasync def create_user(user: UserCreate):\n    """\uc0c8 \uc0ac\uc6a9\uc790 \uc0dd\uc131"""\n    return create_user_in_db(user)\n\n@router.get("/{user_id}", response_model=User)\nasync def get_user(user_id: int):\n    """\ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc870\ud68c"""\n    user = get_user_from_db(user_id)\n    if not user:\n        raise HTTPException(status_code=404, detail="User not found")\n    return user\n\n@router.put("/{user_id}", response_model=User)\nasync def update_user(user_id: int, user: UserUpdate):\n    """\uc0ac\uc6a9\uc790 \uc815\ubcf4 \uc218\uc815"""\n    return update_user_in_db(user_id, user)\n\n@router.delete("/{user_id}", status_code=status.HTTP_204_NO_CONTENT)\nasync def delete_user(user_id: int):\n    """\uc0ac\uc6a9\uc790 \uc0ad\uc81c"""\n    delete_user_from_db(user_id)\n    return None\n'})}),"\n",(0,r.jsx)(n.h3,{id:"apiv1endpointspostspy",children:"api/v1/endpoints/posts.py"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import APIRouter, Depends\nfrom typing import List\nfrom app.schemas.post import Post, PostCreate\n\nrouter = APIRouter()\n\n@router.get("/", response_model=List[Post])\nasync def get_posts(skip: int = 0, limit: int = 100):\n    """\ubaa8\ub4e0 \uac8c\uc2dc\uae00 \uc870\ud68c"""\n    return posts_db[skip:skip + limit]\n\n@router.post("/", response_model=Post, status_code=201)\nasync def create_post(post: PostCreate):\n    """\uc0c8 \uac8c\uc2dc\uae00 \uc0dd\uc131"""\n    return create_post_in_db(post)\n\n@router.get("/{post_id}", response_model=Post)\nasync def get_post(post_id: int):\n    """\ud2b9\uc815 \uac8c\uc2dc\uae00 \uc870\ud68c"""\n    return get_post_from_db(post_id)\n\n# \uc911\ucca9 \ub9ac\uc18c\uc2a4\n@router.get("/{post_id}/comments")\nasync def get_post_comments(post_id: int):\n    """\uac8c\uc2dc\uae00\uc758 \ub313\uae00 \uc870\ud68c"""\n    return get_comments_by_post(post_id)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"apiv1apipy",children:"api/v1/api.py"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import APIRouter\nfrom app.api.v1.endpoints import users, posts, comments\n\napi_router = APIRouter()\n\napi_router.include_router(\n    users.router,\n    prefix="/users",\n    tags=["users"]\n)\n\napi_router.include_router(\n    posts.router,\n    prefix="/posts",\n    tags=["posts"]\n)\n\napi_router.include_router(\n    comments.router,\n    prefix="/comments",\n    tags=["comments"]\n)\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"\ub77c\uc6b0\ud130 \uc870\uc9c1\ud654",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc5d4\ub4dc\ud3ec\uc778\ud2b8\ubcc4 \ubd84\ub9ac"}),": \uad00\ub828\ub41c \uae30\ub2a5\ub07c\ub9ac \uadf8\ub8f9\ud654"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud0dc\uadf8 \uc0ac\uc6a9"}),": API \ubb38\uc11c\uc5d0\uc11c \uc139\uc158\ubcc4\ub85c \uad6c\ubd84"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc811\ub450\uc0ac \ud65c\uc6a9"}),": \uc77c\uad00\ub41c URL \uad6c\uc870 \uc720\uc9c0"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc758\uc874\uc131 \uc8fc\uc785"}),": \uacf5\ud1b5 \ub85c\uc9c1\uc744 \uc7ac\uc0ac\uc6a9"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"35-path-parameters-vs-query-parameters",children:"3.5 Path Parameters vs Query Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,r.jsx)(n.p,{children:"URL \uacbd\ub85c\uc758 \uc77c\ubd80\ub85c \ud544\uc218 \ub9ac\uc18c\uc2a4 \uc2dd\ubcc4\uc790\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import Path\n\n# \uae30\ubcf8 \uacbd\ub85c \ub9e4\uac1c\ubcc0\uc218\n@app.get("/users/{user_id}")\nasync def get_user(user_id: int):\n    return {"user_id": user_id}\n\n# \uc720\ud6a8\uc131 \uac80\uc99d \ucd94\uac00\n@app.get("/users/{user_id}")\nasync def get_user(\n    user_id: int = Path(..., gt=0, le=1000, description="\uc0ac\uc6a9\uc790 ID")\n):\n    """\n    user_id\ub294 1\ubd80\ud130 1000 \uc0ac\uc774\uc758 \uac12\uc774\uc5b4\uc57c \ud568\n    """\n    return {"user_id": user_id}\n\n# \uc5ec\ub7ec \uacbd\ub85c \ub9e4\uac1c\ubcc0\uc218\n@app.get("/users/{user_id}/posts/{post_id}")\nasync def get_user_post(\n    user_id: int = Path(..., gt=0),\n    post_id: int = Path(..., gt=0)\n):\n    return {"user_id": user_id, "post_id": post_id}\n\n# \ubb38\uc790\uc5f4 \uacbd\ub85c \ub9e4\uac1c\ubcc0\uc218\n@app.get("/categories/{category_name}")\nasync def get_category(\n    category_name: str = Path(..., min_length=3, max_length=50)\n):\n    return {"category": category_name}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,r.jsx)(n.p,{children:"\uc120\ud0dd\uc801 \ud544\ud130\ub9c1, \uc815\ub82c, \ud398\uc774\uc9c0\ub124\uc774\uc158\uc5d0 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import Query\nfrom typing import Optional, List\n\n# \uae30\ubcf8 \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\n@app.get("/users")\nasync def get_users(skip: int = 0, limit: int = 10):\n    """\n    GET /users?skip=0&limit=10\n    """\n    return users_db[skip:skip + limit]\n\n# \uc120\ud0dd\uc801 \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\n@app.get("/users")\nasync def search_users(\n    name: Optional[str] = None,\n    email: Optional[str] = None,\n    min_age: Optional[int] = None\n):\n    """\n    GET /users?name=John&min_age=18\n    """\n    results = users_db\n    if name:\n        results = [u for u in results if name.lower() in u.name.lower()]\n    if min_age:\n        results = [u for u in results if u.age >= min_age]\n    return results\n\n# \uc720\ud6a8\uc131 \uac80\uc99d \ucd94\uac00\n@app.get("/items")\nasync def get_items(\n    q: Optional[str] = Query(None, min_length=3, max_length=50),\n    limit: int = Query(10, gt=0, le=100),\n    offset: int = Query(0, ge=0)\n):\n    """\n    - q: 3-50\uc790 \uac80\uc0c9\uc5b4\n    - limit: 1-100 \uc0ac\uc774\n    - offset: 0 \uc774\uc0c1\n    """\n    return {"q": q, "limit": limit, "offset": offset}\n\n# \ub9ac\uc2a4\ud2b8 \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\n@app.get("/items")\nasync def get_items(\n    tags: List[str] = Query([], description="\ud544\ud130\ub9c1\ud560 \ud0dc\uadf8 \ubaa9\ub85d")\n):\n    """\n    GET /items?tags=python&tags=fastapi&tags=web\n    """\n    return {"tags": tags}\n\n# \ud544\uc218 \ucffc\ub9ac \ub9e4\uac1c\ubcc0\uc218\n@app.get("/search")\nasync def search(\n    q: str = Query(..., description="\uac80\uc0c9\uc5b4 (\ud544\uc218)")\n):\n    """\n    q\ub294 \ud544\uc218 \ub9e4\uac1c\ubcc0\uc218\n    """\n    return {"query": q}\n\n# \ubcc4\uce6d \uc0ac\uc6a9\n@app.get("/items")\nasync def get_items(\n    item_query: str = Query(..., alias="item-query")\n):\n    """\n    GET /items?item-query=laptop\n    (Python\uc5d0\uc11c\ub294 item_query\ub85c \uc811\uadfc)\n    """\n    return {"item_query": item_query}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc870\ud569-\uc0ac\uc6a9",children:"\uc870\ud569 \uc0ac\uc6a9"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.get("/users/{user_id}/posts")\nasync def get_user_posts(\n    # Path parameter (\ud544\uc218)\n    user_id: int = Path(..., gt=0),\n    # Query parameters (\uc120\ud0dd\uc801)\n    published: Optional[bool] = None,\n    skip: int = Query(0, ge=0),\n    limit: int = Query(10, gt=0, le=100),\n    sort: str = Query("created_at", regex="^(created_at|title)$")\n):\n    """\n    GET /users/123/posts?published=true&skip=0&limit=10&sort=created_at\n    """\n    posts = get_posts_by_user(user_id)\n\n    if published is not None:\n        posts = [p for p in posts if p.published == published]\n\n    if sort == "title":\n        posts = sorted(posts, key=lambda p: p.title)\n\n    return posts[skip:skip + limit]\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"\uc5b8\uc81c \ubb34\uc5c7\uc744 \uc0ac\uc6a9\ud560\uae4c?",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Path Parameters"}),": \ub9ac\uc18c\uc2a4 \uc2dd\ubcc4 (",(0,r.jsx)(n.code,{children:"/users/{user_id}"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Query Parameters"}),": \ud544\ud130\ub9c1, \uc815\ub82c, \ud398\uc774\uc9c0\ub124\uc774\uc158 (",(0,r.jsx)(n.code,{children:"?page=1&sort=name"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Request Body"}),": \ubcf5\uc7a1\ud55c \ub370\uc774\ud130 \uc0dd\uc131/\uc218\uc815"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"36-request-body-\uac80\uc99d-pydantic",children:"3.6 Request Body \uac80\uc99d (Pydantic)"}),"\n",(0,r.jsx)(n.p,{children:"Pydantic\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad \ubcf8\ubb38\uc744 \uc790\ub3d9\uc73c\ub85c \uac80\uc99d\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uae30\ubcf8-\uc2a4\ud0a4\ub9c8",children:"\uae30\ubcf8 \uc2a4\ud0a4\ub9c8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel, Field, EmailStr, validator\nfrom typing import Optional, List\nfrom datetime import datetime\n\nclass UserBase(BaseModel):\n    email: EmailStr\n    username: str = Field(..., min_length=3, max_length=50)\n    full_name: Optional[str] = None\n\nclass UserCreate(UserBase):\n    password: str = Field(..., min_length=8)\n\n    @validator(\'password\')\n    def validate_password(cls, v):\n        if not any(char.isdigit() for char in v):\n            raise ValueError(\'Password must contain at least one digit\')\n        if not any(char.isupper() for char in v):\n            raise ValueError(\'Password must contain at least one uppercase letter\')\n        return v\n\nclass UserUpdate(BaseModel):\n    email: Optional[EmailStr] = None\n    username: Optional[str] = Field(None, min_length=3, max_length=50)\n    full_name: Optional[str] = None\n\nclass User(UserBase):\n    id: int\n    is_active: bool = True\n    created_at: datetime\n\n    class Config:\n        orm_mode = True  # SQLAlchemy \ubaa8\ub378\uacfc \ud638\ud658\n\n# \uc0ac\uc6a9 \uc608\uc81c\n@app.post("/users", response_model=User)\nasync def create_user(user: UserCreate):\n    """\uc0c8 \uc0ac\uc6a9\uc790 \uc0dd\uc131"""\n    return create_user_in_db(user)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uace0\uae09-\uac80\uc99d",children:"\uace0\uae09 \uac80\uc99d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel, Field, validator, root_validator\nfrom typing import List, Optional\nfrom datetime import datetime, date\n\nclass PostCreate(BaseModel):\n    title: str = Field(..., min_length=5, max_length=200)\n    content: str = Field(..., min_length=10)\n    tags: List[str] = Field(default=[], max_items=5)\n    published: bool = False\n    publish_date: Optional[datetime] = None\n\n    @validator('tags')\n    def validate_tags(cls, v):\n        # \ud0dc\uadf8 \uc815\uaddc\ud654\n        return [tag.lower().strip() for tag in v]\n\n    @root_validator\n    def validate_publish_date(cls, values):\n        # published\uac00 True\uba74 publish_date \ud544\uc218\n        if values.get('published') and not values.get('publish_date'):\n            values['publish_date'] = datetime.now()\n        return values\n\nclass UserProfile(BaseModel):\n    username: str\n    bio: Optional[str] = Field(None, max_length=500)\n    website: Optional[str] = None\n    birth_date: Optional[date] = None\n\n    @validator('website')\n    def validate_website(cls, v):\n        if v and not v.startswith(('http://', 'https://')):\n            raise ValueError('Website must start with http:// or https://')\n        return v\n\n    @validator('birth_date')\n    def validate_age(cls, v):\n        if v:\n            today = date.today()\n            age = today.year - v.year - ((today.month, today.day) < (v.month, v.day))\n            if age < 13:\n                raise ValueError('User must be at least 13 years old')\n        return v\n\nclass Config(BaseModel):\n    \"\"\"\uc911\ucca9\ub41c \ubaa8\ub378\"\"\"\n\n    class DatabaseConfig(BaseModel):\n        host: str\n        port: int = Field(5432, ge=1, le=65535)\n        database: str\n\n    class RedisConfig(BaseModel):\n        host: str\n        port: int = Field(6379, ge=1, le=65535)\n\n    database: DatabaseConfig\n    redis: RedisConfig\n    debug: bool = False\n\n# \uc0ac\uc6a9 \uc608\uc81c\n@app.post(\"/posts\")\nasync def create_post(post: PostCreate):\n    return post\n\n@app.put(\"/profile\")\nasync def update_profile(profile: UserProfile):\n    return profile\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\uc5ec\ub7ec-body-\ub9e4\uac1c\ubcc0\uc218",children:"\uc5ec\ub7ec Body \ub9e4\uac1c\ubcc0\uc218"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel\n\nclass Item(BaseModel):\n    name: str\n    price: float\n\nclass User(BaseModel):\n    username: str\n\n# \uc5ec\ub7ec Body \ub9e4\uac1c\ubcc0\uc218\n@app.post("/items")\nasync def create_item(\n    item: Item,\n    user: User,\n    importance: int = Body(...)\n):\n    """\n    {\n        "item": {"name": "Laptop", "price": 999.99},\n        "user": {"username": "john"},\n        "importance": 5\n    }\n    """\n    return {"item": item, "user": user, "importance": importance}\n\n# Body \ub9e4\uac1c\ubcc0\uc218 \uc784\ubca0\ub529\n@app.post("/items")\nasync def create_item(\n    item: Item = Body(..., embed=True)\n):\n    """\n    embed=True \uc0ac\uc6a9 \uc2dc:\n    {"item": {"name": "Laptop", "price": 999.99}}\n\n    embed=False (\uae30\ubcf8\uac12) \uc0ac\uc6a9 \uc2dc:\n    {"name": "Laptop", "price": 999.99}\n    """\n    return item\n'})}),"\n",(0,r.jsx)(n.h3,{id:"field-\ud0c0\uc785\uacfc-\uac80\uc99d",children:"Field \ud0c0\uc785\uacfc \uac80\uc99d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel, Field, constr, conint, confloat, conlist\nfrom typing import List\nfrom datetime import datetime\nfrom enum import Enum\n\nclass Status(str, Enum):\n    DRAFT = "draft"\n    PUBLISHED = "published"\n    ARCHIVED = "archived"\n\nclass Article(BaseModel):\n    # \ubb38\uc790\uc5f4 \uc81c\uc57d\n    title: constr(min_length=5, max_length=200)\n    slug: constr(regex=r\'^[a-z0-9-]+$\')\n\n    # \uc22b\uc790 \uc81c\uc57d\n    views: conint(ge=0) = 0\n    rating: confloat(ge=0.0, le=5.0) = 0.0\n\n    # \ub9ac\uc2a4\ud2b8 \uc81c\uc57d\n    tags: conlist(str, min_items=1, max_items=5)\n\n    # Enum\n    status: Status = Status.DRAFT\n\n    # \ub0a0\uc9dc/\uc2dc\uac04\n    created_at: datetime = Field(default_factory=datetime.now)\n    updated_at: Optional[datetime] = None\n\n    # \ubcf5\uc7a1\ud55c \ud544\ub4dc\n    metadata: dict = Field(default_factory=dict)\n\n    class Config:\n        use_enum_values = True\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"Pydantic \ubaa8\ubc94 \uc0ac\ub840",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc0c1\uc18d \ud65c\uc6a9"}),": Base, Create, Update, Response \ubaa8\ub378\ub85c \ubd84\ub9ac"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"validator \uc0ac\uc6a9"}),": \ubcf5\uc7a1\ud55c \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \uac80\uc99d"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Config \uc124\uc815"}),": ORM \ubaa8\ub4dc, JSON \uc778\ucf54\ub354 \ub4f1 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Field \ud65c\uc6a9"}),": \uae30\ubcf8\uac12, \uc124\uba85, \uc608\uc81c \uc81c\uacf5"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"37-response-models",children:"3.7 Response Models"}),"\n",(0,r.jsx)(n.p,{children:"\uc751\ub2f5 \ubaa8\ub378\uc744 \uc815\uc758\ud558\uc5ec \uc77c\uad00\ub41c API \uc751\ub2f5 \ud615\uc2dd\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uae30\ubcf8-\uc751\ub2f5-\ubaa8\ub378",children:"\uae30\ubcf8 \uc751\ub2f5 \ubaa8\ub378"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel\nfrom typing import Optional, List\nfrom datetime import datetime\n\nclass UserResponse(BaseModel):\n    id: int\n    email: str\n    username: str\n    full_name: Optional[str]\n    is_active: bool\n    created_at: datetime\n\n    class Config:\n        orm_mode = True  # ORM \uac1d\uccb4\ub97c \uc790\ub3d9 \ubcc0\ud658\n\n@app.get("/users/{user_id}", response_model=UserResponse)\nasync def get_user(user_id: int):\n    user = get_user_from_db(user_id)\n    return user  # \uc790\ub3d9\uc73c\ub85c UserResponse \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658\n\n# \ub9ac\uc2a4\ud2b8 \uc751\ub2f5\n@app.get("/users", response_model=List[UserResponse])\nasync def get_users():\n    users = get_all_users()\n    return users\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ubbfc\uac10\ud55c-\uc815\ubcf4-\uc81c\uc678",children:"\ubbfc\uac10\ud55c \uc815\ubcf4 \uc81c\uc678"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class UserInDB(BaseModel):\n    id: int\n    email: str\n    username: str\n    hashed_password: str  # DB\uc5d0\ub294 \uc788\uc9c0\ub9cc \uc751\ub2f5\uc5d0\uc11c \uc81c\uc678\n    is_active: bool\n\nclass UserPublic(BaseModel):\n    id: int\n    email: str\n    username: str\n    is_active: bool\n\n@app.get("/users/{user_id}", response_model=UserPublic)\nasync def get_user(user_id: int):\n    # UserInDB \uac1d\uccb4 \ubc18\ud658\ud574\ub3c4 UserPublic \ud544\ub4dc\ub9cc \uc751\ub2f5\n    user = get_user_from_db(user_id)  # UserInDB \ud0c0\uc785\n    return user  # hashed_password\ub294 \uc790\ub3d9 \uc81c\uc678\n\n# \ub610\ub294 response_model_exclude \uc0ac\uc6a9\n@app.get("/users/{user_id}", response_model=UserInDB, response_model_exclude={"hashed_password"})\nasync def get_user(user_id: int):\n    return get_user_from_db(user_id)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc870\uac74\ubd80-\uc751\ub2f5",children:"\uc870\uac74\ubd80 \uc751\ub2f5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Union\n\nclass ItemBase(BaseModel):\n    name: str\n    price: float\n\nclass ItemWithDetails(ItemBase):\n    description: str\n    stock: int\n    categories: List[str]\n\n@app.get("/items/{item_id}")\nasync def get_item(\n    item_id: int,\n    include_details: bool = False\n) -> Union[ItemBase, ItemWithDetails]:\n    item = get_item_from_db(item_id)\n    if include_details:\n        return ItemWithDetails(**item.dict())\n    return ItemBase(**item.dict())\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud45c\uc900\ud654\ub41c-\uc751\ub2f5-\ub798\ud37c",children:"\ud45c\uc900\ud654\ub41c \uc751\ub2f5 \ub798\ud37c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Generic, TypeVar, Optional\nfrom pydantic import BaseModel\nfrom pydantic.generics import GenericModel\n\nT = TypeVar(\'T\')\n\nclass ResponseModel(GenericModel, Generic[T]):\n    success: bool\n    message: Optional[str] = None\n    data: Optional[T] = None\n\nclass ErrorDetail(BaseModel):\n    field: str\n    message: str\n\nclass ErrorResponse(BaseModel):\n    success: bool = False\n    message: str\n    errors: Optional[List[ErrorDetail]] = None\n\n# \uc131\uacf5 \uc751\ub2f5\n@app.get("/users/{user_id}")\nasync def get_user(user_id: int) -> ResponseModel[UserResponse]:\n    user = get_user_from_db(user_id)\n    return ResponseModel(\n        success=True,\n        message="User retrieved successfully",\n        data=user\n    )\n\n# \uc5d0\ub7ec \uc751\ub2f5\n@app.exception_handler(ValueError)\nasync def value_error_handler(request, exc):\n    return JSONResponse(\n        status_code=400,\n        content=ErrorResponse(\n            message=str(exc),\n            errors=[ErrorDetail(field="general", message=str(exc))]\n        ).dict()\n    )\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ubd80\ubd84-\uc751\ub2f5-\ud544\ub4dc-\uc120\ud0dd",children:"\ubd80\ubd84 \uc751\ub2f5 (\ud544\ub4dc \uc120\ud0dd)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Set, Optional\nfrom fastapi import Query\n\n@app.get("/users/{user_id}")\nasync def get_user(\n    user_id: int,\n    fields: Optional[Set[str]] = Query(None)\n):\n    """\n    GET /users/1?fields=id&fields=username&fields=email\n    """\n    user = get_user_from_db(user_id)\n\n    if fields:\n        # \uc120\ud0dd\ub41c \ud544\ub4dc\ub9cc \ubc18\ud658\n        return {field: getattr(user, field) for field in fields if hasattr(user, field)}\n\n    return user\n\n# \ub610\ub294 response_model_include \uc0ac\uc6a9\n@app.get("/users/{user_id}", response_model=UserResponse, response_model_include={"id", "username", "email"})\nasync def get_user_minimal(user_id: int):\n    return get_user_from_db(user_id)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc751\ub2f5-\uc608\uc81c-\ucd94\uac00",children:"\uc751\ub2f5 \uc608\uc81c \ucd94\uac00"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel, Field\n\nclass UserCreate(BaseModel):\n    username: str = Field(..., example="johndoe")\n    email: str = Field(..., example="john@example.com")\n    password: str = Field(..., example="secret123")\n\n@app.post("/users", response_model=UserResponse)\nasync def create_user(user: UserCreate):\n    """\n    \uc0ac\uc6a9\uc790 \uc0dd\uc131:\n    - **username**: \uace0\uc720\ud55c \uc0ac\uc6a9\uc790\uba85\n    - **email**: \uc720\ud6a8\ud55c \uc774\uba54\uc77c \uc8fc\uc18c\n    - **password**: \ucd5c\uc18c 8\uc790 \uc774\uc0c1\n    """\n    return create_user_in_db(user)\n\n# \ub610\ub294 OpenAPI \uc2a4\ud0a4\ub9c8 \uc608\uc81c\n@app.post(\n    "/users",\n    response_model=UserResponse,\n    responses={\n        201: {\n            "description": "User created successfully",\n            "content": {\n                "application/json": {\n                    "example": {\n                        "id": 1,\n                        "username": "johndoe",\n                        "email": "john@example.com",\n                        "is_active": True,\n                        "created_at": "2025-01-15T10:30:00"\n                    }\n                }\n            }\n        },\n        400: {\n            "description": "Invalid input"\n        }\n    }\n)\nasync def create_user(user: UserCreate):\n    return create_user_in_db(user)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"38-api-\ubc84\uc800\ub2dd",children:"3.8 API \ubc84\uc800\ub2dd"}),"\n",(0,r.jsx)(n.p,{children:"API \ubc84\uc804 \uad00\ub9ac\ub85c \ud558\uc704 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"url-\uacbd\ub85c-\ubc84\uc800\ub2dd-\uad8c\uc7a5",children:"URL \uacbd\ub85c \ubc84\uc800\ub2dd (\uad8c\uc7a5)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import APIRouter, FastAPI\n\napp = FastAPI()\n\n# V1 API\napi_v1 = APIRouter(prefix="/api/v1")\n\n@api_v1.get("/users")\nasync def get_users_v1():\n    return [{"id": 1, "name": "John"}]\n\n@api_v1.get("/users/{user_id}")\nasync def get_user_v1(user_id: int):\n    return {"id": user_id, "name": "John"}\n\n# V2 API (\uc0c8 \ud544\ub4dc \ucd94\uac00)\napi_v2 = APIRouter(prefix="/api/v2")\n\n@api_v2.get("/users")\nasync def get_users_v2():\n    return [{\n        "id": 1,\n        "name": "John",\n        "email": "john@example.com",  # \uc0c8 \ud544\ub4dc\n        "created_at": "2025-01-15T10:30:00"  # \uc0c8 \ud544\ub4dc\n    }]\n\n@api_v2.get("/users/{user_id}")\nasync def get_user_v2(user_id: int):\n    return {\n        "id": user_id,\n        "name": "John",\n        "email": "john@example.com",\n        "created_at": "2025-01-15T10:30:00"\n    }\n\napp.include_router(api_v1, tags=["v1"])\napp.include_router(api_v2, tags=["v2"])\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud30c\uc77c-\uad6c\uc870\ub85c-\ubc84\uc804-\ubd84\ub9ac",children:"\ud30c\uc77c \uad6c\uc870\ub85c \ubc84\uc804 \ubd84\ub9ac"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"app/\n\u251c\u2500\u2500 main.py\n\u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 v1/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 endpoints/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 users.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 posts.py\n\u2502   \u2502   \u2514\u2500\u2500 schemas/\n\u2502   \u2502       \u251c\u2500\u2500 user.py\n\u2502   \u2502       \u2514\u2500\u2500 post.py\n\u2502   \u2514\u2500\u2500 v2/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 endpoints/\n\u2502       \u2502   \u251c\u2500\u2500 users.py\n\u2502       \u2502   \u2514\u2500\u2500 posts.py\n\u2502       \u2514\u2500\u2500 schemas/\n\u2502           \u251c\u2500\u2500 user.py\n\u2502           \u2514\u2500\u2500 post.py\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"app/api/v1/schemas/user.py"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel\n\nclass UserV1(BaseModel):\n    id: int\n    name: str\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"app/api/v2/schemas/user.py"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel\nfrom datetime import datetime\n\nclass UserV2(BaseModel):\n    id: int\n    name: str\n    email: str  # \uc0c8 \ud544\ub4dc\n    created_at: datetime  # \uc0c8 \ud544\ub4dc\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"app/main.py"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom app.api.v1 import api as api_v1\nfrom app.api.v2 import api as api_v2\n\napp = FastAPI()\n\napp.include_router(api_v1.router, prefix="/api/v1", tags=["v1"])\napp.include_router(api_v2.router, prefix="/api/v2", tags=["v2"])\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud5e4\ub354-\uae30\ubc18-\ubc84\uc800\ub2dd-\uc120\ud0dd\uc801",children:"\ud5e4\ub354 \uae30\ubc18 \ubc84\uc800\ub2dd (\uc120\ud0dd\uc801)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import Header, HTTPException\n\n@app.get("/users")\nasync def get_users(api_version: str = Header(default="v1", alias="X-API-Version")):\n    if api_version == "v1":\n        return get_users_v1()\n    elif api_version == "v2":\n        return get_users_v2()\n    else:\n        raise HTTPException(status_code=400, detail="Unsupported API version")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ubc84\uc804-\ud3d0\uae30deprecation-\ucc98\ub9ac",children:"\ubc84\uc804 \ud3d0\uae30(Deprecation) \ucc98\ub9ac"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import APIRouter, status\nfrom warnings import warn\n\napi_v1 = APIRouter(prefix="/api/v1", deprecated=True)\n\n@api_v1.get("/users")\nasync def get_users_v1():\n    """\n    \u26a0\ufe0f Deprecated: \uc774 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 2025\ub144 12\uc6d4 31\uc77c\uc5d0 \uc81c\uac70\ub429\ub2c8\ub2e4.\n    v2 API\ub97c \uc0ac\uc6a9\ud558\uc138\uc694: GET /api/v2/users\n    """\n    return {\n        "data": [{"id": 1, "name": "John"}],\n        "warning": "This endpoint is deprecated. Please use /api/v2/users"\n    }\n\n# \ucee4\uc2a4\ud140 \ud5e4\ub354\ub85c \uacbd\uace0\nfrom fastapi.responses import JSONResponse\n\n@api_v1.get("/users/{user_id}")\nasync def get_user_v1(user_id: int):\n    content = {"id": user_id, "name": "John"}\n    headers = {\n        "X-API-Deprecated": "true",\n        "X-API-Sunset": "2025-12-31",\n        "Link": \'</api/v2/users>; rel="successor-version"\'\n    }\n    return JSONResponse(content=content, headers=headers)\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"\ubc84\uc800\ub2dd \uc804\ub7b5",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL \uacbd\ub85c"}),": \uac00\uc7a5 \uba85\ud655\ud558\uace0 \ub110\ub9ac \uc0ac\uc6a9\ub428 (",(0,r.jsx)(n.code,{children:"/api/v1"}),", ",(0,r.jsx)(n.code,{children:"/api/v2"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc8fc\uc694 \ubcc0\uacbd \uc2dc\uc5d0\ub9cc"}),": \uc791\uc740 \ubcc0\uacbd\uc740 \uae30\uc874 \ubc84\uc804\uc5d0 \ud544\ub4dc \ucd94\uac00"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud3d0\uae30 \uacc4\ud68d"}),": \ucd5c\uc18c 6\uac1c\uc6d4 \uc804\uc5d0 \uacf5\uc9c0"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ubb38\uc11c\ud654"}),": \ubc84\uc804 \uac04 \ucc28\uc774\uc810\uc744 \uba85\ud655\ud788 \ubb38\uc11c\ud654"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"39-\ud398\uc774\uc9c0\ub124\uc774\uc158-\uad6c\ud604",children:"3.9 \ud398\uc774\uc9c0\ub124\uc774\uc158 \uad6c\ud604"}),"\n",(0,r.jsx)(n.p,{children:"\ub300\ub7c9\uc758 \ub370\uc774\ud130\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \ubc18\ud658\ud558\ub294 \ud398\uc774\uc9c0\ub124\uc774\uc158 \ud328\ud134\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uc624\ud504\uc14b-\uae30\ubc18-\ud398\uc774\uc9c0\ub124\uc774\uc158",children:"\uc624\ud504\uc14b \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import List, Generic, TypeVar\nfrom pydantic import BaseModel\nfrom fastapi import Query\n\nT = TypeVar(\'T\')\n\nclass PaginatedResponse(BaseModel, Generic[T]):\n    total: int\n    page: int\n    page_size: int\n    total_pages: int\n    items: List[T]\n\nclass User(BaseModel):\n    id: int\n    username: str\n    email: str\n\n@app.get("/users", response_model=PaginatedResponse[User])\nasync def get_users(\n    page: int = Query(1, ge=1, description="\ud398\uc774\uc9c0 \ubc88\ud638"),\n    page_size: int = Query(10, ge=1, le=100, description="\ud398\uc774\uc9c0 \ud06c\uae30")\n):\n    """\n    \uc624\ud504\uc14b \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158\n    GET /users?page=1&page_size=10\n    """\n    # \uc804\uccb4 \uac1c\uc218\n    total = get_total_users_count()\n\n    # \uc624\ud504\uc14b \uacc4\uc0b0\n    offset = (page - 1) * page_size\n\n    # \ub370\uc774\ud130 \uc870\ud68c\n    users = get_users_from_db(offset=offset, limit=page_size)\n\n    # \uc804\uccb4 \ud398\uc774\uc9c0 \uc218\n    total_pages = (total + page_size - 1) // page_size\n\n    return PaginatedResponse(\n        total=total,\n        page=page,\n        page_size=page_size,\n        total_pages=total_pages,\n        items=users\n    )\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ucee4\uc11c-\uae30\ubc18-\ud398\uc774\uc9c0\ub124\uc774\uc158",children:"\ucee4\uc11c \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Optional\nfrom pydantic import BaseModel\n\nclass CursorPaginatedResponse(BaseModel, Generic[T]):\n    items: List[T]\n    next_cursor: Optional[str] = None\n    has_more: bool\n\n@app.get("/posts", response_model=CursorPaginatedResponse[Post])\nasync def get_posts(\n    cursor: Optional[str] = None,\n    limit: int = Query(20, ge=1, le=100)\n):\n    """\n    \ucee4\uc11c \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158 (\ubb34\ud55c \uc2a4\ud06c\ub864\uc5d0 \uc801\ud569)\n    GET /posts?cursor=eyJpZCI6MTAwfQ&limit=20\n    """\n    posts = get_posts_from_db(after_cursor=cursor, limit=limit + 1)\n\n    has_more = len(posts) > limit\n    if has_more:\n        posts = posts[:limit]\n\n    next_cursor = None\n    if has_more and posts:\n        # \ub9c8\uc9c0\ub9c9 \ud56d\ubaa9\uc758 ID\ub97c \ucee4\uc11c\ub85c \uc778\ucf54\ub529\n        next_cursor = encode_cursor(posts[-1].id)\n\n    return CursorPaginatedResponse(\n        items=posts,\n        next_cursor=next_cursor,\n        has_more=has_more\n    )\n\ndef encode_cursor(post_id: int) -> str:\n    import base64\n    import json\n    cursor_data = json.dumps({"id": post_id})\n    return base64.b64encode(cursor_data.encode()).decode()\n\ndef decode_cursor(cursor: str) -> int:\n    import base64\n    import json\n    cursor_data = json.loads(base64.b64decode(cursor))\n    return cursor_data["id"]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ub9c1\ud06c-\ud5e4\ub354-\uae30\ubc18",children:"\ub9c1\ud06c \ud5e4\ub354 \uae30\ubc18"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import Response\nfrom urllib.parse import urlencode\n\n@app.get("/items")\nasync def get_items(\n    response: Response,\n    page: int = Query(1, ge=1),\n    page_size: int = Query(10, ge=1, le=100)\n):\n    """RFC 5988 Link \ud5e4\ub354 \uc0ac\uc6a9"""\n    total = get_total_items_count()\n    total_pages = (total + page_size - 1) // page_size\n\n    # \ub370\uc774\ud130 \uc870\ud68c\n    offset = (page - 1) * page_size\n    items = get_items_from_db(offset=offset, limit=page_size)\n\n    # Link \ud5e4\ub354 \uc0dd\uc131\n    base_url = "http://api.example.com/items"\n    links = []\n\n    if page > 1:\n        # \uc774\uc804 \ud398\uc774\uc9c0\n        prev_params = urlencode({"page": page - 1, "page_size": page_size})\n        links.append(f\'<{base_url}?{prev_params}>; rel="prev"\')\n\n        # \uccab \ud398\uc774\uc9c0\n        first_params = urlencode({"page": 1, "page_size": page_size})\n        links.append(f\'<{base_url}?{first_params}>; rel="first"\')\n\n    if page < total_pages:\n        # \ub2e4\uc74c \ud398\uc774\uc9c0\n        next_params = urlencode({"page": page + 1, "page_size": page_size})\n        links.append(f\'<{base_url}?{next_params}>; rel="next"\')\n\n        # \ub9c8\uc9c0\ub9c9 \ud398\uc774\uc9c0\n        last_params = urlencode({"page": total_pages, "page_size": page_size})\n        links.append(f\'<{base_url}?{last_params}>; rel="last"\')\n\n    if links:\n        response.headers["Link"] = ", ".join(links)\n\n    return {\n        "items": items,\n        "total": total,\n        "page": page,\n        "page_size": page_size\n    }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud5ec\ud37c-\ud568\uc218-\ud65c\uc6a9",children:"\ud5ec\ud37c \ud568\uc218 \ud65c\uc6a9"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import List, TypeVar, Generic\nfrom pydantic import BaseModel\nfrom sqlalchemy.orm import Query\n\nT = TypeVar(\'T\')\n\nclass Page(BaseModel, Generic[T]):\n    items: List[T]\n    total: int\n    page: int\n    page_size: int\n\n    @property\n    def total_pages(self) -> int:\n        return (self.total + self.page_size - 1) // self.page_size\n\n    @property\n    def has_previous(self) -> bool:\n        return self.page > 1\n\n    @property\n    def has_next(self) -> bool:\n        return self.page < self.total_pages\n\ndef paginate(query: Query, page: int, page_size: int) -> Page:\n    """SQLAlchemy \ucffc\ub9ac \ud398\uc774\uc9c0\ub124\uc774\uc158 \ud5ec\ud37c"""\n    total = query.count()\n    items = query.offset((page - 1) * page_size).limit(page_size).all()\n\n    return Page(\n        items=items,\n        total=total,\n        page=page,\n        page_size=page_size\n    )\n\n# \uc0ac\uc6a9 \uc608\uc81c\n@app.get("/users")\nasync def get_users(\n    page: int = Query(1, ge=1),\n    page_size: int = Query(10, ge=1, le=100)\n):\n    query = db.query(User)\n    return paginate(query, page, page_size)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"310-\ud544\ud130\ub9c1-\ubc0f-\uc815\ub82c",children:"3.10 \ud544\ud130\ub9c1 \ubc0f \uc815\ub82c"}),"\n",(0,r.jsx)(n.p,{children:"\ub370\uc774\ud130 \uc870\ud68c \uc2dc \uc720\uc5f0\ud55c \ud544\ud130\ub9c1\uacfc \uc815\ub82c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uae30\ubcf8-\ud544\ud130\ub9c1",children:"\uae30\ubcf8 \ud544\ud130\ub9c1"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Optional\nfrom datetime import datetime\n\n@app.get("/posts")\nasync def get_posts(\n    # \ud544\ud130 \ud30c\ub77c\ubbf8\ud130\n    author_id: Optional[int] = None,\n    status: Optional[str] = Query(None, regex="^(draft|published|archived)$"),\n    min_views: Optional[int] = Query(None, ge=0),\n    created_after: Optional[datetime] = None,\n    tags: Optional[List[str]] = Query(None),\n    # \ud398\uc774\uc9c0\ub124\uc774\uc158\n    page: int = Query(1, ge=1),\n    page_size: int = Query(10, ge=1, le=100)\n):\n    """\n    GET /posts?author_id=1&status=published&min_views=100&tags=python&tags=fastapi\n    """\n    query = db.query(Post)\n\n    # \ud544\ud130 \uc801\uc6a9\n    if author_id:\n        query = query.filter(Post.author_id == author_id)\n\n    if status:\n        query = query.filter(Post.status == status)\n\n    if min_views:\n        query = query.filter(Post.views >= min_views)\n\n    if created_after:\n        query = query.filter(Post.created_at >= created_after)\n\n    if tags:\n        query = query.filter(Post.tags.contains(tags))\n\n    return paginate(query, page, page_size)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ub3d9\uc801-\ud544\ud130\ub9c1",children:"\ub3d9\uc801 \ud544\ud130\ub9c1"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Dict, Any, Optional\nfrom pydantic import BaseModel\n\nclass PostFilter(BaseModel):\n    author_id: Optional[int] = None\n    status: Optional[str] = None\n    min_views: Optional[int] = None\n    max_views: Optional[int] = None\n    search: Optional[str] = None  # \uc81c\ubaa9/\ub0b4\uc6a9 \uac80\uc0c9\n\n@app.get("/posts")\nasync def get_posts(\n    filters: PostFilter = Depends(),\n    page: int = Query(1, ge=1),\n    page_size: int = Query(10, ge=1, le=100)\n):\n    query = db.query(Post)\n\n    # \ud544\ud130 \uc790\ub3d9 \uc801\uc6a9\n    filter_dict = filters.dict(exclude_none=True)\n\n    for field, value in filter_dict.items():\n        if field == "search":\n            # \uac80\uc0c9\n            query = query.filter(\n                or_(\n                    Post.title.contains(value),\n                    Post.content.contains(value)\n                )\n            )\n        elif field.startswith("min_"):\n            # \ucd5c\uc18c\uac12\n            column = field[4:]\n            query = query.filter(getattr(Post, column) >= value)\n        elif field.startswith("max_"):\n            # \ucd5c\ub300\uac12\n            column = field[4:]\n            query = query.filter(getattr(Post, column) <= value)\n        else:\n            # \uc77c\uce58\n            query = query.filter(getattr(Post, field) == value)\n\n    return paginate(query, page, page_size)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc815\ub82c",children:"\uc815\ub82c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from enum import Enum\n\nclass SortOrder(str, Enum):\n    ASC = "asc"\n    DESC = "desc"\n\n@app.get("/posts")\nasync def get_posts(\n    sort_by: str = Query("created_at", regex="^(created_at|title|views|author)$"),\n    order: SortOrder = SortOrder.DESC,\n    page: int = Query(1, ge=1),\n    page_size: int = Query(10, ge=1, le=100)\n):\n    """\n    GET /posts?sort_by=views&order=desc\n    """\n    query = db.query(Post)\n\n    # \uc815\ub82c \uc801\uc6a9\n    column = getattr(Post, sort_by)\n    if order == SortOrder.DESC:\n        query = query.order_by(column.desc())\n    else:\n        query = query.order_by(column.asc())\n\n    return paginate(query, page, page_size)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ub2e4\uc911-\uc815\ub82c",children:"\ub2e4\uc911 \uc815\ub82c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import List\n\n@app.get("/posts")\nasync def get_posts(\n    sort: List[str] = Query(\n        ["created_at:desc"],\n        description="\uc815\ub82c \ud544\ub4dc:\uc21c\uc11c (\uc608: views:desc,title:asc)"\n    )\n):\n    """\n    GET /posts?sort=views:desc&sort=created_at:asc\n    """\n    query = db.query(Post)\n\n    for sort_param in sort:\n        parts = sort_param.split(":")\n        field = parts[0]\n        order = parts[1] if len(parts) > 1 else "asc"\n\n        column = getattr(Post, field)\n        if order == "desc":\n            query = query.order_by(column.desc())\n        else:\n            query = query.order_by(column.asc())\n\n    return query.all()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uace0\uae09-\uac80\uc0c9",children:"\uace0\uae09 \uac80\uc0c9"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from sqlalchemy import or_, and_\n\n@app.get("/posts/search")\nasync def search_posts(\n    q: str = Query(..., min_length=1, description="\uac80\uc0c9\uc5b4"),\n    fields: List[str] = Query(["title", "content"], description="\uac80\uc0c9 \ub300\uc0c1 \ud544\ub4dc"),\n    author: Optional[str] = None,\n    date_from: Optional[datetime] = None,\n    date_to: Optional[datetime] = None\n):\n    """\n    \uc804\ubb38 \uac80\uc0c9 API\n    GET /posts/search?q=fastapi&fields=title&fields=content&author=john\n    """\n    query = db.query(Post)\n\n    # \uac80\uc0c9\uc5b4\ub85c \ud544\ud130\ub9c1\n    search_conditions = []\n    for field in fields:\n        column = getattr(Post, field)\n        search_conditions.append(column.ilike(f"%{q}%"))\n\n    query = query.filter(or_(*search_conditions))\n\n    # \ucd94\uac00 \ud544\ud130\n    if author:\n        query = query.join(User).filter(User.username.ilike(f"%{author}%"))\n\n    if date_from:\n        query = query.filter(Post.created_at >= date_from)\n\n    if date_to:\n        query = query.filter(Post.created_at <= date_to)\n\n    return query.all()\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"\ud544\ud130\ub9c1/\uc815\ub82c \ubaa8\ubc94 \uc0ac\ub840",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8"}),": \ud5c8\uc6a9\ub41c \ud544\ub4dc\ub9cc \ud544\ud130\ub9c1/\uc815\ub82c \uac00\ub2a5\ud558\ub3c4\ub85d \uc81c\ud55c"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc778\ub371\uc2a4"}),": \uc790\uc8fc \ud544\ud130\ub9c1/\uc815\ub82c\ub418\ub294 \uceec\ub7fc\uc5d0 DB \uc778\ub371\uc2a4 \uc0dd\uc131"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uae30\ubcf8\uac12"}),": \ud569\ub9ac\uc801\uc778 \uae30\ubcf8 \uc815\ub82c \uc81c\uacf5 (\ubcf4\ud1b5 created_at desc)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uac80\uc99d"}),": \uc785\ub825\uac12\uc744 \ucca0\uc800\ud788 \uac80\uc99d\ud558\uc5ec SQL \uc778\uc81d\uc158 \ubc29\uc9c0"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"311-\uc790\ub3d9-\ubb38\uc11c-\uc0dd\uc131-swagger-ui-redoc",children:"3.11 \uc790\ub3d9 \ubb38\uc11c \uc0dd\uc131 (Swagger UI, ReDoc)"}),"\n",(0,r.jsx)(n.p,{children:"FastAPI\ub294 OpenAPI \uc2a4\ud399 \uae30\ubc18\uc758 \uc778\ud130\ub799\ud2f0\ube0c API \ubb38\uc11c\ub97c \uc790\ub3d9 \uc0dd\uc131\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uae30\ubcf8-\uc124\uc815",children:"\uae30\ubcf8 \uc124\uc815"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\n\napp = FastAPI(\n    title="My API",\n    description="\uc774\uac83\uc740 \uba4b\uc9c4 API\uc785\ub2c8\ub2e4",\n    version="1.0.0",\n    terms_of_service="http://example.com/terms/",\n    contact={\n        "name": "API Support",\n        "url": "http://example.com/support",\n        "email": "support@example.com"\n    },\n    license_info={\n        "name": "MIT",\n        "url": "https://opensource.org/licenses/MIT"\n    }\n)\n\n# Swagger UI: http://localhost:8000/docs\n# ReDoc: http://localhost:8000/redoc\n# OpenAPI JSON: http://localhost:8000/openapi.json\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc5d4\ub4dc\ud3ec\uc778\ud2b8-\ubb38\uc11c\ud654",children:"\uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubb38\uc11c\ud654"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import Path, Query, Body\nfrom pydantic import BaseModel, Field\n\nclass UserCreate(BaseModel):\n    username: str = Field(..., example="johndoe", description="\uace0\uc720\ud55c \uc0ac\uc6a9\uc790\uba85")\n    email: str = Field(..., example="john@example.com")\n    full_name: str = Field(None, example="John Doe")\n\n    class Config:\n        schema_extra = {\n            "example": {\n                "username": "johndoe",\n                "email": "john@example.com",\n                "full_name": "John Doe"\n            }\n        }\n\n@app.post(\n    "/users",\n    response_model=User,\n    status_code=201,\n    summary="\uc0ac\uc6a9\uc790 \uc0dd\uc131",\n    description="\uc0c8\ub85c\uc6b4 \uc0ac\uc6a9\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uba85\uacfc \uc774\uba54\uc77c\uc740 \uace0\uc720\ud574\uc57c \ud569\ub2c8\ub2e4.",\n    response_description="\uc0dd\uc131\ub41c \uc0ac\uc6a9\uc790 \uc815\ubcf4",\n    tags=["users"]\n)\nasync def create_user(\n    user: UserCreate = Body(\n        ...,\n        example={\n            "username": "johndoe",\n            "email": "john@example.com",\n            "full_name": "John Doe"\n        }\n    )\n):\n    """\n    \uc0ac\uc6a9\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4:\n\n    - **username**: \uace0\uc720\ud55c \uc0ac\uc6a9\uc790\uba85 (\ud544\uc218)\n    - **email**: \uc720\ud6a8\ud55c \uc774\uba54\uc77c \uc8fc\uc18c (\ud544\uc218)\n    - **full_name**: \uc804\uccb4 \uc774\ub984 (\uc120\ud0dd)\n\n    \ubc18\ud658: \uc0dd\uc131\ub41c \uc0ac\uc6a9\uc790 \uc815\ubcf4 (ID \ud3ec\ud568)\n    """\n    return create_user_in_db(user)\n\n@app.get(\n    "/users/{user_id}",\n    response_model=User,\n    tags=["users"],\n    summary="\uc0ac\uc6a9\uc790 \uc870\ud68c"\n)\nasync def get_user(\n    user_id: int = Path(..., gt=0, description="\uc870\ud68c\ud560 \uc0ac\uc6a9\uc790 ID"),\n    include_posts: bool = Query(False, description="\uc0ac\uc6a9\uc790\uc758 \uac8c\uc2dc\uae00 \ud3ec\ud568 \uc5ec\ubd80")\n):\n    """\uc0ac\uc6a9\uc790 ID\ub85c \ud2b9\uc815 \uc0ac\uc6a9\uc790\ub97c \uc870\ud68c\ud569\ub2c8\ub2e4."""\n    return get_user_from_db(user_id, include_posts=include_posts)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc751\ub2f5-\uc608\uc81c",children:"\uc751\ub2f5 \uc608\uc81c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.post(\n    "/users",\n    response_model=User,\n    responses={\n        201: {\n            "description": "\uc0ac\uc6a9\uc790\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub428",\n            "content": {\n                "application/json": {\n                    "example": {\n                        "id": 1,\n                        "username": "johndoe",\n                        "email": "john@example.com",\n                        "full_name": "John Doe",\n                        "is_active": True,\n                        "created_at": "2025-01-15T10:30:00"\n                    }\n                }\n            }\n        },\n        400: {\n            "description": "\uc798\ubabb\ub41c \uc785\ub825",\n            "content": {\n                "application/json": {\n                    "example": {\n                        "detail": "Email already registered"\n                    }\n                }\n            }\n        },\n        422: {\n            "description": "\uc720\ud6a8\uc131 \uac80\uc0ac \uc624\ub958",\n            "content": {\n                "application/json": {\n                    "example": {\n                        "detail": [\n                            {\n                                "loc": ["body", "email"],\n                                "msg": "value is not a valid email address",\n                                "type": "value_error.email"\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    }\n)\nasync def create_user(user: UserCreate):\n    return create_user_in_db(user)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud0dc\uadf8\uc640-\uadf8\ub8f9\ud654",children:"\ud0dc\uadf8\uc640 \uadf8\ub8f9\ud654"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\n\ntags_metadata = [\n    {\n        "name": "users",\n        "description": "\uc0ac\uc6a9\uc790 \uad00\ub9ac \uc791\uc5c5. \uc0dd\uc131, \uc870\ud68c, \uc218\uc815, \uc0ad\uc81c\ub97c \uc218\ud589\ud569\ub2c8\ub2e4.",\n    },\n    {\n        "name": "posts",\n        "description": "\uac8c\uc2dc\uae00 \uad00\ub9ac",\n        "externalDocs": {\n            "description": "\uc678\ubd80 \ubb38\uc11c",\n            "url": "https://example.com/docs/posts"\n        }\n    },\n    {\n        "name": "admin",\n        "description": "\uad00\ub9ac\uc790 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8"\n    }\n]\n\napp = FastAPI(\n    title="My API",\n    openapi_tags=tags_metadata\n)\n\n@app.get("/users", tags=["users"])\nasync def get_users():\n    return []\n\n@app.post("/users", tags=["users"])\nasync def create_user(user: UserCreate):\n    return user\n\n@app.get("/posts", tags=["posts"])\nasync def get_posts():\n    return []\n\n@app.delete("/admin/users/{user_id}", tags=["admin"])\nasync def admin_delete_user(user_id: int):\n    return None\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ubb38\uc11c\uc5d0\uc11c-\uc5d4\ub4dc\ud3ec\uc778\ud2b8-\uc228\uae30\uae30",children:"\ubb38\uc11c\uc5d0\uc11c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc228\uae30\uae30"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.get("/internal/metrics", include_in_schema=False)\nasync def get_metrics():\n    """\uc774 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \ubb38\uc11c\uc5d0 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4"""\n    return {"cpu": 45.2, "memory": 67.8}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ucee4\uc2a4\ud140-openapi-\uc2a4\ud0a4\ub9c8",children:"\ucee4\uc2a4\ud140 OpenAPI \uc2a4\ud0a4\ub9c8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi.openapi.utils import get_openapi\n\ndef custom_openapi():\n    if app.openapi_schema:\n        return app.openapi_schema\n\n    openapi_schema = get_openapi(\n        title="Custom API",\n        version="2.0.0",\n        description="\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c OpenAPI \uc2a4\ud0a4\ub9c8",\n        routes=app.routes,\n    )\n\n    # \ubcf4\uc548 \uc2a4\ud0a4\ub9c8 \ucd94\uac00\n    openapi_schema["components"]["securitySchemes"] = {\n        "Bearer": {\n            "type": "http",\n            "scheme": "bearer",\n            "bearerFormat": "JWT"\n        }\n    }\n\n    app.openapi_schema = openapi_schema\n    return app.openapi_schema\n\napp.openapi = custom_openapi\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ubb38\uc11c-ui-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",children:"\ubb38\uc11c UI \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom fastapi.openapi.docs import get_swagger_ui_html, get_redoc_html\n\napp = FastAPI(docs_url=None, redoc_url=None)  # \uae30\ubcf8 \ubb38\uc11c \ube44\ud65c\uc131\ud654\n\n@app.get("/docs", include_in_schema=False)\nasync def custom_swagger_ui_html():\n    return get_swagger_ui_html(\n        openapi_url=app.openapi_url,\n        title=app.title + " - Swagger UI",\n        oauth2_redirect_url=app.swagger_ui_oauth2_redirect_url,\n        swagger_js_url="https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js",\n        swagger_css_url="https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css",\n    )\n\n@app.get("/redoc", include_in_schema=False)\nasync def redoc_html():\n    return get_redoc_html(\n        openapi_url=app.openapi_url,\n        title=app.title + " - ReDoc",\n        redoc_js_url="https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js",\n    )\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"\ubb38\uc11c\ud654 \ubaa8\ubc94 \uc0ac\ub840",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uba85\ud655\ud55c \uc124\uba85"}),": \uac01 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ubaa9\uc801\uacfc \uc0ac\uc6a9\ubc95\uc744 \uc0c1\uc138\ud788 \uae30\uc220"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc608\uc81c \uc81c\uacf5"}),": \uc694\uccad/\uc751\ub2f5 \uc608\uc81c\ub85c \uc774\ud574\ub3c4 \ud5a5\uc0c1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud0dc\uadf8 \ud65c\uc6a9"}),": \uad00\ub828 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub17c\ub9ac\uc801\uc73c\ub85c \uadf8\ub8f9\ud654"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc751\ub2f5 \ucf54\ub4dc"}),": \uac00\ub2a5\ud55c \ubaa8\ub4e0 \uc751\ub2f5 \uc0c1\ud0dc \ucf54\ub4dc\ub97c \ubb38\uc11c\ud654"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"312-cors-\uc124\uc815",children:"3.12 CORS \uc124\uc815"}),"\n",(0,r.jsx)(n.p,{children:"Cross-Origin Resource Sharing\uc744 \uc124\uc815\ud558\uc5ec \uc6f9 \ube0c\ub77c\uc6b0\uc800\uc5d0\uc11c API\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"\uae30\ubcf8-cors-\uc124\uc815",children:"\uae30\ubcf8 CORS \uc124\uc815"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\n# CORS \ubbf8\ub4e4\uc6e8\uc5b4 \ucd94\uac00\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=["*"],  # \ubaa8\ub4e0 \ub3c4\uba54\uc778 \ud5c8\uc6a9 (\uac1c\ubc1c \ud658\uacbd)\n    allow_credentials=True,\n    allow_methods=["*"],  # \ubaa8\ub4e0 HTTP \uba54\uc11c\ub4dc \ud5c8\uc6a9\n    allow_headers=["*"],  # \ubaa8\ub4e0 \ud5e4\ub354 \ud5c8\uc6a9\n)\n\n@app.get("/")\nasync def root():\n    return {"message": "CORS enabled"}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud504\ub85c\ub355\uc158-cors-\uc124\uc815",children:"\ud504\ub85c\ub355\uc158 CORS \uc124\uc815"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\n# \ud2b9\uc815 \ub3c4\uba54\uc778\ub9cc \ud5c8\uc6a9\norigins = [\n    "http://localhost:3000",        # React \uac1c\ubc1c \uc11c\ubc84\n    "http://localhost:8080",        # Vue \uac1c\ubc1c \uc11c\ubc84\n    "https://myapp.com",            # \ud504\ub85c\ub355\uc158 \ub3c4\uba54\uc778\n    "https://www.myapp.com",\n]\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=["GET", "POST", "PUT", "DELETE", "PATCH"],\n    allow_headers=["Authorization", "Content-Type"],\n    max_age=3600,  # preflight \uc694\uccad \uce90\uc2dc \uc2dc\uac04 (\ucd08)\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud658\uacbd\ubcc4-\uc124\uc815",children:"\ud658\uacbd\ubcc4 \uc124\uc815"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import os\nfrom fastapi import FastAPI\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\n# \ud658\uacbd \ubcc0\uc218\ub85c \uc124\uc815\nENVIRONMENT = os.getenv("ENVIRONMENT", "development")\n\nif ENVIRONMENT == "development":\n    # \uac1c\ubc1c \ud658\uacbd: \ubaa8\ub4e0 \ub3c4\uba54\uc778 \ud5c8\uc6a9\n    app.add_middleware(\n        CORSMiddleware,\n        allow_origins=["*"],\n        allow_credentials=True,\n        allow_methods=["*"],\n        allow_headers=["*"],\n    )\nelse:\n    # \ud504\ub85c\ub355\uc158: \ud2b9\uc815 \ub3c4\uba54\uc778\ub9cc \ud5c8\uc6a9\n    allowed_origins = os.getenv("ALLOWED_ORIGINS", "").split(",")\n    app.add_middleware(\n        CORSMiddleware,\n        allow_origins=allowed_origins,\n        allow_credentials=True,\n        allow_methods=["GET", "POST", "PUT", "DELETE"],\n        allow_headers=["Authorization", "Content-Type"],\n    )\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ub3d9\uc801-origin-\uac80\uc99d",children:"\ub3d9\uc801 Origin \uac80\uc99d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Request\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom starlette.middleware.cors import CORSMiddleware as StarleteCORSMiddleware\n\napp = FastAPI()\n\ndef is_allowed_origin(origin: str) -> bool:\n    """\ub3d9\uc801\uc73c\ub85c Origin \ud5c8\uc6a9 \uc5ec\ubd80 \uacb0\uc815"""\n    # \uc11c\ube0c\ub3c4\uba54\uc778 \ud328\ud134 \ud5c8\uc6a9\n    allowed_patterns = [\n        "https://*.myapp.com",\n        "http://localhost:*",\n    ]\n\n    import re\n    for pattern in allowed_patterns:\n        regex = pattern.replace("*", ".*")\n        if re.match(regex, origin):\n            return True\n    return False\n\n# \ucee4\uc2a4\ud140 CORS \ubbf8\ub4e4\uc6e8\uc5b4\n@app.middleware("http")\nasync def custom_cors_middleware(request: Request, call_next):\n    origin = request.headers.get("origin")\n\n    response = await call_next(request)\n\n    if origin and is_allowed_origin(origin):\n        response.headers["Access-Control-Allow-Origin"] = origin\n        response.headers["Access-Control-Allow-Credentials"] = "true"\n        response.headers["Access-Control-Allow-Methods"] = "GET, POST, PUT, DELETE, OPTIONS"\n        response.headers["Access-Control-Allow-Headers"] = "Authorization, Content-Type"\n\n    return response\n'})}),"\n",(0,r.jsx)(n.h3,{id:"preflight-\uc694\uccad-\ucc98\ub9ac",children:"Preflight \uc694\uccad \ucc98\ub9ac"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Response\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=["https://myapp.com"],\n    allow_credentials=True,\n    allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],\n    allow_headers=["Authorization", "Content-Type", "X-Custom-Header"],\n    expose_headers=["X-Total-Count", "X-Page-Number"],  # \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub178\ucd9c\ud560 \ud5e4\ub354\n    max_age=600,  # preflight \uce90\uc2dc \uc2dc\uac04\n)\n\n# OPTIONS \uc694\uccad \uba85\uc2dc\uc801 \ucc98\ub9ac (\ubbf8\ub4e4\uc6e8\uc5b4\uac00 \uc790\ub3d9 \ucc98\ub9ac\ud558\uc9c0\ub9cc \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5 \uac00\ub2a5)\n@app.options("/api/users")\nasync def options_users():\n    return Response(\n        status_code=200,\n        headers={\n            "Access-Control-Allow-Origin": "https://myapp.com",\n            "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE",\n            "Access-Control-Allow-Headers": "Authorization, Content-Type",\n        }\n    )\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\ud2b9\uc815-\uacbd\ub85c\ub9cc-cors-\ud5c8\uc6a9",children:"\ud2b9\uc815 \uacbd\ub85c\ub9cc CORS \ud5c8\uc6a9"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Request\nfrom fastapi.middleware.cors import CORSMiddleware\n\napp = FastAPI()\n\n# API \ub77c\uc6b0\ud130\uc5d0\ub9cc CORS \uc801\uc6a9\nfrom fastapi import APIRouter\n\napi_router = APIRouter(prefix="/api")\n\n# API \ub77c\uc6b0\ud130 \uc124\uc815\n@api_router.get("/users")\nasync def get_users():\n    return []\n\napp.include_router(api_router)\n\n# CORS \ubbf8\ub4e4\uc6e8\uc5b4\ub294 \uc804\uccb4 \uc571\uc5d0 \uc801\uc6a9\ub418\uc9c0\ub9cc, \uacbd\ub85c \uae30\ubc18 \uc81c\uc5b4\ub3c4 \uac00\ub2a5\n@app.middleware("http")\nasync def cors_specific_paths(request: Request, call_next):\n    response = await call_next(request)\n\n    # /api/* \uacbd\ub85c\ub9cc CORS \ud5c8\uc6a9\n    if request.url.path.startswith("/api/"):\n        response.headers["Access-Control-Allow-Origin"] = "*"\n        response.headers["Access-Control-Allow-Credentials"] = "true"\n\n    return response\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"CORS \ubcf4\uc548 \uace0\ub824\uc0ac\ud56d",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["\ud504\ub85c\ub355\uc158\uc5d0\uc11c ",(0,r.jsx)(n.code,{children:"*"})," \uae08\uc9c0"]}),": \ud2b9\uc815 \ub3c4\uba54\uc778\ub9cc \uba85\uc2dc\uc801\uc73c\ub85c \ud5c8\uc6a9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Credentials \uc8fc\uc758"}),": ",(0,r.jsx)(n.code,{children:"allow_credentials=True"})," \uc0ac\uc6a9 \uc2dc ",(0,r.jsx)(n.code,{children:'allow_origins=["*"]'})," \ubd88\uac00"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud544\uc694\ud55c \uba54\uc11c\ub4dc\ub9cc"}),": \uc2e4\uc81c \uc0ac\uc6a9\ud558\ub294 HTTP \uba54\uc11c\ub4dc\ub9cc \ud5c8\uc6a9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud5e4\ub354 \uc81c\ud55c"}),": \ud544\uc694\ud55c \ud5e4\ub354\ub9cc \ud5c8\uc6a9\ud558\uc5ec \uacf5\uaca9 \ud45c\uba74 \ucd5c\uc18c\ud654"]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"313-\uc2e4\uc2b5-\ubb38\uc81c",children:"3.13 \uc2e4\uc2b5 \ubb38\uc81c"}),"\n",(0,r.jsx)(n.h3,{id:"\ubb38\uc81c-1-\uc644\uc804\ud55c-crud-api-\uad6c\ud604",children:"\ubb38\uc81c 1: \uc644\uc804\ud55c CRUD API \uad6c\ud604"}),"\n",(0,r.jsx)(n.p,{children:"\ube14\ub85c\uadf8 \uac8c\uc2dc\uae00\uc744 \uc704\ud55c \uc644\uc804\ud55c CRUD API\ub97c \uad6c\ud604\ud558\uc138\uc694."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\uc694\uad6c\uc0ac\ud56d"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pydantic \uc2a4\ud0a4\ub9c8 \uc815\uc758 (PostCreate, PostUpdate, PostResponse)"}),"\n",(0,r.jsx)(n.li,{children:"\ubaa8\ub4e0 CRUD \uc791\uc5c5 \uad6c\ud604 (\uc0dd\uc131, \uc870\ud68c, \uc218\uc815, \uc0ad\uc81c)"}),"\n",(0,r.jsx)(n.li,{children:"\uc801\uc808\ud55c \uc0c1\ud0dc \ucf54\ub4dc \uc0ac\uc6a9"}),"\n",(0,r.jsx)(n.li,{children:"\uc5d0\ub7ec \ucc98\ub9ac \ud3ec\ud568"}),"\n"]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"\ud574\ub2f5"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, HTTPException, status\nfrom pydantic import BaseModel, Field\nfrom typing import Optional, List\nfrom datetime import datetime\n\napp = FastAPI()\n\n# \uc2a4\ud0a4\ub9c8 \uc815\uc758\nclass PostBase(BaseModel):\n    title: str = Field(..., min_length=5, max_length=200)\n    content: str = Field(..., min_length=10)\n    published: bool = False\n\nclass PostCreate(PostBase):\n    pass\n\nclass PostUpdate(BaseModel):\n    title: Optional[str] = Field(None, min_length=5, max_length=200)\n    content: Optional[str] = Field(None, min_length=10)\n    published: Optional[bool] = None\n\nclass PostResponse(PostBase):\n    id: int\n    created_at: datetime\n    updated_at: datetime\n    views: int = 0\n\n    class Config:\n        orm_mode = True\n\n# \uc778\uba54\ubaa8\ub9ac \ub370\uc774\ud130\ubca0\uc774\uc2a4\nposts_db = {}\nnext_id = 1\n\n# CREATE\n@app.post("/posts", response_model=PostResponse, status_code=status.HTTP_201_CREATED)\nasync def create_post(post: PostCreate):\n    """\uc0c8 \uac8c\uc2dc\uae00 \uc0dd\uc131"""\n    global next_id\n\n    now = datetime.now()\n    post_dict = post.dict()\n    post_dict.update({\n        "id": next_id,\n        "created_at": now,\n        "updated_at": now,\n        "views": 0\n    })\n\n    posts_db[next_id] = post_dict\n    next_id += 1\n\n    return post_dict\n\n# READ (\uc804\uccb4)\n@app.get("/posts", response_model=List[PostResponse])\nasync def get_posts(\n    skip: int = 0,\n    limit: int = 10,\n    published_only: bool = False\n):\n    """\ubaa8\ub4e0 \uac8c\uc2dc\uae00 \uc870\ud68c"""\n    posts = list(posts_db.values())\n\n    if published_only:\n        posts = [p for p in posts if p["published"]]\n\n    return posts[skip:skip + limit]\n\n# READ (\ub2e8\uc77c)\n@app.get("/posts/{post_id}", response_model=PostResponse)\nasync def get_post(post_id: int):\n    """\ud2b9\uc815 \uac8c\uc2dc\uae00 \uc870\ud68c"""\n    if post_id not in posts_db:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=f"Post {post_id} not found"\n        )\n\n    # \uc870\ud68c\uc218 \uc99d\uac00\n    posts_db[post_id]["views"] += 1\n\n    return posts_db[post_id]\n\n# UPDATE\n@app.put("/posts/{post_id}", response_model=PostResponse)\nasync def update_post(post_id: int, post: PostUpdate):\n    """\uac8c\uc2dc\uae00 \uc218\uc815"""\n    if post_id not in posts_db:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=f"Post {post_id} not found"\n        )\n\n    # \uc5c5\ub370\uc774\ud2b8\ud560 \ud544\ub4dc\ub9cc \ubcc0\uacbd\n    update_data = post.dict(exclude_unset=True)\n    update_data["updated_at"] = datetime.now()\n\n    posts_db[post_id].update(update_data)\n\n    return posts_db[post_id]\n\n# DELETE\n@app.delete("/posts/{post_id}", status_code=status.HTTP_204_NO_CONTENT)\nasync def delete_post(post_id: int):\n    """\uac8c\uc2dc\uae00 \uc0ad\uc81c"""\n    if post_id not in posts_db:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=f"Post {post_id} not found"\n        )\n\n    del posts_db[post_id]\n    return None\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"\ubb38\uc81c-2-\ud398\uc774\uc9c0\ub124\uc774\uc158\uacfc-\ud544\ud130\ub9c1",children:"\ubb38\uc81c 2: \ud398\uc774\uc9c0\ub124\uc774\uc158\uacfc \ud544\ud130\ub9c1"}),"\n",(0,r.jsx)(n.p,{children:"\uac8c\uc2dc\uae00 \ubaa9\ub85d API\uc5d0 \ud398\uc774\uc9c0\ub124\uc774\uc158, \ud544\ud130\ub9c1, \uc815\ub82c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\uc138\uc694."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\uc694\uad6c\uc0ac\ud56d"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ud398\uc774\uc9c0 \ubc88\ud638\uc640 \ud06c\uae30\ub85c \ud398\uc774\uc9c0\ub124\uc774\uc158"}),"\n",(0,r.jsx)(n.li,{children:"\uc81c\ubaa9\uc73c\ub85c \uac80\uc0c9"}),"\n",(0,r.jsx)(n.li,{children:"published \uc0c1\ud0dc\ub85c \ud544\ud130\ub9c1"}),"\n",(0,r.jsx)(n.li,{children:"\uc0dd\uc131\uc77c, \uc870\ud68c\uc218\ub85c \uc815\ub82c"}),"\n",(0,r.jsx)(n.li,{children:"\ucd1d \uac1c\uc218, \ucd1d \ud398\uc774\uc9c0 \uc218 \ud3ec\ud568"}),"\n"]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"\ud574\ub2f5"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Query\nfrom pydantic import BaseModel\nfrom typing import List, Optional\nfrom enum import Enum\n\napp = FastAPI()\n\nclass SortField(str, Enum):\n    CREATED_AT = "created_at"\n    VIEWS = "views"\n    TITLE = "title"\n\nclass SortOrder(str, Enum):\n    ASC = "asc"\n    DESC = "desc"\n\nclass PaginatedPostsResponse(BaseModel):\n    items: List[PostResponse]\n    total: int\n    page: int\n    page_size: int\n    total_pages: int\n\n@app.get("/posts", response_model=PaginatedPostsResponse)\nasync def get_posts(\n    # \ud398\uc774\uc9c0\ub124\uc774\uc158\n    page: int = Query(1, ge=1, description="\ud398\uc774\uc9c0 \ubc88\ud638"),\n    page_size: int = Query(10, ge=1, le=100, description="\ud398\uc774\uc9c0 \ud06c\uae30"),\n\n    # \ud544\ud130\ub9c1\n    search: Optional[str] = Query(None, min_length=1, description="\uc81c\ubaa9 \uac80\uc0c9"),\n    published: Optional[bool] = Query(None, description="\uac8c\uc2dc \uc0c1\ud0dc \ud544\ud130"),\n\n    # \uc815\ub82c\n    sort_by: SortField = Query(SortField.CREATED_AT, description="\uc815\ub82c \ud544\ub4dc"),\n    order: SortOrder = Query(SortOrder.DESC, description="\uc815\ub82c \uc21c\uc11c")\n):\n    """\n    \ud398\uc774\uc9c0\ub124\uc774\uc158, \ud544\ud130\ub9c1, \uc815\ub82c\uc774 \uc801\uc6a9\ub41c \uac8c\uc2dc\uae00 \ubaa9\ub85d \uc870\ud68c\n\n    \uc608\uc81c:\n    - GET /posts?page=1&page_size=10\n    - GET /posts?search=fastapi&published=true\n    - GET /posts?sort_by=views&order=desc\n    """\n    # \uc804\uccb4 \uac8c\uc2dc\uae00 \uac00\uc838\uc624\uae30\n    posts = list(posts_db.values())\n\n    # \ud544\ud130\ub9c1\n    if search:\n        posts = [\n            p for p in posts\n            if search.lower() in p["title"].lower()\n        ]\n\n    if published is not None:\n        posts = [p for p in posts if p["published"] == published]\n\n    # \uc815\ub82c\n    reverse = (order == SortOrder.DESC)\n    posts.sort(key=lambda x: x[sort_by.value], reverse=reverse)\n\n    # \ucd1d \uac1c\uc218\n    total = len(posts)\n\n    # \ud398\uc774\uc9c0\ub124\uc774\uc158\n    start = (page - 1) * page_size\n    end = start + page_size\n    paginated_posts = posts[start:end]\n\n    # \ucd1d \ud398\uc774\uc9c0 \uc218\n    total_pages = (total + page_size - 1) // page_size\n\n    return PaginatedPostsResponse(\n        items=paginated_posts,\n        total=total,\n        page=page,\n        page_size=page_size,\n        total_pages=total_pages\n    )\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"\ubb38\uc81c-3-\ubcf5\uc7a1\ud55c-pydantic-\uac80\uc99d",children:"\ubb38\uc81c 3: \ubcf5\uc7a1\ud55c Pydantic \uac80\uc99d"}),"\n",(0,r.jsx)(n.p,{children:"\uc0ac\uc6a9\uc790 \ub4f1\ub85d API\ub97c \uad6c\ud604\ud558\ub418, \ub2e4\uc74c \uac80\uc99d\uc744 \ud3ec\ud568\ud558\uc138\uc694:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\uc774\uba54\uc77c \ud615\uc2dd \uac80\uc99d"}),"\n",(0,r.jsx)(n.li,{children:"\ube44\ubc00\ubc88\ud638 \uac15\ub3c4 \uac80\uc99d (8\uc790 \uc774\uc0c1, \ub300\ubb38\uc790, \uc18c\ubb38\uc790, \uc22b\uc790 \ud3ec\ud568)"}),"\n",(0,r.jsx)(n.li,{children:"\uc0ac\uc6a9\uc790\uba85 \ud615\uc2dd \uac80\uc99d (\uc601\ubb38\uc790, \uc22b\uc790, \uc5b8\ub354\uc2a4\ucf54\uc5b4\ub9cc, 3-20\uc790)"}),"\n",(0,r.jsx)(n.li,{children:"\uc0dd\ub144\uc6d4\uc77c \uac80\uc99d (13\uc138 \uc774\uc0c1)"}),"\n"]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"\ud574\ub2f5"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, HTTPException, status\nfrom pydantic import BaseModel, EmailStr, Field, validator\nfrom typing import Optional\nfrom datetime import date, datetime\nimport re\n\napp = FastAPI()\n\nclass UserRegister(BaseModel):\n    username: str = Field(..., min_length=3, max_length=20)\n    email: EmailStr\n    password: str = Field(..., min_length=8)\n    full_name: str\n    birth_date: date\n\n    @validator(\'username\')\n    def validate_username(cls, v):\n        """\uc601\ubb38\uc790, \uc22b\uc790, \uc5b8\ub354\uc2a4\ucf54\uc5b4\ub9cc \ud5c8\uc6a9"""\n        if not re.match(r\'^[a-zA-Z0-9_]+$\', v):\n            raise ValueError(\n                \'Username must contain only letters, numbers, and underscores\'\n            )\n        return v.lower()\n\n    @validator(\'password\')\n    def validate_password(cls, v):\n        """\ube44\ubc00\ubc88\ud638 \uac15\ub3c4 \uac80\uc99d"""\n        if not re.search(r\'[A-Z]\', v):\n            raise ValueError(\'Password must contain at least one uppercase letter\')\n\n        if not re.search(r\'[a-z]\', v):\n            raise ValueError(\'Password must contain at least one lowercase letter\')\n\n        if not re.search(r\'\\d\', v):\n            raise ValueError(\'Password must contain at least one digit\')\n\n        if not re.search(r\'[!@#$%^&*(),.?":{}|<>]\', v):\n            raise ValueError(\'Password must contain at least one special character\')\n\n        return v\n\n    @validator(\'birth_date\')\n    def validate_age(cls, v):\n        """13\uc138 \uc774\uc0c1 \uac80\uc99d"""\n        today = date.today()\n        age = today.year - v.year - ((today.month, today.day) < (v.month, v.day))\n\n        if age < 13:\n            raise ValueError(\'You must be at least 13 years old to register\')\n\n        if age > 120:\n            raise ValueError(\'Invalid birth date\')\n\n        return v\n\n    class Config:\n        schema_extra = {\n            "example": {\n                "username": "john_doe",\n                "email": "john@example.com",\n                "password": "SecurePass123!",\n                "full_name": "John Doe",\n                "birth_date": "1990-01-15"\n            }\n        }\n\nclass UserResponse(BaseModel):\n    id: int\n    username: str\n    email: str\n    full_name: str\n    birth_date: date\n    created_at: datetime\n\nusers_db = {}\nnext_user_id = 1\n\n@app.post("/register", response_model=UserResponse, status_code=status.HTTP_201_CREATED)\nasync def register_user(user: UserRegister):\n    """\n    \uc0c8 \uc0ac\uc6a9\uc790 \ub4f1\ub85d\n\n    \uac80\uc99d \uaddc\uce59:\n    - username: 3-20\uc790, \uc601\ubb38/\uc22b\uc790/\uc5b8\ub354\uc2a4\ucf54\uc5b4\ub9cc\n    - email: \uc720\ud6a8\ud55c \uc774\uba54\uc77c \ud615\uc2dd\n    - password: 8\uc790 \uc774\uc0c1, \ub300\ubb38\uc790/\uc18c\ubb38\uc790/\uc22b\uc790/\ud2b9\uc218\ubb38\uc790 \ud3ec\ud568\n    - birth_date: 13\uc138 \uc774\uc0c1\n    """\n    # \uc911\ubcf5 \ud655\uc778\n    for existing_user in users_db.values():\n        if existing_user["username"] == user.username:\n            raise HTTPException(\n                status_code=status.HTTP_400_BAD_REQUEST,\n                detail="Username already exists"\n            )\n        if existing_user["email"] == user.email:\n            raise HTTPException(\n                status_code=status.HTTP_400_BAD_REQUEST,\n                detail="Email already registered"\n            )\n\n    global next_user_id\n\n    # \uc0ac\uc6a9\uc790 \uc0dd\uc131 (\ube44\ubc00\ubc88\ud638\ub294 \ud574\uc2f1\ud574\uc57c \ud558\uc9c0\ub9cc \uc608\uc81c\uc5d0\uc11c\ub294 \uc0dd\ub7b5)\n    user_dict = user.dict()\n    del user_dict["password"]  # \uc751\ub2f5\uc5d0\uc11c \ube44\ubc00\ubc88\ud638 \uc81c\uc678\n\n    user_dict.update({\n        "id": next_user_id,\n        "created_at": datetime.now()\n    })\n\n    users_db[next_user_id] = user_dict\n    next_user_id += 1\n\n    return user_dict\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"\ubb38\uc81c-4-api-\ubc84\uc800\ub2dd",children:"\ubb38\uc81c 4: API \ubc84\uc800\ub2dd"}),"\n",(0,r.jsx)(n.p,{children:"\uc0ac\uc6a9\uc790 API\uc5d0 \ub300\ud574 v1\uacfc v2\ub97c \uad6c\ud604\ud558\uc138\uc694."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"v1: \uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc815\ubcf4 (id, username, email)"}),"\n",(0,r.jsx)(n.li,{children:"v2: \ud655\uc7a5\ub41c \uc815\ubcf4 (v1 + full_name, created_at, last_login)"}),"\n"]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"\ud574\ub2f5"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, APIRouter\nfrom pydantic import BaseModel, EmailStr\nfrom typing import List, Optional\nfrom datetime import datetime\n\napp = FastAPI()\n\n# V1 \uc2a4\ud0a4\ub9c8\nclass UserV1(BaseModel):\n    id: int\n    username: str\n    email: EmailStr\n\n# V2 \uc2a4\ud0a4\ub9c8\nclass UserV2(UserV1):\n    full_name: Optional[str] = None\n    created_at: datetime\n    last_login: Optional[datetime] = None\n\n# \uc0d8\ud50c \ub370\uc774\ud130\nusers_data = [\n    {\n        "id": 1,\n        "username": "john_doe",\n        "email": "john@example.com",\n        "full_name": "John Doe",\n        "created_at": datetime(2024, 1, 1),\n        "last_login": datetime(2025, 1, 15)\n    },\n    {\n        "id": 2,\n        "username": "jane_smith",\n        "email": "jane@example.com",\n        "full_name": "Jane Smith",\n        "created_at": datetime(2024, 2, 1),\n        "last_login": None\n    }\n]\n\n# V1 \ub77c\uc6b0\ud130\nrouter_v1 = APIRouter(prefix="/api/v1", tags=["v1"])\n\n@router_v1.get("/users", response_model=List[UserV1])\nasync def get_users_v1():\n    """V1: \uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc815\ubcf4\ub9cc \ubc18\ud658"""\n    return users_data\n\n@router_v1.get("/users/{user_id}", response_model=UserV1)\nasync def get_user_v1(user_id: int):\n    """V1: \ud2b9\uc815 \uc0ac\uc6a9\uc790 \uae30\ubcf8 \uc815\ubcf4"""\n    user = next((u for u in users_data if u["id"] == user_id), None)\n    if not user:\n        raise HTTPException(status_code=404, detail="User not found")\n    return user\n\n# V2 \ub77c\uc6b0\ud130\nrouter_v2 = APIRouter(prefix="/api/v2", tags=["v2"])\n\n@router_v2.get("/users", response_model=List[UserV2])\nasync def get_users_v2():\n    """V2: \ud655\uc7a5\ub41c \uc0ac\uc6a9\uc790 \uc815\ubcf4 \ubc18\ud658"""\n    return users_data\n\n@router_v2.get("/users/{user_id}", response_model=UserV2)\nasync def get_user_v2(user_id: int):\n    """V2: \ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc0c1\uc138 \uc815\ubcf4"""\n    user = next((u for u in users_data if u["id"] == user_id), None)\n    if not user:\n        raise HTTPException(status_code=404, detail="User not found")\n    return user\n\n# \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uac00\uc774\ub4dc \uc5d4\ub4dc\ud3ec\uc778\ud2b8\n@router_v1.get("/migration-guide", include_in_schema=True)\nasync def v1_migration_guide():\n    """\n    \u26a0\ufe0f V1 API\ub294 2025\ub144 12\uc6d4 31\uc77c\uc5d0 \ud3d0\uae30\ub429\ub2c8\ub2e4.\n\n    V2\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\uc138\uc694:\n    - GET /api/v2/users - \ud655\uc7a5\ub41c \uc0ac\uc6a9\uc790 \uc815\ubcf4 \ud3ec\ud568\n    - full_name, created_at, last_login \ud544\ub4dc \ucd94\uac00\n    """\n    return {\n        "message": "Please migrate to V2 API",\n        "sunset_date": "2025-12-31",\n        "v2_endpoint": "/api/v2/users",\n        "changes": [\n            "Added full_name field",\n            "Added created_at field",\n            "Added last_login field"\n        ]\n    }\n\n# \ub77c\uc6b0\ud130 \ub4f1\ub85d\napp.include_router(router_v1)\napp.include_router(router_v2)\n\n# \uae30\ubcf8 \ub9ac\ub514\ub809\uc158\n@app.get("/")\nasync def root():\n    return {\n        "message": "Welcome to the API",\n        "versions": {\n            "v1": "/api/v1/users",\n            "v2": "/api/v2/users (recommended)"\n        }\n    }\n'})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"\uc774 \ubb38\uc11c\uc5d0\uc11c FastAPI\ub97c \uc0ac\uc6a9\ud55c RESTful API \uc124\uacc4\uc758 \ud575\uc2ec \uac1c\ub150\uacfc \uc2e4\uc804 \ud328\ud134\uc744 \ud559\uc2b5\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\ub3d9\uc744 \ub2e4\ub8f9\ub2c8\ub2e4."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);