"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9318],{4908:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"devops/infrastructure-as-code","title":"Infrastructure as Code (IaC)","description":"Infrastructure as Code\ub294 \uc778\ud504\ub77c\ub97c \ucf54\ub4dc\ub85c \uad00\ub9ac\ud558\uace0 \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \ud604\ub300\uc801\uc778 DevOps \uc2e4\ucc9c \ubc29\ubc95\uc785\ub2c8\ub2e4.","source":"@site/docs/devops/infrastructure-as-code.md","sourceDirName":"devops","slug":"/devops/infrastructure-as-code","permalink":"/docs/devops/infrastructure-as-code","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/devops/infrastructure-as-code.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"devopsSidebar","previous":{"title":"\ubcf4\uc548 (Security)","permalink":"/docs/devops/security"}}');var t=r(4848),s=r(8453);const i={sidebar_position:12},o="Infrastructure as Code (IaC)",c={},l=[{value:"1. IaC \uac1c\ub150\uacfc \uc774\uc810",id:"1-iac-\uac1c\ub150\uacfc-\uc774\uc810",level:2},{value:"1.1 Infrastructure as Code\ub780?",id:"11-infrastructure-as-code\ub780",level:3},{value:"1.2 IaC\uc758 \uc774\uc810",id:"12-iac\uc758-\uc774\uc810",level:3},{value:"1.3 IaC \ub3c4\uad6c \ube44\uad50",id:"13-iac-\ub3c4\uad6c-\ube44\uad50",level:3},{value:"2. Terraform \uae30\ucd08",id:"2-terraform-\uae30\ucd08",level:2},{value:"2.1 Terraform \uc18c\uac1c",id:"21-terraform-\uc18c\uac1c",level:3},{value:"2.2 Terraform \uae30\ubcf8 \uad6c\uc870",id:"22-terraform-\uae30\ubcf8-\uad6c\uc870",level:3},{value:"2.3 Terraform \uc6cc\ud06c\ud50c\ub85c\uc6b0",id:"23-terraform-\uc6cc\ud06c\ud50c\ub85c\uc6b0",level:3},{value:"3. AWS \ud504\ub85c\ube44\uc800\ub2dd",id:"3-aws-\ud504\ub85c\ube44\uc800\ub2dd",level:2},{value:"3.1 EC2 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131",id:"31-ec2-\uc778\uc2a4\ud134\uc2a4-\uc0dd\uc131",level:3},{value:"3.2 S3 \ubc0f CloudFront \ubc30\ud3ec",id:"32-s3-\ubc0f-cloudfront-\ubc30\ud3ec",level:3},{value:"3.3 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4",id:"33-rds-\ub370\uc774\ud130\ubca0\uc774\uc2a4",level:3},{value:"4. GCP \ud504\ub85c\ube44\uc800\ub2dd",id:"4-gcp-\ud504\ub85c\ube44\uc800\ub2dd",level:2},{value:"4.1 GCP Provider \uc124\uc815",id:"41-gcp-provider-\uc124\uc815",level:3},{value:"4.2 GCE \uc778\uc2a4\ud134\uc2a4 \ubc0f \ub124\ud2b8\uc6cc\ud06c",id:"42-gce-\uc778\uc2a4\ud134\uc2a4-\ubc0f-\ub124\ud2b8\uc6cc\ud06c",level:3},{value:"4.3 GCS \ubc0f Cloud SQL",id:"43-gcs-\ubc0f-cloud-sql",level:3},{value:"5. Azure \ud504\ub85c\ube44\uc800\ub2dd",id:"5-azure-\ud504\ub85c\ube44\uc800\ub2dd",level:2},{value:"5.1 Azure Provider \uc124\uc815",id:"51-azure-provider-\uc124\uc815",level:3},{value:"5.2 Virtual Machine \ubc0f \ub124\ud2b8\uc6cc\ud06c",id:"52-virtual-machine-\ubc0f-\ub124\ud2b8\uc6cc\ud06c",level:3},{value:"6. Ansible \uc124\uc815 \uad00\ub9ac",id:"6-ansible-\uc124\uc815-\uad00\ub9ac",level:2},{value:"6.1 Ansible \uc18c\uac1c",id:"61-ansible-\uc18c\uac1c",level:3},{value:"6.2 \uc778\ubca4\ud1a0\ub9ac \ud30c\uc77c",id:"62-\uc778\ubca4\ud1a0\ub9ac-\ud30c\uc77c",level:3},{value:"6.3 Playbook \uc791\uc131",id:"63-playbook-\uc791\uc131",level:3},{value:"6.4 \uc5ed\ud560(Roles) \uad6c\uc870",id:"64-\uc5ed\ud560roles-\uad6c\uc870",level:3},{value:"6.5 \uace0\uae09 Ansible \uae30\ub2a5",id:"65-\uace0\uae09-ansible-\uae30\ub2a5",level:3},{value:"7. AWS CloudFormation",id:"7-aws-cloudformation",level:2},{value:"7.1 CloudFormation \uae30\ubcf8",id:"71-cloudformation-\uae30\ubcf8",level:3},{value:"7.2 CloudFormation \uc2a4\ud0dd \uad00\ub9ac",id:"72-cloudformation-\uc2a4\ud0dd-\uad00\ub9ac",level:3},{value:"7.3 \uc911\ucca9 \uc2a4\ud0dd",id:"73-\uc911\ucca9-\uc2a4\ud0dd",level:3},{value:"8. Pulumi",id:"8-pulumi",level:2},{value:"8.1 Pulumi \uc18c\uac1c",id:"81-pulumi-\uc18c\uac1c",level:3},{value:"8.2 TypeScript\ub85c AWS \uc778\ud504\ub77c \uad00\ub9ac",id:"82-typescript\ub85c-aws-\uc778\ud504\ub77c-\uad00\ub9ac",level:3},{value:"8.3 Python\uc73c\ub85c GCP \uc778\ud504\ub77c \uad00\ub9ac",id:"83-python\uc73c\ub85c-gcp-\uc778\ud504\ub77c-\uad00\ub9ac",level:3},{value:"9. \uc0c1\ud0dc \uad00\ub9ac",id:"9-\uc0c1\ud0dc-\uad00\ub9ac",level:2},{value:"9.1 Terraform \uc0c1\ud0dc \ud30c\uc77c",id:"91-terraform-\uc0c1\ud0dc-\ud30c\uc77c",level:3},{value:"9.2 \uc6d0\uaca9 \uc0c1\ud0dc \uad00\ub9ac",id:"92-\uc6d0\uaca9-\uc0c1\ud0dc-\uad00\ub9ac",level:3},{value:"9.3 \uc0c1\ud0dc \uc7a0\uae08",id:"93-\uc0c1\ud0dc-\uc7a0\uae08",level:3},{value:"10. \ubaa8\ub4c8\ud654",id:"10-\ubaa8\ub4c8\ud654",level:2},{value:"10.1 Terraform \ubaa8\ub4c8",id:"101-terraform-\ubaa8\ub4c8",level:3},{value:"10.2 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4c8 \uc124\uacc4",id:"102-\uc7ac\uc0ac\uc6a9-\uac00\ub2a5\ud55c-\ubaa8\ub4c8-\uc124\uacc4",level:3},{value:"11. \ubaa8\ubc94 \uc0ac\ub840",id:"11-\ubaa8\ubc94-\uc0ac\ub840",level:2},{value:"11.1 \ucf54\ub4dc \uad6c\uc870",id:"111-\ucf54\ub4dc-\uad6c\uc870",level:3},{value:"11.2 \uba85\uba85 \uaddc\uce59",id:"112-\uba85\uba85-\uaddc\uce59",level:3},{value:"11.3 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840",id:"113-\ubcf4\uc548-\ubaa8\ubc94-\uc0ac\ub840",level:3},{value:"11.4 \ubc84\uc804 \uad00\ub9ac",id:"114-\ubc84\uc804-\uad00\ub9ac",level:3},{value:"11.5 \ud14c\uc2a4\ud2b8 \ubc0f \uac80\uc99d",id:"115-\ud14c\uc2a4\ud2b8-\ubc0f-\uac80\uc99d",level:3},{value:"11.6 \ubb38\uc11c\ud654",id:"116-\ubb38\uc11c\ud654",level:3},{value:"11.7 CI/CD \ud1b5\ud569",id:"117-cicd-\ud1b5\ud569",level:3},{value:"12. \uc694\uc57d",id:"12-\uc694\uc57d",level:2}];function d(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"infrastructure-as-code-iac",children:"Infrastructure as Code (IaC)"})}),"\n",(0,t.jsx)(e.p,{children:"Infrastructure as Code\ub294 \uc778\ud504\ub77c\ub97c \ucf54\ub4dc\ub85c \uad00\ub9ac\ud558\uace0 \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \ud604\ub300\uc801\uc778 DevOps \uc2e4\ucc9c \ubc29\ubc95\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.h2,{id:"1-iac-\uac1c\ub150\uacfc-\uc774\uc810",children:"1. IaC \uac1c\ub150\uacfc \uc774\uc810"}),"\n",(0,t.jsx)(e.h3,{id:"11-infrastructure-as-code\ub780",children:"1.1 Infrastructure as Code\ub780?"}),"\n",(0,t.jsx)(e.p,{children:"Infrastructure as Code(IaC)\ub294 \uc778\ud504\ub77c \uad6c\uc131\uc744 \ucf54\ub4dc \ud615\ud0dc\ub85c \uc815\uc758\ud558\uace0 \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\ub860\uc785\ub2c8\ub2e4. \uc218\ub3d9 \ud504\ub85c\uc138\uc2a4 \ub300\uc2e0 \ucf54\ub4dc\ub97c \ud1b5\ud574 \uc778\ud504\ub77c\ub97c \uc790\ub3d9\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uace0 \uad00\ub9ac\ud569\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ud575\uc2ec \ud2b9\uc9d5:"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc120\uc5b8\uc801 \ubc29\uc2dd"}),": \uc6d0\ud558\ub294 \ucd5c\uc885 \uc0c1\ud0dc\ub97c \uc815\uc758"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uba85\ub839\uc801 \ubc29\uc2dd"}),": \ubaa9\ud45c \ub2ec\uc131\uc744 \uc704\ud55c \ub2e8\uacc4\ubcc4 \uba85\ub839 \uc815\uc758"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubc84\uc804 \uad00\ub9ac"}),": Git\uc744 \ud1b5\ud55c \uc778\ud504\ub77c \ubcc0\uacbd \uc774\ub825 \ucd94\uc801"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc7ac\uc0ac\uc6a9\uc131"}),": \ubaa8\ub4c8\ud654\ub97c \ud1b5\ud55c \ucf54\ub4dc \uc7ac\uc0ac\uc6a9"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"12-iac\uc758-\uc774\uc810",children:"1.2 IaC\uc758 \uc774\uc810"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc77c\uad00\uc131\uacfc \ud45c\uc900\ud654"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"# \ub3d9\uc77c\ud55c \ud658\uacbd\uc744 \ubc18\ubcf5\uc801\uc73c\ub85c \uc0dd\uc131\nenvironments:\n  - development\n  - staging\n  - production\n# \ubaa8\ub4e0 \ud658\uacbd\uc774 \ub3d9\uc77c\ud55c \uad6c\uc131 \ud15c\ud50c\ub9bf \uc0ac\uc6a9\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc8fc\uc694 \uc774\uc810:"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubc18\ubcf5 \uac00\ub2a5\uc131"}),": \ub3d9\uc77c\ud55c \ud658\uacbd\uc744 \uc5ec\ub7ec \ubc88 \uc0dd\uc131"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc18d\ub3c4"}),": \uc218\ub3d9 \uc791\uc5c5 \ub300\ube44 \ube60\ub978 \ud504\ub85c\ube44\uc800\ub2dd"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ube44\uc6a9 \uc808\uac10"}),": \uc790\ub3d9\ud654\ub97c \ud1b5\ud55c \uc778\uac74\ube44 \uac10\uc18c"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc704\ud5d8 \uac10\uc18c"}),": \uc218\ub3d9 \uc624\ub958 \uc81c\uac70"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubb38\uc11c\ud654"}),": \ucf54\ub4dc \uc790\uccb4\uac00 \ubb38\uc11c \uc5ed\ud560"]}),"\n"]}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"IaC\ub97c \ub3c4\uc785\ud558\uba74 \uc778\ud504\ub77c \ud504\ub85c\ube44\uc800\ub2dd \uc2dc\uac04\uc744 \uba87 \uc2dc\uac04\uc5d0\uc11c \uba87 \ubd84\uc73c\ub85c \ub2e8\ucd95\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."})}),"\n",(0,t.jsx)(e.h3,{id:"13-iac-\ub3c4\uad6c-\ube44\uad50",children:"1.3 IaC \ub3c4\uad6c \ube44\uad50"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"\ub3c4\uad6c"}),(0,t.jsx)(e.th,{children:"\uc811\uadfc \ubc29\uc2dd"}),(0,t.jsx)(e.th,{children:"\uc5b8\uc5b4"}),(0,t.jsx)(e.th,{children:"\ud074\ub77c\uc6b0\ub4dc \uc9c0\uc6d0"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Terraform"}),(0,t.jsx)(e.td,{children:"\uc120\uc5b8\uc801"}),(0,t.jsx)(e.td,{children:"HCL"}),(0,t.jsx)(e.td,{children:"\uba40\ud2f0 \ud074\ub77c\uc6b0\ub4dc"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Ansible"}),(0,t.jsx)(e.td,{children:"\uba85\ub839\uc801/\uc120\uc5b8\uc801"}),(0,t.jsx)(e.td,{children:"YAML"}),(0,t.jsx)(e.td,{children:"\uba40\ud2f0 \ud074\ub77c\uc6b0\ub4dc"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"CloudFormation"}),(0,t.jsx)(e.td,{children:"\uc120\uc5b8\uc801"}),(0,t.jsx)(e.td,{children:"JSON/YAML"}),(0,t.jsx)(e.td,{children:"AWS \uc804\uc6a9"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Pulumi"}),(0,t.jsx)(e.td,{children:"\uc120\uc5b8\uc801"}),(0,t.jsx)(e.td,{children:"\ubc94\uc6a9 \uc5b8\uc5b4"}),(0,t.jsx)(e.td,{children:"\uba40\ud2f0 \ud074\ub77c\uc6b0\ub4dc"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Chef"}),(0,t.jsx)(e.td,{children:"\uba85\ub839\uc801"}),(0,t.jsx)(e.td,{children:"Ruby DSL"}),(0,t.jsx)(e.td,{children:"\uba40\ud2f0 \ud074\ub77c\uc6b0\ub4dc"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Puppet"}),(0,t.jsx)(e.td,{children:"\uc120\uc5b8\uc801"}),(0,t.jsx)(e.td,{children:"Puppet DSL"}),(0,t.jsx)(e.td,{children:"\uba40\ud2f0 \ud074\ub77c\uc6b0\ub4dc"})]})]})]}),"\n",(0,t.jsx)(e.h2,{id:"2-terraform-\uae30\ucd08",children:"2. Terraform \uae30\ucd08"}),"\n",(0,t.jsx)(e.h3,{id:"21-terraform-\uc18c\uac1c",children:"2.1 Terraform \uc18c\uac1c"}),"\n",(0,t.jsx)(e.p,{children:"Terraform\uc740 HashiCorp\uc5d0\uc11c \uac1c\ubc1c\ud55c \uc624\ud508\uc18c\uc2a4 IaC \ub3c4\uad6c\ub85c, \uc120\uc5b8\uc801 \uad6c\uc131 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\ud504\ub77c\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Terraform \uc124\uce58:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'# Windows (Chocolatey)\nchoco install terraform\n\n# macOS (Homebrew)\nbrew install terraform\n\n# Linux (Ubuntu/Debian)\nwget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update && sudo apt install terraform\n\n# \uc124\uce58 \ud655\uc778\nterraform version\n'})}),"\n",(0,t.jsx)(e.h3,{id:"22-terraform-\uae30\ubcf8-\uad6c\uc870",children:"2.2 Terraform \uae30\ubcf8 \uad6c\uc870"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["\uae30\ubcf8 \uad6c\uc131 \ud30c\uc77c (",(0,t.jsx)(e.code,{children:"main.tf"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# Provider \uc124\uc815\nterraform {\n  required_version = ">= 1.0"\n  required_providers {\n    aws = {\n      source  = "hashicorp/aws"\n      version = "~> 5.0"\n    }\n  }\n}\n\nprovider "aws" {\n  region = var.aws_region\n\n  default_tags {\n    tags = {\n      Environment = var.environment\n      ManagedBy   = "Terraform"\n    }\n  }\n}\n\n# \ubcc0\uc218 \uc815\uc758\nvariable "aws_region" {\n  description = "AWS \ub9ac\uc804"\n  type        = string\n  default     = "ap-northeast-2"\n}\n\nvariable "environment" {\n  description = "\ud658\uacbd \uc774\ub984"\n  type        = string\n  default     = "development"\n}\n\n# \ub9ac\uc18c\uc2a4 \uc815\uc758\nresource "aws_vpc" "main" {\n  cidr_block           = "10.0.0.0/16"\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n\n  tags = {\n    Name = "${var.environment}-vpc"\n  }\n}\n\nresource "aws_subnet" "public" {\n  count             = 2\n  vpc_id            = aws_vpc.main.id\n  cidr_block        = "10.0.${count.index}.0/24"\n  availability_zone = data.aws_availability_zones.available.names[count.index]\n\n  tags = {\n    Name = "${var.environment}-public-subnet-${count.index + 1}"\n  }\n}\n\n# \ub370\uc774\ud130 \uc18c\uc2a4\ndata "aws_availability_zones" "available" {\n  state = "available"\n}\n\n# \ucd9c\ub825\noutput "vpc_id" {\n  description = "VPC ID"\n  value       = aws_vpc.main.id\n}\n\noutput "public_subnet_ids" {\n  description = "\uacf5\uc6a9 \uc11c\ube0c\ub137 ID \ubaa9\ub85d"\n  value       = aws_subnet.public[*].id\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"23-terraform-\uc6cc\ud06c\ud50c\ub85c\uc6b0",children:"2.3 Terraform \uc6cc\ud06c\ud50c\ub85c\uc6b0"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uae30\ubcf8 \uba85\ub839\uc5b4:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# 1. \ucd08\uae30\ud654 - Provider \ubc0f \ubaa8\ub4c8 \ub2e4\uc6b4\ub85c\ub4dc\nterraform init\n\n# 2. \ud615\uc2dd \uac80\uc99d \ubc0f \uc790\ub3d9 \ud3ec\ub9f7\ud305\nterraform fmt\n\n# 3. \uad6c\uc131 \uc720\ud6a8\uc131 \uac80\uc99d\nterraform validate\n\n# 4. \uc2e4\ud589 \uacc4\ud68d \ud655\uc778\nterraform plan\n\n# 5. \ubcc0\uacbd \uc0ac\ud56d \uc801\uc6a9\nterraform apply\n\n# 6. \ub9ac\uc18c\uc2a4 \uc815\ubcf4 \uc870\ud68c\nterraform show\n\n# 7. \ucd9c\ub825 \uac12 \ud655\uc778\nterraform output\n\n# 8. \ub9ac\uc18c\uc2a4 \uc81c\uac70\nterraform destroy\n\n# 9. \uc0c1\ud0dc \ud655\uc778\nterraform state list\nterraform state show <resource_name>\n"})}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"terraform apply"})," \uc2e4\ud589 \uc804 \ubc18\ub4dc\uc2dc ",(0,t.jsx)(e.code,{children:"terraform plan"}),"\uc73c\ub85c \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud655\uc778\ud558\uc138\uc694. \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c\ub294 \uc790\ub3d9 \uc2b9\uc778(",(0,t.jsx)(e.code,{children:"-auto-approve"}),")\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694."]})}),"\n",(0,t.jsx)(e.h2,{id:"3-aws-\ud504\ub85c\ube44\uc800\ub2dd",children:"3. AWS \ud504\ub85c\ube44\uc800\ub2dd"}),"\n",(0,t.jsx)(e.h3,{id:"31-ec2-\uc778\uc2a4\ud134\uc2a4-\uc0dd\uc131",children:"3.1 EC2 \uc778\uc2a4\ud134\uc2a4 \uc0dd\uc131"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc644\uc804\ud55c EC2 \uc608\uc81c:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# variables.tf\nvariable "instance_type" {\n  description = "EC2 \uc778\uc2a4\ud134\uc2a4 \ud0c0\uc785"\n  type        = string\n  default     = "t3.micro"\n}\n\nvariable "key_name" {\n  description = "SSH \ud0a4 \ud398\uc5b4 \uc774\ub984"\n  type        = string\n}\n\n# main.tf\n# AMI \uc870\ud68c\ndata "aws_ami" "ubuntu" {\n  most_recent = true\n  owners      = ["099720109477"] # Canonical\n\n  filter {\n    name   = "name"\n    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]\n  }\n\n  filter {\n    name   = "virtualization-type"\n    values = ["hvm"]\n  }\n}\n\n# \ubcf4\uc548 \uadf8\ub8f9\nresource "aws_security_group" "web" {\n  name        = "${var.environment}-web-sg"\n  description = "\uc6f9 \uc11c\ubc84 \ubcf4\uc548 \uadf8\ub8f9"\n  vpc_id      = aws_vpc.main.id\n\n  ingress {\n    description = "HTTP"\n    from_port   = 80\n    to_port     = 80\n    protocol    = "tcp"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n\n  ingress {\n    description = "HTTPS"\n    from_port   = 443\n    to_port     = 443\n    protocol    = "tcp"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n\n  ingress {\n    description = "SSH"\n    from_port   = 22\n    to_port     = 22\n    protocol    = "tcp"\n    cidr_blocks = ["0.0.0.0/0"] # \uc2e4\uc81c \ud658\uacbd\uc5d0\uc11c\ub294 \ud2b9\uc815 IP\ub85c \uc81c\ud55c\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = "-1"\n    cidr_blocks = ["0.0.0.0/0"]\n  }\n\n  tags = {\n    Name = "${var.environment}-web-sg"\n  }\n}\n\n# EC2 \uc778\uc2a4\ud134\uc2a4\nresource "aws_instance" "web" {\n  ami           = data.aws_ami.ubuntu.id\n  instance_type = var.instance_type\n  subnet_id     = aws_subnet.public[0].id\n\n  vpc_security_group_ids = [aws_security_group.web.id]\n  key_name              = var.key_name\n\n  user_data = <<-EOF\n              #!/bin/bash\n              apt-get update\n              apt-get install -y nginx\n              systemctl start nginx\n              systemctl enable nginx\n              echo "<h1>Hello from Terraform!</h1>" > /var/www/html/index.html\n              EOF\n\n  root_block_device {\n    volume_size = 20\n    volume_type = "gp3"\n    encrypted   = true\n  }\n\n  metadata_options {\n    http_endpoint = "enabled"\n    http_tokens   = "required" # IMDSv2 \uac15\uc81c\n  }\n\n  tags = {\n    Name = "${var.environment}-web-server"\n  }\n}\n\n# Elastic IP\nresource "aws_eip" "web" {\n  instance = aws_instance.web.id\n  domain   = "vpc"\n\n  tags = {\n    Name = "${var.environment}-web-eip"\n  }\n}\n\noutput "instance_public_ip" {\n  description = "EC2 \uc778\uc2a4\ud134\uc2a4 \uacf5\uc778 IP"\n  value       = aws_eip.web.public_ip\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"32-s3-\ubc0f-cloudfront-\ubc30\ud3ec",children:"3.2 S3 \ubc0f CloudFront \ubc30\ud3ec"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc815\uc801 \uc6f9\uc0ac\uc774\ud2b8 \ud638\uc2a4\ud305:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# S3 \ubc84\ud0b7\nresource "aws_s3_bucket" "website" {\n  bucket = "${var.environment}-my-website-bucket"\n\n  tags = {\n    Name = "${var.environment}-website"\n  }\n}\n\n# \ubc84\ud0b7 \ubc84\uc800\ub2dd\nresource "aws_s3_bucket_versioning" "website" {\n  bucket = aws_s3_bucket.website.id\n\n  versioning_configuration {\n    status = "Enabled"\n  }\n}\n\n# \ubc84\ud0b7 \uc554\ud638\ud654\nresource "aws_s3_bucket_server_side_encryption_configuration" "website" {\n  bucket = aws_s3_bucket.website.id\n\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm = "AES256"\n    }\n  }\n}\n\n# CloudFront OAI\nresource "aws_cloudfront_origin_access_identity" "website" {\n  comment = "${var.environment} website OAI"\n}\n\n# S3 \ubc84\ud0b7 \uc815\ucc45\nresource "aws_s3_bucket_policy" "website" {\n  bucket = aws_s3_bucket.website.id\n\n  policy = jsonencode({\n    Version = "2012-10-17"\n    Statement = [\n      {\n        Sid    = "AllowCloudFrontOAI"\n        Effect = "Allow"\n        Principal = {\n          AWS = aws_cloudfront_origin_access_identity.website.iam_arn\n        }\n        Action   = "s3:GetObject"\n        Resource = "${aws_s3_bucket.website.arn}/*"\n      }\n    ]\n  })\n}\n\n# CloudFront \ubc30\ud3ec\nresource "aws_cloudfront_distribution" "website" {\n  enabled             = true\n  is_ipv6_enabled     = true\n  default_root_object = "index.html"\n  price_class         = "PriceClass_200"\n\n  origin {\n    domain_name = aws_s3_bucket.website.bucket_regional_domain_name\n    origin_id   = "S3-${aws_s3_bucket.website.id}"\n\n    s3_origin_config {\n      origin_access_identity = aws_cloudfront_origin_access_identity.website.cloudfront_access_identity_path\n    }\n  }\n\n  default_cache_behavior {\n    allowed_methods  = ["GET", "HEAD", "OPTIONS"]\n    cached_methods   = ["GET", "HEAD"]\n    target_origin_id = "S3-${aws_s3_bucket.website.id}"\n\n    forwarded_values {\n      query_string = false\n      cookies {\n        forward = "none"\n      }\n    }\n\n    viewer_protocol_policy = "redirect-to-https"\n    min_ttl                = 0\n    default_ttl            = 3600\n    max_ttl                = 86400\n    compress               = true\n  }\n\n  restrictions {\n    geo_restriction {\n      restriction_type = "none"\n    }\n  }\n\n  viewer_certificate {\n    cloudfront_default_certificate = true\n  }\n\n  tags = {\n    Name = "${var.environment}-website-cdn"\n  }\n}\n\noutput "cloudfront_domain_name" {\n  description = "CloudFront \ubc30\ud3ec \ub3c4\uba54\uc778"\n  value       = aws_cloudfront_distribution.website.domain_name\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"33-rds-\ub370\uc774\ud130\ubca0\uc774\uc2a4",children:"3.3 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"PostgreSQL RDS \uc778\uc2a4\ud134\uc2a4:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# DB \uc11c\ube0c\ub137 \uadf8\ub8f9\nresource "aws_db_subnet_group" "main" {\n  name       = "${var.environment}-db-subnet-group"\n  subnet_ids = aws_subnet.private[*].id\n\n  tags = {\n    Name = "${var.environment}-db-subnet-group"\n  }\n}\n\n# DB \ubcf4\uc548 \uadf8\ub8f9\nresource "aws_security_group" "database" {\n  name        = "${var.environment}-db-sg"\n  description = "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubcf4\uc548 \uadf8\ub8f9"\n  vpc_id      = aws_vpc.main.id\n\n  ingress {\n    description     = "PostgreSQL from web servers"\n    from_port       = 5432\n    to_port         = 5432\n    protocol        = "tcp"\n    security_groups = [aws_security_group.web.id]\n  }\n\n  tags = {\n    Name = "${var.environment}-db-sg"\n  }\n}\n\n# RDS \uc778\uc2a4\ud134\uc2a4\nresource "aws_db_instance" "main" {\n  identifier     = "${var.environment}-postgres-db"\n  engine         = "postgres"\n  engine_version = "15.4"\n  instance_class = "db.t3.micro"\n\n  allocated_storage     = 20\n  max_allocated_storage = 100\n  storage_type          = "gp3"\n  storage_encrypted     = true\n\n  db_name  = "myappdb"\n  username = var.db_username\n  password = var.db_password\n\n  db_subnet_group_name   = aws_db_subnet_group.main.name\n  vpc_security_group_ids = [aws_security_group.database.id]\n\n  backup_retention_period = 7\n  backup_window           = "03:00-04:00"\n  maintenance_window      = "mon:04:00-mon:05:00"\n\n  skip_final_snapshot       = var.environment != "production"\n  final_snapshot_identifier = var.environment == "production" ? "${var.environment}-final-snapshot-${formatdate("YYYY-MM-DD-hhmm", timestamp())}" : null\n\n  enabled_cloudwatch_logs_exports = ["postgresql", "upgrade"]\n\n  tags = {\n    Name = "${var.environment}-postgres-db"\n  }\n}\n\noutput "db_endpoint" {\n  description = "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8"\n  value       = aws_db_instance.main.endpoint\n  sensitive   = true\n}\n'})}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"\ubbfc\uac10\ud55c \uc815\ubcf4(\ube44\ubc00\ubc88\ud638, API \ud0a4 \ub4f1)\ub294 Terraform \ubcc0\uc218\uac00 \uc544\ub2cc AWS Secrets Manager\ub098 SSM Parameter Store\ub97c \uc0ac\uc6a9\ud558\uc138\uc694."})}),"\n",(0,t.jsx)(e.h2,{id:"4-gcp-\ud504\ub85c\ube44\uc800\ub2dd",children:"4. GCP \ud504\ub85c\ube44\uc800\ub2dd"}),"\n",(0,t.jsx)(e.h3,{id:"41-gcp-provider-\uc124\uc815",children:"4.1 GCP Provider \uc124\uc815"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  required_providers {\n    google = {\n      source  = "hashicorp/google"\n      version = "~> 5.0"\n    }\n  }\n}\n\nprovider "google" {\n  project = var.project_id\n  region  = var.region\n  zone    = var.zone\n}\n\nvariable "project_id" {\n  description = "GCP \ud504\ub85c\uc81d\ud2b8 ID"\n  type        = string\n}\n\nvariable "region" {\n  description = "GCP \ub9ac\uc804"\n  type        = string\n  default     = "asia-northeast3" # \uc11c\uc6b8\n}\n\nvariable "zone" {\n  description = "GCP \uc601\uc5ed"\n  type        = string\n  default     = "asia-northeast3-a"\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"42-gce-\uc778\uc2a4\ud134\uc2a4-\ubc0f-\ub124\ud2b8\uc6cc\ud06c",children:"4.2 GCE \uc778\uc2a4\ud134\uc2a4 \ubc0f \ub124\ud2b8\uc6cc\ud06c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# VPC \ub124\ud2b8\uc6cc\ud06c\nresource "google_compute_network" "vpc" {\n  name                    = "${var.environment}-vpc"\n  auto_create_subnetworks = false\n}\n\n# \uc11c\ube0c\ub137\nresource "google_compute_subnetwork" "subnet" {\n  name          = "${var.environment}-subnet"\n  ip_cidr_range = "10.0.1.0/24"\n  region        = var.region\n  network       = google_compute_network.vpc.id\n\n  log_config {\n    aggregation_interval = "INTERVAL_10_MIN"\n    flow_sampling        = 0.5\n    metadata             = "INCLUDE_ALL_METADATA"\n  }\n}\n\n# \ubc29\ud654\ubcbd \uaddc\uce59\nresource "google_compute_firewall" "allow_http" {\n  name    = "${var.environment}-allow-http"\n  network = google_compute_network.vpc.name\n\n  allow {\n    protocol = "tcp"\n    ports    = ["80", "443"]\n  }\n\n  source_ranges = ["0.0.0.0/0"]\n  target_tags   = ["web-server"]\n}\n\nresource "google_compute_firewall" "allow_ssh" {\n  name    = "${var.environment}-allow-ssh"\n  network = google_compute_network.vpc.name\n\n  allow {\n    protocol = "tcp"\n    ports    = ["22"]\n  }\n\n  source_ranges = ["0.0.0.0/0"] # \uc2e4\uc81c \ud658\uacbd\uc5d0\uc11c\ub294 \uc81c\ud55c \ud544\uc694\n  target_tags   = ["web-server"]\n}\n\n# \uace0\uc815 IP\nresource "google_compute_address" "static" {\n  name   = "${var.environment}-web-ip"\n  region = var.region\n}\n\n# \uc778\uc2a4\ud134\uc2a4 \ud15c\ud50c\ub9bf\nresource "google_compute_instance" "web" {\n  name         = "${var.environment}-web-instance"\n  machine_type = "e2-micro"\n  zone         = var.zone\n\n  tags = ["web-server"]\n\n  boot_disk {\n    initialize_params {\n      image = "ubuntu-os-cloud/ubuntu-2204-lts"\n      size  = 20\n      type  = "pd-standard"\n    }\n  }\n\n  network_interface {\n    subnetwork = google_compute_subnetwork.subnet.id\n\n    access_config {\n      nat_ip = google_compute_address.static.address\n    }\n  }\n\n  metadata_startup_script = <<-EOF\n    #!/bin/bash\n    apt-get update\n    apt-get install -y nginx\n    systemctl start nginx\n    echo "<h1>Hello from GCP!</h1>" > /var/www/html/index.html\n  EOF\n\n  service_account {\n    scopes = ["cloud-platform"]\n  }\n}\n\noutput "instance_ip" {\n  description = "\uc778\uc2a4\ud134\uc2a4 \uacf5\uc778 IP"\n  value       = google_compute_address.static.address\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"43-gcs-\ubc0f-cloud-sql",children:"4.3 GCS \ubc0f Cloud SQL"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# Cloud Storage \ubc84\ud0b7\nresource "google_storage_bucket" "data" {\n  name          = "${var.project_id}-${var.environment}-data"\n  location      = var.region\n  force_destroy = var.environment != "production"\n\n  uniform_bucket_level_access = true\n\n  versioning {\n    enabled = true\n  }\n\n  encryption {\n    default_kms_key_name = google_kms_crypto_key.bucket_key.id\n  }\n\n  lifecycle_rule {\n    condition {\n      age = 30\n    }\n    action {\n      type          = "SetStorageClass"\n      storage_class = "NEARLINE"\n    }\n  }\n\n  lifecycle_rule {\n    condition {\n      age = 90\n    }\n    action {\n      type          = "SetStorageClass"\n      storage_class = "COLDLINE"\n    }\n  }\n}\n\n# Cloud SQL \uc778\uc2a4\ud134\uc2a4\nresource "google_sql_database_instance" "main" {\n  name             = "${var.environment}-postgres"\n  database_version = "POSTGRES_15"\n  region           = var.region\n\n  settings {\n    tier              = "db-f1-micro"\n    availability_type = var.environment == "production" ? "REGIONAL" : "ZONAL"\n    disk_size         = 10\n    disk_type         = "PD_SSD"\n\n    backup_configuration {\n      enabled                        = true\n      start_time                     = "03:00"\n      point_in_time_recovery_enabled = true\n      transaction_log_retention_days = 7\n      backup_retention_settings {\n        retained_backups = 7\n      }\n    }\n\n    ip_configuration {\n      ipv4_enabled    = false\n      private_network = google_compute_network.vpc.id\n    }\n\n    database_flags {\n      name  = "max_connections"\n      value = "100"\n    }\n  }\n\n  deletion_protection = var.environment == "production"\n}\n\nresource "google_sql_database" "database" {\n  name     = "myapp"\n  instance = google_sql_database_instance.main.name\n}\n\nresource "google_sql_user" "user" {\n  name     = var.db_username\n  instance = google_sql_database_instance.main.name\n  password = var.db_password\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"5-azure-\ud504\ub85c\ube44\uc800\ub2dd",children:"5. Azure \ud504\ub85c\ube44\uc800\ub2dd"}),"\n",(0,t.jsx)(e.h3,{id:"51-azure-provider-\uc124\uc815",children:"5.1 Azure Provider \uc124\uc815"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  required_providers {\n    azurerm = {\n      source  = "hashicorp/azurerm"\n      version = "~> 3.0"\n    }\n  }\n}\n\nprovider "azurerm" {\n  features {\n    resource_group {\n      prevent_deletion_if_contains_resources = true\n    }\n  }\n}\n\nvariable "location" {\n  description = "Azure \ub9ac\uc804"\n  type        = string\n  default     = "koreacentral"\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"52-virtual-machine-\ubc0f-\ub124\ud2b8\uc6cc\ud06c",children:"5.2 Virtual Machine \ubc0f \ub124\ud2b8\uc6cc\ud06c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# \ub9ac\uc18c\uc2a4 \uadf8\ub8f9\nresource "azurerm_resource_group" "main" {\n  name     = "${var.environment}-resources"\n  location = var.location\n\n  tags = {\n    Environment = var.environment\n    ManagedBy   = "Terraform"\n  }\n}\n\n# \uac00\uc0c1 \ub124\ud2b8\uc6cc\ud06c\nresource "azurerm_virtual_network" "main" {\n  name                = "${var.environment}-vnet"\n  address_space       = ["10.0.0.0/16"]\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n}\n\n# \uc11c\ube0c\ub137\nresource "azurerm_subnet" "internal" {\n  name                 = "${var.environment}-internal"\n  resource_group_name  = azurerm_resource_group.main.name\n  virtual_network_name = azurerm_virtual_network.main.name\n  address_prefixes     = ["10.0.2.0/24"]\n}\n\n# \uacf5\uc778 IP\nresource "azurerm_public_ip" "main" {\n  name                = "${var.environment}-public-ip"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  allocation_method   = "Static"\n  sku                 = "Standard"\n}\n\n# \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uadf8\ub8f9\nresource "azurerm_network_security_group" "main" {\n  name                = "${var.environment}-nsg"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  security_rule {\n    name                       = "HTTP"\n    priority                   = 100\n    direction                  = "Inbound"\n    access                     = "Allow"\n    protocol                   = "Tcp"\n    source_port_range          = "*"\n    destination_port_range     = "80"\n    source_address_prefix      = "*"\n    destination_address_prefix = "*"\n  }\n\n  security_rule {\n    name                       = "HTTPS"\n    priority                   = 110\n    direction                  = "Inbound"\n    access                     = "Allow"\n    protocol                   = "Tcp"\n    source_port_range          = "*"\n    destination_port_range     = "443"\n    source_address_prefix      = "*"\n    destination_address_prefix = "*"\n  }\n\n  security_rule {\n    name                       = "SSH"\n    priority                   = 120\n    direction                  = "Inbound"\n    access                     = "Allow"\n    protocol                   = "Tcp"\n    source_port_range          = "*"\n    destination_port_range     = "22"\n    source_address_prefix      = "*"\n    destination_address_prefix = "*"\n  }\n}\n\n# \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\nresource "azurerm_network_interface" "main" {\n  name                = "${var.environment}-nic"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n\n  ip_configuration {\n    name                          = "internal"\n    subnet_id                     = azurerm_subnet.internal.id\n    private_ip_address_allocation = "Dynamic"\n    public_ip_address_id          = azurerm_public_ip.main.id\n  }\n}\n\nresource "azurerm_network_interface_security_group_association" "main" {\n  network_interface_id      = azurerm_network_interface.main.id\n  network_security_group_id = azurerm_network_security_group.main.id\n}\n\n# \uac00\uc0c1 \uba38\uc2e0\nresource "azurerm_linux_virtual_machine" "main" {\n  name                = "${var.environment}-vm"\n  resource_group_name = azurerm_resource_group.main.name\n  location            = azurerm_resource_group.main.location\n  size                = "Standard_B1s"\n  admin_username      = "azureuser"\n\n  network_interface_ids = [\n    azurerm_network_interface.main.id,\n  ]\n\n  admin_ssh_key {\n    username   = "azureuser"\n    public_key = file("~/.ssh/id_rsa.pub")\n  }\n\n  os_disk {\n    caching              = "ReadWrite"\n    storage_account_type = "Standard_LRS"\n  }\n\n  source_image_reference {\n    publisher = "Canonical"\n    offer     = "0001-com-ubuntu-server-jammy"\n    sku       = "22_04-lts-gen2"\n    version   = "latest"\n  }\n\n  custom_data = base64encode(<<-EOF\n    #!/bin/bash\n    apt-get update\n    apt-get install -y nginx\n    systemctl start nginx\n    echo "<h1>Hello from Azure!</h1>" > /var/www/html/index.html\n  EOF\n  )\n}\n\noutput "public_ip_address" {\n  description = "VM \uacf5\uc778 IP \uc8fc\uc18c"\n  value       = azurerm_public_ip.main.ip_address\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"6-ansible-\uc124\uc815-\uad00\ub9ac",children:"6. Ansible \uc124\uc815 \uad00\ub9ac"}),"\n",(0,t.jsx)(e.h3,{id:"61-ansible-\uc18c\uac1c",children:"6.1 Ansible \uc18c\uac1c"}),"\n",(0,t.jsx)(e.p,{children:"Ansible\uc740 \uad6c\uc131 \uad00\ub9ac, \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec, \ud0dc\uc2a4\ud06c \uc790\ub3d9\ud654\ub97c \uc704\ud55c \uc624\ud508\uc18c\uc2a4 \ub3c4\uad6c\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Ansible \uc124\uce58:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt update\nsudo apt install -y ansible\n\n# macOS\nbrew install ansible\n\n# Python pip\npip install ansible\n\n# \uc124\uce58 \ud655\uc778\nansible --version\n"})}),"\n",(0,t.jsx)(e.h3,{id:"62-\uc778\ubca4\ud1a0\ub9ac-\ud30c\uc77c",children:"6.2 \uc778\ubca4\ud1a0\ub9ac \ud30c\uc77c"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["\uc815\uc801 \uc778\ubca4\ud1a0\ub9ac (",(0,t.jsx)(e.code,{children:"inventory/hosts.ini"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ini",children:"# \ub2e8\uc77c \ud638\uc2a4\ud2b8\n[web]\nweb1.example.com\n\n# \uc5ec\ub7ec \ud638\uc2a4\ud2b8\n[app]\napp1.example.com\napp2.example.com\napp3.example.com\n\n# \ud638\uc2a4\ud2b8 \ubcc0\uc218\n[db]\ndb1.example.com ansible_host=10.0.1.10 ansible_user=admin\n\n# \uadf8\ub8f9 \ubcc0\uc218\n[web:vars]\nhttp_port=80\nmax_clients=200\n\n# \uc911\ucca9 \uadf8\ub8f9\n[production:children]\nweb\napp\ndb\n\n[production:vars]\nenv=production\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ub3d9\uc801 \uc778\ubca4\ud1a0\ub9ac (AWS EC2):"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"# inventory/aws_ec2.yml\nplugin: aws_ec2\nregions:\n  - ap-northeast-2\nfilters:\n  tag:Environment: production\n  instance-state-name: running\nkeyed_groups:\n  - key: tags.Role\n    prefix: role\n  - key: placement.availability_zone\n    prefix: az\nhostnames:\n  - tag:Name\ncompose:\n  ansible_host: public_ip_address\n"})}),"\n",(0,t.jsx)(e.h3,{id:"63-playbook-\uc791\uc131",children:"6.3 Playbook \uc791\uc131"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["\uc6f9 \uc11c\ubc84 \uad6c\uc131 (",(0,t.jsx)(e.code,{children:"playbooks/webserver.yml"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'---\n- name: \uc6f9 \uc11c\ubc84 \uad6c\uc131\n  hosts: web\n  become: yes\n  vars:\n    nginx_port: 80\n    app_user: www-data\n    document_root: /var/www/html\n\n  tasks:\n    - name: \uc2dc\uc2a4\ud15c \uc5c5\ub370\uc774\ud2b8\n      apt:\n        update_cache: yes\n        cache_valid_time: 3600\n\n    - name: Nginx \uc124\uce58\n      apt:\n        name: nginx\n        state: present\n\n    - name: UFW \ubc29\ud654\ubcbd \uc124\uc815\n      ufw:\n        rule: allow\n        port: "{{ item }}"\n        proto: tcp\n      loop:\n        - "22"\n        - "80"\n        - "443"\n\n    - name: Nginx \uc124\uc815 \ud30c\uc77c \ubc30\ud3ec\n      template:\n        src: templates/nginx.conf.j2\n        dest: /etc/nginx/sites-available/default\n        owner: root\n        group: root\n        mode: \'0644\'\n      notify: Reload Nginx\n\n    - name: \uc6f9\uc0ac\uc774\ud2b8 \ub514\ub809\ud1a0\ub9ac \uc0dd\uc131\n      file:\n        path: "{{ document_root }}"\n        state: directory\n        owner: "{{ app_user }}"\n        group: "{{ app_user }}"\n        mode: \'0755\'\n\n    - name: index.html \ubc30\ud3ec\n      copy:\n        src: files/index.html\n        dest: "{{ document_root }}/index.html"\n        owner: "{{ app_user }}"\n        group: "{{ app_user }}"\n        mode: \'0644\'\n\n    - name: Nginx \uc11c\ube44\uc2a4 \uc2dc\uc791 \ubc0f \ud65c\uc131\ud654\n      systemd:\n        name: nginx\n        state: started\n        enabled: yes\n\n    - name: \uc11c\ube44\uc2a4 \uc0c1\ud0dc \ud655\uc778\n      systemd:\n        name: nginx\n        state: started\n      register: nginx_status\n\n    - name: \uc11c\ube44\uc2a4 \uc0c1\ud0dc \ucd9c\ub825\n      debug:\n        msg: "Nginx is {{ nginx_status.status.ActiveState }}"\n\n  handlers:\n    - name: Reload Nginx\n      systemd:\n        name: nginx\n        state: reloaded\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["\ud15c\ud50c\ub9bf \ud30c\uc77c (",(0,t.jsx)(e.code,{children:"templates/nginx.conf.j2"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-nginx",children:'server {\n    listen {{ nginx_port }} default_server;\n    listen [::]:{{ nginx_port }} default_server;\n\n    root {{ document_root }};\n    index index.html index.htm;\n\n    server_name {{ ansible_fqdn }};\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    # \ubcf4\uc548 \ud5e4\ub354\n    add_header X-Frame-Options "SAMEORIGIN" always;\n    add_header X-Content-Type-Options "nosniff" always;\n    add_header X-XSS-Protection "1; mode=block" always;\n\n    # \ub85c\uadf8 \uc124\uc815\n    access_log /var/log/nginx/{{ ansible_hostname }}_access.log;\n    error_log /var/log/nginx/{{ ansible_hostname }}_error.log;\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"64-\uc5ed\ud560roles-\uad6c\uc870",children:"6.4 \uc5ed\ud560(Roles) \uad6c\uc870"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc5ed\ud560 \ub514\ub809\ud1a0\ub9ac \uad6c\uc870:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"roles/\n\u2514\u2500\u2500 nginx/\n    \u251c\u2500\u2500 tasks/\n    \u2502   \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 handlers/\n    \u2502   \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 templates/\n    \u2502   \u2514\u2500\u2500 nginx.conf.j2\n    \u251c\u2500\u2500 files/\n    \u251c\u2500\u2500 vars/\n    \u2502   \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 defaults/\n    \u2502   \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 meta/\n        \u2514\u2500\u2500 main.yml\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc5ed\ud560 \uc0ac\uc6a9 \uc608\uc81c:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"---\n- name: \uc6f9 \uc11c\ubc84 \ubc30\ud3ec\n  hosts: web\n  become: yes\n  roles:\n    - common\n    - nginx\n    - ssl-certificate\n    - monitoring\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["\uc5ed\ud560 tasks (",(0,t.jsx)(e.code,{children:"roles/nginx/tasks/main.yml"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"---\n- name: Nginx \ud328\ud0a4\uc9c0 \uc124\uce58\n  apt:\n    name: nginx\n    state: present\n    update_cache: yes\n\n- name: Nginx \uc124\uc815 \ubc30\ud3ec\n  template:\n    src: nginx.conf.j2\n    dest: /etc/nginx/nginx.conf\n  notify: restart nginx\n\n- name: Nginx \uc2dc\uc791\n  service:\n    name: nginx\n    state: started\n    enabled: yes\n"})}),"\n",(0,t.jsx)(e.h3,{id:"65-\uace0\uae09-ansible-\uae30\ub2a5",children:"6.5 \uace0\uae09 Ansible \uae30\ub2a5"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc870\uac74\ubb38\uacfc \ub8e8\ud504:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'---\n- name: \uc870\uac74\ubd80 \ud328\ud0a4\uc9c0 \uc124\uce58\n  hosts: all\n  become: yes\n  tasks:\n    - name: RedHat \uacc4\uc5f4 \ud328\ud0a4\uc9c0 \uc124\uce58\n      yum:\n        name: "{{ item }}"\n        state: present\n      loop:\n        - httpd\n        - mod_ssl\n      when: ansible_os_family == "RedHat"\n\n    - name: Debian \uacc4\uc5f4 \ud328\ud0a4\uc9c0 \uc124\uce58\n      apt:\n        name: "{{ item }}"\n        state: present\n      loop:\n        - apache2\n        - ssl-cert\n      when: ansible_os_family == "Debian"\n\n    - name: \ud504\ub85c\ub355\uc158 \ud658\uacbd \uc124\uc815\n      template:\n        src: prod.conf.j2\n        dest: /etc/app/config.conf\n      when: environment == "production"\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ube14\ub85d\uacfc \uc5d0\ub7ec \ucc98\ub9ac:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'---\n- name: \uc5d0\ub7ec \ucc98\ub9ac \uc608\uc81c\n  hosts: web\n  tasks:\n    - name: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc791\uc5c5 \ube14\ub85d\n      block:\n        - name: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc31\uc5c5\n          shell: pg_dump mydb > /backup/mydb.sql\n\n        - name: \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5c5\uadf8\ub808\uc774\ub4dc\n          shell: psql mydb < /tmp/upgrade.sql\n\n      rescue:\n        - name: \ubc31\uc5c5\uc5d0\uc11c \ubcf5\uc6d0\n          shell: psql mydb < /backup/mydb.sql\n\n        - name: \uad00\ub9ac\uc790\uc5d0\uac8c \uc54c\ub9bc\n          mail:\n            to: admin@example.com\n            subject: "Database upgrade failed"\n            body: "Check server {{ ansible_hostname }}"\n\n      always:\n        - name: \uc784\uc2dc \ud30c\uc77c \uc815\ub9ac\n          file:\n            path: /tmp/upgrade.sql\n            state: absent\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Vault\ub97c \uc0ac\uc6a9\ud55c \ube44\ubc00 \uad00\ub9ac:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Vault \ud30c\uc77c \uc0dd\uc131\nansible-vault create secrets.yml\n\n# Vault \ud30c\uc77c \ud3b8\uc9d1\nansible-vault edit secrets.yml\n\n# \uc554\ud638\ud654\ub41c \ubcc0\uc218 \uc0ac\uc6a9\nansible-playbook playbook.yml --ask-vault-pass\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"secrets.yml (\uc554\ud638\ud654\ub428):"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'---\ndb_password: "SuperSecretPassword123!"\napi_key: "sk-1234567890abcdef"\nssl_certificate_key: |\n  -----BEGIN PRIVATE KEY-----\n  ...\n  -----END PRIVATE KEY-----\n'})}),"\n",(0,t.jsx)(e.h2,{id:"7-aws-cloudformation",children:"7. AWS CloudFormation"}),"\n",(0,t.jsx)(e.h3,{id:"71-cloudformation-\uae30\ubcf8",children:"7.1 CloudFormation \uae30\ubcf8"}),"\n",(0,t.jsx)(e.p,{children:"CloudFormation\uc740 AWS \uc778\ud504\ub77c\ub97c JSON \ub610\ub294 YAML \ud15c\ud50c\ub9bf\uc73c\ub85c \uc815\uc758\ud558\uace0 \uad00\ub9ac\ud558\ub294 AWS \ub124\uc774\ud2f0\ube0c IaC \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uae30\ubcf8 \ud15c\ud50c\ub9bf \uad6c\uc870:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"AWSTemplateFormatVersion: '2010-09-09'\nDescription: 'VPC \ubc0f EC2 \uc778\uc2a4\ud134\uc2a4 \uc2a4\ud0dd'\n\nParameters:\n  EnvironmentName:\n    Description: \ud658\uacbd \uc774\ub984\n    Type: String\n    Default: development\n    AllowedValues:\n      - development\n      - staging\n      - production\n\n  InstanceType:\n    Description: EC2 \uc778\uc2a4\ud134\uc2a4 \ud0c0\uc785\n    Type: String\n    Default: t3.micro\n    AllowedValues:\n      - t3.micro\n      - t3.small\n      - t3.medium\n\n  KeyName:\n    Description: EC2 \ud0a4 \ud398\uc5b4 \uc774\ub984\n    Type: AWS::EC2::KeyPair::KeyName\n\nMappings:\n  RegionMap:\n    ap-northeast-2:\n      AMI: ami-0c9c942bd7bf113a2\n    us-east-1:\n      AMI: ami-0c55b159cbfafe1f0\n\nConditions:\n  IsProduction: !Equals [!Ref EnvironmentName, production]\n\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: 10.0.0.0/16\n      EnableDnsHostnames: true\n      EnableDnsSupport: true\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName}-vpc\n\n  InternetGateway:\n    Type: AWS::EC2::InternetGateway\n    Properties:\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName}-igw\n\n  AttachGateway:\n    Type: AWS::EC2::VPCGatewayAttachment\n    Properties:\n      VpcId: !Ref VPC\n      InternetGatewayId: !Ref InternetGateway\n\n  PublicSubnet:\n    Type: AWS::EC2::Subnet\n    Properties:\n      VpcId: !Ref VPC\n      CidrBlock: 10.0.1.0/24\n      AvailabilityZone: !Select [0, !GetAZs '']\n      MapPublicIpOnLaunch: true\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName}-public-subnet\n\n  PublicRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName}-public-rt\n\n  PublicRoute:\n    Type: AWS::EC2::Route\n    DependsOn: AttachGateway\n    Properties:\n      RouteTableId: !Ref PublicRouteTable\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n\n  SubnetRouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref PublicSubnet\n      RouteTableId: !Ref PublicRouteTable\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: \uc6f9 \uc11c\ubc84 \ubcf4\uc548 \uadf8\ub8f9\n      VpcId: !Ref VPC\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n        - IpProtocol: tcp\n          FromPort: 443\n          ToPort: 443\n          CidrIp: 0.0.0.0/0\n        - IpProtocol: tcp\n          FromPort: 22\n          ToPort: 22\n          CidrIp: 0.0.0.0/0\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName}-web-sg\n\n  WebServerInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType: !Ref InstanceType\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\n      KeyName: !Ref KeyName\n      SubnetId: !Ref PublicSubnet\n      SecurityGroupIds:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: !Sub |\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd\n          systemctl start httpd\n          systemctl enable httpd\n          echo \"<h1>Hello from ${EnvironmentName}</h1>\" > /var/www/html/index.html\n      Tags:\n        - Key: Name\n          Value: !Sub ${EnvironmentName}-web-server\n\nOutputs:\n  VPCId:\n    Description: VPC ID\n    Value: !Ref VPC\n    Export:\n      Name: !Sub ${EnvironmentName}-VPC-ID\n\n  PublicSubnetId:\n    Description: \uacf5\uc6a9 \uc11c\ube0c\ub137 ID\n    Value: !Ref PublicSubnet\n    Export:\n      Name: !Sub ${EnvironmentName}-PublicSubnet-ID\n\n  InstanceId:\n    Description: EC2 \uc778\uc2a4\ud134\uc2a4 ID\n    Value: !Ref WebServerInstance\n\n  InstancePublicIP:\n    Description: \uc778\uc2a4\ud134\uc2a4 \uacf5\uc778 IP\n    Value: !GetAtt WebServerInstance.PublicIp\n"})}),"\n",(0,t.jsx)(e.h3,{id:"72-cloudformation-\uc2a4\ud0dd-\uad00\ub9ac",children:"7.2 CloudFormation \uc2a4\ud0dd \uad00\ub9ac"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc2a4\ud0dd \uc0dd\uc131:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# \uc2a4\ud0dd \uc0dd\uc131\naws cloudformation create-stack \\\n  --stack-name my-web-stack \\\n  --template-body file://template.yaml \\\n  --parameters \\\n    ParameterKey=EnvironmentName,ParameterValue=production \\\n    ParameterKey=InstanceType,ParameterValue=t3.small \\\n    ParameterKey=KeyName,ParameterValue=my-key-pair\n\n# \uc2a4\ud0dd \uc0c1\ud0dc \ud655\uc778\naws cloudformation describe-stacks --stack-name my-web-stack\n\n# \uc2a4\ud0dd \uc5c5\ub370\uc774\ud2b8\naws cloudformation update-stack \\\n  --stack-name my-web-stack \\\n  --template-body file://template-updated.yaml \\\n  --parameters \\\n    ParameterKey=EnvironmentName,UsePreviousValue=true \\\n    ParameterKey=InstanceType,ParameterValue=t3.medium\n\n# \ubcc0\uacbd \uc138\ud2b8 \uc0dd\uc131 (\ubbf8\ub9ac\ubcf4\uae30)\naws cloudformation create-change-set \\\n  --stack-name my-web-stack \\\n  --change-set-name my-changes \\\n  --template-body file://template-updated.yaml\n\n# \ubcc0\uacbd \uc138\ud2b8 \uc2e4\ud589\naws cloudformation execute-change-set \\\n  --change-set-name my-changes \\\n  --stack-name my-web-stack\n\n# \uc2a4\ud0dd \uc0ad\uc81c\naws cloudformation delete-stack --stack-name my-web-stack\n"})}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsxs)(e.p,{children:["CloudFormation \uc2a4\ud0dd\uc744 \uc0ad\uc81c\ud558\uba74 \uc2a4\ud0dd\uc758 \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\uac00 \uc81c\uac70\ub429\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c\ub294 \uc0ad\uc81c \ubcf4\ud638(",(0,t.jsx)(e.code,{children:"DeletionPolicy: Retain"}),")\ub97c \uc124\uc815\ud558\uc138\uc694."]})}),"\n",(0,t.jsx)(e.h3,{id:"73-\uc911\ucca9-\uc2a4\ud0dd",children:"7.3 \uc911\ucca9 \uc2a4\ud0dd"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ub9c8\uc2a4\ud130 \ud15c\ud50c\ub9bf:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"AWSTemplateFormatVersion: '2010-09-09'\nDescription: '\uc911\ucca9 \uc2a4\ud0dd \ub9c8\uc2a4\ud130 \ud15c\ud50c\ub9bf'\n\nParameters:\n  EnvironmentName:\n    Type: String\n    Default: production\n\nResources:\n  NetworkStack:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: https://s3.amazonaws.com/my-bucket/network.yaml\n      Parameters:\n        EnvironmentName: !Ref EnvironmentName\n      TimeoutInMinutes: 10\n\n  DatabaseStack:\n    Type: AWS::CloudFormation::Stack\n    DependsOn: NetworkStack\n    Properties:\n      TemplateURL: https://s3.amazonaws.com/my-bucket/database.yaml\n      Parameters:\n        EnvironmentName: !Ref EnvironmentName\n        VPCId: !GetAtt NetworkStack.Outputs.VPCId\n        SubnetIds: !GetAtt NetworkStack.Outputs.PrivateSubnetIds\n\n  ApplicationStack:\n    Type: AWS::CloudFormation::Stack\n    DependsOn:\n      - NetworkStack\n      - DatabaseStack\n    Properties:\n      TemplateURL: https://s3.amazonaws.com/my-bucket/application.yaml\n      Parameters:\n        EnvironmentName: !Ref EnvironmentName\n        VPCId: !GetAtt NetworkStack.Outputs.VPCId\n        DBEndpoint: !GetAtt DatabaseStack.Outputs.DBEndpoint\n\nOutputs:\n  ApplicationURL:\n    Description: \uc560\ud50c\ub9ac\ucf00\uc774\uc158 URL\n    Value: !GetAtt ApplicationStack.Outputs.LoadBalancerURL\n"})}),"\n",(0,t.jsx)(e.h2,{id:"8-pulumi",children:"8. Pulumi"}),"\n",(0,t.jsx)(e.h3,{id:"81-pulumi-\uc18c\uac1c",children:"8.1 Pulumi \uc18c\uac1c"}),"\n",(0,t.jsx)(e.p,{children:"Pulumi\ub294 TypeScript, Python, Go, C# \ub4f1 \ubc94\uc6a9 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\ud504\ub77c\ub97c \uc815\uc758\ud558\ub294 \ud604\ub300\uc801\uc778 IaC \ud50c\ub7ab\ud3fc\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Pulumi \uc124\uce58:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# macOS\nbrew install pulumi\n\n# Windows\nchoco install pulumi\n\n# Linux\ncurl -fsSL https://get.pulumi.com | sh\n\n# \uc124\uce58 \ud655\uc778\npulumi version\n"})}),"\n",(0,t.jsx)(e.h3,{id:"82-typescript\ub85c-aws-\uc778\ud504\ub77c-\uad00\ub9ac",children:"8.2 TypeScript\ub85c AWS \uc778\ud504\ub77c \uad00\ub9ac"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ud504\ub85c\uc81d\ud2b8 \ucd08\uae30\ud654:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# \uc0c8 \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131\npulumi new aws-typescript\n\n# \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\n# \u251c\u2500\u2500 Pulumi.yaml\n# \u251c\u2500\u2500 Pulumi.dev.yaml\n# \u251c\u2500\u2500 index.ts\n# \u251c\u2500\u2500 package.json\n# \u2514\u2500\u2500 tsconfig.json\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"index.ts:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:'import * as pulumi from "@pulumi/pulumi";\nimport * as aws from "@pulumi/aws";\n\n// \uad6c\uc131 \uac12 \uac00\uc838\uc624\uae30\nconst config = new pulumi.Config();\nconst environment = config.get("environment") || "dev";\nconst instanceType = config.get("instanceType") || "t3.micro";\n\n// VPC \uc0dd\uc131\nconst vpc = new aws.ec2.Vpc(`${environment}-vpc`, {\n    cidrBlock: "10.0.0.0/16",\n    enableDnsHostnames: true,\n    enableDnsSupport: true,\n    tags: {\n        Name: `${environment}-vpc`,\n        Environment: environment,\n    },\n});\n\n// \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\nconst igw = new aws.ec2.InternetGateway(`${environment}-igw`, {\n    vpcId: vpc.id,\n    tags: {\n        Name: `${environment}-igw`,\n    },\n});\n\n// \uacf5\uc6a9 \uc11c\ube0c\ub137\nconst publicSubnet = new aws.ec2.Subnet(`${environment}-public-subnet`, {\n    vpcId: vpc.id,\n    cidrBlock: "10.0.1.0/24",\n    availabilityZone: "ap-northeast-2a",\n    mapPublicIpOnLaunch: true,\n    tags: {\n        Name: `${environment}-public-subnet`,\n    },\n});\n\n// \ub77c\uc6b0\ud305 \ud14c\uc774\ube14\nconst routeTable = new aws.ec2.RouteTable(`${environment}-rt`, {\n    vpcId: vpc.id,\n    routes: [\n        {\n            cidrBlock: "0.0.0.0/0",\n            gatewayId: igw.id,\n        },\n    ],\n    tags: {\n        Name: `${environment}-public-rt`,\n    },\n});\n\n// \ub77c\uc6b0\ud305 \ud14c\uc774\ube14 \uc5f0\uacb0\nconst routeTableAssociation = new aws.ec2.RouteTableAssociation(\n    `${environment}-rta`,\n    {\n        subnetId: publicSubnet.id,\n        routeTableId: routeTable.id,\n    }\n);\n\n// \ubcf4\uc548 \uadf8\ub8f9\nconst securityGroup = new aws.ec2.SecurityGroup(`${environment}-web-sg`, {\n    vpcId: vpc.id,\n    description: "\uc6f9 \uc11c\ubc84 \ubcf4\uc548 \uadf8\ub8f9",\n    ingress: [\n        {\n            protocol: "tcp",\n            fromPort: 80,\n            toPort: 80,\n            cidrBlocks: ["0.0.0.0/0"],\n            description: "HTTP",\n        },\n        {\n            protocol: "tcp",\n            fromPort: 443,\n            toPort: 443,\n            cidrBlocks: ["0.0.0.0/0"],\n            description: "HTTPS",\n        },\n        {\n            protocol: "tcp",\n            fromPort: 22,\n            toPort: 22,\n            cidrBlocks: ["0.0.0.0/0"],\n            description: "SSH",\n        },\n    ],\n    egress: [\n        {\n            protocol: "-1",\n            fromPort: 0,\n            toPort: 0,\n            cidrBlocks: ["0.0.0.0/0"],\n        },\n    ],\n    tags: {\n        Name: `${environment}-web-sg`,\n    },\n});\n\n// AMI \uc870\ud68c\nconst ami = aws.ec2.getAmi({\n    mostRecent: true,\n    owners: ["099720109477"], // Canonical\n    filters: [\n        {\n            name: "name",\n            values: ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"],\n        },\n        {\n            name: "virtualization-type",\n            values: ["hvm"],\n        },\n    ],\n});\n\n// \uc0ac\uc6a9\uc790 \ub370\uc774\ud130 \uc2a4\ud06c\ub9bd\ud2b8\nconst userData = `#!/bin/bash\napt-get update\napt-get install -y nginx\nsystemctl start nginx\nsystemctl enable nginx\necho "<h1>Hello from Pulumi on ${environment}!</h1>" > /var/www/html/index.html\n`;\n\n// EC2 \uc778\uc2a4\ud134\uc2a4\nconst server = new aws.ec2.Instance(`${environment}-web-server`, {\n    instanceType: instanceType,\n    ami: ami.then(ami => ami.id),\n    subnetId: publicSubnet.id,\n    vpcSecurityGroupIds: [securityGroup.id],\n    userData: userData,\n    tags: {\n        Name: `${environment}-web-server`,\n    },\n});\n\n// Elastic IP\nconst eip = new aws.ec2.Eip(`${environment}-eip`, {\n    instance: server.id,\n    domain: "vpc",\n    tags: {\n        Name: `${environment}-web-eip`,\n    },\n});\n\n// \ucd9c\ub825\nexport const vpcId = vpc.id;\nexport const publicIp = eip.publicIp;\nexport const serverUrl = pulumi.interpolate`http://${eip.publicIp}`;\n'})}),"\n",(0,t.jsx)(e.h3,{id:"83-python\uc73c\ub85c-gcp-\uc778\ud504\ub77c-\uad00\ub9ac",children:"8.3 Python\uc73c\ub85c GCP \uc778\ud504\ub77c \uad00\ub9ac"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:[(0,t.jsx)(e.strong,{children:"main"}),".py:"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'import pulumi\nimport pulumi_gcp as gcp\n\n# \uad6c\uc131\nconfig = pulumi.Config()\nproject = config.require("gcp:project")\nregion = config.get("region") or "asia-northeast3"\nenvironment = config.get("environment") or "dev"\n\n# VPC \ub124\ud2b8\uc6cc\ud06c\nnetwork = gcp.compute.Network(\n    f"{environment}-network",\n    auto_create_subnetworks=False,\n    description=f"{environment} VPC network",\n)\n\n# \uc11c\ube0c\ub137\nsubnet = gcp.compute.Subnetwork(\n    f"{environment}-subnet",\n    ip_cidr_range="10.0.1.0/24",\n    region=region,\n    network=network.id,\n)\n\n# \ubc29\ud654\ubcbd \uaddc\uce59\nfirewall = gcp.compute.Firewall(\n    f"{environment}-firewall",\n    network=network.self_link,\n    allows=[\n        gcp.compute.FirewallAllowArgs(\n            protocol="tcp",\n            ports=["22", "80", "443"],\n        )\n    ],\n    source_ranges=["0.0.0.0/0"],\n    target_tags=["web-server"],\n)\n\n# \uace0\uc815 IP\nstatic_ip = gcp.compute.Address(\n    f"{environment}-ip",\n    region=region,\n)\n\n# \uc2dc\uc791 \uc2a4\ud06c\ub9bd\ud2b8\nstartup_script = """#!/bin/bash\napt-get update\napt-get install -y nginx\nsystemctl start nginx\necho \'<h1>Hello from Pulumi on GCP!</h1>\' > /var/www/html/index.html\n"""\n\n# \uc778\uc2a4\ud134\uc2a4\ninstance = gcp.compute.Instance(\n    f"{environment}-instance",\n    machine_type="e2-micro",\n    zone=f"{region}-a",\n    tags=["web-server"],\n    boot_disk=gcp.compute.InstanceBootDiskArgs(\n        initialize_params=gcp.compute.InstanceBootDiskInitializeParamsArgs(\n            image="ubuntu-os-cloud/ubuntu-2204-lts",\n            size=20,\n        ),\n    ),\n    network_interfaces=[\n        gcp.compute.InstanceNetworkInterfaceArgs(\n            network=network.id,\n            subnetwork=subnet.id,\n            access_configs=[\n                gcp.compute.InstanceNetworkInterfaceAccessConfigArgs(\n                    nat_ip=static_ip.address,\n                )\n            ],\n        )\n    ],\n    metadata_startup_script=startup_script,\n    service_account=gcp.compute.InstanceServiceAccountArgs(\n        scopes=["https://www.googleapis.com/auth/cloud-platform"],\n    ),\n)\n\n# \ucd9c\ub825\npulumi.export("instance_name", instance.name)\npulumi.export("instance_ip", static_ip.address)\npulumi.export("instance_url", static_ip.address.apply(lambda ip: f"http://{ip}"))\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Pulumi \uba85\ub839\uc5b4:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# \uc2a4\ud0dd \uc120\ud0dd\npulumi stack select dev\n\n# \uad6c\uc131 \uc124\uc815\npulumi config set gcp:project my-project-id\npulumi config set environment dev\n\n# \ubbf8\ub9ac\ubcf4\uae30\npulumi preview\n\n# \ubc30\ud3ec\npulumi up\n\n# \ucd9c\ub825 \ud655\uc778\npulumi stack output\n\n# \ub9ac\uc18c\uc2a4 \uc81c\uac70\npulumi destroy\n\n# \uc2a4\ud0dd \ud788\uc2a4\ud1a0\ub9ac\npulumi stack history\n"})}),"\n",(0,t.jsx)(e.h2,{id:"9-\uc0c1\ud0dc-\uad00\ub9ac",children:"9. \uc0c1\ud0dc \uad00\ub9ac"}),"\n",(0,t.jsx)(e.h3,{id:"91-terraform-\uc0c1\ud0dc-\ud30c\uc77c",children:"9.1 Terraform \uc0c1\ud0dc \ud30c\uc77c"}),"\n",(0,t.jsxs)(e.p,{children:["Terraform \uc0c1\ud0dc \ud30c\uc77c(",(0,t.jsx)(e.code,{children:"terraform.tfstate"}),")\uc740 \uad00\ub9ac\ub418\ub294 \uc778\ud504\ub77c\uc758 \ud604\uc7ac \uc0c1\ud0dc\ub97c \ucd94\uc801\ud569\ub2c8\ub2e4."]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ub85c\uceec \uc0c1\ud0dc \ubc31\uc5c5:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# \uc0c1\ud0dc \ubc31\uc5c5\ncp terraform.tfstate terraform.tfstate.backup\n\n# \uc0c1\ud0dc \ubaa9\ub85d \ubcf4\uae30\nterraform state list\n\n# \ud2b9\uc815 \ub9ac\uc18c\uc2a4 \uc0c1\ud0dc \ubcf4\uae30\nterraform state show aws_instance.web\n\n# \uc0c1\ud0dc\uc5d0\uc11c \ub9ac\uc18c\uc2a4 \uc81c\uac70 (\uc2e4\uc81c \ub9ac\uc18c\uc2a4\ub294 \uc720\uc9c0)\nterraform state rm aws_instance.web\n\n# \ub9ac\uc18c\uc2a4 \uc774\ub3d9/\uc774\ub984 \ubcc0\uacbd\nterraform state mv aws_instance.web aws_instance.web_server\n"})}),"\n",(0,t.jsx)(e.h3,{id:"92-\uc6d0\uaca9-\uc0c1\ud0dc-\uad00\ub9ac",children:"9.2 \uc6d0\uaca9 \uc0c1\ud0dc \uad00\ub9ac"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"S3 \ubc31\uc5d4\ub4dc \uc124\uc815:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  backend "s3" {\n    bucket         = "my-terraform-state-bucket"\n    key            = "production/terraform.tfstate"\n    region         = "ap-northeast-2"\n    encrypt        = true\n    dynamodb_table = "terraform-state-lock"\n\n    # \uc0c1\ud0dc \ud30c\uc77c \ubc84\uc800\ub2dd \ud65c\uc131\ud654\n    versioning = true\n  }\n}\n\n# DynamoDB \ud14c\uc774\ube14 \uc0dd\uc131 (\uc0c1\ud0dc \uc7a0\uae08\uc6a9)\nresource "aws_dynamodb_table" "terraform_state_lock" {\n  name           = "terraform-state-lock"\n  billing_mode   = "PAY_PER_REQUEST"\n  hash_key       = "LockID"\n\n  attribute {\n    name = "LockID"\n    type = "S"\n  }\n\n  tags = {\n    Name = "Terraform State Lock Table"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Terraform Cloud \ubc31\uc5d4\ub4dc:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  cloud {\n    organization = "my-organization"\n\n    workspaces {\n      name = "production-infrastructure"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"GCS \ubc31\uc5d4\ub4dc (Google Cloud Storage):"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  backend "gcs" {\n    bucket  = "my-terraform-state"\n    prefix  = "production/state"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Azure Blob Storage \ubc31\uc5d4\ub4dc:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  backend "azurerm" {\n    resource_group_name  = "terraform-state-rg"\n    storage_account_name = "terraformstate"\n    container_name       = "tfstate"\n    key                  = "production.terraform.tfstate"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"\uc6d0\uaca9 \uc0c1\ud0dc \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \ud300 \ud611\uc5c5\uc774 \uac00\ub2a5\ud558\uace0, \uc0c1\ud0dc \ud30c\uc77c\uc774 \uc548\uc804\ud558\uac8c \uc554\ud638\ud654\ub418\uba70, \ub3d9\uc2dc \uc2e4\ud589\uc744 \ubc29\uc9c0\ud558\ub294 \uc7a0\uae08 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."})}),"\n",(0,t.jsx)(e.h3,{id:"93-\uc0c1\ud0dc-\uc7a0\uae08",children:"9.3 \uc0c1\ud0dc \uc7a0\uae08"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ub3d9\uc2dc \uc2e4\ud589 \ubc29\uc9c0:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Terraform\uc740 \uc790\ub3d9\uc73c\ub85c \uc0c1\ud0dc\ub97c \uc7a0\uae09\ub2c8\ub2e4\nterraform apply\n\n# \uac15\uc81c \uc7a0\uae08 \ud574\uc81c (\uc8fc\uc758\ud574\uc11c \uc0ac\uc6a9)\nterraform force-unlock <lock-id>\n"})}),"\n",(0,t.jsx)(e.h2,{id:"10-\ubaa8\ub4c8\ud654",children:"10. \ubaa8\ub4c8\ud654"}),"\n",(0,t.jsx)(e.h3,{id:"101-terraform-\ubaa8\ub4c8",children:"10.1 Terraform \ubaa8\ub4c8"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ubaa8\ub4c8 \uad6c\uc870:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"modules/\n\u2514\u2500\u2500 vpc/\n    \u251c\u2500\u2500 main.tf\n    \u251c\u2500\u2500 variables.tf\n    \u251c\u2500\u2500 outputs.tf\n    \u2514\u2500\u2500 README.md\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["\ubaa8\ub4c8 \uc815\uc758 (",(0,t.jsx)(e.code,{children:"modules/vpc/main.tf"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'variable "vpc_cidr" {\n  description = "VPC CIDR \ube14\ub85d"\n  type        = string\n}\n\nvariable "environment" {\n  description = "\ud658\uacbd \uc774\ub984"\n  type        = string\n}\n\nvariable "availability_zones" {\n  description = "\uac00\uc6a9 \uc601\uc5ed \ubaa9\ub85d"\n  type        = list(string)\n}\n\nresource "aws_vpc" "main" {\n  cidr_block           = var.vpc_cidr\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n\n  tags = {\n    Name        = "${var.environment}-vpc"\n    Environment = var.environment\n  }\n}\n\nresource "aws_subnet" "public" {\n  count             = length(var.availability_zones)\n  vpc_id            = aws_vpc.main.id\n  cidr_block        = cidrsubnet(var.vpc_cidr, 8, count.index)\n  availability_zone = var.availability_zones[count.index]\n\n  tags = {\n    Name = "${var.environment}-public-${count.index + 1}"\n  }\n}\n\nresource "aws_internet_gateway" "main" {\n  vpc_id = aws_vpc.main.id\n\n  tags = {\n    Name = "${var.environment}-igw"\n  }\n}\n\noutput "vpc_id" {\n  description = "VPC ID"\n  value       = aws_vpc.main.id\n}\n\noutput "public_subnet_ids" {\n  description = "\uacf5\uc6a9 \uc11c\ube0c\ub137 ID \ubaa9\ub85d"\n  value       = aws_subnet.public[*].id\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ubaa8\ub4c8 \uc0ac\uc6a9:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'module "vpc" {\n  source = "./modules/vpc"\n\n  vpc_cidr           = "10.0.0.0/16"\n  environment        = "production"\n  availability_zones = ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]\n}\n\n# \ubaa8\ub4c8 \ucd9c\ub825 \ucc38\uc870\nresource "aws_instance" "web" {\n  subnet_id = module.vpc.public_subnet_ids[0]\n  # ...\n}\n\noutput "vpc_id" {\n  value = module.vpc.vpc_id\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Terraform Registry \ubaa8\ub4c8 \uc0ac\uc6a9:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'module "vpc" {\n  source  = "terraform-aws-modules/vpc/aws"\n  version = "5.1.0"\n\n  name = "my-vpc"\n  cidr = "10.0.0.0/16"\n\n  azs             = ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]\n  private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]\n  public_subnets  = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]\n\n  enable_nat_gateway = true\n  enable_vpn_gateway = false\n\n  tags = {\n    Environment = "production"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"102-\uc7ac\uc0ac\uc6a9-\uac00\ub2a5\ud55c-\ubaa8\ub4c8-\uc124\uacc4",children:"10.2 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4c8 \uc124\uacc4"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc785\ub825 \ubcc0\uc218 \uac80\uc99d:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'variable "instance_type" {\n  description = "EC2 \uc778\uc2a4\ud134\uc2a4 \ud0c0\uc785"\n  type        = string\n\n  validation {\n    condition     = can(regex("^t3\\\\.", var.instance_type))\n    error_message = "\uc778\uc2a4\ud134\uc2a4 \ud0c0\uc785\uc740 t3 \uacc4\uc5f4\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4."\n  }\n}\n\nvariable "environment" {\n  description = "\ud658\uacbd \uc774\ub984"\n  type        = string\n\n  validation {\n    condition     = contains(["dev", "staging", "production"], var.environment)\n    error_message = "\ud658\uacbd\uc740 dev, staging, production \uc911 \ud558\ub098\uc5ec\uc57c \ud569\ub2c8\ub2e4."\n  }\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ub3d9\uc801 \ube14\ub85d:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'variable "ingress_rules" {\n  description = "\uc778\uadf8\ub808\uc2a4 \uaddc\uce59 \ubaa9\ub85d"\n  type = list(object({\n    from_port   = number\n    to_port     = number\n    protocol    = string\n    cidr_blocks = list(string)\n    description = string\n  }))\n}\n\nresource "aws_security_group" "main" {\n  name   = "${var.environment}-sg"\n  vpc_id = var.vpc_id\n\n  dynamic "ingress" {\n    for_each = var.ingress_rules\n    content {\n      from_port   = ingress.value.from_port\n      to_port     = ingress.value.to_port\n      protocol    = ingress.value.protocol\n      cidr_blocks = ingress.value.cidr_blocks\n      description = ingress.value.description\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"11-\ubaa8\ubc94-\uc0ac\ub840",children:"11. \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,t.jsx)(e.h3,{id:"111-\ucf54\ub4dc-\uad6c\uc870",children:"11.1 \ucf54\ub4dc \uad6c\uc870"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uad8c\uc7a5 \ub514\ub809\ud1a0\ub9ac \uad6c\uc870:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"terraform/\n\u251c\u2500\u2500 environments/\n\u2502   \u251c\u2500\u2500 dev/\n\u2502   \u2502   \u251c\u2500\u2500 main.tf\n\u2502   \u2502   \u251c\u2500\u2500 variables.tf\n\u2502   \u2502   \u251c\u2500\u2500 terraform.tfvars\n\u2502   \u2502   \u2514\u2500\u2500 backend.tf\n\u2502   \u251c\u2500\u2500 staging/\n\u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 production/\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 modules/\n\u2502   \u251c\u2500\u2500 vpc/\n\u2502   \u251c\u2500\u2500 ec2/\n\u2502   \u251c\u2500\u2500 rds/\n\u2502   \u2514\u2500\u2500 s3/\n\u251c\u2500\u2500 global/\n\u2502   \u251c\u2500\u2500 iam/\n\u2502   \u2514\u2500\u2500 route53/\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,t.jsx)(e.h3,{id:"112-\uba85\uba85-\uaddc\uce59",children:"11.2 \uba85\uba85 \uaddc\uce59"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc77c\uad00\ub41c \ub9ac\uc18c\uc2a4 \uba85\uba85:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# \ud328\ud134: {environment}-{service}-{resource_type}\nresource "aws_instance" "web" {\n  tags = {\n    Name = "${var.environment}-webapp-server"\n  }\n}\n\nresource "aws_s3_bucket" "logs" {\n  bucket = "${var.environment}-${var.project_name}-logs"\n}\n\n# \ub9ac\uc18c\uc2a4 \uc774\ub984\uc5d0 \uce74\uc6b4\ud2b8 \ub610\ub294 \uc778\ub371\uc2a4 \ud3ec\ud568\nresource "aws_subnet" "private" {\n  count = 3\n  tags = {\n    Name = "${var.environment}-private-subnet-${count.index + 1}"\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"113-\ubcf4\uc548-\ubaa8\ubc94-\uc0ac\ub840",children:"11.3 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ubbfc\uac10\ud55c \ub370\uc774\ud130 \uad00\ub9ac:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'# \uc808\ub300 \ud558\ub4dc\ucf54\ub529\ud558\uc9c0 \ub9d0 \uac83\n# \u274c \ub098\uc05c \uc608\nresource "aws_db_instance" "main" {\n  username = "admin"\n  password = "SuperSecret123!"  # \uc808\ub300 \uc774\ub807\uac8c \ud558\uc9c0 \ub9c8\uc138\uc694!\n}\n\n# \u2705 \uc88b\uc740 \uc608 - AWS Secrets Manager \uc0ac\uc6a9\ndata "aws_secretsmanager_secret_version" "db_password" {\n  secret_id = "prod/db/password"\n}\n\nresource "aws_db_instance" "main" {\n  username = "admin"\n  password = jsondecode(data.aws_secretsmanager_secret_version.db_password.secret_string)["password"]\n}\n\n# \u2705 \uc88b\uc740 \uc608 - \ub79c\ub364 \ube44\ubc00\ubc88\ud638 \uc0dd\uc131\nresource "random_password" "db_password" {\n  length  = 32\n  special = true\n}\n\nresource "aws_secretsmanager_secret_version" "db_password" {\n  secret_id     = aws_secretsmanager_secret.db_password.id\n  secret_string = random_password.db_password.result\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ucd9c\ub825 \uac12 \ubbfc\uac10\ub3c4 \uc124\uc815:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'output "db_password" {\n  value     = random_password.db_password.result\n  sensitive = true\n}\n\noutput "db_endpoint" {\n  value     = aws_db_instance.main.endpoint\n  sensitive = true\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"114-\ubc84\uc804-\uad00\ub9ac",children:"11.4 \ubc84\uc804 \uad00\ub9ac"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Provider \ubc84\uc804 \uace0\uc815:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:'terraform {\n  required_version = ">= 1.5.0"\n\n  required_providers {\n    aws = {\n      source  = "hashicorp/aws"\n      version = "~> 5.0"  # 5.x \ubc84\uc804 \ud5c8\uc6a9, 6.0 \ubd88\ud5c8\n    }\n    random = {\n      source  = "hashicorp/random"\n      version = "= 3.5.1"  # \uc815\ud655\ud55c \ubc84\uc804 \uc9c0\uc815\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"115-\ud14c\uc2a4\ud2b8-\ubc0f-\uac80\uc99d",children:"11.5 \ud14c\uc2a4\ud2b8 \ubc0f \uac80\uc99d"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Terraform \uac80\uc99d:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# \ud615\uc2dd \ud655\uc778 \ubc0f \uc790\ub3d9 \ud3ec\ub9f7\ud305\nterraform fmt -recursive\n\n# \uad6c\ubb38 \uac80\uc99d\nterraform validate\n\n# \ubcf4\uc548 \uc2a4\uce94 (tfsec)\ntfsec .\n\n# \uc815\ucc45 \uac80\uc99d (Sentinel/OPA)\nterraform plan -out=tfplan.binary\nterraform show -json tfplan.binary | conftest test -\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["Pre-commit \ud6c5 \uc124\uc815 (",(0,t.jsx)(e.code,{children:".pre-commit-config.yaml"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"repos:\n  - repo: https://github.com/antonbabenko/pre-commit-terraform\n    rev: v1.83.0\n    hooks:\n      - id: terraform_fmt\n      - id: terraform_validate\n      - id: terraform_docs\n      - id: terraform_tflint\n      - id: terraform_tfsec\n"})}),"\n",(0,t.jsx)(e.h3,{id:"116-\ubb38\uc11c\ud654",children:"11.6 \ubb38\uc11c\ud654"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ubaa8\ub4c8 \ubb38\uc11c\ud654:"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-hcl",children:"# modules/vpc/README.md\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-markdown",children:'# VPC \ubaa8\ub4c8\n\n\uc774 \ubaa8\ub4c8\uc740 AWS VPC\uc640 \uad00\ub828 \ub124\ud2b8\uc6cc\ud0b9 \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.\n\n## \uc0ac\uc6a9 \uc608\uc81c\n\n\\```hcl\nmodule "vpc" {\n  source = "./modules/vpc"\n\n  vpc_cidr           = "10.0.0.0/16"\n  environment        = "production"\n  availability_zones = ["ap-northeast-2a", "ap-northeast-2b"]\n}\n\\```\n\n## \uc785\ub825 \ubcc0\uc218\n\n| \uc774\ub984 | \uc124\uba85 | \ud0c0\uc785 | \uae30\ubcf8\uac12 | \ud544\uc218 |\n|------|------|------|--------|------|\n| vpc_cidr | VPC CIDR \ube14\ub85d | string | - | \uc608 |\n| environment | \ud658\uacbd \uc774\ub984 | string | - | \uc608 |\n| availability_zones | \uac00\uc6a9 \uc601\uc5ed \ubaa9\ub85d | list(string) | - | \uc608 |\n\n## \ucd9c\ub825\n\n| \uc774\ub984 | \uc124\uba85 |\n|------|------|\n| vpc_id | VPC ID |\n| public_subnet_ids | \uacf5\uc6a9 \uc11c\ube0c\ub137 ID \ubaa9\ub85d |\n'})}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:'IaC \ucf54\ub4dc\ub3c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc\uc640 \ub3d9\uc77c\ud558\uac8c \ubc84\uc804 \uad00\ub9ac, \ucf54\ub4dc \ub9ac\ubdf0, CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc801\uc6a9\ud558\uc138\uc694. Infrastructure as Code\ub294 "Code"\uc785\ub2c8\ub2e4!'})}),"\n",(0,t.jsx)(e.h3,{id:"117-cicd-\ud1b5\ud569",children:"11.7 CI/CD \ud1b5\ud569"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["GitHub Actions \uc608\uc81c (",(0,t.jsx)(e.code,{children:".github/workflows/terraform.yml"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"name: Terraform\n\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n\njobs:\n  terraform:\n    name: Terraform\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: \ucf54\ub4dc \uccb4\ud06c\uc544\uc6c3\n        uses: actions/checkout@v3\n\n      - name: Terraform \uc124\uc815\n        uses: hashicorp/setup-terraform@v2\n        with:\n          terraform_version: 1.5.0\n\n      - name: Terraform \ucd08\uae30\ud654\n        run: terraform init\n\n      - name: Terraform \ud615\uc2dd \uac80\uc0ac\n        run: terraform fmt -check\n\n      - name: Terraform \uac80\uc99d\n        run: terraform validate\n\n      - name: Terraform \uacc4\ud68d\n        run: terraform plan -no-color\n        env:\n          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n\n      - name: Terraform \uc801\uc6a9\n        if: github.ref == 'refs/heads/main' && github.event_name == 'push'\n        run: terraform apply -auto-approve\n        env:\n          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["GitLab CI \uc608\uc81c (",(0,t.jsx)(e.code,{children:".gitlab-ci.yml"}),"):"]})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:'image:\n  name: hashicorp/terraform:1.5\n  entrypoint: [""]\n\nstages:\n  - validate\n  - plan\n  - apply\n\nbefore_script:\n  - terraform init\n\nvalidate:\n  stage: validate\n  script:\n    - terraform fmt -check\n    - terraform validate\n\nplan:\n  stage: plan\n  script:\n    - terraform plan -out=tfplan\n  artifacts:\n    paths:\n      - tfplan\n\napply:\n  stage: apply\n  script:\n    - terraform apply -auto-approve tfplan\n  when: manual\n  only:\n    - main\n'})}),"\n",(0,t.jsx)(e.h2,{id:"12-\uc694\uc57d",children:"12. \uc694\uc57d"}),"\n",(0,t.jsx)(e.p,{children:"Infrastructure as Code\ub294 \ud604\ub300 \ud074\ub77c\uc6b0\ub4dc \uc778\ud504\ub77c \uad00\ub9ac\uc758 \ud575\uc2ec\uc785\ub2c8\ub2e4:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ub3c4\uad6c \uc120\ud0dd"}),": Terraform(\uba40\ud2f0 \ud074\ub77c\uc6b0\ub4dc), CloudFormation(AWS \ub124\uc774\ud2f0\ube0c), Pulumi(\ubc94\uc6a9 \uc5b8\uc5b4)"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc0c1\ud0dc \uad00\ub9ac"}),": \uc6d0\uaca9 \ubc31\uc5d4\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud300 \ud611\uc5c5 \uc9c0\uc6d0"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubaa8\ub4c8\ud654"}),": \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4c8\ub85c \ucf54\ub4dc \uc911\ubcf5 \uc81c\uac70"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubcf4\uc548"}),": \ubbfc\uac10\ud55c \ub370\uc774\ud130\ub97c \uc2dc\ud06c\ub9bf \uad00\ub9ac \uc11c\ube44\uc2a4\uc5d0 \uc800\uc7a5"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubc84\uc804 \uad00\ub9ac"}),": Git\uc744 \ud1b5\ud55c \uc778\ud504\ub77c \ubcc0\uacbd \uc774\ub825 \ucd94\uc801"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc790\ub3d9\ud654"}),": CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc5d0 IaC \ud1b5\ud569"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ud14c\uc2a4\ud2b8"}),": \ud504\ub85c\ub355\uc158 \ubc30\ud3ec \uc804 \uac80\uc99d \ubc0f \ud14c\uc2a4\ud2b8"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubb38\uc11c\ud654"}),": \ucf54\ub4dc \uc790\uccb4\uac00 \ubb38\uc11c\uc774\uc9c0\ub9cc README\uc640 \uc8fc\uc11d \ucd94\uac00"]}),"\n"]}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsx)(e.p,{children:"IaC\ub97c \ucc98\uc74c \ub3c4\uc785\ud560 \ub54c\ub294 \uc791\uc740 \ud504\ub85c\uc81d\ud2b8\ub098 \uac1c\ubc1c \ud658\uacbd\ubd80\ud130 \uc2dc\uc791\ud558\uc5ec \ud300\uc774 \uc775\uc219\ud574\uc9c4 \ud6c4 \ud504\ub85c\ub355\uc158\uc5d0 \uc801\uc6a9\ud558\uc138\uc694."})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>i,x:()=>o});var a=r(6540);const t={},s=a.createContext(t);function i(n){const e=a.useContext(s);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),a.createElement(s.Provider,{value:e},n.children)}}}]);