"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9989],{8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>s});var a=i(6540);const t={},l=a.createContext(t);function r(n){const e=a.useContext(l);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),a.createElement(l.Provider,{value:e},n.children)}},9893:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"webapp/file-upload","title":"8. \ud30c\uc77c \uc5c5\ub85c\ub4dc","description":"\ud30c\uc77c \uc5c5\ub85c\ub4dc \uae30\ub2a5\uc744 \uc548\uc804\ud558\uace0 \ud6a8\uc728\uc801\uc73c\ub85c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4.","source":"@site/docs/webapp/file-upload.md","sourceDirName":"webapp","slug":"/webapp/file-upload","permalink":"/docs/webapp/file-upload","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/webapp/file-upload.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"webappSidebar","previous":{"title":"7. \ud3fc \ucc98\ub9ac \ubc0f \uac80\uc99d","permalink":"/docs/webapp/forms-validation"},"next":{"title":"9. CRUD \uad6c\ud604","permalink":"/docs/webapp/crud-basics"}}');var t=i(4848),l=i(8453);const r={sidebar_position:9},s="8. \ud30c\uc77c \uc5c5\ub85c\ub4dc",o={},d=[{value:"8.1 \ud30c\uc77c \uc5c5\ub85c\ub4dc \uac1c\uc694",id:"81-\ud30c\uc77c-\uc5c5\ub85c\ub4dc-\uac1c\uc694",level:2},{value:"8.2 Backend: FastAPI \ud30c\uc77c \uc5c5\ub85c\ub4dc",id:"82-backend-fastapi-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",level:2},{value:"8.2.1 \uae30\ubcf8 \ud30c\uc77c \uc5c5\ub85c\ub4dc",id:"821-\uae30\ubcf8-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",level:3},{value:"8.2.2 \ub2e4\uc911 \ud30c\uc77c \uc5c5\ub85c\ub4dc",id:"822-\ub2e4\uc911-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",level:3},{value:"8.3 \ud30c\uc77c \uc800\uc7a5 \uc804\ub7b5",id:"83-\ud30c\uc77c-\uc800\uc7a5-\uc804\ub7b5",level:2},{value:"8.3.1 \ub85c\uceec \uc800\uc7a5",id:"831-\ub85c\uceec-\uc800\uc7a5",level:3},{value:"8.3.2 AWS S3 \uc800\uc7a5",id:"832-aws-s3-\uc800\uc7a5",level:3},{value:"8.3.3 Presigned URL \uc0ac\uc6a9",id:"833-presigned-url-\uc0ac\uc6a9",level:3},{value:"8.4 \uc774\ubbf8\uc9c0 \ucc98\ub9ac",id:"84-\uc774\ubbf8\uc9c0-\ucc98\ub9ac",level:2},{value:"8.4.1 \uc378\ub124\uc77c \uc0dd\uc131",id:"841-\uc378\ub124\uc77c-\uc0dd\uc131",level:3},{value:"8.5 Frontend: \ud30c\uc77c \uc120\ud0dd UI",id:"85-frontend-\ud30c\uc77c-\uc120\ud0dd-ui",level:2},{value:"8.5.1 \uae30\ubcf8 \ud30c\uc77c \uc5c5\ub85c\ub4dc",id:"851-\uae30\ubcf8-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",level:3},{value:"8.5.2 \ub4dc\ub798\uadf8 \uc564 \ub4dc\ub86d",id:"852-\ub4dc\ub798\uadf8-\uc564-\ub4dc\ub86d",level:3},{value:"8.5.3 \uc774\ubbf8\uc9c0 \ubbf8\ub9ac\ubcf4\uae30",id:"853-\uc774\ubbf8\uc9c0-\ubbf8\ub9ac\ubcf4\uae30",level:3},{value:"8.6 \uccad\ud06c \uc5c5\ub85c\ub4dc (\ub300\uc6a9\ub7c9 \ud30c\uc77c)",id:"86-\uccad\ud06c-\uc5c5\ub85c\ub4dc-\ub300\uc6a9\ub7c9-\ud30c\uc77c",level:2},{value:"8.6.1 Backend: \uccad\ud06c \ucc98\ub9ac",id:"861-backend-\uccad\ud06c-\ucc98\ub9ac",level:3},{value:"8.6.2 Frontend: \uccad\ud06c \uc5c5\ub85c\ub4dc",id:"862-frontend-\uccad\ud06c-\uc5c5\ub85c\ub4dc",level:3},{value:"8.7 \ubcf4\uc548 \uace0\ub824\uc0ac\ud56d",id:"87-\ubcf4\uc548-\uace0\ub824\uc0ac\ud56d",level:2},{value:"8.8 \uc2e4\uc2b5 \ubb38\uc81c",id:"88-\uc2e4\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c: \ud504\ub85c\ud544 \uc0ac\uc9c4 \uc5c5\ub85c\ub4dc \uc2dc\uc2a4\ud15c",id:"\ubb38\uc81c-\ud504\ub85c\ud544-\uc0ac\uc9c4-\uc5c5\ub85c\ub4dc-\uc2dc\uc2a4\ud15c",level:3}];function p(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"8-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",children:"8. \ud30c\uc77c \uc5c5\ub85c\ub4dc"})}),"\n",(0,t.jsx)(e.p,{children:"\ud30c\uc77c \uc5c5\ub85c\ub4dc \uae30\ub2a5\uc744 \uc548\uc804\ud558\uace0 \ud6a8\uc728\uc801\uc73c\ub85c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4."}),"\n",(0,t.jsx)(e.h2,{id:"81-\ud30c\uc77c-\uc5c5\ub85c\ub4dc-\uac1c\uc694",children:"8.1 \ud30c\uc77c \uc5c5\ub85c\ub4dc \uac1c\uc694"}),"\n",(0,t.jsx)(e.p,{children:"\ud30c\uc77c \uc5c5\ub85c\ub4dc\ub294 \uc0ac\uc6a9\uc790\uac00 \uc774\ubbf8\uc9c0, \ubb38\uc11c, \ub3d9\uc601\uc0c1 \ub4f1\uc744 \uc11c\ubc84\uc5d0 \uc804\uc1a1\ud558\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-markdown",children:"**\uc8fc\uc694 \uace0\ub824\uc0ac\ud56d:**\n- \ud30c\uc77c \ud06c\uae30 \uc81c\ud55c\n- \ud30c\uc77c \ud0c0\uc785 \uac80\uc99d\n- \ubcf4\uc548 (\uc545\uc131 \ud30c\uc77c \ucc28\ub2e8)\n- \uc800\uc7a5 \uc704\uce58 (\ub85c\uceec, S3, CDN)\n- \uc5c5\ub85c\ub4dc \uc9c4\ud589\ub960 \ud45c\uc2dc\n- \uc5d0\ub7ec \ucc98\ub9ac\n"})}),"\n",(0,t.jsx)(e.h2,{id:"82-backend-fastapi-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",children:"8.2 Backend: FastAPI \ud30c\uc77c \uc5c5\ub85c\ub4dc"}),"\n",(0,t.jsx)(e.h3,{id:"821-\uae30\ubcf8-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",children:"8.2.1 \uae30\ubcf8 \ud30c\uc77c \uc5c5\ub85c\ub4dc"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# app/api/v1/upload.py\nfrom fastapi import APIRouter, UploadFile, File, HTTPException\nfrom pathlib import Path\nimport shutil\nimport uuid\n\nrouter = APIRouter()\n\nUPLOAD_DIR = Path("uploads")\nUPLOAD_DIR.mkdir(exist_ok=True)\n\n@router.post("/upload")\nasync def upload_file(file: UploadFile = File(...)):\n    # \ud30c\uc77c \ud06c\uae30 \uac80\uc99d (10MB)\n    contents = await file.read()\n    if len(contents) > 10 * 1024 * 1024:\n        raise HTTPException(400, "\ud30c\uc77c \ud06c\uae30\ub294 10MB \uc774\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4")\n\n    # \ud30c\uc77c \ud0c0\uc785 \uac80\uc99d\n    allowed_types = ["image/jpeg", "image/png", "image/gif"]\n    if file.content_type not in allowed_types:\n        raise HTTPException(400, "JPG, PNG, GIF \ud30c\uc77c\ub9cc \uc5c5\ub85c\ub4dc \uac00\ub2a5\ud569\ub2c8\ub2e4")\n\n    # \uace0\uc720 \ud30c\uc77c\uba85 \uc0dd\uc131\n    file_ext = Path(file.filename).suffix\n    unique_filename = f"{uuid.uuid4()}{file_ext}"\n    file_path = UPLOAD_DIR / unique_filename\n\n    # \ud30c\uc77c \uc800\uc7a5\n    with open(file_path, "wb") as f:\n        f.write(contents)\n\n    return {\n        "filename": unique_filename,\n        "content_type": file.content_type,\n        "size": len(contents)\n    }\n'})}),"\n",(0,t.jsx)(e.h3,{id:"822-\ub2e4\uc911-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",children:"8.2.2 \ub2e4\uc911 \ud30c\uc77c \uc5c5\ub85c\ub4dc"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'from typing import List\n\n@router.post("/upload/multiple")\nasync def upload_multiple_files(files: List[UploadFile] = File(...)):\n    if len(files) > 10:\n        raise HTTPException(400, "\ucd5c\ub300 10\uac1c \ud30c\uc77c\uae4c\uc9c0 \uc5c5\ub85c\ub4dc \uac00\ub2a5\ud569\ub2c8\ub2e4")\n\n    uploaded_files = []\n\n    for file in files:\n        contents = await file.read()\n\n        # \uac80\uc99d\n        if len(contents) > 10 * 1024 * 1024:\n            raise HTTPException(400, f"{file.filename}: \ud30c\uc77c \ud06c\uae30 \ucd08\uacfc")\n\n        # \uc800\uc7a5\n        file_ext = Path(file.filename).suffix\n        unique_filename = f"{uuid.uuid4()}{file_ext}"\n        file_path = UPLOAD_DIR / unique_filename\n\n        with open(file_path, "wb") as f:\n            f.write(contents)\n\n        uploaded_files.append({\n            "original_name": file.filename,\n            "saved_name": unique_filename,\n            "size": len(contents)\n        })\n\n    return {"files": uploaded_files}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"83-\ud30c\uc77c-\uc800\uc7a5-\uc804\ub7b5",children:"8.3 \ud30c\uc77c \uc800\uc7a5 \uc804\ub7b5"}),"\n",(0,t.jsx)(e.h3,{id:"831-\ub85c\uceec-\uc800\uc7a5",children:"8.3.1 \ub85c\uceec \uc800\uc7a5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# config.py\nfrom pydantic_settings import BaseSettings\n\nclass Settings(BaseSettings):\n    UPLOAD_DIR: str = "uploads"\n    MAX_FILE_SIZE: int = 10 * 1024 * 1024  # 10MB\n\n    class Config:\n        env_file = ".env"\n\nsettings = Settings()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"832-aws-s3-\uc800\uc7a5",children:"8.3.2 AWS S3 \uc800\uc7a5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# app/services/s3.py\nimport boto3\nfrom botocore.exceptions import ClientError\nfrom app.config import settings\n\ns3_client = boto3.client(\n    \'s3\',\n    aws_access_key_id=settings.AWS_ACCESS_KEY_ID,\n    aws_secret_access_key=settings.AWS_SECRET_ACCESS_KEY,\n    region_name=settings.AWS_REGION\n)\n\nasync def upload_to_s3(file: UploadFile, folder: str = "uploads") -> str:\n    """S3\uc5d0 \ud30c\uc77c \uc5c5\ub85c\ub4dc"""\n    try:\n        # \uace0\uc720 \ud30c\uc77c\uba85 \uc0dd\uc131\n        file_ext = Path(file.filename).suffix\n        unique_filename = f"{folder}/{uuid.uuid4()}{file_ext}"\n\n        # S3 \uc5c5\ub85c\ub4dc\n        contents = await file.read()\n        s3_client.put_object(\n            Bucket=settings.S3_BUCKET,\n            Key=unique_filename,\n            Body=contents,\n            ContentType=file.content_type\n        )\n\n        # URL \uc0dd\uc131\n        url = f"https://{settings.S3_BUCKET}.s3.{settings.AWS_REGION}.amazonaws.com/{unique_filename}"\n        return url\n\n    except ClientError as e:\n        raise HTTPException(500, f"S3 \uc5c5\ub85c\ub4dc \uc2e4\ud328: {str(e)}")\n\n# API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\n@router.post("/upload/s3")\nasync def upload_file_to_s3(file: UploadFile = File(...)):\n    url = await upload_to_s3(file)\n    return {"url": url}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"833-presigned-url-\uc0ac\uc6a9",children:"8.3.3 Presigned URL \uc0ac\uc6a9"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'def generate_presigned_url(filename: str, expires_in: int = 3600) -> str:\n    """\uc5c5\ub85c\ub4dc\uc6a9 Presigned URL \uc0dd\uc131"""\n    try:\n        url = s3_client.generate_presigned_url(\n            \'put_object\',\n            Params={\n                \'Bucket\': settings.S3_BUCKET,\n                \'Key\': filename,\n                \'ContentType\': \'image/jpeg\'\n            },\n            ExpiresIn=expires_in\n        )\n        return url\n    except ClientError as e:\n        raise HTTPException(500, f"URL \uc0dd\uc131 \uc2e4\ud328: {str(e)}")\n\n@router.post("/upload/presigned-url")\nasync def get_presigned_url(filename: str, content_type: str):\n    """\ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc9c1\uc811 S3\uc5d0 \uc5c5\ub85c\ub4dc\ud560 \uc218 \uc788\ub294 URL \ubc18\ud658"""\n    unique_filename = f"uploads/{uuid.uuid4()}_{filename}"\n\n    url = s3_client.generate_presigned_url(\n        \'put_object\',\n        Params={\n            \'Bucket\': settings.S3_BUCKET,\n            \'Key\': unique_filename,\n            \'ContentType\': content_type\n        },\n        ExpiresIn=3600\n    )\n\n    return {\n        "upload_url": url,\n        "filename": unique_filename\n    }\n'})}),"\n",(0,t.jsx)(e.h2,{id:"84-\uc774\ubbf8\uc9c0-\ucc98\ub9ac",children:"8.4 \uc774\ubbf8\uc9c0 \ucc98\ub9ac"}),"\n",(0,t.jsx)(e.h3,{id:"841-\uc378\ub124\uc77c-\uc0dd\uc131",children:"8.4.1 \uc378\ub124\uc77c \uc0dd\uc131"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# app/services/image.py\nfrom PIL import Image\nimport io\n\ndef create_thumbnail(image_data: bytes, size: tuple = (300, 300)) -> bytes:\n    """\uc378\ub124\uc77c \uc774\ubbf8\uc9c0 \uc0dd\uc131"""\n    image = Image.open(io.BytesIO(image_data))\n\n    # EXIF \ubc29\ud5a5 \uc815\ubcf4 \ucc98\ub9ac\n    try:\n        from PIL import ImageOps\n        image = ImageOps.exif_transpose(image)\n    except:\n        pass\n\n    # \uc378\ub124\uc77c \uc0dd\uc131\n    image.thumbnail(size, Image.Resampling.LANCZOS)\n\n    # RGBA to RGB \ubcc0\ud658 (JPEG \uc800\uc7a5\uc6a9)\n    if image.mode == \'RGBA\':\n        background = Image.new(\'RGB\', image.size, (255, 255, 255))\n        background.paste(image, mask=image.split()[3])\n        image = background\n\n    # \ubc14\uc774\ud2b8\ub85c \ubcc0\ud658\n    output = io.BytesIO()\n    image.save(output, format=\'JPEG\', quality=85)\n    return output.getvalue()\n\n@router.post("/upload/image")\nasync def upload_image_with_thumbnail(file: UploadFile = File(...)):\n    contents = await file.read()\n\n    # \uc6d0\ubcf8 \uc800\uc7a5\n    original_filename = f"{uuid.uuid4()}.jpg"\n    original_path = UPLOAD_DIR / original_filename\n    with open(original_path, "wb") as f:\n        f.write(contents)\n\n    # \uc378\ub124\uc77c \uc0dd\uc131 \ubc0f \uc800\uc7a5\n    thumbnail_data = create_thumbnail(contents)\n    thumbnail_filename = f"{uuid.uuid4()}_thumb.jpg"\n    thumbnail_path = UPLOAD_DIR / thumbnail_filename\n    with open(thumbnail_path, "wb") as f:\n        f.write(thumbnail_data)\n\n    return {\n        "original": original_filename,\n        "thumbnail": thumbnail_filename\n    }\n'})}),"\n",(0,t.jsx)(e.h2,{id:"85-frontend-\ud30c\uc77c-\uc120\ud0dd-ui",children:"8.5 Frontend: \ud30c\uc77c \uc120\ud0dd UI"}),"\n",(0,t.jsx)(e.h3,{id:"851-\uae30\ubcf8-\ud30c\uc77c-\uc5c5\ub85c\ub4dc",children:"8.5.1 \uae30\ubcf8 \ud30c\uc77c \uc5c5\ub85c\ub4dc"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { ref } from \'vue\'\nimport axios from \'axios\'\n\nconst file = ref<File | null>(null)\nconst uploading = ref(false)\nconst uploadProgress = ref(0)\nconst uploadedUrl = ref(\'\')\nconst error = ref(\'\')\n\nconst handleFileSelect = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  file.value = target.files?.[0] || null\n  error.value = \'\'\n}\n\nconst uploadFile = async () => {\n  if (!file.value) return\n\n  const formData = new FormData()\n  formData.append(\'file\', file.value)\n\n  uploading.value = true\n  error.value = \'\'\n\n  try {\n    const { data } = await axios.post(\'/api/upload\', formData, {\n      headers: {\n        \'Content-Type\': \'multipart/form-data\'\n      },\n      onUploadProgress: (progressEvent) => {\n        if (progressEvent.total) {\n          uploadProgress.value = Math.round(\n            (progressEvent.loaded * 100) / progressEvent.total\n          )\n        }\n      }\n    })\n\n    uploadedUrl.value = data.url\n    console.log(\'Upload success:\', data)\n  } catch (err: any) {\n    error.value = err.response?.data?.detail || \'\uc5c5\ub85c\ub4dc \uc2e4\ud328\'\n  } finally {\n    uploading.value = false\n  }\n}\n<\/script>\n\n<template>\n  <div class="upload-container">\n    <input\n      type="file"\n      @change="handleFileSelect"\n      accept="image/*"\n      :disabled="uploading"\n    />\n\n    <div v-if="file" class="file-info">\n      <p>\uc120\ud0dd\ub41c \ud30c\uc77c: {{ file.name }}</p>\n      <p>\ud06c\uae30: {{ (file.size / 1024).toFixed(2) }} KB</p>\n    </div>\n\n    <button\n      @click="uploadFile"\n      :disabled="!file || uploading"\n    >\n      {{ uploading ? \'\uc5c5\ub85c\ub4dc \uc911...\' : \'\uc5c5\ub85c\ub4dc\' }}\n    </button>\n\n    <div v-if="uploading" class="progress-bar">\n      <div class="progress" :style="{ width: `${uploadProgress}%` }"></div>\n      <span>{{ uploadProgress }}%</span>\n    </div>\n\n    <div v-if="error" class="error">{{ error }}</div>\n\n    <img v-if="uploadedUrl" :src="uploadedUrl" alt="Uploaded" />\n  </div>\n</template>\n\n<style scoped>\n.progress-bar {\n  width: 100%;\n  height: 20px;\n  background: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n}\n\n.progress {\n  height: 100%;\n  background: #4caf50;\n  transition: width 0.3s;\n}\n\n.error {\n  color: #ef4444;\n  margin-top: 0.5rem;\n}\n</style>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"852-\ub4dc\ub798\uadf8-\uc564-\ub4dc\ub86d",children:"8.5.2 \ub4dc\ub798\uadf8 \uc564 \ub4dc\ub86d"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { ref } from \'vue\'\n\nconst isDragging = ref(false)\nconst files = ref<File[]>([])\n\nconst handleDragOver = (e: DragEvent) => {\n  e.preventDefault()\n  isDragging.value = true\n}\n\nconst handleDragLeave = () => {\n  isDragging.value = false\n}\n\nconst handleDrop = (e: DragEvent) => {\n  e.preventDefault()\n  isDragging.value = false\n\n  const droppedFiles = Array.from(e.dataTransfer?.files || [])\n\n  // \uc774\ubbf8\uc9c0 \ud30c\uc77c\ub9cc \ud544\ud130\ub9c1\n  const imageFiles = droppedFiles.filter(file =>\n    file.type.startsWith(\'image/\')\n  )\n\n  files.value = imageFiles\n}\n\nconst removeFile = (index: number) => {\n  files.value.splice(index, 1)\n}\n\nconst uploadFiles = async () => {\n  const formData = new FormData()\n  files.value.forEach(file => {\n    formData.append(\'files\', file)\n  })\n\n  try {\n    const { data } = await axios.post(\'/api/upload/multiple\', formData)\n    console.log(\'Upload success:\', data)\n  } catch (error) {\n    console.error(\'Upload failed:\', error)\n  }\n}\n<\/script>\n\n<template>\n  <div\n    class="drop-zone"\n    :class="{ dragging: isDragging }"\n    @dragover="handleDragOver"\n    @dragleave="handleDragLeave"\n    @drop="handleDrop"\n  >\n    <p v-if="files.length === 0">\n      \ud30c\uc77c\uc744 \ub4dc\ub798\uadf8\ud558\uac70\ub098 \ud074\ub9ad\ud558\uc5ec \uc120\ud0dd\ud558\uc138\uc694\n    </p>\n\n    <div v-else class="file-list">\n      <div\n        v-for="(file, index) in files"\n        :key="index"\n        class="file-item"\n      >\n        <span>{{ file.name }}</span>\n        <button @click="removeFile(index)">\u2715</button>\n      </div>\n    </div>\n\n    <input\n      type="file"\n      multiple\n      accept="image/*"\n      @change="(e) => {\n        const target = e.target as HTMLInputElement\n        files = Array.from(target.files || [])\n      }"\n      style="display: none"\n      ref="fileInput"\n    />\n  </div>\n\n  <button\n    v-if="files.length > 0"\n    @click="uploadFiles"\n  >\n    {{ files.length }}\uac1c \ud30c\uc77c \uc5c5\ub85c\ub4dc\n  </button>\n</template>\n\n<style scoped>\n.drop-zone {\n  border: 2px dashed #ccc;\n  border-radius: 8px;\n  padding: 2rem;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.drop-zone.dragging {\n  border-color: #4caf50;\n  background: #f0f9f0;\n}\n\n.file-list {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.file-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem;\n  background: #f5f5f5;\n  border-radius: 4px;\n}\n</style>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"853-\uc774\ubbf8\uc9c0-\ubbf8\ub9ac\ubcf4\uae30",children:"8.5.3 \uc774\ubbf8\uc9c0 \ubbf8\ub9ac\ubcf4\uae30"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { ref } from \'vue\'\n\ninterface PreviewFile {\n  file: File\n  preview: string\n}\n\nconst previewFiles = ref<PreviewFile[]>([])\n\nconst handleFiles = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const selectedFiles = Array.from(target.files || [])\n\n  previewFiles.value = selectedFiles.map(file => ({\n    file,\n    preview: URL.createObjectURL(file)\n  }))\n}\n\nconst removePreview = (index: number) => {\n  URL.revokeObjectURL(previewFiles.value[index].preview)\n  previewFiles.value.splice(index, 1)\n}\n<\/script>\n\n<template>\n  <div>\n    <input\n      type="file"\n      multiple\n      accept="image/*"\n      @change="handleFiles"\n    />\n\n    <div class="preview-grid">\n      <div\n        v-for="(item, index) in previewFiles"\n        :key="index"\n        class="preview-item"\n      >\n        <img :src="item.preview" :alt="item.file.name" />\n        <button @click="removePreview(index)" class="remove-btn">\n          \u2715\n        </button>\n        <p>{{ item.file.name }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.preview-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.preview-item {\n  position: relative;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 0.5rem;\n}\n\n.preview-item img {\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 4px;\n}\n\n.remove-btn {\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  background: rgba(0, 0, 0, 0.6);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n}\n</style>\n'})}),"\n",(0,t.jsx)(e.h2,{id:"86-\uccad\ud06c-\uc5c5\ub85c\ub4dc-\ub300\uc6a9\ub7c9-\ud30c\uc77c",children:"8.6 \uccad\ud06c \uc5c5\ub85c\ub4dc (\ub300\uc6a9\ub7c9 \ud30c\uc77c)"}),"\n",(0,t.jsx)(e.h3,{id:"861-backend-\uccad\ud06c-\ucc98\ub9ac",children:"8.6.1 Backend: \uccad\ud06c \ucc98\ub9ac"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# app/api/v1/upload.py\nfrom fastapi import APIRouter, File, Form\nimport os\n\nCHUNK_DIR = Path("chunks")\nCHUNK_DIR.mkdir(exist_ok=True)\n\n@router.post("/upload/chunk")\nasync def upload_chunk(\n    chunk: UploadFile = File(...),\n    filename: str = Form(...),\n    chunk_index: int = Form(...),\n    total_chunks: int = Form(...)\n):\n    # \uccad\ud06c \uc800\uc7a5\n    chunk_filename = f"{filename}.part{chunk_index}"\n    chunk_path = CHUNK_DIR / chunk_filename\n\n    contents = await chunk.read()\n    with open(chunk_path, "wb") as f:\n        f.write(contents)\n\n    # \ubaa8\ub4e0 \uccad\ud06c\uac00 \uc5c5\ub85c\ub4dc\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\n    if chunk_index == total_chunks - 1:\n        # \uccad\ud06c \ubcd1\ud569\n        final_path = UPLOAD_DIR / filename\n        with open(final_path, "wb") as final_file:\n            for i in range(total_chunks):\n                chunk_path = CHUNK_DIR / f"{filename}.part{i}"\n                with open(chunk_path, "rb") as chunk_file:\n                    final_file.write(chunk_file.read())\n                os.remove(chunk_path)  # \uccad\ud06c \uc0ad\uc81c\n\n        return {"message": "Upload complete", "filename": filename}\n\n    return {"message": f"Chunk {chunk_index + 1}/{total_chunks} uploaded"}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"862-frontend-\uccad\ud06c-\uc5c5\ub85c\ub4dc",children:"8.6.2 Frontend: \uccad\ud06c \uc5c5\ub85c\ub4dc"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"// composables/useChunkUpload.ts\nconst CHUNK_SIZE = 1024 * 1024 * 5 // 5MB\n\nexport const useChunkUpload = () => {\n  const uploadFileInChunks = async (file: File) => {\n    const totalChunks = Math.ceil(file.size / CHUNK_SIZE)\n\n    for (let i = 0; i < totalChunks; i++) {\n      const start = i * CHUNK_SIZE\n      const end = Math.min(start + CHUNK_SIZE, file.size)\n      const chunk = file.slice(start, end)\n\n      const formData = new FormData()\n      formData.append('chunk', chunk)\n      formData.append('filename', file.name)\n      formData.append('chunk_index', i.toString())\n      formData.append('total_chunks', totalChunks.toString())\n\n      await axios.post('/api/upload/chunk', formData)\n\n      // \uc9c4\ud589\ub960 \uc5c5\ub370\uc774\ud2b8\n      const progress = Math.round(((i + 1) / totalChunks) * 100)\n      console.log(`Progress: ${progress}%`)\n    }\n  }\n\n  return { uploadFileInChunks }\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"87-\ubcf4\uc548-\uace0\ub824\uc0ac\ud56d",children:"8.7 \ubcf4\uc548 \uace0\ub824\uc0ac\ud56d"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# app/utils/security.py\nimport magic\nfrom pathlib import Path\n\ndef validate_file_type(file_path: Path, allowed_types: list) -> bool:\n    """\uc2e4\uc81c \ud30c\uc77c \ud0c0\uc785 \uac80\uc99d (MIME type)"""\n    mime = magic.Magic(mime=True)\n    file_type = mime.from_file(str(file_path))\n    return file_type in allowed_types\n\ndef sanitize_filename(filename: str) -> str:\n    """\ud30c\uc77c\uba85 \uc0b4\uade0"""\n    # \uacbd\ub85c \uad6c\ubd84\uc790 \uc81c\uac70\n    filename = filename.replace(\'/\', \'\').replace(\'\\\\\', \'\')\n    # \ud2b9\uc218 \ubb38\uc790 \uc81c\uac70\n    import re\n    filename = re.sub(r\'[^\\w\\s.-]\', \'\', filename)\n    return filename\n\n@router.post("/upload/secure")\nasync def secure_upload(file: UploadFile = File(...)):\n    # \ud30c\uc77c\uba85 \uc0b4\uade0\n    safe_filename = sanitize_filename(file.filename)\n\n    # \uc784\uc2dc \uc800\uc7a5\n    temp_path = UPLOAD_DIR / f"temp_{uuid.uuid4()}"\n    contents = await file.read()\n    with open(temp_path, "wb") as f:\n        f.write(contents)\n\n    # \uc2e4\uc81c \ud30c\uc77c \ud0c0\uc785 \uac80\uc99d\n    allowed_types = ["image/jpeg", "image/png", "image/gif"]\n    if not validate_file_type(temp_path, allowed_types):\n        temp_path.unlink()\n        raise HTTPException(400, "\ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc740 \ud30c\uc77c \ud0c0\uc785\uc785\ub2c8\ub2e4")\n\n    # \ucd5c\uc885 \uc800\uc7a5\n    final_path = UPLOAD_DIR / safe_filename\n    temp_path.rename(final_path)\n\n    return {"filename": safe_filename}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"88-\uc2e4\uc2b5-\ubb38\uc81c",children:"8.8 \uc2e4\uc2b5 \ubb38\uc81c"}),"\n",(0,t.jsx)(e.h3,{id:"\ubb38\uc81c-\ud504\ub85c\ud544-\uc0ac\uc9c4-\uc5c5\ub85c\ub4dc-\uc2dc\uc2a4\ud15c",children:"\ubb38\uc81c: \ud504\ub85c\ud544 \uc0ac\uc9c4 \uc5c5\ub85c\ub4dc \uc2dc\uc2a4\ud15c"}),"\n",(0,t.jsx)(e.p,{children:"\ub2e4\uc74c \uc694\uad6c\uc0ac\ud56d\uc744 \ub9cc\uc871\ud558\ub294 \ud504\ub85c\ud544 \uc0ac\uc9c4 \uc5c5\ub85c\ub4dc \uc2dc\uc2a4\ud15c\uc744 \uad6c\ud604\ud558\uc138\uc694:"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\uc694\uad6c\uc0ac\ud56d:"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\uc774\ubbf8\uc9c0 \ud30c\uc77c\ub9cc \uc5c5\ub85c\ub4dc \uac00\ub2a5 (JPG, PNG)"}),"\n",(0,t.jsx)(e.li,{children:"\ucd5c\ub300 5MB \uc81c\ud55c"}),"\n",(0,t.jsx)(e.li,{children:"\uc790\ub3d9 \uc378\ub124\uc77c \uc0dd\uc131 (150x150)"}),"\n",(0,t.jsx)(e.li,{children:"\ubbf8\ub9ac\ubcf4\uae30 \uae30\ub2a5"}),"\n",(0,t.jsx)(e.li,{children:"\uc5c5\ub85c\ub4dc \uc9c4\ud589\ub960 \ud45c\uc2dc"}),"\n"]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"\ud574\ub2f5"}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Backend (FastAPI):"})}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'from PIL import Image\nimport io\n\n@router.post("/profile/upload")\nasync def upload_profile_image(\n    user_id: int,\n    file: UploadFile = File(...)\n):\n    # \uac80\uc99d\n    if file.content_type not in ["image/jpeg", "image/png"]:\n        raise HTTPException(400, "JPG, PNG\ub9cc \uac00\ub2a5\ud569\ub2c8\ub2e4")\n\n    contents = await file.read()\n    if len(contents) > 5 * 1024 * 1024:\n        raise HTTPException(400, "\ud30c\uc77c \ud06c\uae30\ub294 5MB \uc774\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4")\n\n    # \uc378\ub124\uc77c \uc0dd\uc131\n    image = Image.open(io.BytesIO(contents))\n    image.thumbnail((150, 150), Image.Resampling.LANCZOS)\n\n    # \uc800\uc7a5\n    original_filename = f"profile_{user_id}_{uuid.uuid4()}.jpg"\n    thumbnail_filename = f"profile_{user_id}_{uuid.uuid4()}_thumb.jpg"\n\n    # \uc6d0\ubcf8 \uc800\uc7a5\n    with open(UPLOAD_DIR / original_filename, "wb") as f:\n        f.write(contents)\n\n    # \uc378\ub124\uc77c \uc800\uc7a5\n    thumb_io = io.BytesIO()\n    image.save(thumb_io, format=\'JPEG\', quality=85)\n    with open(UPLOAD_DIR / thumbnail_filename, "wb") as f:\n        f.write(thumb_io.getvalue())\n\n    return {\n        "original": original_filename,\n        "thumbnail": thumbnail_filename\n    }\n'})}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Frontend (Vue 3):"})}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { ref, computed } from \'vue\'\nimport axios from \'axios\'\n\nconst file = ref<File | null>(null)\nconst preview = ref(\'\')\nconst uploading = ref(false)\nconst progress = ref(0)\n\nconst handleFileSelect = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const selected = target.files?.[0]\n\n  if (!selected) return\n\n  // \uac80\uc99d\n  if (![\'image/jpeg\', \'image/png\'].includes(selected.type)) {\n    alert(\'JPG, PNG\ub9cc \uac00\ub2a5\ud569\ub2c8\ub2e4\')\n    return\n  }\n\n  if (selected.size > 5 * 1024 * 1024) {\n    alert(\'\ud30c\uc77c \ud06c\uae30\ub294 5MB \uc774\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4\')\n    return\n  }\n\n  file.value = selected\n  preview.value = URL.createObjectURL(selected)\n}\n\nconst uploadImage = async () => {\n  if (!file.value) return\n\n  const formData = new FormData()\n  formData.append(\'file\', file.value)\n\n  uploading.value = true\n\n  try {\n    const { data } = await axios.post(\'/api/profile/upload\', formData, {\n      params: { user_id: 1 },\n      onUploadProgress: (e) => {\n        if (e.total) {\n          progress.value = Math.round((e.loaded * 100) / e.total)\n        }\n      }\n    })\n\n    alert(\'\uc5c5\ub85c\ub4dc \uc131\uacf5!\')\n    console.log(data)\n  } catch (error) {\n    alert(\'\uc5c5\ub85c\ub4dc \uc2e4\ud328\')\n  } finally {\n    uploading.value = false\n  }\n}\n<\/script>\n\n<template>\n  <div class="profile-upload">\n    <div class="preview" v-if="preview">\n      <img :src="preview" alt="Preview" />\n    </div>\n\n    <input\n      type="file"\n      accept="image/jpeg,image/png"\n      @change="handleFileSelect"\n      :disabled="uploading"\n    />\n\n    <div v-if="uploading" class="progress">\n      <div class="bar" :style="{ width: `${progress}%` }"></div>\n      <span>{{ progress }}%</span>\n    </div>\n\n    <button\n      @click="uploadImage"\n      :disabled="!file || uploading"\n    >\n      {{ uploading ? \'\uc5c5\ub85c\ub4dc \uc911...\' : \'\uc5c5\ub85c\ub4dc\' }}\n    </button>\n  </div>\n</template>\n'})})]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsxs)(e.p,{children:["\ub2e4\uc74c: ",(0,t.jsx)(e.a,{href:"./crud-basics",children:"CRUD \uad6c\ud604"})]}),"\n",(0,t.jsx)(e.admonition,{title:"\ubcf4\uc548 \uc8fc\uc758\uc0ac\ud56d",type:"warning",children:(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ud30c\uc77c \ud0c0\uc785 \uac80\uc99d"}),": \ud655\uc7a5\uc790\uac00 \uc544\ub2cc \uc2e4\uc81c MIME type \ud655\uc778"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ud30c\uc77c\uba85 \uc0b4\uade0"}),": \uacbd\ub85c \uad6c\ubd84\uc790, \ud2b9\uc218\ubb38\uc790 \uc81c\uac70"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ud06c\uae30 \uc81c\ud55c"}),": \uc11c\ubc84 \ub9ac\uc18c\uc2a4 \ubcf4\ud638"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\ubc14\uc774\ub7ec\uc2a4 \uac80\uc0ac"}),": \ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 \ubc31\uc2e0 \uc2a4\uce94 \ud544\uc218"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\uc800\uc7a5 \uc704\uce58"}),": \uc6f9 \ub8e8\ud2b8 \ubc16\uc5d0 \uc800\uc7a5"]}),"\n"]})})]})}function c(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}}}]);