"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[8605],{3453:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>i});const l=JSON.parse('{"id":"apscheduler/installation","title":"1. \uc124\uce58 \ubc0f \uc124\uc815","description":"APScheduler(Advanced Python Scheduler)\ub294 Python \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc791\uc5c5\uc744 \uc608\uc57d\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uac15\ub825\ud558\uace0 \uc720\uc5f0\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 APScheduler\uc758 \uc124\uce58 \ubc29\ubc95\uacfc \uae30\ubcf8 \uc124\uc815\uc5d0 \ub300\ud574 \uc0c1\uc138\ud788 \ub2e4\ub8f9\ub2c8\ub2e4.","source":"@site/docs/apscheduler/installation.md","sourceDirName":"apscheduler","slug":"/apscheduler/installation","permalink":"/docs/apscheduler/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/apscheduler/installation.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"apschedulerSidebar","previous":{"title":"APScheduler \uac00\uc774\ub4dc","permalink":"/docs/apscheduler/intro"},"next":{"title":"2. \uc2a4\ucf00\uc904\ub7ec","permalink":"/docs/apscheduler/schedulers"}}');var o=r(4848),d=r(8453);const s={sidebar_position:2},t="1. \uc124\uce58 \ubc0f \uc124\uc815",a={},i=[{value:"\uc124\uce58",id:"\uc124\uce58",level:2},{value:"\uae30\ubcf8 \uc124\uce58",id:"\uae30\ubcf8-\uc124\uce58",level:3},{value:"\ud2b9\uc815 \ubc84\uc804 \uc124\uce58",id:"\ud2b9\uc815-\ubc84\uc804-\uc124\uce58",level:3},{value:"\ucd94\uac00 \uc758\uc874\uc131 \uc124\uce58",id:"\ucd94\uac00-\uc758\uc874\uc131-\uc124\uce58",level:3},{value:"\uac1c\ubc1c \ud658\uacbd \uc124\uc815",id:"\uac1c\ubc1c-\ud658\uacbd-\uc124\uc815",level:3},{value:"\uc124\uce58 \ud655\uc778",id:"\uc124\uce58-\ud655\uc778",level:3},{value:"\uccab \uc2a4\ucf00\uc904\ub7ec",id:"\uccab-\uc2a4\ucf00\uc904\ub7ec",level:2},{value:"\uac00\uc7a5 \uac04\ub2e8\ud55c \uc608\uc81c",id:"\uac00\uc7a5-\uac04\ub2e8\ud55c-\uc608\uc81c",level:3},{value:"BackgroundScheduler \uc0ac\uc6a9 \uc608\uc81c",id:"backgroundscheduler-\uc0ac\uc6a9-\uc608\uc81c",level:3},{value:"\ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud55c \uac04\ud3b8\ud55c \uc791\uc5c5 \ucd94\uac00",id:"\ub370\ucf54\ub808\uc774\ud130\ub97c-\uc0ac\uc6a9\ud55c-\uac04\ud3b8\ud55c-\uc791\uc5c5-\ucd94\uac00",level:3},{value:"\ud2b9\uc815 \uc2dc\uac04\uc5d0 \ud55c \ubc88\ub9cc \uc2e4\ud589",id:"\ud2b9\uc815-\uc2dc\uac04\uc5d0-\ud55c-\ubc88\ub9cc-\uc2e4\ud589",level:3},{value:"\uc5ec\ub7ec \uc791\uc5c5 \ub3d9\uc2dc \uad00\ub9ac",id:"\uc5ec\ub7ec-\uc791\uc5c5-\ub3d9\uc2dc-\uad00\ub9ac",level:3},{value:"\uae30\ubcf8 \uc124\uc815",id:"\uae30\ubcf8-\uc124\uc815",level:2},{value:"\uc2a4\ucf00\uc904\ub7ec \uc124\uc815 \uc635\uc158",id:"\uc2a4\ucf00\uc904\ub7ec-\uc124\uc815-\uc635\uc158",level:3},{value:"\ub515\uc154\ub108\ub9ac\ub97c \ud1b5\ud55c \uc124\uc815",id:"\ub515\uc154\ub108\ub9ac\ub97c-\ud1b5\ud55c-\uc124\uc815",level:3},{value:"\uc124\uc815 \ud30c\uc77c\uc744 \ud1b5\ud55c \uad6c\uc131",id:"\uc124\uc815-\ud30c\uc77c\uc744-\ud1b5\ud55c-\uad6c\uc131",level:3},{value:"\ud658\uacbd\ubcc4 \uc124\uc815 \uad00\ub9ac",id:"\ud658\uacbd\ubcc4-\uc124\uc815-\uad00\ub9ac",level:3},{value:"Timezone \uc124\uc815",id:"timezone-\uc124\uc815",level:3},{value:"Job\ubcc4 \uac1c\ubcc4 \uc124\uc815",id:"job\ubcc4-\uac1c\ubcc4-\uc124\uc815",level:3},{value:"\ub85c\uae45 \uc124\uc815",id:"\ub85c\uae45-\uc124\uc815",level:2},{value:"\uae30\ubcf8 \ub85c\uae45 \uc124\uc815",id:"\uae30\ubcf8-\ub85c\uae45-\uc124\uc815",level:3},{value:"\uc0c1\uc138 \ub85c\uae45 \uc124\uc815",id:"\uc0c1\uc138-\ub85c\uae45-\uc124\uc815",level:3},{value:"\ub808\ubca8\ubcc4 \ub85c\uae45 \uc124\uc815",id:"\ub808\ubca8\ubcc4-\ub85c\uae45-\uc124\uc815",level:3},{value:"\uad6c\uc870\ud654\ub41c \ub85c\uae45 (JSON)",id:"\uad6c\uc870\ud654\ub41c-\ub85c\uae45-json",level:3},{value:"\uc774\ubca4\ud2b8 \uae30\ubc18 \ub85c\uae45",id:"\uc774\ubca4\ud2b8-\uae30\ubc18-\ub85c\uae45",level:3},{value:"\ucee4\uc2a4\ud140 \ub85c\uac70 \ud074\ub798\uc2a4",id:"\ucee4\uc2a4\ud140-\ub85c\uac70-\ud074\ub798\uc2a4",level:3},{value:"\ud504\ub85c\ub355\uc158 \ud658\uacbd \ub85c\uae45 \uc124\uc815",id:"\ud504\ub85c\ub355\uc158-\ud658\uacbd-\ub85c\uae45-\uc124\uc815",level:3},{value:"\ub85c\uadf8 \ud544\ud130\ub9c1",id:"\ub85c\uadf8-\ud544\ud130\ub9c1",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"1-\uc124\uce58-\ubc0f-\uc124\uc815",children:"1. \uc124\uce58 \ubc0f \uc124\uc815"})}),"\n",(0,o.jsx)(n.p,{children:"APScheduler(Advanced Python Scheduler)\ub294 Python \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc791\uc5c5\uc744 \uc608\uc57d\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uac15\ub825\ud558\uace0 \uc720\uc5f0\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 APScheduler\uc758 \uc124\uce58 \ubc29\ubc95\uacfc \uae30\ubcf8 \uc124\uc815\uc5d0 \ub300\ud574 \uc0c1\uc138\ud788 \ub2e4\ub8f9\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.h2,{id:"\uc124\uce58",children:"\uc124\uce58"}),"\n",(0,o.jsx)(n.h3,{id:"\uae30\ubcf8-\uc124\uce58",children:"\uae30\ubcf8 \uc124\uce58"}),"\n",(0,o.jsx)(n.p,{children:"APScheduler\ub294 pip\ub97c \ud1b5\ud574 \uac04\ub2e8\ud558\uac8c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install apscheduler\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ud2b9\uc815-\ubc84\uc804-\uc124\uce58",children:"\ud2b9\uc815 \ubc84\uc804 \uc124\uce58"}),"\n",(0,o.jsx)(n.p,{children:"\uc548\uc815\uc131\uc744 \uc704\ud574 \ud2b9\uc815 \ubc84\uc804\uc744 \uc124\uce58\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# \ucd5c\uc2e0 3.x \ubc84\uc804 \uc124\uce58\npip install apscheduler==3.10.4\n\n# \ubc84\uc804 \ubc94\uc704 \uc9c0\uc815\npip install "apscheduler>=3.9.0,<4.0.0"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"\ucd94\uac00-\uc758\uc874\uc131-\uc124\uce58",children:"\ucd94\uac00 \uc758\uc874\uc131 \uc124\uce58"}),"\n",(0,o.jsx)(n.p,{children:"APScheduler\ub294 \ub2e4\uc591\ud55c \ubc31\uc5d4\ub4dc\ub97c \uc9c0\uc6d0\ud558\uba70, \uac01 \ubc31\uc5d4\ub4dc\uc5d0 \ud544\uc694\ud55c \ucd94\uac00 \ud328\ud0a4\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# SQLAlchemy \uc9c0\uc6d0 (\ub370\uc774\ud130\ubca0\uc774\uc2a4 job store)\npip install apscheduler[sqlalchemy]\n\n# MongoDB \uc9c0\uc6d0\npip install apscheduler[mongodb]\n\n# Redis \uc9c0\uc6d0\npip install apscheduler[redis]\n\n# Tornado \uc9c0\uc6d0\npip install apscheduler[tornado]\n\n# Twisted \uc9c0\uc6d0\npip install apscheduler[twisted]\n\n# \ubaa8\ub4e0 \uc758\uc874\uc131 \uc124\uce58\npip install apscheduler[all]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uac1c\ubc1c-\ud658\uacbd-\uc124\uc815",children:"\uac1c\ubc1c \ud658\uacbd \uc124\uc815"}),"\n",(0,o.jsx)(n.p,{children:"\ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c APScheduler\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 requirements.txt \ud30c\uc77c\uc5d0 \uba85\uc2dc\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",metastring:'title="requirements.txt"',children:"apscheduler==3.10.4\npytz==2023.3  # \ud0c0\uc784\uc874 \uc9c0\uc6d0\ntzlocal==5.0.1  # \ub85c\uceec \ud0c0\uc784\uc874 \uc790\ub3d9 \uac10\uc9c0\n"})}),"\n",(0,o.jsx)(n.p,{children:"Poetry\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"poetry add apscheduler\npoetry add apscheduler --extras sqlalchemy  # SQLAlchemy \uc9c0\uc6d0 \ud3ec\ud568\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uc124\uce58-\ud655\uc778",children:"\uc124\uce58 \ud655\uc778"}),"\n",(0,o.jsx)(n.p,{children:"\uc124\uce58\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \uc644\ub8cc\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import apscheduler\nprint(apscheduler.__version__)  # 3.10.4\n"})}),"\n",(0,o.jsx)(n.p,{children:"\ub354 \uc0c1\uc138\ud55c \ubc84\uc804 \uc815\ubcf4 \ud655\uc778:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.jobstores.memory import MemoryJobStore\nfrom apscheduler.executors.pool import ThreadPoolExecutor\n\nscheduler = BackgroundScheduler()\nprint(f"APScheduler \ubc84\uc804: {apscheduler.__version__}")\nprint(f"\uc2a4\ucf00\uc904\ub7ec \ud0c0\uc785: {type(scheduler).__name__}")\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\uccab-\uc2a4\ucf00\uc904\ub7ec",children:"\uccab \uc2a4\ucf00\uc904\ub7ec"}),"\n",(0,o.jsx)(n.p,{children:"APScheduler\ub97c \ucc98\uc74c \uc0ac\uc6a9\ud560 \ub54c\ub294 \uac04\ub2e8\ud55c \uc608\uc81c\ubd80\ud130 \uc2dc\uc791\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.h3,{id:"\uac00\uc7a5-\uac04\ub2e8\ud55c-\uc608\uc81c",children:"\uac00\uc7a5 \uac04\ub2e8\ud55c \uc608\uc81c"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.blocking import BlockingScheduler\nfrom datetime import datetime\n\ndef my_job():\n    print(f"\uc791\uc5c5 \uc2e4\ud589 \uc2dc\uac04: {datetime.now()}")\n\n# \uc2a4\ucf00\uc904\ub7ec \uc0dd\uc131\nscheduler = BlockingScheduler()\n\n# 3\ucd08\ub9c8\ub2e4 \uc791\uc5c5 \uc2e4\ud589\nscheduler.add_job(my_job, \'interval\', seconds=3)\n\n# \uc2a4\ucf00\uc904\ub7ec \uc2dc\uc791\nprint("\uc2a4\ucf00\uc904\ub7ec \uc2dc\uc791...")\nscheduler.start()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"backgroundscheduler-\uc0ac\uc6a9-\uc608\uc81c",children:"BackgroundScheduler \uc0ac\uc6a9 \uc608\uc81c"}),"\n",(0,o.jsx)(n.p,{children:"\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uacc4\uc18d \uc2e4\ud589\ub418\uc5b4\uc57c \ud560 \ub54c\ub294 BackgroundScheduler\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\ndef tick():\n    print(f'\ud2f1! \ud604\uc7ac \uc2dc\uac01: {datetime.now()}')\n\n# \uc2a4\ucf00\uc904\ub7ec \uc0dd\uc131\nscheduler = BackgroundScheduler()\n\n# 5\ucd08\ub9c8\ub2e4 \uc2e4\ud589\nscheduler.add_job(tick, 'interval', seconds=5)\n\n# \uc2a4\ucf00\uc904\ub7ec \uc2dc\uc791\nscheduler.start()\n\nprint(\"\uc2a4\ucf00\uc904\ub7ec\uac00 \ubc31\uadf8\ub77c\uc6b4\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc785\ub2c8\ub2e4. Ctrl+C\ub97c \ub20c\ub7ec \uc885\ub8cc\ud558\uc138\uc694.\")\n\ntry:\n    # \uba54\uc778 \uc2a4\ub808\ub4dc\ub294 \uacc4\uc18d \uc2e4\ud589\n    while True:\n        time.sleep(1)\nexcept (KeyboardInterrupt, SystemExit):\n    # \uc885\ub8cc \uc2dc \uc2a4\ucf00\uc904\ub7ec\ub3c4 \uc815\ub9ac\n    scheduler.shutdown()\n    print(\"\uc2a4\ucf00\uc904\ub7ec \uc885\ub8cc\ub428\")\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ub370\ucf54\ub808\uc774\ud130\ub97c-\uc0ac\uc6a9\ud55c-\uac04\ud3b8\ud55c-\uc791\uc5c5-\ucd94\uac00",children:"\ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud55c \uac04\ud3b8\ud55c \uc791\uc5c5 \ucd94\uac00"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\nscheduler = BackgroundScheduler()\n\n@scheduler.scheduled_job('interval', seconds=10)\ndef scheduled_task():\n    print(f\"\uc608\uc57d\ub41c \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}\")\n\n@scheduler.scheduled_job('cron', hour=9, minute=0)\ndef morning_task():\n    print(\"\uc88b\uc740 \uc544\uce68\uc785\ub2c8\ub2e4!\")\n\nscheduler.start()\n\ntry:\n    while True:\n        time.sleep(1)\nexcept (KeyboardInterrupt, SystemExit):\n    scheduler.shutdown()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ud2b9\uc815-\uc2dc\uac04\uc5d0-\ud55c-\ubc88\ub9cc-\uc2e4\ud589",children:"\ud2b9\uc815 \uc2dc\uac04\uc5d0 \ud55c \ubc88\ub9cc \uc2e4\ud589"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime, timedelta\nimport time\n\ndef one_time_job():\n    print(f"\uc77c\ud68c\uc131 \uc791\uc5c5 \uc2e4\ud589: {datetime.now()}")\n\nscheduler = BackgroundScheduler()\n\n# 10\ucd08 \ud6c4\uc5d0 \ud55c \ubc88\ub9cc \uc2e4\ud589\nrun_time = datetime.now() + timedelta(seconds=10)\nscheduler.add_job(one_time_job, \'date\', run_date=run_time)\n\nscheduler.start()\n\nprint(f"\uc791\uc5c5\uc774 {run_time}\uc5d0 \uc2e4\ud589\ub420 \uc608\uc815\uc785\ub2c8\ub2e4.")\n\ntry:\n    # 20\ucd08 \ub3d9\uc548 \ub300\uae30\n    time.sleep(20)\nexcept (KeyboardInterrupt, SystemExit):\n    pass\nfinally:\n    scheduler.shutdown()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"\uc5ec\ub7ec-\uc791\uc5c5-\ub3d9\uc2dc-\uad00\ub9ac",children:"\uc5ec\ub7ec \uc791\uc5c5 \ub3d9\uc2dc \uad00\ub9ac"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom datetime import datetime\nimport time\n\ndef data_backup():\n    print(f"[{datetime.now()}] \ub370\uc774\ud130 \ubc31\uc5c5 \uc2dc\uc791")\n    # \ubc31\uc5c5 \ub85c\uc9c1\n    time.sleep(2)\n    print(f"[{datetime.now()}] \ub370\uc774\ud130 \ubc31\uc5c5 \uc644\ub8cc")\n\ndef send_report():\n    print(f"[{datetime.now()}] \ub9ac\ud3ec\ud2b8 \uc804\uc1a1")\n\ndef cleanup_cache():\n    print(f"[{datetime.now()}] \uce90\uc2dc \uc815\ub9ac")\n\nscheduler = BackgroundScheduler()\n\n# \ub9e4\uc2dc\uac04 \ubc31\uc5c5\nscheduler.add_job(data_backup, \'interval\', hours=1, id=\'backup_job\')\n\n# \ub9e4\uc77c \uc624\uc804 9\uc2dc \ub9ac\ud3ec\ud2b8 \uc804\uc1a1\nscheduler.add_job(send_report, \'cron\', hour=9, minute=0, id=\'report_job\')\n\n# 30\ubd84\ub9c8\ub2e4 \uce90\uc2dc \uc815\ub9ac\nscheduler.add_job(cleanup_cache, \'interval\', minutes=30, id=\'cleanup_job\')\n\nscheduler.start()\n\nprint("\uc5ec\ub7ec \uc791\uc5c5\uc774 \uc2a4\ucf00\uc904\ub9c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4.")\nprint("\ub4f1\ub85d\ub41c \uc791\uc5c5 \ubaa9\ub85d:")\nfor job in scheduler.get_jobs():\n    print(f"  - {job.id}: {job.next_run_time}")\n\ntry:\n    while True:\n        time.sleep(1)\nexcept (KeyboardInterrupt, SystemExit):\n    scheduler.shutdown()\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\uae30\ubcf8-\uc124\uc815",children:"\uae30\ubcf8 \uc124\uc815"}),"\n",(0,o.jsx)(n.p,{children:"APScheduler\uc758 \ub3d9\uc791\uc744 \uc138\ubc00\ud558\uac8c \uc81c\uc5b4\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \uc124\uc815 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.h3,{id:"\uc2a4\ucf00\uc904\ub7ec-\uc124\uc815-\uc635\uc158",children:"\uc2a4\ucf00\uc904\ub7ec \uc124\uc815 \uc635\uc158"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.jobstores.memory import MemoryJobStore\nfrom apscheduler.executors.pool import ThreadPoolExecutor, ProcessPoolExecutor\nfrom pytz import utc\n\n# Job Store \uc124\uc815\njobstores = {\n    'default': MemoryJobStore()\n}\n\n# Executor \uc124\uc815\nexecutors = {\n    'default': ThreadPoolExecutor(max_workers=20),\n    'processpool': ProcessPoolExecutor(max_workers=5)\n}\n\n# Job \uae30\ubcf8 \uc124\uc815\njob_defaults = {\n    'coalesce': False,  # \ub204\uc801\ub41c \uc2e4\ud589\uc744 \ud558\ub098\ub85c \ud569\uce58\uc9c0 \uc54a\uc74c\n    'max_instances': 3,  # \ub3d9\uc77c job\uc758 \ucd5c\ub300 \ub3d9\uc2dc \uc2e4\ud589 \uc778\uc2a4\ud134\uc2a4 \uc218\n    'misfire_grace_time': 30  # job\uc774 \uc608\uc815 \uc2dc\uac04\ubcf4\ub2e4 \ub2a6\uac8c \uc2e4\ud589\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uc2dc\uac04(\ucd08)\n}\n\n# \uc2a4\ucf00\uc904\ub7ec \uc0dd\uc131\nscheduler = BackgroundScheduler(\n    jobstores=jobstores,\n    executors=executors,\n    job_defaults=job_defaults,\n    timezone=utc\n)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ub515\uc154\ub108\ub9ac\ub97c-\ud1b5\ud55c-\uc124\uc815",children:"\ub515\uc154\ub108\ub9ac\ub97c \ud1b5\ud55c \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\n\nconfig = {\n    'apscheduler.jobstores.default': {\n        'type': 'memory'\n    },\n    'apscheduler.executors.default': {\n        'class': 'apscheduler.executors.pool:ThreadPoolExecutor',\n        'max_workers': '20'\n    },\n    'apscheduler.executors.processpool': {\n        'type': 'processpool',\n        'max_workers': '5'\n    },\n    'apscheduler.job_defaults.coalesce': 'false',\n    'apscheduler.job_defaults.max_instances': '3',\n    'apscheduler.timezone': 'Asia/Seoul'\n}\n\nscheduler = BackgroundScheduler()\nscheduler.configure(config)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uc124\uc815-\ud30c\uc77c\uc744-\ud1b5\ud55c-\uad6c\uc131",children:"\uc124\uc815 \ud30c\uc77c\uc744 \ud1b5\ud55c \uad6c\uc131"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",metastring:'title="scheduler.ini"',children:"[apscheduler]\ntimezone = Asia/Seoul\n\n[jobstores]\ndefault.type = memory\n\n[executors]\ndefault.class = apscheduler.executors.pool:ThreadPoolExecutor\ndefault.max_workers = 20\n\nprocesspool.type = processpool\nprocesspool.max_workers = 5\n\n[job_defaults]\ncoalesce = false\nmax_instances = 3\nmisfire_grace_time = 30\n"})}),"\n",(0,o.jsx)(n.p,{children:"\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\nfrom configparser import ConfigParser\n\nconfig = ConfigParser()\nconfig.read('scheduler.ini')\n\n# \uc124\uc815 \ub515\uc154\ub108\ub9ac\ub85c \ubcc0\ud658\nscheduler_config = {}\nfor section in config.sections():\n    for key, value in config.items(section):\n        scheduler_config[f'{section}.{key}'] = value\n\nscheduler = BackgroundScheduler()\nscheduler.configure(scheduler_config)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ud658\uacbd\ubcc4-\uc124\uc815-\uad00\ub9ac",children:"\ud658\uacbd\ubcc4 \uc124\uc815 \uad00\ub9ac"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import os\nfrom apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.jobstores.memory import MemoryJobStore\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\nfrom apscheduler.executors.pool import ThreadPoolExecutor\n\nclass SchedulerConfig:\n    \"\"\"\ud658\uacbd\ubcc4 \uc2a4\ucf00\uc904\ub7ec \uc124\uc815\"\"\"\n\n    @staticmethod\n    def get_config(environment='development'):\n        configs = {\n            'development': {\n                'jobstores': {\n                    'default': MemoryJobStore()\n                },\n                'executors': {\n                    'default': ThreadPoolExecutor(max_workers=10)\n                },\n                'job_defaults': {\n                    'coalesce': True,\n                    'max_instances': 1\n                }\n            },\n            'production': {\n                'jobstores': {\n                    'default': SQLAlchemyJobStore(\n                        url=os.getenv('DATABASE_URL', 'sqlite:///jobs.sqlite')\n                    )\n                },\n                'executors': {\n                    'default': ThreadPoolExecutor(max_workers=20)\n                },\n                'job_defaults': {\n                    'coalesce': False,\n                    'max_instances': 3,\n                    'misfire_grace_time': 60\n                }\n            }\n        }\n        return configs.get(environment, configs['development'])\n\n# \uc0ac\uc6a9 \uc608\uc81c\nenv = os.getenv('APP_ENV', 'development')\nconfig = SchedulerConfig.get_config(env)\n\nscheduler = BackgroundScheduler(**config)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"timezone-\uc124\uc815",children:"Timezone \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from apscheduler.schedulers.background import BackgroundScheduler\nfrom pytz import timezone, utc\nfrom datetime import datetime\n\n# UTC \uae30\uc900 \uc2a4\ucf00\uc904\ub7ec\nscheduler_utc = BackgroundScheduler(timezone=utc)\n\n# \ud55c\uad6d \uc2dc\uac04\ub300 \uae30\uc900\nseoul_tz = timezone(\'Asia/Seoul\')\nscheduler_kr = BackgroundScheduler(timezone=seoul_tz)\n\ndef print_time():\n    print(f"\ud604\uc7ac \uc2dc\uac01: {datetime.now()}")\n    print(f"UTC: {datetime.now(utc)}")\n    print(f"\uc11c\uc6b8: {datetime.now(seoul_tz)}")\n\n# \ub9e4\uc77c \uc624\uc804 9\uc2dc (\uc11c\uc6b8 \uc2dc\uac04)\nscheduler_kr.add_job(print_time, \'cron\', hour=9, minute=0)\n\nscheduler_kr.start()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"job\ubcc4-\uac1c\ubcc4-\uc124\uc815",children:"Job\ubcc4 \uac1c\ubcc4 \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from apscheduler.schedulers.background import BackgroundScheduler\n\nscheduler = BackgroundScheduler()\n\ndef critical_task():\n    print(\"\uc911\uc694\ud55c \uc791\uc5c5\")\n\ndef normal_task():\n    print(\"\uc77c\ubc18 \uc791\uc5c5\")\n\n# \uc911\uc694\ud55c \uc791\uc5c5: \ub193\uce58\uba74 \uc548 \ub418\ubbc0\ub85c misfire_grace_time\uc744 \uae38\uac8c\nscheduler.add_job(\n    critical_task,\n    'interval',\n    minutes=10,\n    id='critical',\n    misfire_grace_time=300,  # 5\ubd84\n    max_instances=1,\n    coalesce=True\n)\n\n# \uc77c\ubc18 \uc791\uc5c5: \ub193\uccd0\ub3c4 \uad1c\ucc2e\uc74c\nscheduler.add_job(\n    normal_task,\n    'interval',\n    minutes=5,\n    id='normal',\n    misfire_grace_time=10,  # 10\ucd08\n    max_instances=3,\n    coalesce=False\n)\n\nscheduler.start()\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\ub85c\uae45-\uc124\uc815",children:"\ub85c\uae45 \uc124\uc815"}),"\n",(0,o.jsx)(n.p,{children:"APScheduler\uc758 \ub3d9\uc791\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ub514\ubc84\uae45\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc801\uc808\ud55c \ub85c\uae45 \uc124\uc815\uc774 \ud544\uc218\uc785\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.h3,{id:"\uae30\ubcf8-\ub85c\uae45-\uc124\uc815",children:"\uae30\ubcf8 \ub85c\uae45 \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import logging\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\n# \ub85c\uae45 \uae30\ubcf8 \uc124\uc815\nlogging.basicConfig(\n    level=logging.INFO,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n)\n\n# APScheduler \ub85c\uac70 \uc124\uc815\nlogging.getLogger('apscheduler').setLevel(logging.DEBUG)\n\nscheduler = BackgroundScheduler()\n\ndef test_job():\n    print(\"\ud14c\uc2a4\ud2b8 \uc791\uc5c5 \uc2e4\ud589\")\n\nscheduler.add_job(test_job, 'interval', seconds=5)\nscheduler.start()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uc0c1\uc138-\ub85c\uae45-\uc124\uc815",children:"\uc0c1\uc138 \ub85c\uae45 \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import logging\nfrom logging.handlers import RotatingFileHandler\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\n# \ub85c\uac70 \uc0dd\uc131\nlogger = logging.getLogger('apscheduler')\nlogger.setLevel(logging.DEBUG)\n\n# \ucf58\uc194 \ud578\ub4e4\ub7ec\nconsole_handler = logging.StreamHandler()\nconsole_handler.setLevel(logging.INFO)\nconsole_formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n)\nconsole_handler.setFormatter(console_formatter)\n\n# \ud30c\uc77c \ud578\ub4e4\ub7ec (\ub85c\ud14c\uc774\uc158)\nfile_handler = RotatingFileHandler(\n    'scheduler.log',\n    maxBytes=10*1024*1024,  # 10MB\n    backupCount=5\n)\nfile_handler.setLevel(logging.DEBUG)\nfile_formatter = logging.Formatter(\n    '%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s'\n)\nfile_handler.setFormatter(file_formatter)\n\n# \ud578\ub4e4\ub7ec \ucd94\uac00\nlogger.addHandler(console_handler)\nlogger.addHandler(file_handler)\n\nscheduler = BackgroundScheduler()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ub808\ubca8\ubcc4-\ub85c\uae45-\uc124\uc815",children:"\ub808\ubca8\ubcc4 \ub85c\uae45 \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import logging\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\n# \uac01 \ucef4\ud3ec\ub10c\ud2b8\ubcc4\ub85c \ub2e4\ub978 \ub85c\uadf8 \ub808\ubca8 \uc124\uc815\nlogging.getLogger('apscheduler.scheduler').setLevel(logging.INFO)\nlogging.getLogger('apscheduler.executors').setLevel(logging.WARNING)\nlogging.getLogger('apscheduler.jobstores').setLevel(logging.DEBUG)\n\n# \uae30\ubcf8 \uc124\uc815\nlogging.basicConfig(\n    level=logging.DEBUG,\n    format='%(asctime)s [%(levelname)s] %(name)s: %(message)s',\n    handlers=[\n        logging.StreamHandler(),\n        logging.FileHandler('scheduler_detailed.log')\n    ]\n)\n\nscheduler = BackgroundScheduler()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uad6c\uc870\ud654\ub41c-\ub85c\uae45-json",children:"\uad6c\uc870\ud654\ub41c \ub85c\uae45 (JSON)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import logging\nimport json\nfrom datetime import datetime\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\nclass JsonFormatter(logging.Formatter):\n    \"\"\"JSON \ud615\uc2dd \ub85c\uadf8 \ud3ec\ub9f7\ud130\"\"\"\n\n    def format(self, record):\n        log_data = {\n            'timestamp': datetime.utcnow().isoformat(),\n            'level': record.levelname,\n            'logger': record.name,\n            'message': record.getMessage(),\n            'module': record.module,\n            'function': record.funcName,\n            'line': record.lineno\n        }\n\n        if record.exc_info:\n            log_data['exception'] = self.formatException(record.exc_info)\n\n        return json.dumps(log_data, ensure_ascii=False)\n\n# \ud578\ub4e4\ub7ec \uc124\uc815\nhandler = logging.FileHandler('scheduler_json.log')\nhandler.setFormatter(JsonFormatter())\n\n# APScheduler \ub85c\uac70\uc5d0 \ud578\ub4e4\ub7ec \ucd94\uac00\nlogger = logging.getLogger('apscheduler')\nlogger.addHandler(handler)\nlogger.setLevel(logging.INFO)\n\nscheduler = BackgroundScheduler()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\uc774\ubca4\ud2b8-\uae30\ubc18-\ub85c\uae45",children:"\uc774\ubca4\ud2b8 \uae30\ubc18 \ub85c\uae45"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import logging\nfrom apscheduler.schedulers.background import BackgroundScheduler\nfrom apscheduler.events import (\n    EVENT_JOB_EXECUTED, EVENT_JOB_ERROR,\n    EVENT_JOB_ADDED, EVENT_JOB_REMOVED,\n    EVENT_JOB_SUBMITTED, EVENT_JOB_MAX_INSTANCES\n)\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\ndef job_executed_listener(event):\n    logger.info(f'Job {event.job_id} \uc2e4\ud589 \uc644\ub8cc')\n\ndef job_error_listener(event):\n    logger.error(f'Job {event.job_id} \uc2e4\ud589 \uc911 \uc624\ub958 \ubc1c\uc0dd: {event.exception}')\n\ndef job_added_listener(event):\n    logger.info(f'Job {event.job_id} \ucd94\uac00\ub428')\n\ndef job_removed_listener(event):\n    logger.info(f'Job {event.job_id} \uc81c\uac70\ub428')\n\ndef job_submitted_listener(event):\n    logger.debug(f'Job {event.job_id} \uc81c\ucd9c\ub428')\n\ndef job_max_instances_listener(event):\n    logger.warning(f'Job {event.job_id} \ucd5c\ub300 \uc778\uc2a4\ud134\uc2a4 \uc218 \ub3c4\ub2ec')\n\nscheduler = BackgroundScheduler()\n\n# \uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108 \ub4f1\ub85d\nscheduler.add_listener(job_executed_listener, EVENT_JOB_EXECUTED)\nscheduler.add_listener(job_error_listener, EVENT_JOB_ERROR)\nscheduler.add_listener(job_added_listener, EVENT_JOB_ADDED)\nscheduler.add_listener(job_removed_listener, EVENT_JOB_REMOVED)\nscheduler.add_listener(job_submitted_listener, EVENT_JOB_SUBMITTED)\nscheduler.add_listener(job_max_instances_listener, EVENT_JOB_MAX_INSTANCES)\n\nscheduler.start()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ucee4\uc2a4\ud140-\ub85c\uac70-\ud074\ub798\uc2a4",children:"\ucee4\uc2a4\ud140 \ub85c\uac70 \ud074\ub798\uc2a4"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import logging\nfrom datetime import datetime\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\nclass SchedulerLogger:\n    """\uc2a4\ucf00\uc904\ub7ec \uc804\uc6a9 \ub85c\uac70"""\n\n    def __init__(self, name=\'scheduler\'):\n        self.logger = logging.getLogger(name)\n        self._setup_logger()\n\n    def _setup_logger(self):\n        """\ub85c\uac70 \ucd08\uae30 \uc124\uc815"""\n        self.logger.setLevel(logging.DEBUG)\n\n        # \ud3ec\ub9f7\ud130\n        formatter = logging.Formatter(\n            \'%(asctime)s [%(levelname)8s] %(message)s\',\n            datefmt=\'%Y-%m-%d %H:%M:%S\'\n        )\n\n        # \ucf58\uc194 \ud578\ub4e4\ub7ec\n        console = logging.StreamHandler()\n        console.setLevel(logging.INFO)\n        console.setFormatter(formatter)\n\n        # \ud30c\uc77c \ud578\ub4e4\ub7ec\n        file_handler = logging.FileHandler(\n            f\'scheduler_{datetime.now():%Y%m%d}.log\'\n        )\n        file_handler.setLevel(logging.DEBUG)\n        file_handler.setFormatter(formatter)\n\n        self.logger.addHandler(console)\n        self.logger.addHandler(file_handler)\n\n    def log_job_start(self, job_id):\n        """Job \uc2dc\uc791 \ub85c\uadf8"""\n        self.logger.info(f\'Job \uc2dc\uc791: {job_id}\')\n\n    def log_job_end(self, job_id, duration):\n        """Job \uc885\ub8cc \ub85c\uadf8"""\n        self.logger.info(f\'Job \uc885\ub8cc: {job_id} (\uc18c\uc694\uc2dc\uac04: {duration:.2f}\ucd08)\')\n\n    def log_job_error(self, job_id, error):\n        """Job \uc624\ub958 \ub85c\uadf8"""\n        self.logger.error(f\'Job \uc624\ub958: {job_id} - {error}\', exc_info=True)\n\n# \uc0ac\uc6a9 \uc608\uc81c\nscheduler_logger = SchedulerLogger()\n\ndef monitored_job():\n    import time\n    job_id = \'test_job\'\n    start_time = time.time()\n\n    try:\n        scheduler_logger.log_job_start(job_id)\n        # \uc791\uc5c5 \uc218\ud589\n        time.sleep(1)\n        duration = time.time() - start_time\n        scheduler_logger.log_job_end(job_id, duration)\n    except Exception as e:\n        scheduler_logger.log_job_error(job_id, e)\n        raise\n\nscheduler = BackgroundScheduler()\nscheduler.add_job(monitored_job, \'interval\', seconds=10)\nscheduler.start()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"\ud504\ub85c\ub355\uc158-\ud658\uacbd-\ub85c\uae45-\uc124\uc815",children:"\ud504\ub85c\ub355\uc158 \ud658\uacbd \ub85c\uae45 \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import logging\nimport logging.handlers\nimport os\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\ndef setup_production_logging():\n    \"\"\"\ud504\ub85c\ub355\uc158 \ud658\uacbd \ub85c\uae45 \uc124\uc815\"\"\"\n\n    # \ub85c\uadf8 \ub514\ub809\ud1a0\ub9ac \uc0dd\uc131\n    log_dir = 'logs'\n    os.makedirs(log_dir, exist_ok=True)\n\n    # \ub8e8\ud2b8 \ub85c\uac70 \uc124\uc815\n    root_logger = logging.getLogger()\n    root_logger.setLevel(logging.INFO)\n\n    # APScheduler \ub85c\uac70\n    scheduler_logger = logging.getLogger('apscheduler')\n    scheduler_logger.setLevel(logging.INFO)\n\n    # \ud3ec\ub9f7\ud130\n    detailed_formatter = logging.Formatter(\n        '%(asctime)s - %(name)s - %(levelname)s - '\n        '[%(filename)s:%(lineno)d] - %(message)s'\n    )\n\n    simple_formatter = logging.Formatter(\n        '%(asctime)s - %(levelname)s - %(message)s'\n    )\n\n    # \ucf58\uc194 \ud578\ub4e4\ub7ec (\uac04\ub2e8\ud55c \ud615\uc2dd)\n    console_handler = logging.StreamHandler()\n    console_handler.setLevel(logging.INFO)\n    console_handler.setFormatter(simple_formatter)\n\n    # \uc77c\ubc18 \ub85c\uadf8 \ud30c\uc77c (Timed Rotation)\n    info_handler = logging.handlers.TimedRotatingFileHandler(\n        filename=os.path.join(log_dir, 'scheduler.log'),\n        when='midnight',\n        interval=1,\n        backupCount=30,\n        encoding='utf-8'\n    )\n    info_handler.setLevel(logging.INFO)\n    info_handler.setFormatter(detailed_formatter)\n\n    # \uc5d0\ub7ec \ub85c\uadf8 \ud30c\uc77c\n    error_handler = logging.handlers.RotatingFileHandler(\n        filename=os.path.join(log_dir, 'scheduler_error.log'),\n        maxBytes=10*1024*1024,  # 10MB\n        backupCount=10,\n        encoding='utf-8'\n    )\n    error_handler.setLevel(logging.ERROR)\n    error_handler.setFormatter(detailed_formatter)\n\n    # \ud578\ub4e4\ub7ec \ucd94\uac00\n    scheduler_logger.addHandler(console_handler)\n    scheduler_logger.addHandler(info_handler)\n    scheduler_logger.addHandler(error_handler)\n\n    return scheduler_logger\n\n# \ud504\ub85c\ub355\uc158 \uc124\uc815 \uc801\uc6a9\nlogger = setup_production_logging()\n\nscheduler = BackgroundScheduler()\n\ndef production_job():\n    logger.info(\"\ud504\ub85c\ub355\uc158 \uc791\uc5c5 \uc2e4\ud589\")\n    try:\n        # \uc791\uc5c5 \ub85c\uc9c1\n        pass\n    except Exception as e:\n        logger.error(f\"\uc791\uc5c5 \uc2e4\ud589 \uc911 \uc624\ub958: {e}\", exc_info=True)\n        raise\n\nscheduler.add_job(production_job, 'interval', minutes=5)\nscheduler.start()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ub85c\uadf8-\ud544\ud130\ub9c1",children:"\ub85c\uadf8 \ud544\ud130\ub9c1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import logging\nfrom apscheduler.schedulers.background import BackgroundScheduler\n\nclass SensitiveDataFilter(logging.Filter):\n    """\ubbfc\uac10\ud55c \ub370\uc774\ud130 \ud544\ud130\ub9c1"""\n\n    def filter(self, record):\n        # \ube44\ubc00\ubc88\ud638 \ub4f1 \ubbfc\uac10\ud55c \uc815\ubcf4 \ub9c8\uc2a4\ud0b9\n        if hasattr(record, \'msg\'):\n            record.msg = str(record.msg).replace(\'password=\', \'password=***\')\n        return True\n\nclass LevelRangeFilter(logging.Filter):\n    """\ud2b9\uc815 \ub808\ubca8 \ubc94\uc704\ub9cc \ud5c8\uc6a9"""\n\n    def __init__(self, min_level, max_level):\n        super().__init__()\n        self.min_level = min_level\n        self.max_level = max_level\n\n    def filter(self, record):\n        return self.min_level <= record.levelno <= self.max_level\n\n# \ub85c\uac70 \uc124\uc815\nlogger = logging.getLogger(\'apscheduler\')\n\n# \ubbfc\uac10\ud55c \ub370\uc774\ud130 \ud544\ud130 \ucd94\uac00\nsensitive_filter = SensitiveDataFilter()\nlogger.addFilter(sensitive_filter)\n\n# INFO~WARNING \ub808\ubca8\ub9cc \ucf58\uc194\uc5d0 \ucd9c\ub825\nconsole_handler = logging.StreamHandler()\nlevel_filter = LevelRangeFilter(logging.INFO, logging.WARNING)\nconsole_handler.addFilter(level_filter)\nlogger.addHandler(console_handler)\n\nscheduler = BackgroundScheduler()\n'})}),"\n",(0,o.jsx)(n.p,{children:"\uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 APScheduler\uc758 \uc124\uce58\ubd80\ud130 \uae30\ubcf8 \uc124\uc815, \uadf8\ub9ac\uace0 \ub85c\uae45 \uc124\uc815\uae4c\uc9c0 \ub2e4\ub8e8\uc5c8\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \uc2a4\ucf00\uc904\ub7ec \ud0c0\uc785\uacfc \uadf8 \ud65c\uc6a9\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var l=r(6540);const o={},d=l.createContext(o);function s(e){const n=l.useContext(d);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),l.createElement(d.Provider,{value:n},e.children)}}}]);