"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[5441],{3957:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"python/advanced/typing","title":"5. \ud0c0\uc785 \ud78c\ud305","description":"\ud0c0\uc785 \ud78c\ud305(Type Hinting)\uc740 Python 3.5\ubd80\ud130 \ub3c4\uc785\ub41c \uae30\ub2a5\uc73c\ub85c, \ubcc0\uc218, \ud568\uc218 \ub9e4\uac1c\ubcc0\uc218, \ubc18\ud658\uac12\uc5d0 \ub300\ud55c \ud0c0\uc785 \uc815\ubcf4\ub97c \uba85\uc2dc\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. Python\uc740 \uc5ec\uc804\ud788 \ub3d9\uc801 \ud0c0\uc785 \uc5b8\uc5b4\uc774\uc9c0\ub9cc, \ud0c0\uc785 \ud78c\ud2b8\ub97c \ud1b5\ud574 \ucf54\ub4dc\uc758 \uac00\ub3c5\uc131\uacfc \uc720\uc9c0\ubcf4\uc218\uc131\uc744 \ud06c\uac8c \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4.","source":"@site/docs/python/advanced/typing.md","sourceDirName":"python/advanced","slug":"/python/advanced/typing","permalink":"/docs/python/advanced/typing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python/advanced/typing.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"pythonSidebar","previous":{"title":"4. \uc131\ub2a5 \ucd5c\uc801\ud654","permalink":"/docs/python/advanced/performance"},"next":{"title":"6. \ud14c\uc2a4\ud305","permalink":"/docs/python/advanced/testing"}}');var i=t(4848),r=t(8453);const a={sidebar_position:5},l="5. \ud0c0\uc785 \ud78c\ud305",o={},d=[{value:"5.1 \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720",id:"51-\ud0c0\uc785-\ud78c\ud2b8\ub97c-\uc0ac\uc6a9\ud558\ub294-\uc774\uc720",level:2},{value:"\uc8fc\uc694 \uc774\uc810",id:"\uc8fc\uc694-\uc774\uc810",level:3},{value:"5.2 \uae30\ubcf8 \ud0c0\uc785 \ud78c\ud2b8",id:"52-\uae30\ubcf8-\ud0c0\uc785-\ud78c\ud2b8",level:2},{value:"\uae30\ubcf8 \ud0c0\uc785\ub4e4",id:"\uae30\ubcf8-\ud0c0\uc785\ub4e4",level:3},{value:"None \ud0c0\uc785",id:"none-\ud0c0\uc785",level:3},{value:"5.3 typing \ubaa8\ub4c8",id:"53-typing-\ubaa8\ub4c8",level:2},{value:"\ucee8\ud14c\uc774\ub108 \ud0c0\uc785",id:"\ucee8\ud14c\uc774\ub108-\ud0c0\uc785",level:3},{value:"Python 3.9+ \ub0b4\uc7a5 \uc81c\ub124\ub9ad",id:"python-39-\ub0b4\uc7a5-\uc81c\ub124\ub9ad",level:3},{value:"Union\uacfc Optional",id:"union\uacfc-optional",level:3},{value:"5.4 \ud0c0\uc785 \ubcc4\uce6d (Type Aliases)",id:"54-\ud0c0\uc785-\ubcc4\uce6d-type-aliases",level:2},{value:"5.5 Callable \ud0c0\uc785",id:"55-callable-\ud0c0\uc785",level:2},{value:"5.6 \uc81c\ub124\ub9ad \ud0c0\uc785 (Generic Types)",id:"56-\uc81c\ub124\ub9ad-\ud0c0\uc785-generic-types",level:2},{value:"TypeVar \uc0ac\uc6a9",id:"typevar-\uc0ac\uc6a9",level:3},{value:"\uc81c\ub124\ub9ad \ud074\ub798\uc2a4",id:"\uc81c\ub124\ub9ad-\ud074\ub798\uc2a4",level:3},{value:"5.7 Protocol (\uad6c\uc870\uc801 \uc11c\ube0c\ud0c0\uc774\ud551)",id:"57-protocol-\uad6c\uc870\uc801-\uc11c\ube0c\ud0c0\uc774\ud551",level:2},{value:"5.8 Literal \ud0c0\uc785",id:"58-literal-\ud0c0\uc785",level:2},{value:"5.9 Final",id:"59-final",level:2},{value:"5.10 mypy\ub97c \uc0ac\uc6a9\ud55c \uc815\uc801 \ud0c0\uc785 \uccb4\ud06c",id:"510-mypy\ub97c-\uc0ac\uc6a9\ud55c-\uc815\uc801-\ud0c0\uc785-\uccb4\ud06c",level:2},{value:"mypy \uc124\uce58 \ubc0f \uc0ac\uc6a9",id:"mypy-\uc124\uce58-\ubc0f-\uc0ac\uc6a9",level:3},{value:"mypy \uc124\uc815 \ud30c\uc77c",id:"mypy-\uc124\uc815-\ud30c\uc77c",level:3},{value:"pyproject.toml \uc124\uc815",id:"pyprojecttoml-\uc124\uc815",level:3},{value:"\ud0c0\uc785 \uccb4\ud06c \uc608\uc2dc",id:"\ud0c0\uc785-\uccb4\ud06c-\uc608\uc2dc",level:3},{value:"mypy \uc2e4\ud589 \uacb0\uacfc",id:"mypy-\uc2e4\ud589-\uacb0\uacfc",level:3},{value:"\ud0c0\uc785 \uccb4\ud06c \ubb34\uc2dc",id:"\ud0c0\uc785-\uccb4\ud06c-\ubb34\uc2dc",level:3},{value:"5.11 \ud0c0\uc785 \uc2a4\ud141 \ud30c\uc77c (.pyi)",id:"511-\ud0c0\uc785-\uc2a4\ud141-\ud30c\uc77c-pyi",level:2},{value:"\uc2a4\ud141 \ud30c\uc77c \uc0dd\uc131",id:"\uc2a4\ud141-\ud30c\uc77c-\uc0dd\uc131",level:3},{value:"\uc11c\ub4dc\ud30c\ud2f0 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc2a4\ud141",id:"\uc11c\ub4dc\ud30c\ud2f0-\ub77c\uc774\ube0c\ub7ec\ub9ac-\uc2a4\ud141",level:3},{value:"stubgen\uc73c\ub85c \uc790\ub3d9 \uc0dd\uc131",id:"stubgen\uc73c\ub85c-\uc790\ub3d9-\uc0dd\uc131",level:3},{value:"5.12 \uc810\uc9c4\uc801 \ud0c0\uc774\ud551 (Gradual Typing)",id:"512-\uc810\uc9c4\uc801-\ud0c0\uc774\ud551-gradual-typing",level:2},{value:"\ub2e8\uacc4\ubcc4 \uc811\uadfc\ubc95",id:"\ub2e8\uacc4\ubcc4-\uc811\uadfc\ubc95",level:3},{value:"\uc6b0\uc120\uc21c\uc704 \uc804\ub7b5",id:"\uc6b0\uc120\uc21c\uc704-\uc804\ub7b5",level:3},{value:"\ud0c0\uc785 \ucee4\ubc84\ub9ac\uc9c0 \uce21\uc815",id:"\ud0c0\uc785-\ucee4\ubc84\ub9ac\uc9c0-\uce21\uc815",level:3},{value:"5.13 \uc2e4\uc804 \uc608\uc81c",id:"513-\uc2e4\uc804-\uc608\uc81c",level:2},{value:"\uc608\uc81c 1: \ud0c0\uc785\uc774 \uc9c0\uc815\ub41c REST API \ud074\ub77c\uc774\uc5b8\ud2b8",id:"\uc608\uc81c-1-\ud0c0\uc785\uc774-\uc9c0\uc815\ub41c-rest-api-\ud074\ub77c\uc774\uc5b8\ud2b8",level:3},{value:"\uc608\uc81c 2: \uc81c\ub124\ub9ad \ub370\uc774\ud130 \uc800\uc7a5\uc18c",id:"\uc608\uc81c-2-\uc81c\ub124\ub9ad-\ub370\uc774\ud130-\uc800\uc7a5\uc18c",level:3},{value:"\uc608\uc81c 3: \uc774\ubca4\ud2b8 \uc2dc\uc2a4\ud15c",id:"\uc608\uc81c-3-\uc774\ubca4\ud2b8-\uc2dc\uc2a4\ud15c",level:3},{value:"5.14 \ubaa8\ubc94 \uc0ac\ub840",id:"514-\ubaa8\ubc94-\uc0ac\ub840",level:2},{value:"1. \uacf5\uac1c API\uc5d0 \ud0c0\uc785 \ud78c\ud2b8 \ud544\uc218",id:"1-\uacf5\uac1c-api\uc5d0-\ud0c0\uc785-\ud78c\ud2b8-\ud544\uc218",level:3},{value:"2. \uad6c\uccb4\uc801\uc778 \ud0c0\uc785 \uc0ac\uc6a9",id:"2-\uad6c\uccb4\uc801\uc778-\ud0c0\uc785-\uc0ac\uc6a9",level:3},{value:"3. TypedDict\ub85c \uad6c\uc870\ud654\ub41c \ub515\uc154\ub108\ub9ac",id:"3-typeddict\ub85c-\uad6c\uc870\ud654\ub41c-\ub515\uc154\ub108\ub9ac",level:3},{value:"4. dataclass \ud65c\uc6a9",id:"4-dataclass-\ud65c\uc6a9",level:3},{value:"5. Optional\uc744 \uba85\uc2dc\uc801\uc73c\ub85c",id:"5-optional\uc744-\uba85\uc2dc\uc801\uc73c\ub85c",level:3},{value:"6. \uc81c\ub124\ub9ad \ud568\uc218\uc5d0 TypeVar \uc0ac\uc6a9",id:"6-\uc81c\ub124\ub9ad-\ud568\uc218\uc5d0-typevar-\uc0ac\uc6a9",level:3},{value:"7. Protocol\ub85c \uc778\ud130\ud398\uc774\uc2a4 \uc815\uc758",id:"7-protocol\ub85c-\uc778\ud130\ud398\uc774\uc2a4-\uc815\uc758",level:3},{value:"8. \ubcf5\uc7a1\ud55c \ud0c0\uc785\uc740 \ubcc4\uce6d \uc0ac\uc6a9",id:"8-\ubcf5\uc7a1\ud55c-\ud0c0\uc785\uc740-\ubcc4\uce6d-\uc0ac\uc6a9",level:3},{value:"5.15 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"515-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\uae30\ubcf8 \uc6d0\uce59",id:"\uae30\ubcf8-\uc6d0\uce59",level:3},{value:"\ud504\ub85c\uc81d\ud2b8 \uc124\uc815",id:"\ud504\ub85c\uc81d\ud2b8-\uc124\uc815",level:3},{value:"\ucf54\ub4dc \uc791\uc131",id:"\ucf54\ub4dc-\uc791\uc131",level:3},{value:"\uace0\uae09 \uae30\ubc95",id:"\uace0\uae09-\uae30\ubc95",level:3},{value:"\uc720\uc9c0\ubcf4\uc218",id:"\uc720\uc9c0\ubcf4\uc218",level:3},{value:"5.16 \uc720\uc6a9\ud55c \ud301",id:"516-\uc720\uc6a9\ud55c-\ud301",level:2},{value:"1. \uc810\uc9c4\uc801 \ub3c4\uc785 \uc804\ub7b5",id:"1-\uc810\uc9c4\uc801-\ub3c4\uc785-\uc804\ub7b5",level:3},{value:"2. mypy \uc124\uc815 \ub2e8\uacc4\ubcc4 \uc5c4\uaca9\ud654",id:"2-mypy-\uc124\uc815-\ub2e8\uacc4\ubcc4-\uc5c4\uaca9\ud654",level:3},{value:"3. \ud0c0\uc785 \ud78c\ud2b8 \ub514\ubc84\uae45",id:"3-\ud0c0\uc785-\ud78c\ud2b8-\ub514\ubc84\uae45",level:3},{value:"4. \ub7f0\ud0c0\uc784 \ud0c0\uc785 \uccb4\ud06c (pydantic)",id:"4-\ub7f0\ud0c0\uc784-\ud0c0\uc785-\uccb4\ud06c-pydantic",level:3},{value:"5. \ud0c0\uc785 \uac00\ub4dc (Type Guards)",id:"5-\ud0c0\uc785-\uac00\ub4dc-type-guards",level:3},{value:"\uc5f0\uc2b5 \ubb38\uc81c",id:"\uc5f0\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c 1: \ud0c0\uc785\uc774 \uc9c0\uc815\ub41c \uacc4\uc0b0\uae30",id:"\ubb38\uc81c-1-\ud0c0\uc785\uc774-\uc9c0\uc815\ub41c-\uacc4\uc0b0\uae30",level:3},{value:"\ubb38\uc81c 2: \uc81c\ub124\ub9ad \uce90\uc2dc \uad6c\ud604",id:"\ubb38\uc81c-2-\uc81c\ub124\ub9ad-\uce90\uc2dc-\uad6c\ud604",level:3},{value:"\ubb38\uc81c 3: Protocol\uc744 \uc0ac\uc6a9\ud55c \ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c",id:"\ubb38\uc81c-3-protocol\uc744-\uc0ac\uc6a9\ud55c-\ud50c\ub7ec\uadf8\uc778-\uc2dc\uc2a4\ud15c",level:3},{value:"\ubb38\uc81c 4: TypedDict\ub97c \uc0ac\uc6a9\ud55c \uc124\uc815 \uad00\ub9ac",id:"\ubb38\uc81c-4-typeddict\ub97c-\uc0ac\uc6a9\ud55c-\uc124\uc815-\uad00\ub9ac",level:3},{value:"\ub2e4\uc74c \ub2e8\uacc4",id:"\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components},{Details:t}=e;return t||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"5-\ud0c0\uc785-\ud78c\ud305",children:"5. \ud0c0\uc785 \ud78c\ud305"})}),"\n",(0,i.jsx)(e.p,{children:"\ud0c0\uc785 \ud78c\ud305(Type Hinting)\uc740 Python 3.5\ubd80\ud130 \ub3c4\uc785\ub41c \uae30\ub2a5\uc73c\ub85c, \ubcc0\uc218, \ud568\uc218 \ub9e4\uac1c\ubcc0\uc218, \ubc18\ud658\uac12\uc5d0 \ub300\ud55c \ud0c0\uc785 \uc815\ubcf4\ub97c \uba85\uc2dc\ud560 \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4. Python\uc740 \uc5ec\uc804\ud788 \ub3d9\uc801 \ud0c0\uc785 \uc5b8\uc5b4\uc774\uc9c0\ub9cc, \ud0c0\uc785 \ud78c\ud2b8\ub97c \ud1b5\ud574 \ucf54\ub4dc\uc758 \uac00\ub3c5\uc131\uacfc \uc720\uc9c0\ubcf4\uc218\uc131\uc744 \ud06c\uac8c \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h2,{id:"51-\ud0c0\uc785-\ud78c\ud2b8\ub97c-\uc0ac\uc6a9\ud558\ub294-\uc774\uc720",children:"5.1 \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720"}),"\n",(0,i.jsxs)(e.p,{children:["\ud0c0\uc785 \ud78c\ud2b8\ub294 ",(0,i.jsx)(e.strong,{children:"\ub7f0\ud0c0\uc784\uc5d0 \uac15\uc81c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4"}),". \uc989, \uc798\ubabb\ub41c \ud0c0\uc785\uc744 \uc804\ub2ec\ud574\ub3c4 Python\uc740 \uc2e4\ud589\ub429\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,i.jsx)(e.h3,{id:"\uc8fc\uc694-\uc774\uc810",children:"\uc8fc\uc694 \uc774\uc810"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ucf54\ub4dc \ubb38\uc11c\ud654"}),": \ud568\uc218\uc758 \uc785\ub825\uacfc \ucd9c\ub825 \ud0c0\uc785\uc744 \uba85\ud655\ud788 \ud45c\ud604"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"IDE \uc9c0\uc6d0 \ud5a5\uc0c1"}),": \uc790\ub3d9\uc644\uc131, \ud0c0\uc785 \uccb4\ud06c, \ub9ac\ud329\ud1a0\ub9c1 \ub3c4\uad6c \uc9c0\uc6d0"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ubc84\uadf8 \uc870\uae30 \ubc1c\uacac"}),": mypy \uac19\uc740 \uc815\uc801 \ubd84\uc11d \ub3c4\uad6c\ub85c \uc2e4\ud589 \uc804 \ud0c0\uc785 \uc624\ub958 \uac80\ucd9c"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ub9ac\ud329\ud1a0\ub9c1 \uc548\uc804\uc131"}),": \ud0c0\uc785 \ubcc0\uacbd \uc2dc \uc601\ud5a5\ubc1b\ub294 \ucf54\ub4dc\ub97c \uc27d\uac8c \ud30c\uc545"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ud300 \ud611\uc5c5 \uac1c\uc120"}),": \ucf54\ub4dc \uc758\ub3c4\ub97c \uba85\ud655\ud788 \uc804\ub2ec"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ub300\uaddc\ubaa8 \ud504\ub85c\uc81d\ud2b8 \uc720\uc9c0\ubcf4\uc218"}),": \ucf54\ub4dc\ubca0\uc774\uc2a4\uac00 \ucee4\uc9c8\uc218\ub85d \ud0c0\uc785 \uc815\ubcf4\uc758 \uac00\uce58 \uc99d\uac00"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# \ud0c0\uc785 \ud78c\ud2b8 \uc5c6\uc774\ndef greet(name, times):\n    return f"Hello, {name}! " * times\n\n# \ud0c0\uc785 \ud78c\ud2b8 \uc0ac\uc6a9\ndef greet(name: str, times: int) -> str:\n    return f"Hello, {name}! " * times\n\n# IDE\uac00 \ud0c0\uc785 \uc624\ub958\ub97c \uacbd\uace0\ud560 \uc218 \uc788\uc74c\nresult = greet("Alice", "3")  # \'times\'\ub294 int\uc5ec\uc57c \ud568\n'})}),"\n",(0,i.jsx)(e.admonition,{type:"tip",children:(0,i.jsxs)(e.p,{children:["\ud0c0\uc785 \ud78c\ud2b8\ub294 ",(0,i.jsx)(e.strong,{children:"\uc810\uc9c4\uc801\uc73c\ub85c"})," \ub3c4\uc785\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \ucf54\ub4dc\ubca0\uc774\uc2a4\ub97c \ud55c \ubc88\uc5d0 \ubcc0\uacbd\ud560 \ud544\uc694 \uc5c6\uc774, \uc911\uc694\ud55c \ubd80\ubd84\ubd80\ud130 \uc2dc\uc791\ud558\uc138\uc694."]})}),"\n",(0,i.jsx)(e.h2,{id:"52-\uae30\ubcf8-\ud0c0\uc785-\ud78c\ud2b8",children:"5.2 \uae30\ubcf8 \ud0c0\uc785 \ud78c\ud2b8"}),"\n",(0,i.jsx)(e.p,{children:"Python\uc758 \uae30\ubcf8 \ub0b4\uc7a5 \ud0c0\uc785\ub4e4\uc744 \uc0ac\uc6a9\ud55c \ud0c0\uc785 \ud78c\ud305\uc785\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h3,{id:"\uae30\ubcf8-\ud0c0\uc785\ub4e4",children:"\uae30\ubcf8 \ud0c0\uc785\ub4e4"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# \uae30\ubcf8 \ud0c0\uc785\ndef calculate(x: int, y: int) -> int:\n    return x + y\n\ndef get_message() -> str:\n    return "Hello, World!"\n\ndef calculate_ratio(a: float, b: float) -> float:\n    return a / b\n\ndef is_valid(data: str) -> bool:\n    return len(data) > 0\n\n# \uc5ec\ub7ec \ubcc0\uc218 \ud0c0\uc785 \ud78c\ud2b8\nname: str = "Alice"\nage: int = 30\nheight: float = 165.5\nis_student: bool = False\n'})}),"\n",(0,i.jsx)(e.h3,{id:"none-\ud0c0\uc785",children:"None \ud0c0\uc785"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Optional\n\n# \ubc18\ud658\uac12\uc774 \uc5c6\ub294 \ud568\uc218\ndef print_message(message: str) -> None:\n    print(message)\n\n# None\uc744 \ubc18\ud658\ud560 \uc218 \uc788\ub294 \ud568\uc218\ndef find_user(user_id: int) -> Optional[str]:\n    """\uc0ac\uc6a9\uc790\ub97c \ucc3e\uc73c\uba74 \uc774\ub984\uc744 \ubc18\ud658, \ubabb \ucc3e\uc73c\uba74 None \ubc18\ud658"""\n    users = {1: "Alice", 2: "Bob"}\n    return users.get(user_id)\n\n# Python 3.10+\uc5d0\uc11c\ub294 | \uc5f0\uc0b0\uc790 \uc0ac\uc6a9 \uac00\ub2a5\ndef find_user_new(user_id: int) -> str | None:\n    users = {1: "Alice", 2: "Bob"}\n    return users.get(user_id)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"53-typing-\ubaa8\ub4c8",children:"5.3 typing \ubaa8\ub4c8"}),"\n",(0,i.jsxs)(e.p,{children:["\ubcf5\uc7a1\ud55c \ud0c0\uc785\uc744 \ud45c\ud604\ud558\uae30 \uc704\ud55c ",(0,i.jsx)(e.code,{children:"typing"})," \ubaa8\ub4c8\uc758 \uc8fc\uc694 \ud0c0\uc785\ub4e4\uc785\ub2c8\ub2e4."]}),"\n",(0,i.jsx)(e.h3,{id:"\ucee8\ud14c\uc774\ub108-\ud0c0\uc785",children:"\ucee8\ud14c\uc774\ub108 \ud0c0\uc785"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import List, Dict, Tuple, Set\n\n# List - \uac19\uc740 \ud0c0\uc785\uc758 \uc694\uc18c\ub4e4\ndef process_numbers(numbers: List[int]) -> List[int]:\n    return [n * 2 for n in numbers]\n\n# Dict - \ud0a4\uc640 \uac12\uc758 \ud0c0\uc785 \uc9c0\uc815\ndef get_user_scores() -> Dict[str, int]:\n    return {"Alice": 95, "Bob": 87, "Charlie": 92}\n\n# Tuple - \uace0\uc815\ub41c \uae38\uc774\uc640 \uac01 \uc704\uce58\uc758 \ud0c0\uc785\ndef get_coordinate() -> Tuple[float, float]:\n    return (37.5665, 126.9780)\n\n# \uac00\ubcc0 \uae38\uc774 \ud29c\ud50c\ndef get_numbers() -> Tuple[int, ...]:\n    return (1, 2, 3, 4, 5)\n\n# Set - \uc911\ubcf5 \uc5c6\ub294 \uc694\uc18c\ub4e4\ndef get_unique_tags() -> Set[str]:\n    return {"python", "programming", "typing"}\n\n# \uc911\ucca9\ub41c \ud0c0\uc785\ndef get_student_grades() -> Dict[str, List[int]]:\n    return {\n        "Alice": [95, 87, 92],\n        "Bob": [78, 85, 88]\n    }\n'})}),"\n",(0,i.jsx)(e.h3,{id:"python-39-\ub0b4\uc7a5-\uc81c\ub124\ub9ad",children:"Python 3.9+ \ub0b4\uc7a5 \uc81c\ub124\ub9ad"}),"\n",(0,i.jsxs)(e.p,{children:["Python 3.9\ubd80\ud130\ub294 ",(0,i.jsx)(e.code,{children:"typing"})," \ubaa8\ub4c8 \uc5c6\uc774 \ub0b4\uc7a5 \ud0c0\uc785\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# Python 3.9+\ndef process_items(items: list[str]) -> dict[str, int]:\n    return {item: len(item) for item in items}\n\ndef get_point() -> tuple[float, float]:\n    return (1.0, 2.0)\n\n# Python 3.8 \uc774\ud558\uc5d0\uc11c\ub294 typing \ubaa8\ub4c8 \ud544\uc694\nfrom typing import List, Dict, Tuple\n\ndef process_items_old(items: List[str]) -> Dict[str, int]:\n    return {item: len(item) for item in items}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"union\uacfc-optional",children:"Union\uacfc Optional"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Union, Optional\n\n# Union - \uc5ec\ub7ec \ud0c0\uc785 \uc911 \ud558\ub098\ndef process_id(user_id: Union[int, str]) -> str:\n    return str(user_id)\n\n# Optional - None\uc774 \ub420 \uc218 \uc788\ub294 \ud0c0\uc785 (Union[T, None]\uc758 \ub2e8\ucd95)\ndef get_config(key: str) -> Optional[int]:\n    config = {"timeout": 30, "retries": 3}\n    return config.get(key)\n\n# Python 3.10+ | \uc5f0\uc0b0\uc790\ndef process_data(data: int | str | float) -> str:\n    return str(data)\n\ndef find_item(item_id: int) -> dict | None:\n    items = {1: {"name": "Apple"}}\n    return items.get(item_id)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"54-\ud0c0\uc785-\ubcc4\uce6d-type-aliases",children:"5.4 \ud0c0\uc785 \ubcc4\uce6d (Type Aliases)"}),"\n",(0,i.jsx)(e.p,{children:"\ubcf5\uc7a1\ud55c \ud0c0\uc785\uc744 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc774\ub984\uc73c\ub85c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import List, Dict, Tuple, Union\n\n# \uac04\ub2e8\ud55c \ubcc4\uce6d\nUserId = int\nUserName = str\n\ndef create_user(user_id: UserId, name: UserName) -> None:\n    print(f\"Creating user {name} with ID {user_id}\")\n\n# \ubcf5\uc7a1\ud55c \ud0c0\uc785 \ubcc4\uce6d\nCoordinate = Tuple[float, float]\nPath = List[Coordinate]\n\ndef calculate_distance(path: Path) -> float:\n    total = 0.0\n    for i in range(len(path) - 1):\n        x1, y1 = path[i]\n        x2, y2 = path[i + 1]\n        total += ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5\n    return total\n\n# JSON \ud0c0\uc785 \ubcc4\uce6d\nJsonValue = Union[str, int, float, bool, None, Dict[str, 'JsonValue'], List['JsonValue']]\nJsonObject = Dict[str, JsonValue]\n\ndef parse_config(config: JsonObject) -> None:\n    print(config)\n\n# Python 3.10+ TypeAlias\ub97c \uc0ac\uc6a9\ud55c \uba85\uc2dc\uc801 \uc120\uc5b8\nfrom typing import TypeAlias\n\nVector: TypeAlias = List[float]\nMatrix: TypeAlias = List[Vector]\n\ndef multiply_matrix(a: Matrix, b: Matrix) -> Matrix:\n    # \ud589\ub82c \uacf1\uc148 \uad6c\ud604\n    return [[0.0]]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"55-callable-\ud0c0\uc785",children:"5.5 Callable \ud0c0\uc785"}),"\n",(0,i.jsx)(e.p,{children:"\ud568\uc218\ub97c \ub9e4\uac1c\ubcc0\uc218\ub098 \ubc18\ud658\uac12\uc73c\ub85c \uc0ac\uc6a9\ud560 \ub54c\uc758 \ud0c0\uc785 \ud78c\ud2b8\uc785\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Callable, List\n\n# Callable[[\uc778\uc790\ud0c0\uc785\ub4e4], \ubc18\ud658\ud0c0\uc785]\ndef apply_operation(x: int, y: int, operation: Callable[[int, int], int]) -> int:\n    return operation(x, y)\n\ndef add(a: int, b: int) -> int:\n    return a + b\n\ndef multiply(a: int, b: int) -> int:\n    return a * b\n\nresult1 = apply_operation(5, 3, add)        # 8\nresult2 = apply_operation(5, 3, multiply)   # 15\n\n# \uc778\uc790\uac00 \uc5c6\ub294 \ud568\uc218\ndef run_task(task: Callable[[], None]) -> None:\n    print("Starting task...")\n    task()\n    print("Task completed!")\n\ndef hello() -> None:\n    print("Hello!")\n\nrun_task(hello)\n\n# \uace0\ucc28 \ud568\uc218 (\ud568\uc218\ub97c \ubc18\ud658\ud558\ub294 \ud568\uc218)\ndef make_multiplier(n: int) -> Callable[[int], int]:\n    def multiplier(x: int) -> int:\n        return x * n\n    return multiplier\n\ndouble = make_multiplier(2)\ntriple = make_multiplier(3)\n\nprint(double(5))  # 10\nprint(triple(5))  # 15\n\n# \ub9ac\uc2a4\ud2b8 \uc815\ub82c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ud0a4 \ud568\uc218\ndef sort_by_length(items: List[str],\n                   key_func: Callable[[str], int]) -> List[str]:\n    return sorted(items, key=key_func)\n\nwords = ["apple", "pie", "zoo", "elephant"]\nsorted_words = sort_by_length(words, len)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"56-\uc81c\ub124\ub9ad-\ud0c0\uc785-generic-types",children:"5.6 \uc81c\ub124\ub9ad \ud0c0\uc785 (Generic Types)"}),"\n",(0,i.jsx)(e.p,{children:"\ud0c0\uc785 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc81c\ub124\ub9ad \ucf54\ub4dc\ub97c \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h3,{id:"typevar-\uc0ac\uc6a9",children:"TypeVar \uc0ac\uc6a9"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypeVar, List, Sequence\n\n# TypeVar \uc815\uc758\nT = TypeVar(\'T\')\n\ndef first_element(items: Sequence[T]) -> T:\n    """\uc2dc\ud000\uc2a4\uc758 \uccab \ubc88\uc9f8 \uc694\uc18c\ub97c \ubc18\ud658"""\n    return items[0]\n\n# \ud0c0\uc785\uc774 \ubcf4\uc874\ub428\nnumbers: List[int] = [1, 2, 3]\nfirst_num: int = first_element(numbers)  # int \ubc18\ud658\n\nwords: List[str] = ["hello", "world"]\nfirst_word: str = first_element(words)   # str \ubc18\ud658\n\n# \uc5ec\ub7ec TypeVar \uc0ac\uc6a9\nK = TypeVar(\'K\')\nV = TypeVar(\'V\')\n\ndef get_first_item(dictionary: Dict[K, V]) -> Tuple[K, V]:\n    """\ub515\uc154\ub108\ub9ac\uc758 \uccab \ubc88\uc9f8 \ud56d\ubaa9\uc744 \ubc18\ud658"""\n    key = next(iter(dictionary))\n    return key, dictionary[key]\n\n# \uc81c\uc57d\uc774 \uc788\ub294 TypeVar\nfrom typing import Union\n\nNumberType = TypeVar(\'NumberType\', int, float)\n\ndef add_numbers(a: NumberType, b: NumberType) -> NumberType:\n    return a + b\n\nprint(add_numbers(1, 2))      # OK: int\nprint(add_numbers(1.5, 2.5))  # OK: float\n# print(add_numbers("a", "b")) # mypy \uc624\ub958: str\uc740 \ud5c8\uc6a9\ub418\uc9c0 \uc54a\uc74c\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\uc81c\ub124\ub9ad-\ud074\ub798\uc2a4",children:"\uc81c\ub124\ub9ad \ud074\ub798\uc2a4"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypeVar, Generic, List, Optional\n\nT = TypeVar(\'T\')\n\nclass Stack(Generic[T]):\n    """\uc81c\ub124\ub9ad \uc2a4\ud0dd \uc790\ub8cc\uad6c\uc870"""\n\n    def __init__(self) -> None:\n        self._items: List[T] = []\n\n    def push(self, item: T) -> None:\n        self._items.append(item)\n\n    def pop(self) -> T:\n        return self._items.pop()\n\n    def peek(self) -> Optional[T]:\n        return self._items[-1] if self._items else None\n\n    def is_empty(self) -> bool:\n        return len(self._items) == 0\n\n# \ud0c0\uc785\ubcc4\ub85c \uc0ac\uc6a9\nint_stack: Stack[int] = Stack()\nint_stack.push(1)\nint_stack.push(2)\nprint(int_stack.pop())  # 2\n\nstr_stack: Stack[str] = Stack()\nstr_stack.push("hello")\nstr_stack.push("world")\nprint(str_stack.pop())  # "world"\n\n# \ubcf5\uc7a1\ud55c \uc81c\ub124\ub9ad \ud074\ub798\uc2a4\nK = TypeVar(\'K\')\nV = TypeVar(\'V\')\n\nclass Cache(Generic[K, V]):\n    """\uc81c\ub124\ub9ad \uce90\uc2dc"""\n\n    def __init__(self, max_size: int = 100) -> None:\n        self._cache: Dict[K, V] = {}\n        self._max_size = max_size\n\n    def get(self, key: K) -> Optional[V]:\n        return self._cache.get(key)\n\n    def set(self, key: K, value: V) -> None:\n        if len(self._cache) >= self._max_size:\n            # \uac00\uc7a5 \uc624\ub798\ub41c \ud56d\ubaa9 \uc81c\uac70\n            oldest_key = next(iter(self._cache))\n            del self._cache[oldest_key]\n        self._cache[key] = value\n\n# \uc0ac\uc6a9 \uc608\uc2dc\nuser_cache: Cache[int, str] = Cache()\nuser_cache.set(1, "Alice")\nuser_cache.set(2, "Bob")\n\nconfig_cache: Cache[str, dict] = Cache()\nconfig_cache.set("database", {"host": "localhost", "port": 5432})\n'})}),"\n",(0,i.jsx)(e.h2,{id:"57-protocol-\uad6c\uc870\uc801-\uc11c\ube0c\ud0c0\uc774\ud551",children:"5.7 Protocol (\uad6c\uc870\uc801 \uc11c\ube0c\ud0c0\uc774\ud551)"}),"\n",(0,i.jsx)(e.p,{children:"Protocol\uc740 \ub355 \ud0c0\uc774\ud551(duck typing)\uc744 \ud0c0\uc785 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ud45c\ud604\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uba85\uc2dc\uc801 \uc0c1\uc18d \uc5c6\uc774 \ud2b9\uc815 \uba54\uc11c\ub4dc\ub098 \uc18d\uc131\uc744 \uac00\uc9c4 \uac1d\uccb4\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Protocol, List\n\nclass Drawable(Protocol):\n    """\uadf8\ub9b4 \uc218 \uc788\ub294 \uac1d\uccb4\uc758 \ud504\ub85c\ud1a0\ucf5c"""\n\n    def draw(self) -> str:\n        ...\n\nclass Circle:\n    def __init__(self, radius: float) -> None:\n        self.radius = radius\n\n    def draw(self) -> str:\n        return f"Drawing circle with radius {self.radius}"\n\nclass Square:\n    def __init__(self, side: float) -> None:\n        self.side = side\n\n    def draw(self) -> str:\n        return f"Drawing square with side {self.side}"\n\n# Drawable\uc744 \uc0c1\uc18d\ud558\uc9c0 \uc54a\uc558\uc9c0\ub9cc draw() \uba54\uc11c\ub4dc\uac00 \uc788\uc5b4\uc11c \ud638\ud658\ub428\ndef render_shapes(shapes: List[Drawable]) -> None:\n    for shape in shapes:\n        print(shape.draw())\n\ncircle = Circle(5.0)\nsquare = Square(10.0)\nrender_shapes([circle, square])  # OK!\n\n# \ub354 \ubcf5\uc7a1\ud55c \ud504\ub85c\ud1a0\ucf5c \uc608\uc2dc\nfrom typing import Iterator\n\nclass SupportsClose(Protocol):\n    """close() \uba54\uc11c\ub4dc\ub97c \uac00\uc9c4 \uac1d\uccb4"""\n\n    def close(self) -> None:\n        ...\n\nclass DatabaseConnection:\n    def close(self) -> None:\n        print("Closing database connection")\n\nclass FileHandler:\n    def close(self) -> None:\n        print("Closing file")\n\ndef cleanup_resource(resource: SupportsClose) -> None:\n    resource.close()\n\n# \ub450 \ud074\ub798\uc2a4 \ubaa8\ub450 \uc0ac\uc6a9 \uac00\ub2a5\ndb = DatabaseConnection()\nfile = FileHandler()\n\ncleanup_resource(db)\ncleanup_resource(file)\n\n# \ub7f0\ud0c0\uc784 \uccb4\ud06c \uac00\ub2a5\ud55c \ud504\ub85c\ud1a0\ucf5c\nfrom typing import runtime_checkable\n\n@runtime_checkable\nclass Sizeable(Protocol):\n    def __len__(self) -> int:\n        ...\n\ndef print_size(obj: Sizeable) -> None:\n    print(f"Size: {len(obj)}")\n\n# \ub7f0\ud0c0\uc784\uc5d0 \ud504\ub85c\ud1a0\ucf5c \uc900\uc218 \uc5ec\ubd80 \ud655\uc778\nitems = [1, 2, 3]\nif isinstance(items, Sizeable):\n    print_size(items)  # OK\n'})}),"\n",(0,i.jsx)(e.h2,{id:"58-literal-\ud0c0\uc785",children:"5.8 Literal \ud0c0\uc785"}),"\n",(0,i.jsx)(e.p,{children:"\ud2b9\uc815 \ub9ac\ud130\ub7f4 \uac12\ub9cc \ud5c8\uc6a9\ud558\ub294 \ud0c0\uc785\uc785\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Literal\n\n# \ud2b9\uc815 \ubb38\uc790\uc5f4 \uac12\ub9cc \ud5c8\uc6a9\nMode = Literal["read", "write", "append"]\n\ndef open_file(filename: str, mode: Mode) -> None:\n    print(f"Opening {filename} in {mode} mode")\n\nopen_file("data.txt", "read")    # OK\nopen_file("data.txt", "write")   # OK\n# open_file("data.txt", "delete") # mypy \uc624\ub958\n\n# \uc22b\uc790 \ub9ac\ud130\ub7f4\nHttpStatus = Literal[200, 404, 500]\n\ndef handle_response(status: HttpStatus) -> str:\n    if status == 200:\n        return "Success"\n    elif status == 404:\n        return "Not Found"\n    else:\n        return "Server Error"\n\n# \ubd88\ub9ac\uc5b8 \ub9ac\ud130\ub7f4\ndef set_debug(enabled: Literal[True]) -> None:\n    """\ub514\ubc84\uadf8\ub294 \ud56d\uc0c1 True\ub9cc \uac00\ub2a5"""\n    print("Debug enabled")\n\n# \uc5ec\ub7ec \ud0c0\uc785\uc758 \ub9ac\ud130\ub7f4 \uc870\ud569\ndef process_data(data: str, format: Literal["json", "xml", "csv"] = "json") -> dict:\n    if format == "json":\n        import json\n        return json.loads(data)\n    elif format == "xml":\n        # XML \ud30c\uc2f1\n        return {}\n    else:\n        # CSV \ud30c\uc2f1\n        return {}\n\n# Literal\uc744 \uc0ac\uc6a9\ud55c \ud0c0\uc785 \uc881\ud788\uae30\nfrom typing import Union\n\ndef get_config(key: Literal["timeout"]) -> int: ...\ndef get_config(key: Literal["url"]) -> str: ...\ndef get_config(key: str) -> Union[int, str]:\n    config = {"timeout": 30, "url": "http://example.com"}\n    return config.get(key, "")\n'})}),"\n",(0,i.jsx)(e.h2,{id:"59-final",children:"5.9 Final"}),"\n",(0,i.jsx)(e.p,{children:"\ubcc0\uacbd\ud560 \uc218 \uc5c6\ub294 \uac12\uc774\ub098 \uc624\ubc84\ub77c\uc774\ub4dc\ud560 \uc218 \uc5c6\ub294 \uba54\uc11c\ub4dc\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Final\n\n# \uc0c1\uc218 \uc815\uc758\nMAX_CONNECTIONS: Final = 100\nAPI_KEY: Final[str] = "secret-key-123"\n\n# \uc7ac\ud560\ub2f9 \uc2dc\ub3c4 \uc2dc mypy\uac00 \uc624\ub958 \ubc1c\uc0dd\n# MAX_CONNECTIONS = 200  # mypy \uc624\ub958\n\n# \ud074\ub798\uc2a4\uc5d0\uc11c Final \uc0ac\uc6a9\nclass Configuration:\n    # \ud074\ub798\uc2a4 \ubcc0\uc218\ub97c \uc0c1\uc218\ub85c\n    MAX_RETRIES: Final = 3\n\n    def __init__(self) -> None:\n        # \uc778\uc2a4\ud134\uc2a4 \ubcc0\uc218\ub97c \uc0c1\uc218\ub85c\n        self.timeout: Final = 30\n\nconfig = Configuration()\n# config.timeout = 60  # mypy \uc624\ub958\n\n# \uba54\uc11c\ub4dc \uc624\ubc84\ub77c\uc774\ub529 \ubc29\uc9c0\nfrom typing import final\n\nclass BaseAPI:\n    @final\n    def authenticate(self) -> bool:\n        """\uc774 \uba54\uc11c\ub4dc\ub294 \uc624\ubc84\ub77c\uc774\ub4dc\ud560 \uc218 \uc5c6\uc74c"""\n        return True\n\n    def fetch_data(self) -> dict:\n        """\uc774 \uba54\uc11c\ub4dc\ub294 \uc624\ubc84\ub77c\uc774\ub4dc \uac00\ub2a5"""\n        return {}\n\nclass ExtendedAPI(BaseAPI):\n    # def authenticate(self) -> bool:  # mypy \uc624\ub958\n    #     return False\n\n    def fetch_data(self) -> dict:  # OK\n        return {"extended": True}\n\n# \ud074\ub798\uc2a4 \uc0c1\uc18d \ubc29\uc9c0\n@final\nclass DatabaseConnection:\n    """\uc774 \ud074\ub798\uc2a4\ub294 \uc0c1\uc18d\ud560 \uc218 \uc5c6\uc74c"""\n\n    def connect(self) -> None:\n        print("Connected")\n\n# class ExtendedConnection(DatabaseConnection):  # mypy \uc624\ub958\n#     pass\n'})}),"\n",(0,i.jsx)(e.h2,{id:"510-mypy\ub97c-\uc0ac\uc6a9\ud55c-\uc815\uc801-\ud0c0\uc785-\uccb4\ud06c",children:"5.10 mypy\ub97c \uc0ac\uc6a9\ud55c \uc815\uc801 \ud0c0\uc785 \uccb4\ud06c"}),"\n",(0,i.jsx)(e.p,{children:"mypy\ub294 Python \ucf54\ub4dc\uc758 \ud0c0\uc785\uc744 \uc815\uc801\uc73c\ub85c \ubd84\uc11d\ud558\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h3,{id:"mypy-\uc124\uce58-\ubc0f-\uc0ac\uc6a9",children:"mypy \uc124\uce58 \ubc0f \uc0ac\uc6a9"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# mypy \uc124\uce58\npip install mypy\n\n# \ub2e8\uc77c \ud30c\uc77c \uccb4\ud06c\nmypy script.py\n\n# \ub514\ub809\ud1a0\ub9ac \uc804\uccb4 \uccb4\ud06c\nmypy src/\n\n# \uc124\uc815 \ud30c\uc77c\uacfc \ud568\uaed8 \uc2e4\ud589\nmypy --config-file mypy.ini .\n"})}),"\n",(0,i.jsx)(e.h3,{id:"mypy-\uc124\uc815-\ud30c\uc77c",children:"mypy \uc124\uc815 \ud30c\uc77c"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ini",children:"# mypy.ini \ub610\ub294 setup.cfg\n[mypy]\n# \ud30c\uc774\uc36c \ubc84\uc804\npython_version = 3.10\n\n# \uc5c4\uaca9 \ubaa8\ub4dc\nstrict = True\n\n# \ub610\ub294 \uac1c\ubcc4 \uc124\uc815\nwarn_return_any = True\nwarn_unused_configs = True\ndisallow_untyped_defs = True\ndisallow_any_generics = True\ndisallow_subclassing_any = True\ndisallow_untyped_calls = True\ndisallow_incomplete_defs = True\ncheck_untyped_defs = True\nno_implicit_optional = True\nwarn_redundant_casts = True\nwarn_unused_ignores = True\nwarn_no_return = True\nwarn_unreachable = True\nstrict_equality = True\n\n# \uc11c\ub4dc\ud30c\ud2f0 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubb34\uc2dc\n[mypy-requests.*]\nignore_missing_imports = True\n\n[mypy-numpy.*]\nignore_missing_imports = True\n"})}),"\n",(0,i.jsx)(e.h3,{id:"pyprojecttoml-\uc124\uc815",children:"pyproject.toml \uc124\uc815"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-toml",children:'[tool.mypy]\npython_version = "3.10"\nstrict = true\nwarn_return_any = true\nwarn_unused_configs = true\n\n[[tool.mypy.overrides]]\nmodule = "requests.*"\nignore_missing_imports = true\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\ud0c0\uc785-\uccb4\ud06c-\uc608\uc2dc",children:"\ud0c0\uc785 \uccb4\ud06c \uc608\uc2dc"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# example.py\nfrom typing import List, Optional\n\ndef greet(name: str, times: int = 1) -> str:\n    return f"Hello, {name}! " * times\n\ndef find_user(user_id: int) -> Optional[str]:\n    users = {1: "Alice", 2: "Bob"}\n    return users.get(user_id)\n\ndef process_items(items: List[int]) -> int:\n    total = 0\n    for item in items:\n        total += item\n    return total\n\n# \ud0c0\uc785 \uc624\ub958\ub4e4\nresult1 = greet(123)  # \uc624\ub958: int\ub294 str\uc774 \uc544\ub2d8\nresult2 = greet("Alice", "2")  # \uc624\ub958: "2"\ub294 int\uac00 \uc544\ub2d8\n\nuser = find_user("1")  # \uc624\ub958: "1"\uc740 int\uac00 \uc544\ub2d8\n\nitems = ["a", "b", "c"]\ntotal = process_items(items)  # \uc624\ub958: List[str]\ub294 List[int]\uac00 \uc544\ub2d8\n'})}),"\n",(0,i.jsx)(e.h3,{id:"mypy-\uc2e4\ud589-\uacb0\uacfc",children:"mypy \uc2e4\ud589 \uacb0\uacfc"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'$ mypy example.py\nexample.py:15: error: Argument 1 to "greet" has incompatible type "int"; expected "str"\nexample.py:16: error: Argument 2 to "greet" has incompatible type "str"; expected "int"\nexample.py:18: error: Argument 1 to "find_user" has incompatible type "str"; expected "int"\nexample.py:21: error: Argument 1 to "process_items" has incompatible type "List[str]"; expected "List[int]"\nFound 4 errors in 1 file (checked 1 source file)\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\ud0c0\uc785-\uccb4\ud06c-\ubb34\uc2dc",children:"\ud0c0\uc785 \uccb4\ud06c \ubb34\uc2dc"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import Any\n\n# \ud2b9\uc815 \uc904 \ubb34\uc2dc\nresult = some_function()  # type: ignore\n\n# \ud2b9\uc815 \uc624\ub958 \ucf54\ub4dc \ubb34\uc2dc\nresult = some_function()  # type: ignore[arg-type]\n\n# Any \ud0c0\uc785 \uc0ac\uc6a9 (\ubaa8\ub4e0 \ud0c0\uc785 \ud5c8\uc6a9)\ndef process_data(data: Any) -> Any:\n    return data\n\n# reveal_type\uc73c\ub85c \ucd94\ub860\ub41c \ud0c0\uc785 \ud655\uc778 (\ub514\ubc84\uae45\uc6a9)\nfrom typing import reveal_type\n\nnumbers = [1, 2, 3]\nreveal_type(numbers)  # mypy\uac00 \ucd94\ub860\ub41c \ud0c0\uc785\uc744 \ucd9c\ub825\n"})}),"\n",(0,i.jsx)(e.h2,{id:"511-\ud0c0\uc785-\uc2a4\ud141-\ud30c\uc77c-pyi",children:"5.11 \ud0c0\uc785 \uc2a4\ud141 \ud30c\uc77c (.pyi)"}),"\n",(0,i.jsx)(e.p,{children:"\ud0c0\uc785 \uc2a4\ud141 \ud30c\uc77c\uc740 \ud0c0\uc785 \uc815\ubcf4\ub9cc \ud3ec\ud568\ud558\ub294 \ubcc4\ub3c4\uc758 \ud30c\uc77c\uc785\ub2c8\ub2e4. \uc8fc\ub85c \ud0c0\uc785 \uc815\ubcf4\uac00 \uc5c6\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0 \ud0c0\uc785\uc744 \ucd94\uac00\ud558\uac70\ub098, \uad6c\ud604\uacfc \ud0c0\uc785\uc744 \ubd84\ub9ac\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h3,{id:"\uc2a4\ud141-\ud30c\uc77c-\uc0dd\uc131",children:"\uc2a4\ud141 \ud30c\uc77c \uc0dd\uc131"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# calculator.py (\uad6c\ud604)\ndef add(a, b):\n    return a + b\n\ndef multiply(a, b):\n    return a * b\n\nclass Calculator:\n    def __init__(self):\n        self.result = 0\n\n    def calculate(self, expression):\n        self.result = eval(expression)\n        return self.result\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# calculator.pyi (\ud0c0\uc785 \uc2a4\ud141)\nfrom typing import Union\n\ndef add(a: Union[int, float], b: Union[int, float]) -> Union[int, float]: ...\ndef multiply(a: Union[int, float], b: Union[int, float]) -> Union[int, float]: ...\n\nclass Calculator:\n    result: Union[int, float]\n\n    def __init__(self) -> None: ...\n    def calculate(self, expression: str) -> Union[int, float]: ...\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\uc11c\ub4dc\ud30c\ud2f0-\ub77c\uc774\ube0c\ub7ec\ub9ac-\uc2a4\ud141",children:"\uc11c\ub4dc\ud30c\ud2f0 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc2a4\ud141"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \ud0c0\uc785 \uc2a4\ud141 \ud328\ud0a4\uc9c0 \uc124\uce58\npip install types-requests\npip install types-PyYAML\npip install types-redis\n\n# typeshed \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc2a4\ud141\ub4e4\uc774 \uc790\ub3d9 \ud3ec\ud568\ub428\n"})}),"\n",(0,i.jsx)(e.h3,{id:"stubgen\uc73c\ub85c-\uc790\ub3d9-\uc0dd\uc131",children:"stubgen\uc73c\ub85c \uc790\ub3d9 \uc0dd\uc131"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# \ubaa8\ub4c8\uc5d0\uc11c \uc2a4\ud141 \uc790\ub3d9 \uc0dd\uc131\nstubgen -p mypackage -o stubs/\n\n# \ud2b9\uc815 \ud30c\uc77c\uc5d0\uc11c \uc0dd\uc131\nstubgen mymodule.py -o stubs/\n"})}),"\n",(0,i.jsx)(e.h2,{id:"512-\uc810\uc9c4\uc801-\ud0c0\uc774\ud551-gradual-typing",children:"5.12 \uc810\uc9c4\uc801 \ud0c0\uc774\ud551 (Gradual Typing)"}),"\n",(0,i.jsx)(e.p,{children:"\uae30\uc874 \ucf54\ub4dc\ubca0\uc774\uc2a4\uc5d0 \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc810\uc9c4\uc801\uc73c\ub85c \ucd94\uac00\ud558\ub294 \uc804\ub7b5\uc785\ub2c8\ub2e4."}),"\n",(0,i.jsx)(e.h3,{id:"\ub2e8\uacc4\ubcc4-\uc811\uadfc\ubc95",children:"\ub2e8\uacc4\ubcc4 \uc811\uadfc\ubc95"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# 1\ub2e8\uacc4: \ud0c0\uc785 \ud78c\ud2b8\uac00 \uc804\ud600 \uc5c6\ub294 \ucf54\ub4dc\ndef process_user(user):\n    return {\n        "name": user["name"].upper(),\n        "email": user["email"].lower(),\n        "age": user["age"] + 1\n    }\n\n# 2\ub2e8\uacc4: \ud568\uc218 \uc2dc\uadf8\ub2c8\ucc98\uc5d0\ub9cc \ud0c0\uc785 \ucd94\uac00\ndef process_user(user: dict) -> dict:\n    return {\n        "name": user["name"].upper(),\n        "email": user["email"].lower(),\n        "age": user["age"] + 1\n    }\n\n# 3\ub2e8\uacc4: \ub354 \uad6c\uccb4\uc801\uc778 \ud0c0\uc785 \uc0ac\uc6a9\nfrom typing import Dict, Any\n\ndef process_user(user: Dict[str, Any]) -> Dict[str, Any]:\n    return {\n        "name": user["name"].upper(),\n        "email": user["email"].lower(),\n        "age": user["age"] + 1\n    }\n\n# 4\ub2e8\uacc4: TypedDict\ub85c \uad6c\uc870 \uba85\ud655\ud788\nfrom typing import TypedDict\n\nclass User(TypedDict):\n    name: str\n    email: str\n    age: int\n\nclass ProcessedUser(TypedDict):\n    name: str\n    email: str\n    age: int\n\ndef process_user(user: User) -> ProcessedUser:\n    return {\n        "name": user["name"].upper(),\n        "email": user["email"].lower(),\n        "age": user["age"] + 1\n    }\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\uc6b0\uc120\uc21c\uc704-\uc804\ub7b5",children:"\uc6b0\uc120\uc21c\uc704 \uc804\ub7b5"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\uacf5\uac1c API\ubd80\ud130 \uc2dc\uc791"}),": \uc678\ubd80\uc5d0 \ub178\ucd9c\ub418\ub294 \ud568\uc218/\ud074\ub798\uc2a4"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ubc84\uadf8\uac00 \ub9ce\uc740 \uc601\uc5ed"}),": \ud0c0\uc785 \uccb4\ud06c\ub85c \ubc84\uadf8\ub97c \uc904\uc77c \uc218 \uc788\ub294 \ubd80\ubd84"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\uc0c8 \ucf54\ub4dc \uc791\uc131 \uc2dc"}),": \ucc98\uc74c\ubd80\ud130 \ud0c0\uc785 \ud78c\ud2b8 \ud3ec\ud568"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\ub9ac\ud329\ud1a0\ub9c1 \uc2dc"}),": \ucf54\ub4dc \ubcc0\uacbd\uacfc \ud568\uaed8 \ud0c0\uc785 \ucd94\uac00"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# \uc608\uc2dc: API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ud578\ub4e4\ub7ec\uc5d0 \ud0c0\uc785 \ucd94\uac00\nfrom typing import Dict, List, Optional\nfrom dataclasses import dataclass\n\n@dataclass\nclass CreateUserRequest:\n    username: str\n    email: str\n    age: int\n\n@dataclass\nclass UserResponse:\n    id: int\n    username: str\n    email: str\n    created_at: str\n\ndef create_user(request: CreateUserRequest) -> UserResponse:\n    """\uc0ac\uc6a9\uc790 \uc0dd\uc131 API - \uacf5\uac1c API\uc774\ubbc0\ub85c \ud0c0\uc785 \uba85\ud655\ud788"""\n    # \uad6c\ud604\n    return UserResponse(\n        id=1,\n        username=request.username,\n        email=request.email,\n        created_at="2025-01-01"\n    )\n\ndef get_users(\n    limit: int = 10,\n    offset: int = 0,\n    filter_by: Optional[str] = None\n) -> List[UserResponse]:\n    """\uc0ac\uc6a9\uc790 \ubaa9\ub85d \uc870\ud68c API"""\n    # \uad6c\ud604\n    return []\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\ud0c0\uc785-\ucee4\ubc84\ub9ac\uc9c0-\uce21\uc815",children:"\ud0c0\uc785 \ucee4\ubc84\ub9ac\uc9c0 \uce21\uc815"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# mypy\ub85c \ud0c0\uc785 \ucee4\ubc84\ub9ac\uc9c0 \ud655\uc778\nmypy --html-report mypy-report/ src/\n\n# \ub610\ub294 \uc815\ubc00 \ubcf4\uace0\uc11c\nmypy --any-exprs-report mypy-report/ src/\n"})}),"\n",(0,i.jsx)(e.h2,{id:"513-\uc2e4\uc804-\uc608\uc81c",children:"5.13 \uc2e4\uc804 \uc608\uc81c"}),"\n",(0,i.jsx)(e.h3,{id:"\uc608\uc81c-1-\ud0c0\uc785\uc774-\uc9c0\uc815\ub41c-rest-api-\ud074\ub77c\uc774\uc5b8\ud2b8",children:"\uc608\uc81c 1: \ud0c0\uc785\uc774 \uc9c0\uc815\ub41c REST API \ud074\ub77c\uc774\uc5b8\ud2b8"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypedDict, List, Optional, Literal\nfrom dataclasses import dataclass\nimport requests\n\n# API \uc751\ub2f5 \ud0c0\uc785 \uc815\uc758\nclass ApiResponse(TypedDict):\n    status: int\n    message: str\n    data: dict\n\nclass UserData(TypedDict):\n    id: int\n    username: str\n    email: str\n    is_active: bool\n\n@dataclass\nclass ApiError(Exception):\n    status_code: int\n    message: str\n\nHttpMethod = Literal["GET", "POST", "PUT", "DELETE"]\n\nclass ApiClient:\n    """\ud0c0\uc785\uc774 \uc9c0\uc815\ub41c API \ud074\ub77c\uc774\uc5b8\ud2b8"""\n\n    def __init__(self, base_url: str, api_key: str) -> None:\n        self.base_url = base_url\n        self.api_key = api_key\n        self._session = requests.Session()\n        self._session.headers.update({"Authorization": f"Bearer {api_key}"})\n\n    def _request(\n        self,\n        method: HttpMethod,\n        endpoint: str,\n        data: Optional[dict] = None\n    ) -> ApiResponse:\n        """HTTP \uc694\uccad \uc218\ud589"""\n        url = f"{self.base_url}{endpoint}"\n        response = self._session.request(method, url, json=data)\n\n        if response.status_code >= 400:\n            raise ApiError(response.status_code, response.text)\n\n        return response.json()\n\n    def get_user(self, user_id: int) -> UserData:\n        """\uc0ac\uc6a9\uc790 \uc815\ubcf4 \uc870\ud68c"""\n        response = self._request("GET", f"/users/{user_id}")\n        return response["data"]\n\n    def create_user(\n        self,\n        username: str,\n        email: str,\n        is_active: bool = True\n    ) -> UserData:\n        """\uc0ac\uc6a9\uc790 \uc0dd\uc131"""\n        data = {\n            "username": username,\n            "email": email,\n            "is_active": is_active\n        }\n        response = self._request("POST", "/users", data)\n        return response["data"]\n\n    def list_users(\n        self,\n        page: int = 1,\n        per_page: int = 10,\n        active_only: bool = False\n    ) -> List[UserData]:\n        """\uc0ac\uc6a9\uc790 \ubaa9\ub85d \uc870\ud68c"""\n        params = {\n            "page": page,\n            "per_page": per_page,\n            "active_only": active_only\n        }\n        response = self._request("GET", f"/users?{self._build_query(params)}")\n        return response["data"]\n\n    def _build_query(self, params: dict) -> str:\n        """\ucffc\ub9ac \ubb38\uc790\uc5f4 \uc0dd\uc131"""\n        return "&".join(f"{k}={v}" for k, v in params.items())\n\n# \uc0ac\uc6a9 \uc608\uc2dc\nclient = ApiClient("https://api.example.com", "secret-key")\n\ntry:\n    user = client.get_user(1)\n    print(f"User: {user[\'username\']}")\n\n    new_user = client.create_user("alice", "alice@example.com")\n    print(f"Created user with ID: {new_user[\'id\']}")\n\n    users = client.list_users(page=1, per_page=5, active_only=True)\n    for user in users:\n        print(f"- {user[\'username\']}")\nexcept ApiError as e:\n    print(f"API Error: {e.message}")\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\uc608\uc81c-2-\uc81c\ub124\ub9ad-\ub370\uc774\ud130-\uc800\uc7a5\uc18c",children:"\uc608\uc81c 2: \uc81c\ub124\ub9ad \ub370\uc774\ud130 \uc800\uc7a5\uc18c"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypeVar, Generic, Dict, Optional, List, Callable\nfrom dataclasses import dataclass\nfrom datetime import datetime\nfrom abc import ABC, abstractmethod\n\nT = TypeVar(\'T\')\nK = TypeVar(\'K\')\n\n@dataclass\nclass Entity:\n    """\ubaa8\ub4e0 \uc5d4\ud2f0\ud2f0\uc758 \uae30\ubcf8 \ud074\ub798\uc2a4"""\n    id: int\n    created_at: datetime\n    updated_at: datetime\n\nclass Repository(Generic[T], ABC):\n    """\ucd94\uc0c1 \uc800\uc7a5\uc18c \ud074\ub798\uc2a4"""\n\n    @abstractmethod\n    def save(self, entity: T) -> T:\n        """\uc5d4\ud2f0\ud2f0 \uc800\uc7a5"""\n        pass\n\n    @abstractmethod\n    def find_by_id(self, entity_id: int) -> Optional[T]:\n        """ID\ub85c \uc5d4\ud2f0\ud2f0 \uc870\ud68c"""\n        pass\n\n    @abstractmethod\n    def find_all(self) -> List[T]:\n        """\ubaa8\ub4e0 \uc5d4\ud2f0\ud2f0 \uc870\ud68c"""\n        pass\n\n    @abstractmethod\n    def delete(self, entity_id: int) -> bool:\n        """\uc5d4\ud2f0\ud2f0 \uc0ad\uc81c"""\n        pass\n\nclass InMemoryRepository(Repository[T]):\n    """\uba54\ubaa8\ub9ac \uae30\ubc18 \uc800\uc7a5\uc18c \uad6c\ud604"""\n\n    def __init__(self) -> None:\n        self._storage: Dict[int, T] = {}\n        self._next_id = 1\n\n    def save(self, entity: T) -> T:\n        if isinstance(entity, Entity):\n            if entity.id == 0:\n                entity.id = self._next_id\n                self._next_id += 1\n                entity.created_at = datetime.now()\n            entity.updated_at = datetime.now()\n            self._storage[entity.id] = entity\n        return entity\n\n    def find_by_id(self, entity_id: int) -> Optional[T]:\n        return self._storage.get(entity_id)\n\n    def find_all(self) -> List[T]:\n        return list(self._storage.values())\n\n    def delete(self, entity_id: int) -> bool:\n        if entity_id in self._storage:\n            del self._storage[entity_id]\n            return True\n        return False\n\n    def find_by(self, predicate: Callable[[T], bool]) -> List[T]:\n        """\uc870\uac74\uc5d0 \ub9de\ub294 \uc5d4\ud2f0\ud2f0 \ucc3e\uae30"""\n        return [entity for entity in self._storage.values() if predicate(entity)]\n\n# \uad6c\uccb4\uc801\uc778 \uc5d4\ud2f0\ud2f0 \uc815\uc758\n@dataclass\nclass User(Entity):\n    username: str\n    email: str\n    is_active: bool = True\n\n@dataclass\nclass Product(Entity):\n    name: str\n    price: float\n    stock: int\n\n# \uc0ac\uc6a9 \uc608\uc2dc\nuser_repo: Repository[User] = InMemoryRepository()\nproduct_repo: Repository[Product] = InMemoryRepository()\n\n# \uc0ac\uc6a9\uc790 \uc800\uc7a5\nuser1 = User(id=0, username="alice", email="alice@example.com",\n             created_at=datetime.now(), updated_at=datetime.now())\nsaved_user = user_repo.save(user1)\nprint(f"Saved user: {saved_user.username} (ID: {saved_user.id})")\n\n# \uc81c\ud488 \uc800\uc7a5\nproduct1 = Product(id=0, name="Laptop", price=999.99, stock=10,\n                   created_at=datetime.now(), updated_at=datetime.now())\nsaved_product = product_repo.save(product1)\nprint(f"Saved product: {saved_product.name} (ID: {saved_product.id})")\n\n# \uc870\ud68c\nfound_user = user_repo.find_by_id(1)\nif found_user:\n    print(f"Found user: {found_user.username}")\n\n# \uc870\uac74\ubd80 \uac80\uc0c9 (InMemoryRepository\ub9cc)\nif isinstance(user_repo, InMemoryRepository):\n    active_users = user_repo.find_by(lambda u: u.is_active)\n    print(f"Active users: {len(active_users)}")\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\uc608\uc81c-3-\uc774\ubca4\ud2b8-\uc2dc\uc2a4\ud15c",children:"\uc608\uc81c 3: \uc774\ubca4\ud2b8 \uc2dc\uc2a4\ud15c"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Protocol, TypeVar, Generic, Callable, List, Dict, Type\nfrom dataclasses import dataclass\nfrom datetime import datetime\nfrom abc import ABC\n\n# \uc774\ubca4\ud2b8 \ud504\ub85c\ud1a0\ucf5c\nclass Event(Protocol):\n    """\ubaa8\ub4e0 \uc774\ubca4\ud2b8\uac00 \ub530\ub77c\uc57c \ud560 \ud504\ub85c\ud1a0\ucf5c"""\n    timestamp: datetime\n\n@dataclass\nclass UserRegisteredEvent:\n    user_id: int\n    username: str\n    email: str\n    timestamp: datetime\n\n@dataclass\nclass OrderPlacedEvent:\n    order_id: int\n    user_id: int\n    total_amount: float\n    timestamp: datetime\n\n# \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ud0c0\uc785\nE = TypeVar(\'E\', bound=Event)\nEventHandler = Callable[[E], None]\n\nclass EventBus:\n    """\ud0c0\uc785 \uc548\uc804\ud55c \uc774\ubca4\ud2b8 \ubc84\uc2a4"""\n\n    def __init__(self) -> None:\n        self._handlers: Dict[Type[Event], List[EventHandler]] = {}\n\n    def subscribe(self, event_type: Type[E], handler: EventHandler[E]) -> None:\n        """\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \ub4f1\ub85d"""\n        if event_type not in self._handlers:\n            self._handlers[event_type] = []\n        self._handlers[event_type].append(handler)\n\n    def publish(self, event: E) -> None:\n        """\uc774\ubca4\ud2b8 \ubc1c\ud589"""\n        event_type = type(event)\n        if event_type in self._handlers:\n            for handler in self._handlers[event_type]:\n                handler(event)\n\n    def unsubscribe(self, event_type: Type[E], handler: EventHandler[E]) -> None:\n        """\uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc81c\uac70"""\n        if event_type in self._handlers:\n            self._handlers[event_type].remove(handler)\n\n# \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec \uc815\uc758\ndef send_welcome_email(event: UserRegisteredEvent) -> None:\n    print(f"Sending welcome email to {event.email}")\n\ndef update_user_stats(event: UserRegisteredEvent) -> None:\n    print(f"Updating stats for user {event.username}")\n\ndef process_payment(event: OrderPlacedEvent) -> None:\n    print(f"Processing payment of ${event.total_amount}")\n\ndef update_inventory(event: OrderPlacedEvent) -> None:\n    print(f"Updating inventory for order {event.order_id}")\n\n# \uc0ac\uc6a9 \uc608\uc2dc\nevent_bus = EventBus()\n\n# \ud578\ub4e4\ub7ec \ub4f1\ub85d\nevent_bus.subscribe(UserRegisteredEvent, send_welcome_email)\nevent_bus.subscribe(UserRegisteredEvent, update_user_stats)\nevent_bus.subscribe(OrderPlacedEvent, process_payment)\nevent_bus.subscribe(OrderPlacedEvent, update_inventory)\n\n# \uc774\ubca4\ud2b8 \ubc1c\ud589\nuser_event = UserRegisteredEvent(\n    user_id=1,\n    username="alice",\n    email="alice@example.com",\n    timestamp=datetime.now()\n)\nevent_bus.publish(user_event)\n\norder_event = OrderPlacedEvent(\n    order_id=100,\n    user_id=1,\n    total_amount=99.99,\n    timestamp=datetime.now()\n)\nevent_bus.publish(order_event)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"514-\ubaa8\ubc94-\uc0ac\ub840",children:"5.14 \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,i.jsx)(e.h3,{id:"1-\uacf5\uac1c-api\uc5d0-\ud0c0\uc785-\ud78c\ud2b8-\ud544\uc218",children:"1. \uacf5\uac1c API\uc5d0 \ud0c0\uc785 \ud78c\ud2b8 \ud544\uc218"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# Good: \uacf5\uac1c \ud568\uc218\ub294 \ud0c0\uc785 \uba85\uc2dc\ndef calculate_total(prices: List[float], tax_rate: float = 0.1) -> float:\n    """\uac00\uaca9 \ubaa9\ub85d\uc758 \ucd1d\ud569\uc744 \uc138\uae08 \ud3ec\ud568\ud558\uc5ec \uacc4\uc0b0"""\n    subtotal = sum(prices)\n    return subtotal * (1 + tax_rate)\n\n# Bad: \uacf5\uac1c \ud568\uc218\uc5d0 \ud0c0\uc785 \uc5c6\uc74c\ndef calculate_total(prices, tax_rate=0.1):\n    subtotal = sum(prices)\n    return subtotal * (1 + tax_rate)\n'})}),"\n",(0,i.jsx)(e.h3,{id:"2-\uad6c\uccb4\uc801\uc778-\ud0c0\uc785-\uc0ac\uc6a9",children:"2. \uad6c\uccb4\uc801\uc778 \ud0c0\uc785 \uc0ac\uc6a9"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import List, Dict, Any\n\n# Good: \uad6c\uccb4\uc801\uc778 \ud0c0\uc785\ndef get_user_scores() -> Dict[str, int]:\n    return {"alice": 95, "bob": 87}\n\n# Bad: \ub108\ubb34 \uc77c\ubc18\uc801\ndef get_user_scores() -> dict:\n    return {"alice": 95, "bob": 87}\n\n# Bad: Any \ub0a8\uc6a9\ndef get_user_scores() -> Dict[Any, Any]:\n    return {"alice": 95, "bob": 87}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"3-typeddict\ub85c-\uad6c\uc870\ud654\ub41c-\ub515\uc154\ub108\ub9ac",children:"3. TypedDict\ub85c \uad6c\uc870\ud654\ub41c \ub515\uc154\ub108\ub9ac"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypedDict\n\n# Good: \uba85\ud655\ud55c \uad6c\uc870\nclass UserProfile(TypedDict):\n    username: str\n    email: str\n    age: int\n    is_premium: bool\n\ndef create_profile(username: str, email: str, age: int) -> UserProfile:\n    return {\n        "username": username,\n        "email": email,\n        "age": age,\n        "is_premium": False\n    }\n\n# Bad: \ubd88\uba85\ud655\ud55c \ub515\uc154\ub108\ub9ac\ndef create_profile(username: str, email: str, age: int) -> dict:\n    return {\n        "username": username,\n        "email": email,\n        "age": age,\n        "is_premium": False\n    }\n'})}),"\n",(0,i.jsx)(e.h3,{id:"4-dataclass-\ud65c\uc6a9",children:"4. dataclass \ud65c\uc6a9"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from dataclasses import dataclass\nfrom typing import List\n\n# Good: dataclass \uc0ac\uc6a9\n@dataclass\nclass Product:\n    id: int\n    name: str\n    price: float\n    tags: List[str]\n\ndef create_product(name: str, price: float) -> Product:\n    return Product(id=0, name=name, price=price, tags=[])\n\n# Bad: \uc77c\ubc18 \ud074\ub798\uc2a4\uc5d0\uc11c \uc218\ub3d9 \ucd08\uae30\ud654\nclass Product:\n    def __init__(self, id: int, name: str, price: float, tags: List[str]):\n        self.id = id\n        self.name = name\n        self.price = price\n        self.tags = tags\n"})}),"\n",(0,i.jsx)(e.h3,{id:"5-optional\uc744-\uba85\uc2dc\uc801\uc73c\ub85c",children:"5. Optional\uc744 \uba85\uc2dc\uc801\uc73c\ub85c"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Optional\n\n# Good: None \uac00\ub2a5\uc131 \uba85\uc2dc\ndef find_user(user_id: int) -> Optional[str]:\n    users = {1: "Alice", 2: "Bob"}\n    return users.get(user_id)\n\n# Bad: None \ubc18\ud658 \uac00\ub2a5\uc131 \uc228\uae40\ndef find_user(user_id: int) -> str:\n    users = {1: "Alice", 2: "Bob"}\n    return users.get(user_id)  # type: ignore\n'})}),"\n",(0,i.jsx)(e.h3,{id:"6-\uc81c\ub124\ub9ad-\ud568\uc218\uc5d0-typevar-\uc0ac\uc6a9",children:"6. \uc81c\ub124\ub9ad \ud568\uc218\uc5d0 TypeVar \uc0ac\uc6a9"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import TypeVar, List\n\nT = TypeVar('T')\n\n# Good: \ud0c0\uc785 \ubcf4\uc874\ndef first_and_last(items: List[T]) -> tuple[T, T]:\n    return items[0], items[-1]\n\nnumbers = [1, 2, 3]\nfirst, last = first_and_last(numbers)  # \ud0c0\uc785: int, int\n\n# Bad: \ud0c0\uc785 \uc190\uc2e4\ndef first_and_last(items: list) -> tuple:\n    return items[0], items[-1]\n"})}),"\n",(0,i.jsx)(e.h3,{id:"7-protocol\ub85c-\uc778\ud130\ud398\uc774\uc2a4-\uc815\uc758",children:"7. Protocol\ub85c \uc778\ud130\ud398\uc774\uc2a4 \uc815\uc758"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import Protocol\n\n# Good: \uba85\ud655\ud55c \uc778\ud130\ud398\uc774\uc2a4\nclass Serializable(Protocol):\n    def to_dict(self) -> dict: ...\n    def from_dict(self, data: dict) -> None: ...\n\ndef save_to_file(obj: Serializable, filename: str) -> None:\n    import json\n    with open(filename, 'w') as f:\n        json.dump(obj.to_dict(), f)\n\n# Bad: Any \uc0ac\uc6a9\nfrom typing import Any\n\ndef save_to_file(obj: Any, filename: str) -> None:\n    import json\n    with open(filename, 'w') as f:\n        json.dump(obj.to_dict(), f)\n"})}),"\n",(0,i.jsx)(e.h3,{id:"8-\ubcf5\uc7a1\ud55c-\ud0c0\uc785\uc740-\ubcc4\uce6d-\uc0ac\uc6a9",children:"8. \ubcf5\uc7a1\ud55c \ud0c0\uc785\uc740 \ubcc4\uce6d \uc0ac\uc6a9"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from typing import Dict, List, Tuple, TypeAlias\n\n# Good: \ud0c0\uc785 \ubcc4\uce6d\uc73c\ub85c \uac00\ub3c5\uc131 \ud5a5\uc0c1\nUserId = int\nTimestamp = float\nCoordinate = Tuple[float, float]\nUserLocation = Dict[UserId, Tuple[Coordinate, Timestamp]]\n\ndef get_user_locations() -> UserLocation:\n    return {\n        1: ((37.5665, 126.9780), 1640000000.0),\n        2: ((35.1796, 129.0756), 1640000100.0)\n    }\n\n# Bad: \ubcf5\uc7a1\ud55c \ud0c0\uc785\uc744 \uc9c1\uc811 \uc0ac\uc6a9\ndef get_user_locations() -> Dict[int, Tuple[Tuple[float, float], float]]:\n    return {\n        1: ((37.5665, 126.9780), 1640000000.0),\n        2: ((35.1796, 129.0756), 1640000100.0)\n    }\n"})}),"\n",(0,i.jsx)(e.h2,{id:"515-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"5.15 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,i.jsx)(e.p,{children:"\ud0c0\uc785 \ud78c\ud305\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uccb4\ud06c\ub9ac\uc2a4\ud2b8\uc785\ub2c8\ub2e4:"}),"\n",(0,i.jsx)(e.h3,{id:"\uae30\ubcf8-\uc6d0\uce59",children:"\uae30\ubcf8 \uc6d0\uce59"}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubaa8\ub4e0 \uacf5\uac1c API\uc5d0 \ud0c0\uc785 \ud78c\ud2b8 \ucd94\uac00"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud568\uc218 \uc2dc\uadf8\ub2c8\ucc98\uc5d0 \ub9e4\uac1c\ubcc0\uc218\uc640 \ubc18\ud658 \ud0c0\uc785 \uba85\uc2dc"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(e.code,{children:"Any"})," \ud0c0\uc785 \uc0ac\uc6a9 \ucd5c\uc18c\ud654"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uac00\ub2a5\ud55c \uad6c\uccb4\uc801\uc778 \ud0c0\uc785 \uc0ac\uc6a9"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","None \uac00\ub2a5\uc131\uc774 \uc788\uc73c\uba74 ",(0,i.jsx)(e.code,{children:"Optional"})," \uc0ac\uc6a9"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\ud504\ub85c\uc81d\ud2b8-\uc124\uc815",children:"\ud504\ub85c\uc81d\ud2b8 \uc124\uc815"}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","mypy \uc124\uce58 \ubc0f \uc124\uc815 \ud30c\uc77c \uc791\uc131"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","CI/CD\uc5d0 \ud0c0\uc785 \uccb4\ud06c \ub2e8\uacc4 \ucd94\uac00"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc5d0\ub514\ud130/IDE\uc5d0 \ud0c0\uc785 \uccb4\ud06c \ud50c\ub7ec\uadf8\uc778 \uc124\uc815"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","pre-commit hook\uc5d0 mypy \ucd94\uac00"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\ucf54\ub4dc-\uc791\uc131",children:"\ucf54\ub4dc \uc791\uc131"}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubcf5\uc7a1\ud55c \ub515\uc154\ub108\ub9ac\ub294 ",(0,i.jsx)(e.code,{children:"TypedDict"})," \ub610\ub294 ",(0,i.jsx)(e.code,{children:"dataclass"})," \uc0ac\uc6a9"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc81c\ub124\ub9ad \ud568\uc218/\ud074\ub798\uc2a4\uc5d0 ",(0,i.jsx)(e.code,{children:"TypeVar"})," \uc0ac\uc6a9"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ucf5c\ubc31 \ud568\uc218\uc5d0 ",(0,i.jsx)(e.code,{children:"Callable"})," \ud0c0\uc785 \uba85\uc2dc"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub9ac\ud130\ub7f4 \uac12 \uc81c\ud55c\uc774 \ud544\uc694\ud558\uba74 ",(0,i.jsx)(e.code,{children:"Literal"})," \uc0ac\uc6a9"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc0c1\uc218\ub294 ",(0,i.jsx)(e.code,{children:"Final"}),"\ub85c \ud45c\uc2dc"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\uace0\uae09-\uae30\ubc95",children:"\uace0\uae09 \uae30\ubc95"}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub355 \ud0c0\uc774\ud551\uc774 \ud544\uc694\ud558\uba74 ",(0,i.jsx)(e.code,{children:"Protocol"})," \uc0ac\uc6a9"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubcf5\uc7a1\ud55c \ud0c0\uc785\uc740 \ud0c0\uc785 \ubcc4\uce6d \uc0dd\uc131"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc11c\ub4dc\ud30c\ud2f0 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ud0c0\uc785 \uc2a4\ud141 \uc124\uce58"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud544\uc694\uc2dc \ucee4\uc2a4\ud140 \ud0c0\uc785 \uc2a4\ud141 \uc791\uc131"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\uc720\uc9c0\ubcf4\uc218",children:"\uc720\uc9c0\ubcf4\uc218"}),"\n",(0,i.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc815\uae30\uc801\uc73c\ub85c \ud0c0\uc785 \ucee4\ubc84\ub9ac\uc9c0 \ud655\uc778"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud0c0\uc785 \uc624\ub958 \ubc1c\uacac \uc2dc \uc989\uc2dc \uc218\uc815"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub9ac\ud329\ud1a0\ub9c1 \uc2dc \ud0c0\uc785 \ud78c\ud2b8 \uc5c5\ub370\uc774\ud2b8"]}),"\n",(0,i.jsxs)(e.li,{className:"task-list-item",children:[(0,i.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud300\uc6d0\ub4e4\uacfc \ud0c0\uc785 \ud78c\ud305 \ucee8\ubca4\uc158 \uacf5\uc720"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"516-\uc720\uc6a9\ud55c-\ud301",children:"5.16 \uc720\uc6a9\ud55c \ud301"}),"\n",(0,i.jsx)(e.h3,{id:"1-\uc810\uc9c4\uc801-\ub3c4\uc785-\uc804\ub7b5",children:"1. \uc810\uc9c4\uc801 \ub3c4\uc785 \uc804\ub7b5"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# \ub2e8\uacc4 1: \uc0c8 \ucf54\ub4dc\ubd80\ud130 \uc2dc\uc791\ndef new_feature(data: dict) -> str:\n    return str(data)\n\n# \ub2e8\uacc4 2: \ubc84\uadf8\uac00 \ub9ce\uc740 \ubd80\ubd84\ndef buggy_function(items: List[int]) -> int:\n    return sum(items)\n\n# \ub2e8\uacc4 3: \uacf5\uac1c API\ndef public_api(user_id: int) -> Optional[dict]:\n    return None\n\n# \ub2e8\uacc4 4: \uc804\uccb4 \ubaa8\ub4c8\n"})}),"\n",(0,i.jsx)(e.h3,{id:"2-mypy-\uc124\uc815-\ub2e8\uacc4\ubcc4-\uc5c4\uaca9\ud654",children:"2. mypy \uc124\uc815 \ub2e8\uacc4\ubcc4 \uc5c4\uaca9\ud654"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ini",children:"# \ucd08\uae30: \ub290\uc2a8\ud55c \uc124\uc815\n[mypy]\nignore_missing_imports = True\n\n# \uc911\uac04: \uae30\ubcf8 \uccb4\ud06c\n[mypy]\ncheck_untyped_defs = True\n\n# \ucd5c\uc885: \uc5c4\uaca9\ud55c \uc124\uc815\n[mypy]\nstrict = True\n"})}),"\n",(0,i.jsx)(e.h3,{id:"3-\ud0c0\uc785-\ud78c\ud2b8-\ub514\ubc84\uae45",children:"3. \ud0c0\uc785 \ud78c\ud2b8 \ub514\ubc84\uae45"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import reveal_type\n\ndef debug_types() -> None:\n    x = [1, 2, 3]\n    reveal_type(x)  # mypy\uac00 "List[int]" \ucd9c\ub825\n\n    y = {"a": 1, "b": 2}\n    reveal_type(y)  # mypy\uac00 "Dict[str, int]" \ucd9c\ub825\n'})}),"\n",(0,i.jsx)(e.h3,{id:"4-\ub7f0\ud0c0\uc784-\ud0c0\uc785-\uccb4\ud06c-pydantic",children:"4. \ub7f0\ud0c0\uc784 \ud0c0\uc785 \uccb4\ud06c (pydantic)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from pydantic import BaseModel, validator\nfrom typing import List\n\nclass User(BaseModel):\n    """\ub7f0\ud0c0\uc784\uc5d0 \ud0c0\uc785 \uac80\uc99d"""\n    username: str\n    email: str\n    age: int\n\n    @validator(\'age\')\n    def validate_age(cls, v):\n        if v < 0 or v > 150:\n            raise ValueError(\'Invalid age\')\n        return v\n\n# \uc790\ub3d9 \uac80\uc99d\ntry:\n    user = User(username="alice", email="alice@example.com", age=200)\nexcept ValueError as e:\n    print(f"Validation error: {e}")\n'})}),"\n",(0,i.jsx)(e.h3,{id:"5-\ud0c0\uc785-\uac00\ub4dc-type-guards",children:"5. \ud0c0\uc785 \uac00\ub4dc (Type Guards)"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Union, TypeGuard\n\ndef is_string_list(val: list) -> TypeGuard[List[str]]:\n    """\ud0c0\uc785 \uac00\ub4dc \ud568\uc218"""\n    return all(isinstance(x, str) for x in val)\n\ndef process(items: Union[List[str], List[int]]) -> None:\n    if is_string_list(items):\n        # \uc774 \ube14\ub85d\uc5d0\uc11c items\ub294 List[str]\ub85c \uc881\ud600\uc9d0\n        print(items[0].upper())\n    else:\n        # \uc774 \ube14\ub85d\uc5d0\uc11c items\ub294 List[int]\ub85c \uc881\ud600\uc9d0\n        print(items[0] + 1)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\uc5f0\uc2b5-\ubb38\uc81c",children:"\uc5f0\uc2b5 \ubb38\uc81c"}),"\n",(0,i.jsx)(e.h3,{id:"\ubb38\uc81c-1-\ud0c0\uc785\uc774-\uc9c0\uc815\ub41c-\uacc4\uc0b0\uae30",children:"\ubb38\uc81c 1: \ud0c0\uc785\uc774 \uc9c0\uc815\ub41c \uacc4\uc0b0\uae30"}),"\n",(0,i.jsx)(e.p,{children:"\uac04\ub2e8\ud55c \uacc4\uc0b0\uae30 \ud074\ub798\uc2a4\ub97c \uc791\uc131\ud558\uc138\uc694. \uc0ac\uce59\uc5f0\uc0b0\uc744 \uc9c0\uc6d0\ud558\uace0, \ubaa8\ub4e0 \uba54\uc11c\ub4dc\uc5d0 \uc801\uc808\ud55c \ud0c0\uc785 \ud78c\ud2b8\ub97c \ucd94\uac00\ud558\uc138\uc694."}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Union, Literal\n\nNumber = Union[int, float]\nOperation = Literal["+", "-", "*", "/"]\n\nclass Calculator:\n    """\ud0c0\uc785\uc774 \uc9c0\uc815\ub41c \uacc4\uc0b0\uae30"""\n\n    def __init__(self) -> None:\n        self.result: Number = 0\n\n    def add(self, a: Number, b: Number) -> Number:\n        """\ub367\uc148"""\n        self.result = a + b\n        return self.result\n\n    def subtract(self, a: Number, b: Number) -> Number:\n        """\ube84\uc148"""\n        self.result = a - b\n        return self.result\n\n    def multiply(self, a: Number, b: Number) -> Number:\n        """\uacf1\uc148"""\n        self.result = a * b\n        return self.result\n\n    def divide(self, a: Number, b: Number) -> Number:\n        """\ub098\ub217\uc148"""\n        if b == 0:\n            raise ValueError("Cannot divide by zero")\n        self.result = a / b\n        return self.result\n\n    def calculate(self, a: Number, b: Number, operation: Operation) -> Number:\n        """\uc8fc\uc5b4\uc9c4 \uc5f0\uc0b0 \uc218\ud589"""\n        operations = {\n            "+": self.add,\n            "-": self.subtract,\n            "*": self.multiply,\n            "/": self.divide\n        }\n        return operations[operation](a, b)\n\n    def get_result(self) -> Number:\n        """\ub9c8\uc9c0\ub9c9 \uacb0\uacfc \ubc18\ud658"""\n        return self.result\n\n# \uc0ac\uc6a9 \uc608\uc2dc\ncalc = Calculator()\nprint(calc.add(10, 5))        # 15\nprint(calc.multiply(3, 4))    # 12\nprint(calc.calculate(20, 4, "/"))  # 5.0\n'})})]}),"\n",(0,i.jsx)(e.h3,{id:"\ubb38\uc81c-2-\uc81c\ub124\ub9ad-\uce90\uc2dc-\uad6c\ud604",children:"\ubb38\uc81c 2: \uc81c\ub124\ub9ad \uce90\uc2dc \uad6c\ud604"}),"\n",(0,i.jsx)(e.p,{children:"LRU(Least Recently Used) \uce90\uc2dc\ub97c \uc81c\ub124\ub9ad \ud074\ub798\uc2a4\ub85c \uad6c\ud604\ud558\uc138\uc694. \ud0a4\uc640 \uac12\uc758 \ud0c0\uc785\uc744 \ub9e4\uac1c\ubcc0\uc218\ud654\ud558\uace0, \ud0c0\uc785 \ud78c\ud2b8\ub97c \uc644\uc804\ud788 \uc801\uc6a9\ud558\uc138\uc694."}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypeVar, Generic, Dict, Optional, OrderedDict as OrderedDictType\nfrom collections import OrderedDict\n\nK = TypeVar(\'K\')\nV = TypeVar(\'V\')\n\nclass LRUCache(Generic[K, V]):\n    """LRU \uce90\uc2dc \uad6c\ud604"""\n\n    def __init__(self, capacity: int) -> None:\n        if capacity <= 0:\n            raise ValueError("Capacity must be positive")\n        self.capacity = capacity\n        self.cache: OrderedDictType[K, V] = OrderedDict()\n\n    def get(self, key: K) -> Optional[V]:\n        """\ud0a4\ub85c \uac12 \uc870\ud68c. \uc5c6\uc73c\uba74 None \ubc18\ud658"""\n        if key not in self.cache:\n            return None\n\n        # \ucd5c\uadfc \uc0ac\uc6a9\uc73c\ub85c \uc774\ub3d9\n        self.cache.move_to_end(key)\n        return self.cache[key]\n\n    def put(self, key: K, value: V) -> None:\n        """\ud0a4-\uac12 \uc30d \uc800\uc7a5"""\n        if key in self.cache:\n            # \uae30\uc874 \ud56d\ubaa9 \uc5c5\ub370\uc774\ud2b8\n            self.cache.move_to_end(key)\n        else:\n            # \uc0c8 \ud56d\ubaa9 \ucd94\uac00\n            if len(self.cache) >= self.capacity:\n                # \uac00\uc7a5 \uc624\ub798\ub41c \ud56d\ubaa9 \uc81c\uac70\n                self.cache.popitem(last=False)\n\n        self.cache[key] = value\n\n    def remove(self, key: K) -> bool:\n        """\ud0a4 \uc81c\uac70. \uc131\uacf5 \uc2dc True, \ud0a4\uac00 \uc5c6\uc73c\uba74 False"""\n        if key in self.cache:\n            del self.cache[key]\n            return True\n        return False\n\n    def clear(self) -> None:\n        """\ubaa8\ub4e0 \ud56d\ubaa9 \uc81c\uac70"""\n        self.cache.clear()\n\n    def size(self) -> int:\n        """\ud604\uc7ac \uce90\uc2dc \ud06c\uae30"""\n        return len(self.cache)\n\n# \uc0ac\uc6a9 \uc608\uc2dc\n# \uc815\uc218 \ud0a4, \ubb38\uc790\uc5f4 \uac12\ncache1: LRUCache[int, str] = LRUCache(3)\ncache1.put(1, "one")\ncache1.put(2, "two")\ncache1.put(3, "three")\nprint(cache1.get(1))  # "one"\n\ncache1.put(4, "four")  # 2\uac00 \uc81c\uac70\ub428\nprint(cache1.get(2))   # None\n\n# \ubb38\uc790\uc5f4 \ud0a4, \ub515\uc154\ub108\ub9ac \uac12\ncache2: LRUCache[str, dict] = LRUCache(2)\ncache2.put("user1", {"name": "Alice", "age": 30})\ncache2.put("user2", {"name": "Bob", "age": 25})\nprint(cache2.get("user1"))  # {"name": "Alice", "age": 30}\n'})})]}),"\n",(0,i.jsx)(e.h3,{id:"\ubb38\uc81c-3-protocol\uc744-\uc0ac\uc6a9\ud55c-\ud50c\ub7ec\uadf8\uc778-\uc2dc\uc2a4\ud15c",children:"\ubb38\uc81c 3: Protocol\uc744 \uc0ac\uc6a9\ud55c \ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c"}),"\n",(0,i.jsxs)(e.p,{children:["\ub2e4\uc591\ud55c \ub370\uc774\ud130 \uc18c\uc2a4\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc77d\uc744 \uc218 \uc788\ub294 \ud50c\ub7ec\uadf8\uc778 \uc2dc\uc2a4\ud15c\uc744 \uad6c\ud604\ud558\uc138\uc694. ",(0,i.jsx)(e.code,{children:"Protocol"}),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud50c\ub7ec\uadf8\uc778 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc815\uc758\ud558\uace0, \uc5ec\ub7ec \uad6c\ud604\uccb4\ub97c \ub9cc\ub4dc\uc138\uc694."]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import Protocol, List, Dict, Any, Optional\nfrom abc import abstractmethod\nimport json\nimport csv\nfrom io import StringIO\n\nclass DataSource(Protocol):\n    """\ub370\uc774\ud130 \uc18c\uc2a4 \ud504\ub85c\ud1a0\ucf5c"""\n\n    @abstractmethod\n    def read(self) -> List[Dict[str, Any]]:\n        """\ub370\uc774\ud130 \uc77d\uae30"""\n        ...\n\n    @abstractmethod\n    def validate(self) -> bool:\n        """\ub370\uc774\ud130 \uc18c\uc2a4 \uc720\ud6a8\uc131 \uac80\uc99d"""\n        ...\n\nclass JsonDataSource:\n    """JSON \ub370\uc774\ud130 \uc18c\uc2a4"""\n\n    def __init__(self, json_string: str) -> None:\n        self.json_string = json_string\n\n    def read(self) -> List[Dict[str, Any]]:\n        """JSON \ub370\uc774\ud130 \ud30c\uc2f1"""\n        data = json.loads(self.json_string)\n        if isinstance(data, list):\n            return data\n        return [data]\n\n    def validate(self) -> bool:\n        """JSON \uc720\ud6a8\uc131 \uac80\uc99d"""\n        try:\n            json.loads(self.json_string)\n            return True\n        except json.JSONDecodeError:\n            return False\n\nclass CsvDataSource:\n    """CSV \ub370\uc774\ud130 \uc18c\uc2a4"""\n\n    def __init__(self, csv_string: str) -> None:\n        self.csv_string = csv_string\n\n    def read(self) -> List[Dict[str, Any]]:\n        """CSV \ub370\uc774\ud130 \ud30c\uc2f1"""\n        reader = csv.DictReader(StringIO(self.csv_string))\n        return list(reader)\n\n    def validate(self) -> bool:\n        """CSV \uc720\ud6a8\uc131 \uac80\uc99d"""\n        try:\n            reader = csv.DictReader(StringIO(self.csv_string))\n            list(reader)\n            return True\n        except csv.Error:\n            return False\n\nclass DatabaseDataSource:\n    """\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub370\uc774\ud130 \uc18c\uc2a4 (\ubaa8\uc758)"""\n\n    def __init__(self, query: str) -> None:\n        self.query = query\n\n    def read(self) -> List[Dict[str, Any]]:\n        """\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucffc\ub9ac \uc2e4\ud589 (\ubaa8\uc758)"""\n        # \uc2e4\uc81c\ub85c\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0 \ubc0f \ucffc\ub9ac \uc2e4\ud589\n        return [\n            {"id": 1, "name": "Alice"},\n            {"id": 2, "name": "Bob"}\n        ]\n\n    def validate(self) -> bool:\n        """\ucffc\ub9ac \uc720\ud6a8\uc131 \uac80\uc99d"""\n        return len(self.query.strip()) > 0\n\nclass DataLoader:\n    """\ub370\uc774\ud130 \ub85c\ub354"""\n\n    def __init__(self, source: DataSource) -> None:\n        self.source = source\n\n    def load(self) -> Optional[List[Dict[str, Any]]]:\n        """\ub370\uc774\ud130 \ub85c\ub4dc"""\n        if not self.source.validate():\n            print("Invalid data source")\n            return None\n\n        try:\n            return self.source.read()\n        except Exception as e:\n            print(f"Error loading data: {e}")\n            return None\n\n# \uc0ac\uc6a9 \uc608\uc2dc\n# JSON \uc18c\uc2a4\njson_data = \'[{"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"}]\'\njson_source = JsonDataSource(json_data)\nloader1 = DataLoader(json_source)\ndata1 = loader1.load()\nprint("JSON data:", data1)\n\n# CSV \uc18c\uc2a4\ncsv_data = "id,name\\n1,Alice\\n2,Bob"\ncsv_source = CsvDataSource(csv_data)\nloader2 = DataLoader(csv_source)\ndata2 = loader2.load()\nprint("CSV data:", data2)\n\n# \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc18c\uc2a4\ndb_source = DatabaseDataSource("SELECT * FROM users")\nloader3 = DataLoader(db_source)\ndata3 = loader3.load()\nprint("Database data:", data3)\n'})})]}),"\n",(0,i.jsx)(e.h3,{id:"\ubb38\uc81c-4-typeddict\ub97c-\uc0ac\uc6a9\ud55c-\uc124\uc815-\uad00\ub9ac",children:"\ubb38\uc81c 4: TypedDict\ub97c \uc0ac\uc6a9\ud55c \uc124\uc815 \uad00\ub9ac"}),"\n",(0,i.jsxs)(e.p,{children:["\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uc815\uc744 \uad00\ub9ac\ud558\ub294 \uc2dc\uc2a4\ud15c\uc744 ",(0,i.jsx)(e.code,{children:"TypedDict"}),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\ud604\ud558\uc138\uc694. \uc911\ucca9\ub41c \uc124\uc815\uacfc \uc120\ud0dd\uc801 \ud544\ub4dc\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4."]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'from typing import TypedDict, Optional, Literal, NotRequired\nimport json\n\nclass DatabaseConfig(TypedDict):\n    """\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815"""\n    host: str\n    port: int\n    username: str\n    password: str\n    database: str\n    ssl: NotRequired[bool]  # Python 3.11+\n\nclass RedisConfig(TypedDict):\n    """Redis \uc124\uc815"""\n    host: str\n    port: int\n    db: int\n    password: NotRequired[str]\n\nclass LoggingConfig(TypedDict):\n    """\ub85c\uae45 \uc124\uc815"""\n    level: Literal["DEBUG", "INFO", "WARNING", "ERROR"]\n    format: str\n    output: Literal["console", "file", "both"]\n    file_path: NotRequired[str]\n\nclass ApiConfig(TypedDict):\n    """API \uc124\uc815"""\n    base_url: str\n    timeout: int\n    retries: int\n    api_key: str\n\nclass AppConfig(TypedDict):\n    """\uc804\uccb4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uc815"""\n    app_name: str\n    version: str\n    debug: bool\n    database: DatabaseConfig\n    redis: RedisConfig\n    logging: LoggingConfig\n    api: ApiConfig\n\nclass ConfigManager:\n    """\uc124\uc815 \uad00\ub9ac\uc790"""\n\n    def __init__(self, config_file: Optional[str] = None) -> None:\n        self.config: Optional[AppConfig] = None\n        if config_file:\n            self.load_from_file(config_file)\n\n    def load_from_file(self, file_path: str) -> None:\n        """\ud30c\uc77c\uc5d0\uc11c \uc124\uc815 \ub85c\ub4dc"""\n        with open(file_path, \'r\') as f:\n            self.config = json.load(f)\n\n    def load_from_dict(self, config_dict: AppConfig) -> None:\n        """\ub515\uc154\ub108\ub9ac\uc5d0\uc11c \uc124\uc815 \ub85c\ub4dc"""\n        self.config = config_dict\n\n    def get_database_config(self) -> Optional[DatabaseConfig]:\n        """\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815 \ubc18\ud658"""\n        if self.config:\n            return self.config["database"]\n        return None\n\n    def get_redis_config(self) -> Optional[RedisConfig]:\n        """Redis \uc124\uc815 \ubc18\ud658"""\n        if self.config:\n            return self.config["redis"]\n        return None\n\n    def get_logging_config(self) -> Optional[LoggingConfig]:\n        """\ub85c\uae45 \uc124\uc815 \ubc18\ud658"""\n        if self.config:\n            return self.config["logging"]\n        return None\n\n    def get_api_config(self) -> Optional[ApiConfig]:\n        """API \uc124\uc815 \ubc18\ud658"""\n        if self.config:\n            return self.config["api"]\n        return None\n\n    def is_debug_mode(self) -> bool:\n        """\ub514\ubc84\uadf8 \ubaa8\ub4dc \uc5ec\ubd80"""\n        return self.config["debug"] if self.config else False\n\n    def validate(self) -> bool:\n        """\uc124\uc815 \uc720\ud6a8\uc131 \uac80\uc99d"""\n        if not self.config:\n            return False\n\n        # \ud544\uc218 \ud544\ub4dc \ud655\uc778\n        required_keys = ["app_name", "version", "debug", "database", "redis", "logging", "api"]\n        if not all(key in self.config for key in required_keys):\n            return False\n\n        # \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815 \uac80\uc99d\n        db_config = self.config["database"]\n        if db_config["port"] < 1 or db_config["port"] > 65535:\n            return False\n\n        # Redis \uc124\uc815 \uac80\uc99d\n        redis_config = self.config["redis"]\n        if redis_config["port"] < 1 or redis_config["port"] > 65535:\n            return False\n\n        return True\n\n# \uc0ac\uc6a9 \uc608\uc2dc\nconfig_data: AppConfig = {\n    "app_name": "MyApp",\n    "version": "1.0.0",\n    "debug": True,\n    "database": {\n        "host": "localhost",\n        "port": 5432,\n        "username": "admin",\n        "password": "secret",\n        "database": "myapp_db",\n        "ssl": True\n    },\n    "redis": {\n        "host": "localhost",\n        "port": 6379,\n        "db": 0\n    },\n    "logging": {\n        "level": "INFO",\n        "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",\n        "output": "both",\n        "file_path": "/var/log/myapp.log"\n    },\n    "api": {\n        "base_url": "https://api.example.com",\n        "timeout": 30,\n        "retries": 3,\n        "api_key": "secret-key-123"\n    }\n}\n\nmanager = ConfigManager()\nmanager.load_from_dict(config_data)\n\nif manager.validate():\n    print("Configuration is valid")\n\n    db_config = manager.get_database_config()\n    if db_config:\n        print(f"Database: {db_config[\'host\']}:{db_config[\'port\']}")\n\n    if manager.is_debug_mode():\n        print("Running in debug mode")\nelse:\n    print("Invalid configuration")\n'})})]}),"\n",(0,i.jsx)(e.h2,{id:"\ub2e4\uc74c-\ub2e8\uacc4",children:"\ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,i.jsx)(e.p,{children:"\ud0c0\uc785 \ud78c\ud305\uc744 \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \ub2e4\uc74c \ub2e8\uacc4\ub85c Python\uc758 \ud14c\uc2a4\ud305 \uae30\ubc95\uc744 \ud559\uc2b5\ud558\uc138\uc694:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\ub2e8\uc704 \ud14c\uc2a4\ud2b8 \uc791\uc131"}),"\n",(0,i.jsx)(e.li,{children:"\ud1b5\ud569 \ud14c\uc2a4\ud2b8 \ubc0f E2E \ud14c\uc2a4\ud2b8"}),"\n",(0,i.jsx)(e.li,{children:"\ud14c\uc2a4\ud2b8 \ucee4\ubc84\ub9ac\uc9c0"}),"\n",(0,i.jsx)(e.li,{children:"\ubaa8\ud0b9\uacfc \ud53d\uc2a4\ucc98"}),"\n",(0,i.jsx)(e.li,{children:"\ud14c\uc2a4\ud2b8 \uc8fc\ub3c4 \uac1c\ubc1c(TDD)"}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:(0,i.jsx)(e.a,{href:"./testing",children:"\ud14c\uc2a4\ud305"})})," \uc139\uc158\uc5d0\uc11c \uacc4\uc18d \ud559\uc2b5\ud558\uc138\uc694!"]})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var s=t(6540);const i={},r=s.createContext(i);function a(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);