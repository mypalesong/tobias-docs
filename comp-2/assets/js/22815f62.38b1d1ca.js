"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[3015],{5567:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"python/intermediate/file-io","title":"3. \ud30c\uc77c \uc785\ucd9c\ub825","description":"\ud30c\uc77c \uc785\ucd9c\ub825(File I/O)\uc740 \ud504\ub85c\uadf8\ub7a8\uc774 \ub370\uc774\ud130\ub97c \uc601\uad6c\uc801\uc73c\ub85c \uc800\uc7a5\ud558\uace0 \uc77d\uc5b4\uc624\ub294 \ud544\uc218\uc801\uc778 \uae30\ub2a5\uc785\ub2c8\ub2e4. \uc774 \uc7a5\uc5d0\uc11c\ub294 Python\uc5d0\uc11c \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uacfc \uc2e4\uc804 \ud65c\uc6a9\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4.","source":"@site/docs/python/intermediate/file-io.md","sourceDirName":"python/intermediate","slug":"/python/intermediate/file-io","permalink":"/tobias-docs/comp-2/docs/python/intermediate/file-io","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python/intermediate/file-io.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"pythonSidebar","previous":{"title":"2. \uc608\uc678 \ucc98\ub9ac","permalink":"/tobias-docs/comp-2/docs/python/intermediate/error-handling"},"next":{"title":"4. \ub370\ucf54\ub808\uc774\ud130","permalink":"/tobias-docs/comp-2/docs/python/intermediate/decorators"}}');var s=i(4848),l=i(8453);const r={sidebar_position:3},a="3. \ud30c\uc77c \uc785\ucd9c\ub825",o={},d=[{value:"3.1 \ud30c\uc77c \uc5f4\uae30\uc640 \ub2eb\uae30",id:"31-\ud30c\uc77c-\uc5f4\uae30\uc640-\ub2eb\uae30",level:2},{value:"\uae30\ubcf8\uc801\uc778 \ud30c\uc77c \uc5f4\uae30",id:"\uae30\ubcf8\uc801\uc778-\ud30c\uc77c-\uc5f4\uae30",level:3},{value:"\ud30c\uc77c\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \ub54c \ucc98\ub9ac",id:"\ud30c\uc77c\uc774-\uc874\uc7ac\ud558\uc9c0-\uc54a\uc744-\ub54c-\ucc98\ub9ac",level:3},{value:"3.2 \ud30c\uc77c \uc77d\uae30",id:"32-\ud30c\uc77c-\uc77d\uae30",level:2},{value:"read() - \uc804\uccb4 \ub0b4\uc6a9 \uc77d\uae30",id:"read---\uc804\uccb4-\ub0b4\uc6a9-\uc77d\uae30",level:3},{value:"readline() - \ud55c \uc904\uc529 \uc77d\uae30",id:"readline---\ud55c-\uc904\uc529-\uc77d\uae30",level:3},{value:"readlines() - \ubaa8\ub4e0 \uc904\uc744 \ub9ac\uc2a4\ud2b8\ub85c \uc77d\uae30",id:"readlines---\ubaa8\ub4e0-\uc904\uc744-\ub9ac\uc2a4\ud2b8\ub85c-\uc77d\uae30",level:3},{value:"\ud30c\uc77c\uc744 \ubc18\ubcf5\ubb38\uc73c\ub85c \uc77d\uae30 (\uac00\uc7a5 \ud6a8\uc728\uc801)",id:"\ud30c\uc77c\uc744-\ubc18\ubcf5\ubb38\uc73c\ub85c-\uc77d\uae30-\uac00\uc7a5-\ud6a8\uc728\uc801",level:3},{value:"3.3 \ud30c\uc77c \uc4f0\uae30",id:"33-\ud30c\uc77c-\uc4f0\uae30",level:2},{value:"write() - \ubb38\uc790\uc5f4 \uc4f0\uae30",id:"write---\ubb38\uc790\uc5f4-\uc4f0\uae30",level:3},{value:"writelines() - \ub9ac\uc2a4\ud2b8\ub97c \ud30c\uc77c\uc5d0 \uc4f0\uae30",id:"writelines---\ub9ac\uc2a4\ud2b8\ub97c-\ud30c\uc77c\uc5d0-\uc4f0\uae30",level:3},{value:"\ud30c\uc77c\uc5d0 \ucd94\uac00\ud558\uae30",id:"\ud30c\uc77c\uc5d0-\ucd94\uac00\ud558\uae30",level:3},{value:"3.4 \ud30c\uc77c \ubaa8\ub4dc",id:"34-\ud30c\uc77c-\ubaa8\ub4dc",level:2},{value:"\ubc14\uc774\ub108\ub9ac \ubaa8\ub4dc",id:"\ubc14\uc774\ub108\ub9ac-\ubaa8\ub4dc",level:3},{value:"\ud30c\uc77c \ubaa8\ub4dc \uc608\uc81c",id:"\ud30c\uc77c-\ubaa8\ub4dc-\uc608\uc81c",level:3},{value:"3.5 with \ubb38 (\ucee8\ud14d\uc2a4\ud2b8 \ub9e4\ub2c8\uc800)",id:"35-with-\ubb38-\ucee8\ud14d\uc2a4\ud2b8-\ub9e4\ub2c8\uc800",level:2},{value:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95",id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95",level:3},{value:"\uc5ec\ub7ec \ud30c\uc77c \ub3d9\uc2dc\uc5d0 \uc5f4\uae30",id:"\uc5ec\ub7ec-\ud30c\uc77c-\ub3d9\uc2dc\uc5d0-\uc5f4\uae30",level:3},{value:"\uc608\uc678 \ubc1c\uc0dd \uc2dc\uc5d0\ub3c4 \uc548\uc804\ud558\uac8c \ub2eb\uae30",id:"\uc608\uc678-\ubc1c\uc0dd-\uc2dc\uc5d0\ub3c4-\uc548\uc804\ud558\uac8c-\ub2eb\uae30",level:3},{value:"3.6 \uacbd\ub85c \ub2e4\ub8e8\uae30",id:"36-\uacbd\ub85c-\ub2e4\ub8e8\uae30",level:2},{value:"os.path \ubaa8\ub4c8",id:"ospath-\ubaa8\ub4c8",level:3},{value:"pathlib \ubaa8\ub4c8 (Python 3.4+, \uad8c\uc7a5)",id:"pathlib-\ubaa8\ub4c8-python-34-\uad8c\uc7a5",level:3},{value:"\uacbd\ub85c \uc21c\ud68c",id:"\uacbd\ub85c-\uc21c\ud68c",level:3},{value:"3.7 CSV \ud30c\uc77c \ub2e4\ub8e8\uae30",id:"37-csv-\ud30c\uc77c-\ub2e4\ub8e8\uae30",level:2},{value:"CSV \uc77d\uae30",id:"csv-\uc77d\uae30",level:3},{value:"CSV \uc4f0\uae30",id:"csv-\uc4f0\uae30",level:3},{value:"CSV \uace0\uae09 \uc635\uc158",id:"csv-\uace0\uae09-\uc635\uc158",level:3},{value:"3.8 JSON \ud30c\uc77c \ub2e4\ub8e8\uae30",id:"38-json-\ud30c\uc77c-\ub2e4\ub8e8\uae30",level:2},{value:"JSON \uc77d\uae30",id:"json-\uc77d\uae30",level:3},{value:"JSON \uc4f0\uae30",id:"json-\uc4f0\uae30",level:3},{value:"JSON \uace0\uae09 \uc635\uc158",id:"json-\uace0\uae09-\uc635\uc158",level:3},{value:"\ucee4\uc2a4\ud140 JSON \uc778\ucf54\ub354/\ub514\ucf54\ub354",id:"\ucee4\uc2a4\ud140-json-\uc778\ucf54\ub354\ub514\ucf54\ub354",level:3},{value:"3.9 \ubc14\uc774\ub108\ub9ac \ud30c\uc77c",id:"39-\ubc14\uc774\ub108\ub9ac-\ud30c\uc77c",level:2},{value:"\uc774\ubbf8\uc9c0 \ud30c\uc77c \ubcf5\uc0ac",id:"\uc774\ubbf8\uc9c0-\ud30c\uc77c-\ubcf5\uc0ac",level:3},{value:"struct \ubaa8\ub4c8\ub85c \ubc14\uc774\ub108\ub9ac \ub370\uc774\ud130 \ub2e4\ub8e8\uae30",id:"struct-\ubaa8\ub4c8\ub85c-\ubc14\uc774\ub108\ub9ac-\ub370\uc774\ud130-\ub2e4\ub8e8\uae30",level:3},{value:"3.10 \ud30c\uc77c \uc791\uc5c5",id:"310-\ud30c\uc77c-\uc791\uc5c5",level:2},{value:"\ud30c\uc77c \uc874\uc7ac \ud655\uc778 \ubc0f \uc815\ubcf4",id:"\ud30c\uc77c-\uc874\uc7ac-\ud655\uc778-\ubc0f-\uc815\ubcf4",level:3},{value:"\ud30c\uc77c \uc774\ub984 \ubcc0\uacbd",id:"\ud30c\uc77c-\uc774\ub984-\ubcc0\uacbd",level:3},{value:"\ud30c\uc77c \ubcf5\uc0ac",id:"\ud30c\uc77c-\ubcf5\uc0ac",level:3},{value:"\ud30c\uc77c \uc0ad\uc81c",id:"\ud30c\uc77c-\uc0ad\uc81c",level:3},{value:"3.11 \ub514\ub809\ud1a0\ub9ac \uc791\uc5c5",id:"311-\ub514\ub809\ud1a0\ub9ac-\uc791\uc5c5",level:2},{value:"\ub514\ub809\ud1a0\ub9ac \uc0dd\uc131",id:"\ub514\ub809\ud1a0\ub9ac-\uc0dd\uc131",level:3},{value:"\ub514\ub809\ud1a0\ub9ac \ub0b4\uc6a9 \ud655\uc778",id:"\ub514\ub809\ud1a0\ub9ac-\ub0b4\uc6a9-\ud655\uc778",level:3},{value:"\ub514\ub809\ud1a0\ub9ac \uc0ad\uc81c",id:"\ub514\ub809\ud1a0\ub9ac-\uc0ad\uc81c",level:3},{value:"\ud604\uc7ac \uc791\uc5c5 \ub514\ub809\ud1a0\ub9ac",id:"\ud604\uc7ac-\uc791\uc5c5-\ub514\ub809\ud1a0\ub9ac",level:3},{value:"3.12 \uc2e4\uc804 \uc608\uc81c",id:"312-\uc2e4\uc804-\uc608\uc81c",level:2},{value:"\uc608\uc81c 1: \ub85c\uadf8 \ud30c\uc77c \ud30c\uc11c",id:"\uc608\uc81c-1-\ub85c\uadf8-\ud30c\uc77c-\ud30c\uc11c",level:3},{value:"\uc608\uc81c 2: CSV \ub370\uc774\ud130 \ud504\ub85c\uc138\uc11c",id:"\uc608\uc81c-2-csv-\ub370\uc774\ud130-\ud504\ub85c\uc138\uc11c",level:3},{value:"\uc608\uc81c 3: \uc124\uc815 \ud30c\uc77c \uad00\ub9ac\uc790",id:"\uc608\uc81c-3-\uc124\uc815-\ud30c\uc77c-\uad00\ub9ac\uc790",level:3},{value:"\uc608\uc81c 4: \ud30c\uc77c \ubc31\uc5c5 \uc720\ud2f8\ub9ac\ud2f0",id:"\uc608\uc81c-4-\ud30c\uc77c-\ubc31\uc5c5-\uc720\ud2f8\ub9ac\ud2f0",level:3},{value:"\uc608\uc81c 5: \ud14d\uc2a4\ud2b8 \ud30c\uc77c \ud1b5\uacc4 \ubd84\uc11d\uae30",id:"\uc608\uc81c-5-\ud14d\uc2a4\ud2b8-\ud30c\uc77c-\ud1b5\uacc4-\ubd84\uc11d\uae30",level:3},{value:"3.13 \ud30c\uc77c I/O \ubaa8\ubc94 \uc0ac\ub840",id:"313-\ud30c\uc77c-io-\ubaa8\ubc94-\uc0ac\ub840",level:2},{value:"1. \ud56d\uc0c1 with \ubb38 \uc0ac\uc6a9",id:"1-\ud56d\uc0c1-with-\ubb38-\uc0ac\uc6a9",level:3},{value:"2. \uc778\ucf54\ub529 \uba85\uc2dc",id:"2-\uc778\ucf54\ub529-\uba85\uc2dc",level:3},{value:"3. pathlib \uc0ac\uc6a9 (Python 3.4+)",id:"3-pathlib-\uc0ac\uc6a9-python-34",level:3},{value:"4. \ub300\uc6a9\ub7c9 \ud30c\uc77c\uc740 \uccad\ud06c\ub85c \ucc98\ub9ac",id:"4-\ub300\uc6a9\ub7c9-\ud30c\uc77c\uc740-\uccad\ud06c\ub85c-\ucc98\ub9ac",level:3},{value:"5. \uc608\uc678 \ucc98\ub9ac",id:"5-\uc608\uc678-\ucc98\ub9ac",level:3},{value:"6. \uc784\uc2dc \ud30c\uc77c \uc0ac\uc6a9",id:"6-\uc784\uc2dc-\ud30c\uc77c-\uc0ac\uc6a9",level:3},{value:"7. \ud30c\uc77c \uc7a0\uae08 (\ub3d9\uc2dc \uc811\uadfc \uc81c\uc5b4)",id:"7-\ud30c\uc77c-\uc7a0\uae08-\ub3d9\uc2dc-\uc811\uadfc-\uc81c\uc5b4",level:3},{value:"3.14 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"314-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"3.15 \ud575\uc2ec \uc694\uc57d",id:"315-\ud575\uc2ec-\uc694\uc57d",level:2},{value:"\uc5f0\uc2b5 \ubb38\uc81c",id:"\uc5f0\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c 1: \ub2e8\uc5b4 \uce74\uc6b4\ud130",id:"\ubb38\uc81c-1-\ub2e8\uc5b4-\uce74\uc6b4\ud130",level:3},{value:"\ubb38\uc81c 2: CSV \ubcd1\ud569\uae30",id:"\ubb38\uc81c-2-csv-\ubcd1\ud569\uae30",level:3},{value:"\ubb38\uc81c 3: \uc124\uc815 \ud30c\uc77c \uac80\uc99d\uae30",id:"\ubb38\uc81c-3-\uc124\uc815-\ud30c\uc77c-\uac80\uc99d\uae30",level:3},{value:"\ubb38\uc81c 4: \ub85c\uadf8 \ud30c\uc77c \ub85c\ud14c\uc774\uc158",id:"\ubb38\uc81c-4-\ub85c\uadf8-\ud30c\uc77c-\ub85c\ud14c\uc774\uc158",level:3}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"3-\ud30c\uc77c-\uc785\ucd9c\ub825",children:"3. \ud30c\uc77c \uc785\ucd9c\ub825"})}),"\n",(0,s.jsx)(e.p,{children:"\ud30c\uc77c \uc785\ucd9c\ub825(File I/O)\uc740 \ud504\ub85c\uadf8\ub7a8\uc774 \ub370\uc774\ud130\ub97c \uc601\uad6c\uc801\uc73c\ub85c \uc800\uc7a5\ud558\uace0 \uc77d\uc5b4\uc624\ub294 \ud544\uc218\uc801\uc778 \uae30\ub2a5\uc785\ub2c8\ub2e4. \uc774 \uc7a5\uc5d0\uc11c\ub294 Python\uc5d0\uc11c \ud30c\uc77c\uc744 \ub2e4\ub8e8\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uacfc \uc2e4\uc804 \ud65c\uc6a9\ubc95\uc744 \ud559\uc2b5\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h2,{id:"31-\ud30c\uc77c-\uc5f4\uae30\uc640-\ub2eb\uae30",children:"3.1 \ud30c\uc77c \uc5f4\uae30\uc640 \ub2eb\uae30"}),"\n",(0,s.jsx)(e.h3,{id:"\uae30\ubcf8\uc801\uc778-\ud30c\uc77c-\uc5f4\uae30",children:"\uae30\ubcf8\uc801\uc778 \ud30c\uc77c \uc5f4\uae30"}),"\n",(0,s.jsxs)(e.p,{children:["Python\uc5d0\uc11c\ub294 ",(0,s.jsx)(e.code,{children:"open()"})," \ud568\uc218\ub85c \ud30c\uc77c\uc744 \uc5fd\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ud30c\uc77c \uc5f4\uae30\nfile = open('example.txt', 'r')\n\n# \ud30c\uc77c \uc0ac\uc6a9\ncontent = file.read()\n\n# \ud30c\uc77c \ub2eb\uae30 (\uc911\uc694!)\nfile.close()\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"warning",children:(0,s.jsxs)(e.p,{children:["\ud30c\uc77c\uc744 \uc5f4\uba74 \ubc18\ub4dc\uc2dc ",(0,s.jsx)(e.code,{children:"close()"}),"\ub85c \ub2eb\uc544\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \uba54\ubaa8\ub9ac \ub204\uc218\ub098 \ud30c\uc77c \uc190\uc0c1\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c\uc774-\uc874\uc7ac\ud558\uc9c0-\uc54a\uc744-\ub54c-\ucc98\ub9ac",children:"\ud30c\uc77c\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \ub54c \ucc98\ub9ac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"try:\n    file = open('nonexistent.txt', 'r')\n    content = file.read()\n    file.close()\nexcept FileNotFoundError:\n    print(\"\ud30c\uc77c\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\")\nexcept IOError as e:\n    print(f\"\ud30c\uc77c \uc77d\uae30 \uc624\ub958: {e}\")\n"})}),"\n",(0,s.jsx)(e.h2,{id:"32-\ud30c\uc77c-\uc77d\uae30",children:"3.2 \ud30c\uc77c \uc77d\uae30"}),"\n",(0,s.jsx)(e.h3,{id:"read---\uc804\uccb4-\ub0b4\uc6a9-\uc77d\uae30",children:"read() - \uc804\uccb4 \ub0b4\uc6a9 \uc77d\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc804\uccb4 \ud30c\uc77c\uc744 \ud558\ub098\uc758 \ubb38\uc790\uc5f4\ub85c \uc77d\uae30\nwith open('example.txt', 'r', encoding='utf-8') as file:\n    content = file.read()\n    print(content)\n\n# \uc9c0\uc815\ud55c \ubc14\uc774\ud2b8 \uc218\ub9cc\ud07c \uc77d\uae30\nwith open('example.txt', 'r', encoding='utf-8') as file:\n    first_100_chars = file.read(100)\n    print(first_100_chars)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"readline---\ud55c-\uc904\uc529-\uc77d\uae30",children:"readline() - \ud55c \uc904\uc529 \uc77d\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"with open('example.txt', 'r', encoding='utf-8') as file:\n    # \uccab \ubc88\uc9f8 \uc904 \uc77d\uae30\n    first_line = file.readline()\n    print(f\"\uccab \ubc88\uc9f8 \uc904: {first_line}\")\n\n    # \ub450 \ubc88\uc9f8 \uc904 \uc77d\uae30\n    second_line = file.readline()\n    print(f\"\ub450 \ubc88\uc9f8 \uc904: {second_line}\")\n"})}),"\n",(0,s.jsx)(e.h3,{id:"readlines---\ubaa8\ub4e0-\uc904\uc744-\ub9ac\uc2a4\ud2b8\ub85c-\uc77d\uae30",children:"readlines() - \ubaa8\ub4e0 \uc904\uc744 \ub9ac\uc2a4\ud2b8\ub85c \uc77d\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"with open('example.txt', 'r', encoding='utf-8') as file:\n    lines = file.readlines()\n\n    for i, line in enumerate(lines, 1):\n        print(f\"{i}: {line.strip()}\")\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c\uc744-\ubc18\ubcf5\ubb38\uc73c\ub85c-\uc77d\uae30-\uac00\uc7a5-\ud6a8\uc728\uc801",children:"\ud30c\uc77c\uc744 \ubc18\ubcf5\ubb38\uc73c\ub85c \uc77d\uae30 (\uac00\uc7a5 \ud6a8\uc728\uc801)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uba54\ubaa8\ub9ac \ud6a8\uc728\uc801\uc778 \ubc29\ubc95 - \ud070 \ud30c\uc77c\uc5d0 \uc801\ud569\nwith open('large_file.txt', 'r', encoding='utf-8') as file:\n    for line in file:\n        # \uc904\ubc14\uafc8 \ubb38\uc790 \uc81c\uac70\n        line = line.strip()\n        print(line)\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:["\ub300\uc6a9\ub7c9 \ud30c\uc77c\uc740 ",(0,s.jsx)(e.code,{children:"readlines()"})," \ub300\uc2e0 \ubc18\ubcf5\ubb38\uc73c\ub85c \ud55c \uc904\uc529 \uc77d\ub294 \uac83\uc774 \uba54\ubaa8\ub9ac \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"33-\ud30c\uc77c-\uc4f0\uae30",children:"3.3 \ud30c\uc77c \uc4f0\uae30"}),"\n",(0,s.jsx)(e.h3,{id:"write---\ubb38\uc790\uc5f4-\uc4f0\uae30",children:"write() - \ubb38\uc790\uc5f4 \uc4f0\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'# \ud30c\uc77c\uc5d0 \uc4f0\uae30 (\ub36e\uc5b4\uc4f0\uae30)\nwith open(\'output.txt\', \'w\', encoding=\'utf-8\') as file:\n    file.write("\uccab \ubc88\uc9f8 \uc904\\n")\n    file.write("\ub450 \ubc88\uc9f8 \uc904\\n")\n\n    # write()\ub294 \uc791\uc131\ud55c \ubb38\uc790 \uc218\ub97c \ubc18\ud658\n    chars_written = file.write("\uc138 \ubc88\uc9f8 \uc904\\n")\n    print(f"{chars_written}\uc790 \uc791\uc131\ub428")\n'})}),"\n",(0,s.jsx)(e.h3,{id:"writelines---\ub9ac\uc2a4\ud2b8\ub97c-\ud30c\uc77c\uc5d0-\uc4f0\uae30",children:"writelines() - \ub9ac\uc2a4\ud2b8\ub97c \ud30c\uc77c\uc5d0 \uc4f0\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"lines = [\n    \"Python \ud30c\uc77c \uc785\ucd9c\ub825\\n\",\n    \"\uc904\ubc14\uafc8 \ubb38\uc790\ub97c \uc9c1\uc811 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4\\n\",\n    \"\ub9c8\uc9c0\ub9c9 \uc904\\n\"\n]\n\nwith open('output.txt', 'w', encoding='utf-8') as file:\n    file.writelines(lines)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c\uc5d0-\ucd94\uac00\ud558\uae30",children:"\ud30c\uc77c\uc5d0 \ucd94\uac00\ud558\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uae30\uc874 \ub0b4\uc6a9 \ub4a4\uc5d0 \ucd94\uac00\nwith open('output.txt', 'a', encoding='utf-8') as file:\n    file.write(\"\uc0c8\ub85c\uc6b4 \ub0b4\uc6a9 \ucd94\uac00\\n\")\n"})}),"\n",(0,s.jsx)(e.h2,{id:"34-\ud30c\uc77c-\ubaa8\ub4dc",children:"3.4 \ud30c\uc77c \ubaa8\ub4dc"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"\ubaa8\ub4dc"}),(0,s.jsx)(e.th,{children:"\uc124\uba85"}),(0,s.jsx)(e.th,{children:"\ud30c\uc77c\uc774 \uc5c6\uc744 \ub54c"}),(0,s.jsx)(e.th,{children:"\ud30c\uc77c\uc774 \uc788\uc744 \ub54c"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'r'"})}),(0,s.jsx)(e.td,{children:"\uc77d\uae30 \uc804\uc6a9"}),(0,s.jsx)(e.td,{children:"\uc624\ub958 \ubc1c\uc0dd"}),(0,s.jsx)(e.td,{children:"\ucc98\uc74c\ubd80\ud130 \uc77d\uae30"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'w'"})}),(0,s.jsx)(e.td,{children:"\uc4f0\uae30 \uc804\uc6a9"}),(0,s.jsx)(e.td,{children:"\uc0c8\ub85c \uc0dd\uc131"}),(0,s.jsx)(e.td,{children:"\ub0b4\uc6a9 \uc0ad\uc81c \ud6c4 \uc4f0\uae30"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'a'"})}),(0,s.jsx)(e.td,{children:"\ucd94\uac00 \ubaa8\ub4dc"}),(0,s.jsx)(e.td,{children:"\uc0c8\ub85c \uc0dd\uc131"}),(0,s.jsx)(e.td,{children:"\ub05d\uc5d0 \ucd94\uac00"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'x'"})}),(0,s.jsx)(e.td,{children:"\ubc30\ud0c0\uc801 \uc0dd\uc131"}),(0,s.jsx)(e.td,{children:"\uc0c8\ub85c \uc0dd\uc131"}),(0,s.jsx)(e.td,{children:"\uc624\ub958 \ubc1c\uc0dd"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'r+'"})}),(0,s.jsx)(e.td,{children:"\uc77d\uae30/\uc4f0\uae30"}),(0,s.jsx)(e.td,{children:"\uc624\ub958 \ubc1c\uc0dd"}),(0,s.jsx)(e.td,{children:"\uc77d\uae30/\uc4f0\uae30 \uac00\ub2a5"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'w+'"})}),(0,s.jsx)(e.td,{children:"\uc77d\uae30/\uc4f0\uae30"}),(0,s.jsx)(e.td,{children:"\uc0c8\ub85c \uc0dd\uc131"}),(0,s.jsx)(e.td,{children:"\ub0b4\uc6a9 \uc0ad\uc81c \ud6c4 \uc77d\uae30/\uc4f0\uae30"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"'a+'"})}),(0,s.jsx)(e.td,{children:"\uc77d\uae30/\ucd94\uac00"}),(0,s.jsx)(e.td,{children:"\uc0c8\ub85c \uc0dd\uc131"}),(0,s.jsx)(e.td,{children:"\uc77d\uae30 \uac00\ub2a5, \ub05d\uc5d0 \ucd94\uac00"})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"\ubc14\uc774\ub108\ub9ac-\ubaa8\ub4dc",children:"\ubc14\uc774\ub108\ub9ac \ubaa8\ub4dc"}),"\n",(0,s.jsxs)(e.p,{children:["\ud14d\uc2a4\ud2b8 \ubaa8\ub4dc\uc5d0 ",(0,s.jsx)(e.code,{children:"'b'"}),"\ub97c \ucd94\uac00\ud558\uba74 \ubc14\uc774\ub108\ub9ac \ubaa8\ub4dc\uac00 \ub429\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ubc14\uc774\ub108\ub9ac \uc77d\uae30\nwith open('image.png', 'rb') as file:\n    data = file.read()\n\n# \ubc14\uc774\ub108\ub9ac \uc4f0\uae30\nwith open('copy.png', 'wb') as file:\n    file.write(data)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c-\ubaa8\ub4dc-\uc608\uc81c",children:"\ud30c\uc77c \ubaa8\ub4dc \uc608\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# 'x' \ubaa8\ub4dc - \ud30c\uc77c\uc774 \uc774\ubbf8 \uc874\uc7ac\ud558\uba74 \uc624\ub958\ntry:\n    with open('unique.txt', 'x') as file:\n        file.write(\"\uc774 \ud30c\uc77c\uc740 \ucc98\uc74c \uc0dd\uc131\ub429\ub2c8\ub2e4\")\nexcept FileExistsError:\n    print(\"\ud30c\uc77c\uc774 \uc774\ubbf8 \uc874\uc7ac\ud569\ub2c8\ub2e4\")\n\n# 'r+' \ubaa8\ub4dc - \uc77d\uae30\uc640 \uc4f0\uae30 \ub3d9\uc2dc\uc5d0\nwith open('data.txt', 'r+', encoding='utf-8') as file:\n    content = file.read()  # \uba3c\uc800 \uc77d\uae30\n    file.write(\"\\n\ucd94\uac00 \ub0b4\uc6a9\")  # \uadf8 \ub2e4\uc74c \uc4f0\uae30\n"})}),"\n",(0,s.jsx)(e.h2,{id:"35-with-\ubb38-\ucee8\ud14d\uc2a4\ud2b8-\ub9e4\ub2c8\uc800",children:"3.5 with \ubb38 (\ucee8\ud14d\uc2a4\ud2b8 \ub9e4\ub2c8\uc800)"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"with"})," \ubb38\uc740 \ud30c\uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \ub2eb\uc544\uc8fc\ub294 Python\uc758 \uac15\ub825\ud55c \uae30\ub2a5\uc785\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(e.h3,{id:"\uae30\ubcf8-\uc0ac\uc6a9\ubc95",children:"\uae30\ubcf8 \uc0ac\uc6a9\ubc95"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# with \ubb38 \uc0ac\uc6a9 (\uad8c\uc7a5)\nwith open('example.txt', 'r', encoding='utf-8') as file:\n    content = file.read()\n    # \ube14\ub85d\uc774 \ub05d\ub098\uba74 \uc790\ub3d9\uc73c\ub85c file.close() \ud638\ucd9c\n\n# \ud30c\uc77c\uc774 \uc774\ubbf8 \ub2eb\ud600 \uc788\uc74c\nprint(file.closed)  # True\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc5ec\ub7ec-\ud30c\uc77c-\ub3d9\uc2dc\uc5d0-\uc5f4\uae30",children:"\uc5ec\ub7ec \ud30c\uc77c \ub3d9\uc2dc\uc5d0 \uc5f4\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ubc29\ubc95 1: \uc911\ucca9\ub41c with\nwith open('input.txt', 'r', encoding='utf-8') as infile:\n    with open('output.txt', 'w', encoding='utf-8') as outfile:\n        for line in infile:\n            outfile.write(line.upper())\n\n# \ubc29\ubc95 2: \ud55c \uc904\ub85c (Python 2.7+)\nwith open('input.txt', 'r', encoding='utf-8') as infile, \\\n     open('output.txt', 'w', encoding='utf-8') as outfile:\n    for line in infile:\n        outfile.write(line.upper())\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc608\uc678-\ubc1c\uc0dd-\uc2dc\uc5d0\ub3c4-\uc548\uc804\ud558\uac8c-\ub2eb\uae30",children:"\uc608\uc678 \ubc1c\uc0dd \uc2dc\uc5d0\ub3c4 \uc548\uc804\ud558\uac8c \ub2eb\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"with open('data.txt', 'r', encoding='utf-8') as file:\n    # \uc608\uc678\uac00 \ubc1c\uc0dd\ud574\ub3c4 \ud30c\uc77c\uc740 \uc790\ub3d9\uc73c\ub85c \ub2eb\ud799\ub2c8\ub2e4\n    content = file.read()\n    result = 10 / 0  # ZeroDivisionError \ubc1c\uc0dd\n    # \ud558\uc9c0\ub9cc \ud30c\uc77c\uc740 \uc774\ubbf8 \ub2eb\ud600 \uc788\uc74c\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:["\ud56d\uc0c1 ",(0,s.jsx)(e.code,{children:"with"})," \ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc77c\uc744 \uc5ec\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\uc678\uac00 \ubc1c\uc0dd\ud574\ub3c4 \ud30c\uc77c\uc774 \uc548\uc804\ud558\uac8c \ub2eb\ud799\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"36-\uacbd\ub85c-\ub2e4\ub8e8\uae30",children:"3.6 \uacbd\ub85c \ub2e4\ub8e8\uae30"}),"\n",(0,s.jsx)(e.h3,{id:"ospath-\ubaa8\ub4c8",children:"os.path \ubaa8\ub4c8"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import os\n\n# \uacbd\ub85c \uacb0\ud569\nfile_path = os.path.join('data', 'files', 'example.txt')\nprint(file_path)  # data/files/example.txt (\ub610\ub294 data\\files\\example.txt)\n\n# \uc808\ub300 \uacbd\ub85c \uc5bb\uae30\nabs_path = os.path.abspath('example.txt')\nprint(abs_path)\n\n# \uacbd\ub85c \ubd84\ub9ac\ndirectory, filename = os.path.split('/home/user/data.txt')\nprint(f\"\ub514\ub809\ud1a0\ub9ac: {directory}, \ud30c\uc77c\uba85: {filename}\")\n\n# \ud30c\uc77c\uba85\uacfc \ud655\uc7a5\uc790 \ubd84\ub9ac\nname, ext = os.path.splitext('document.pdf')\nprint(f\"\uc774\ub984: {name}, \ud655\uc7a5\uc790: {ext}\")\n\n# \uacbd\ub85c \uc874\uc7ac \ud655\uc778\nif os.path.exists('example.txt'):\n    print(\"\ud30c\uc77c\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4\")\n\n# \ud30c\uc77c\uc778\uc9c0 \ub514\ub809\ud1a0\ub9ac\uc778\uc9c0 \ud655\uc778\nprint(os.path.isfile('example.txt'))  # \ud30c\uc77c\uc774\uba74 True\nprint(os.path.isdir('data'))  # \ub514\ub809\ud1a0\ub9ac\uba74 True\n\n# \ud30c\uc77c \ud06c\uae30\nsize = os.path.getsize('example.txt')\nprint(f\"\ud30c\uc77c \ud06c\uae30: {size} bytes\")\n"})}),"\n",(0,s.jsx)(e.h3,{id:"pathlib-\ubaa8\ub4c8-python-34-\uad8c\uc7a5",children:"pathlib \ubaa8\ub4c8 (Python 3.4+, \uad8c\uc7a5)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from pathlib import Path\n\n# Path \uac1d\uccb4 \uc0dd\uc131\nfile_path = Path(\'data\') / \'files\' / \'example.txt\'\nprint(file_path)\n\n# \uc808\ub300 \uacbd\ub85c\nabs_path = file_path.resolve()\nprint(abs_path)\n\n# \uacbd\ub85c \uc815\ubcf4\nprint(f"\ubd80\ubaa8 \ub514\ub809\ud1a0\ub9ac: {file_path.parent}")\nprint(f"\ud30c\uc77c\uba85: {file_path.name}")\nprint(f"\ud655\uc7a5\uc790: {file_path.suffix}")\nprint(f"\ud655\uc7a5\uc790 \uc81c\uc678 \uc774\ub984: {file_path.stem}")\n\n# \uc874\uc7ac \ud655\uc778\nif file_path.exists():\n    print("\ud30c\uc77c\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4")\n\n# \ud30c\uc77c\uc778\uc9c0 \ub514\ub809\ud1a0\ub9ac\uc778\uc9c0 \ud655\uc778\nprint(file_path.is_file())\nprint(file_path.is_dir())\n\n# \ud30c\uc77c \uc77d\uae30/\uc4f0\uae30 (pathlib\ub85c \uc9c1\uc811 \uac00\ub2a5)\nfile_path.write_text("\ub0b4\uc6a9 \uc791\uc131", encoding=\'utf-8\')\ncontent = file_path.read_text(encoding=\'utf-8\')\n\n# \ud30c\uc77c \ud06c\uae30\nsize = file_path.stat().st_size\nprint(f"\ud30c\uc77c \ud06c\uae30: {size} bytes")\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\uacbd\ub85c-\uc21c\ud68c",children:"\uacbd\ub85c \uc21c\ud68c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"from pathlib import Path\n\n# \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\uc758 \ubaa8\ub4e0 .txt \ud30c\uc77c \ucc3e\uae30\ntxt_files = Path('.').glob('*.txt')\nfor file in txt_files:\n    print(file)\n\n# \uc7ac\uadc0\uc801\uc73c\ub85c \ubaa8\ub4e0 .py \ud30c\uc77c \ucc3e\uae30\npy_files = Path('.').rglob('*.py')\nfor file in py_files:\n    print(file)\n\n# \ub514\ub809\ud1a0\ub9ac \ub0b4 \ubaa8\ub4e0 \ud56d\ubaa9 \uc21c\ud68c\ndata_dir = Path('data')\nif data_dir.exists():\n    for item in data_dir.iterdir():\n        if item.is_file():\n            print(f\"\ud30c\uc77c: {item.name}\")\n        elif item.is_dir():\n            print(f\"\ub514\ub809\ud1a0\ub9ac: {item.name}\")\n"})}),"\n",(0,s.jsx)(e.h2,{id:"37-csv-\ud30c\uc77c-\ub2e4\ub8e8\uae30",children:"3.7 CSV \ud30c\uc77c \ub2e4\ub8e8\uae30"}),"\n",(0,s.jsx)(e.h3,{id:"csv-\uc77d\uae30",children:"CSV \uc77d\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import csv\n\n# \uae30\ubcf8\uc801\uc778 CSV \uc77d\uae30\nwith open('data.csv', 'r', encoding='utf-8') as file:\n    csv_reader = csv.reader(file)\n\n    # \ud5e4\ub354 \uc77d\uae30\n    header = next(csv_reader)\n    print(f\"\ud5e4\ub354: {header}\")\n\n    # \ub370\uc774\ud130 \uc77d\uae30\n    for row in csv_reader:\n        print(row)  # \ub9ac\uc2a4\ud2b8\ub85c \ubc18\ud658\n\n# DictReader \uc0ac\uc6a9 (\ub515\uc154\ub108\ub9ac\ub85c \uc77d\uae30)\nwith open('data.csv', 'r', encoding='utf-8') as file:\n    csv_reader = csv.DictReader(file)\n\n    for row in csv_reader:\n        print(row)  # OrderedDict \ub610\ub294 dict\ub85c \ubc18\ud658\n        print(f\"\uc774\ub984: {row['name']}, \ub098\uc774: {row['age']}\")\n"})}),"\n",(0,s.jsx)(e.h3,{id:"csv-\uc4f0\uae30",children:"CSV \uc4f0\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import csv\n\n# \uae30\ubcf8\uc801\uc778 CSV \uc4f0\uae30\ndata = [\n    ['\uc774\ub984', '\ub098\uc774', '\ub3c4\uc2dc'],\n    ['\uae40\ucca0\uc218', '25', '\uc11c\uc6b8'],\n    ['\uc774\uc601\ud76c', '30', '\ubd80\uc0b0'],\n    ['\ubc15\ubbfc\uc218', '28', '\ub300\uad6c']\n]\n\nwith open('output.csv', 'w', newline='', encoding='utf-8') as file:\n    csv_writer = csv.writer(file)\n    csv_writer.writerows(data)\n\n# DictWriter \uc0ac\uc6a9\ndata = [\n    {'name': '\uae40\ucca0\uc218', 'age': 25, 'city': '\uc11c\uc6b8'},\n    {'name': '\uc774\uc601\ud76c', 'age': 30, 'city': '\ubd80\uc0b0'},\n    {'name': '\ubc15\ubbfc\uc218', 'age': 28, 'city': '\ub300\uad6c'}\n]\n\nwith open('output.csv', 'w', newline='', encoding='utf-8') as file:\n    fieldnames = ['name', 'age', 'city']\n    csv_writer = csv.DictWriter(file, fieldnames=fieldnames)\n\n    # \ud5e4\ub354 \uc4f0\uae30\n    csv_writer.writeheader()\n\n    # \ub370\uc774\ud130 \uc4f0\uae30\n    csv_writer.writerows(data)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"csv-\uace0\uae09-\uc635\uc158",children:"CSV \uace0\uae09 \uc635\uc158"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import csv\n\n# \uad6c\ubd84\uc790, \uc778\uc6a9 \ubb38\uc790 \uc9c0\uc815\nwith open('data.tsv', 'r', encoding='utf-8') as file:\n    csv_reader = csv.reader(file, delimiter='\\t', quotechar='\"')\n    for row in csv_reader:\n        print(row)\n\n# Excel \ubc29\uc5b8 \uc0ac\uc6a9\nwith open('excel_data.csv', 'w', newline='', encoding='utf-8') as file:\n    csv_writer = csv.writer(file, dialect='excel')\n    csv_writer.writerow(['\uc774\ub984', '\ub098\uc774', '\uc124\uba85'])\n    csv_writer.writerow(['\ud64d\uae38\ub3d9', 35, '\uc124\uba85\uc5d0 \"\ub530\uc634\ud45c\" \ud3ec\ud568'])\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"warning",children:(0,s.jsxs)(e.p,{children:["CSV \ud30c\uc77c\uc744 \uc4f8 \ub54c Windows\uc5d0\uc11c\ub294 ",(0,s.jsx)(e.code,{children:"newline=''"}),"\uc744 \uc9c0\uc815\ud574\uc57c \ube48 \uc904\uc774 \ucd94\uac00\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,s.jsx)(e.h2,{id:"38-json-\ud30c\uc77c-\ub2e4\ub8e8\uae30",children:"3.8 JSON \ud30c\uc77c \ub2e4\ub8e8\uae30"}),"\n",(0,s.jsx)(e.h3,{id:"json-\uc77d\uae30",children:"JSON \uc77d\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import json\n\n# JSON \ud30c\uc77c \uc77d\uae30\nwith open('data.json', 'r', encoding='utf-8') as file:\n    data = json.load(file)\n    print(data)\n    print(type(data))  # dict \ub610\ub294 list\n\n# JSON \ubb38\uc790\uc5f4\uc744 Python \uac1d\uccb4\ub85c \ubcc0\ud658\njson_string = '{\"name\": \"\uae40\ucca0\uc218\", \"age\": 25, \"city\": \"\uc11c\uc6b8\"}'\ndata = json.loads(json_string)\nprint(data['name'])\n"})}),"\n",(0,s.jsx)(e.h3,{id:"json-\uc4f0\uae30",children:"JSON \uc4f0\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import json\n\n# Python \uac1d\uccb4\ub97c JSON \ud30c\uc77c\ub85c \uc800\uc7a5\ndata = {\n    "name": "\uae40\ucca0\uc218",\n    "age": 25,\n    "city": "\uc11c\uc6b8",\n    "hobbies": ["\ub3c5\uc11c", "\uc6b4\ub3d9", "\uc74c\uc545"],\n    "married": False\n}\n\nwith open(\'output.json\', \'w\', encoding=\'utf-8\') as file:\n    json.dump(data, file, ensure_ascii=False, indent=2)\n\n# Python \uac1d\uccb4\ub97c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\njson_string = json.dumps(data, ensure_ascii=False, indent=2)\nprint(json_string)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"json-\uace0\uae09-\uc635\uc158",children:"JSON \uace0\uae09 \uc635\uc158"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import json\nfrom datetime import datetime\n\n# \ubcf5\uc7a1\ud55c \ub370\uc774\ud130 \uad6c\uc870\ndata = {\n    "users": [\n        {"name": "\uae40\ucca0\uc218", "age": 25},\n        {"name": "\uc774\uc601\ud76c", "age": 30}\n    ],\n    "timestamp": datetime.now().isoformat(),\n    "version": 1.0\n}\n\n# \uc815\ub82c, \ub4e4\uc5ec\uc4f0\uae30, \ud55c\uae00 \uc720\uc9c0\nwith open(\'formatted.json\', \'w\', encoding=\'utf-8\') as file:\n    json.dump(\n        data,\n        file,\n        ensure_ascii=False,  # \ud55c\uae00 \uae68\uc9d0 \ubc29\uc9c0\n        indent=4,            # \ub4e4\uc5ec\uc4f0\uae30 4\uce78\n        sort_keys=True       # \ud0a4 \uc815\ub82c\n    )\n\n# \uc555\ucd95\ub41c JSON (\uacf5\ubc31 \uc81c\uac70)\ncompact = json.dumps(data, ensure_ascii=False, separators=(\',\', \':\'))\nprint(compact)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\ucee4\uc2a4\ud140-json-\uc778\ucf54\ub354\ub514\ucf54\ub354",children:"\ucee4\uc2a4\ud140 JSON \uc778\ucf54\ub354/\ub514\ucf54\ub354"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import json\nfrom datetime import datetime\n\nclass DateTimeEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if isinstance(obj, datetime):\n            return obj.isoformat()\n        return super().default(obj)\n\n# \ucee4\uc2a4\ud140 \uc778\ucf54\ub354 \uc0ac\uc6a9\ndata = {\n    "name": "\uc774\ubca4\ud2b8",\n    "created_at": datetime.now()\n}\n\njson_string = json.dumps(data, cls=DateTimeEncoder, ensure_ascii=False)\nprint(json_string)\n'})}),"\n",(0,s.jsx)(e.h2,{id:"39-\ubc14\uc774\ub108\ub9ac-\ud30c\uc77c",children:"3.9 \ubc14\uc774\ub108\ub9ac \ud30c\uc77c"}),"\n",(0,s.jsx)(e.h3,{id:"\uc774\ubbf8\uc9c0-\ud30c\uc77c-\ubcf5\uc0ac",children:"\uc774\ubbf8\uc9c0 \ud30c\uc77c \ubcf5\uc0ac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \ubc14\uc774\ub108\ub9ac \ud30c\uc77c \uc77d\uae30/\uc4f0\uae30\nwith open('image.jpg', 'rb') as source:\n    data = source.read()\n\nwith open('copy.jpg', 'wb') as dest:\n    dest.write(data)\n\n# \uccad\ud06c \ub2e8\uc704\ub85c \uc77d\uc5b4\uc11c \ubcf5\uc0ac (\ub300\uc6a9\ub7c9 \ud30c\uc77c)\nchunk_size = 4096  # 4KB\n\nwith open('large_video.mp4', 'rb') as source, \\\n     open('copy_video.mp4', 'wb') as dest:\n    while True:\n        chunk = source.read(chunk_size)\n        if not chunk:\n            break\n        dest.write(chunk)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"struct-\ubaa8\ub4c8\ub85c-\ubc14\uc774\ub108\ub9ac-\ub370\uc774\ud130-\ub2e4\ub8e8\uae30",children:"struct \ubaa8\ub4c8\ub85c \ubc14\uc774\ub108\ub9ac \ub370\uc774\ud130 \ub2e4\ub8e8\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import struct\n\n# \uc815\uc218\ub97c \ubc14\uc774\ub108\ub9ac\ub85c \ubcc0\ud658\ud558\uc5ec \uc800\uc7a5\ndata = [100, 200, 300, 400, 500]\n\nwith open('numbers.bin', 'wb') as file:\n    for num in data:\n        # 'i'\ub294 4\ubc14\uc774\ud2b8 \uc815\uc218\ub97c \uc758\ubbf8\n        binary_data = struct.pack('i', num)\n        file.write(binary_data)\n\n# \ubc14\uc774\ub108\ub9ac\uc5d0\uc11c \uc815\uc218 \uc77d\uae30\nnumbers = []\nwith open('numbers.bin', 'rb') as file:\n    while True:\n        binary_data = file.read(4)  # 4\ubc14\uc774\ud2b8 \uc77d\uae30\n        if not binary_data:\n            break\n        num = struct.unpack('i', binary_data)[0]\n        numbers.append(num)\n\nprint(numbers)  # [100, 200, 300, 400, 500]\n"})}),"\n",(0,s.jsx)(e.h2,{id:"310-\ud30c\uc77c-\uc791\uc5c5",children:"3.10 \ud30c\uc77c \uc791\uc5c5"}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c-\uc874\uc7ac-\ud655\uc778-\ubc0f-\uc815\ubcf4",children:"\ud30c\uc77c \uc874\uc7ac \ud655\uc778 \ubc0f \uc815\ubcf4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import os\nfrom pathlib import Path\nfrom datetime import datetime\n\nfile_path = Path(\'example.txt\')\n\n# \uc874\uc7ac \ud655\uc778\nif file_path.exists():\n    print("\ud30c\uc77c\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4")\n\n    # \ud30c\uc77c \uc815\ubcf4\n    stat = file_path.stat()\n    print(f"\ud06c\uae30: {stat.st_size} bytes")\n    print(f"\uc0dd\uc131 \uc2dc\uac04: {datetime.fromtimestamp(stat.st_ctime)}")\n    print(f"\uc218\uc815 \uc2dc\uac04: {datetime.fromtimestamp(stat.st_mtime)}")\n    print(f"\uc811\uadfc \uc2dc\uac04: {datetime.fromtimestamp(stat.st_atime)}")\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c-\uc774\ub984-\ubcc0\uacbd",children:"\ud30c\uc77c \uc774\ub984 \ubcc0\uacbd"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import os\nfrom pathlib import Path\n\n# os \ubaa8\ub4c8 \uc0ac\uc6a9\nos.rename('old_name.txt', 'new_name.txt')\n\n# pathlib \uc0ac\uc6a9 (\uad8c\uc7a5)\nold_path = Path('old_name.txt')\nnew_path = Path('new_name.txt')\nold_path.rename(new_path)\n\n# \ud30c\uc77c \uc774\ub3d9 (\ub2e4\ub978 \ub514\ub809\ud1a0\ub9ac\ub85c)\nsource = Path('example.txt')\ndestination = Path('backup') / 'example.txt'\nsource.rename(destination)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c-\ubcf5\uc0ac",children:"\ud30c\uc77c \ubcf5\uc0ac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import shutil\nfrom pathlib import Path\n\n# \ud30c\uc77c \ubcf5\uc0ac\nshutil.copy('source.txt', 'destination.txt')\n\n# \uba54\ud0c0\ub370\uc774\ud130 \ud3ec\ud568 \ubcf5\uc0ac\nshutil.copy2('source.txt', 'destination.txt')\n\n# \ub514\ub809\ud1a0\ub9ac \ud3ec\ud568 \ubcf5\uc0ac\nshutil.copytree('source_dir', 'destination_dir')\n\n# pathlib \ubc29\uc2dd (Python 3.8+)\nsource = Path('source.txt')\ndestination = Path('destination.txt')\ndestination.write_bytes(source.read_bytes())\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\uc77c-\uc0ad\uc81c",children:"\ud30c\uc77c \uc0ad\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import os\nfrom pathlib import Path\n\n# os \ubaa8\ub4c8 \uc0ac\uc6a9\nif os.path.exists('file_to_delete.txt'):\n    os.remove('file_to_delete.txt')\n\n# pathlib \uc0ac\uc6a9 (\uad8c\uc7a5)\nfile_path = Path('file_to_delete.txt')\nif file_path.exists():\n    file_path.unlink()\n\n# \uc548\uc804\ud558\uac8c \uc0ad\uc81c (\ud30c\uc77c\uc774 \uc5c6\uc5b4\ub3c4 \uc624\ub958 \ubc1c\uc0dd \uc548 \ud568, Python 3.8+)\nfile_path.unlink(missing_ok=True)\n"})}),"\n",(0,s.jsx)(e.h2,{id:"311-\ub514\ub809\ud1a0\ub9ac-\uc791\uc5c5",children:"3.11 \ub514\ub809\ud1a0\ub9ac \uc791\uc5c5"}),"\n",(0,s.jsx)(e.h3,{id:"\ub514\ub809\ud1a0\ub9ac-\uc0dd\uc131",children:"\ub514\ub809\ud1a0\ub9ac \uc0dd\uc131"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import os\nfrom pathlib import Path\n\n# os \ubaa8\ub4c8 \uc0ac\uc6a9\nos.mkdir('new_directory')\n\n# \uc911\ucca9 \ub514\ub809\ud1a0\ub9ac \uc0dd\uc131\nos.makedirs('parent/child/grandchild', exist_ok=True)\n\n# pathlib \uc0ac\uc6a9 (\uad8c\uc7a5)\nnew_dir = Path('new_directory')\nnew_dir.mkdir(exist_ok=True)\n\n# \uc911\ucca9 \ub514\ub809\ud1a0\ub9ac \uc0dd\uc131\nnested_dir = Path('parent/child/grandchild')\nnested_dir.mkdir(parents=True, exist_ok=True)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ub514\ub809\ud1a0\ub9ac-\ub0b4\uc6a9-\ud655\uc778",children:"\ub514\ub809\ud1a0\ub9ac \ub0b4\uc6a9 \ud655\uc778"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import os\nfrom pathlib import Path\n\n# os \ubaa8\ub4c8 \uc0ac\uc6a9\nfiles = os.listdir('.')\nfor file in files:\n    print(file)\n\n# pathlib \uc0ac\uc6a9 (\uad8c\uc7a5)\ncurrent_dir = Path('.')\nfor item in current_dir.iterdir():\n    if item.is_file():\n        print(f\"\ud30c\uc77c: {item.name}\")\n    elif item.is_dir():\n        print(f\"\ub514\ub809\ud1a0\ub9ac: {item.name}\")\n\n# \ud2b9\uc815 \ud655\uc7a5\uc790\ub9cc \ucc3e\uae30\ntxt_files = list(current_dir.glob('*.txt'))\nprint(f\"TXT \ud30c\uc77c: {len(txt_files)}\uac1c\")\n\n# \uc7ac\uadc0\uc801\uc73c\ub85c \ubaa8\ub4e0 \ud30c\uc77c \ucc3e\uae30\nall_py_files = list(current_dir.rglob('*.py'))\nfor py_file in all_py_files:\n    print(py_file)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ub514\ub809\ud1a0\ub9ac-\uc0ad\uc81c",children:"\ub514\ub809\ud1a0\ub9ac \uc0ad\uc81c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import os\nimport shutil\nfrom pathlib import Path\n\n# \ube48 \ub514\ub809\ud1a0\ub9ac \uc0ad\uc81c\nos.rmdir('empty_directory')\n\n# pathlib\ub85c \ube48 \ub514\ub809\ud1a0\ub9ac \uc0ad\uc81c\nempty_dir = Path('empty_directory')\nempty_dir.rmdir()\n\n# \ub0b4\uc6a9\uc774 \uc788\ub294 \ub514\ub809\ud1a0\ub9ac \uc0ad\uc81c\nshutil.rmtree('directory_with_files')\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud604\uc7ac-\uc791\uc5c5-\ub514\ub809\ud1a0\ub9ac",children:"\ud604\uc7ac \uc791\uc5c5 \ub514\ub809\ud1a0\ub9ac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import os\nfrom pathlib import Path\n\n# \ud604\uc7ac \uc791\uc5c5 \ub514\ub809\ud1a0\ub9ac \ud655\uc778\ncurrent = os.getcwd()\nprint(f"\ud604\uc7ac \ub514\ub809\ud1a0\ub9ac: {current}")\n\n# pathlib \uc0ac\uc6a9\ncurrent = Path.cwd()\nprint(f"\ud604\uc7ac \ub514\ub809\ud1a0\ub9ac: {current}")\n\n# \uc791\uc5c5 \ub514\ub809\ud1a0\ub9ac \ubcc0\uacbd\nos.chdir(\'/path/to/directory\')\n\n# \ud648 \ub514\ub809\ud1a0\ub9ac\nhome = Path.home()\nprint(f"\ud648 \ub514\ub809\ud1a0\ub9ac: {home}")\n'})}),"\n",(0,s.jsx)(e.h2,{id:"312-\uc2e4\uc804-\uc608\uc81c",children:"3.12 \uc2e4\uc804 \uc608\uc81c"}),"\n",(0,s.jsx)(e.h3,{id:"\uc608\uc81c-1-\ub85c\uadf8-\ud30c\uc77c-\ud30c\uc11c",children:"\uc608\uc81c 1: \ub85c\uadf8 \ud30c\uc77c \ud30c\uc11c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from pathlib import Path\nfrom datetime import datetime\nimport re\n\nclass LogParser:\n    def __init__(self, log_file):\n        self.log_file = Path(log_file)\n        self.errors = []\n        self.warnings = []\n        self.info = []\n\n    def parse(self):\n        """\ub85c\uadf8 \ud30c\uc77c\uc744 \ud30c\uc2f1\ud558\uc5ec \ub808\ubca8\ubcc4\ub85c \ubd84\ub958"""\n        if not self.log_file.exists():\n            raise FileNotFoundError(f"{self.log_file}\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4")\n\n        with self.log_file.open(\'r\', encoding=\'utf-8\') as file:\n            for line in file:\n                line = line.strip()\n                if \'ERROR\' in line:\n                    self.errors.append(line)\n                elif \'WARNING\' in line:\n                    self.warnings.append(line)\n                elif \'INFO\' in line:\n                    self.info.append(line)\n\n    def get_error_count(self):\n        """\uc5d0\ub7ec \uac1c\uc218 \ubc18\ud658"""\n        return len(self.errors)\n\n    def get_errors_by_date(self, date_str):\n        """\ud2b9\uc815 \ub0a0\uc9dc\uc758 \uc5d0\ub7ec\ub9cc \ud544\ud130\ub9c1"""\n        pattern = re.compile(date_str)\n        return [error for error in self.errors if pattern.search(error)]\n\n    def save_report(self, output_file):\n        """\ubd84\uc11d \uacb0\uacfc\ub97c \ud30c\uc77c\ub85c \uc800\uc7a5"""\n        report = [\n            "=== \ub85c\uadf8 \ubd84\uc11d \ubcf4\uace0\uc11c ===",\n            f"\uc0dd\uc131 \uc2dc\uac04: {datetime.now()}",\n            f"\ubd84\uc11d \ud30c\uc77c: {self.log_file}",\n            "",\n            f"\ucd1d \uc5d0\ub7ec: {len(self.errors)}\uac1c",\n            f"\ucd1d \uacbd\uace0: {len(self.warnings)}\uac1c",\n            f"\ucd1d \uc815\ubcf4: {len(self.info)}\uac1c",\n            "",\n            "=== \ucd5c\uadfc \uc5d0\ub7ec 10\uac1c ===",\n        ]\n\n        for error in self.errors[-10:]:\n            report.append(error)\n\n        output_path = Path(output_file)\n        output_path.write_text(\'\\n\'.join(report), encoding=\'utf-8\')\n\n# \uc0ac\uc6a9 \uc608\uc81c\nparser = LogParser(\'application.log\')\nparser.parse()\nprint(f"\uc5d0\ub7ec {parser.get_error_count()}\uac1c \ubc1c\uacac")\nparser.save_report(\'log_report.txt\')\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\uc608\uc81c-2-csv-\ub370\uc774\ud130-\ud504\ub85c\uc138\uc11c",children:"\uc608\uc81c 2: CSV \ub370\uc774\ud130 \ud504\ub85c\uc138\uc11c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import csv\nfrom pathlib import Path\nfrom collections import defaultdict\n\nclass CSVProcessor:\n    def __init__(self, csv_file):\n        self.csv_file = Path(csv_file)\n        self.data = []\n        self.headers = []\n\n    def load(self):\n        """CSV \ud30c\uc77c \ub85c\ub4dc"""\n        with self.csv_file.open(\'r\', encoding=\'utf-8\') as file:\n            reader = csv.DictReader(file)\n            self.headers = reader.fieldnames\n            self.data = list(reader)\n        return self\n\n    def filter_by(self, column, value):\n        """\ud2b9\uc815 \uceec\ub7fc\uc758 \uac12\uc73c\ub85c \ud544\ud130\ub9c1"""\n        filtered = [row for row in self.data if row.get(column) == value]\n        return filtered\n\n    def group_by(self, column):\n        """\ud2b9\uc815 \uceec\ub7fc\uc73c\ub85c \uadf8\ub8f9\ud654"""\n        groups = defaultdict(list)\n        for row in self.data:\n            key = row.get(column)\n            groups[key].append(row)\n        return dict(groups)\n\n    def calculate_average(self, column):\n        """\uc22b\uc790 \uceec\ub7fc\uc758 \ud3c9\uade0 \uacc4\uc0b0"""\n        try:\n            values = [float(row[column]) for row in self.data if row.get(column)]\n            return sum(values) / len(values) if values else 0\n        except ValueError:\n            raise ValueError(f"{column}\uc740 \uc22b\uc790\uac00 \uc544\ub2d9\ub2c8\ub2e4")\n\n    def save(self, output_file, data=None):\n        """\ub370\uc774\ud130\ub97c CSV \ud30c\uc77c\ub85c \uc800\uc7a5"""\n        if data is None:\n            data = self.data\n\n        if not data:\n            print("\uc800\uc7a5\ud560 \ub370\uc774\ud130\uac00 \uc5c6\uc2b5\ub2c8\ub2e4")\n            return\n\n        output_path = Path(output_file)\n        with output_path.open(\'w\', newline=\'\', encoding=\'utf-8\') as file:\n            writer = csv.DictWriter(file, fieldnames=self.headers)\n            writer.writeheader()\n            writer.writerows(data)\n\n# \uc0ac\uc6a9 \uc608\uc81c\nprocessor = CSVProcessor(\'sales.csv\')\nprocessor.load()\n\n# \uc11c\uc6b8 \uc9c0\uc5ed \ub370\uc774\ud130\ub9cc \ud544\ud130\ub9c1\nseoul_data = processor.filter_by(\'city\', \'\uc11c\uc6b8\')\n\n# \ub3c4\uc2dc\ubcc4 \uadf8\ub8f9\ud654\ncity_groups = processor.group_by(\'city\')\nfor city, rows in city_groups.items():\n    print(f"{city}: {len(rows)}\uac74")\n\n# \ud3c9\uade0 \uacc4\uc0b0\navg_price = processor.calculate_average(\'price\')\nprint(f"\ud3c9\uade0 \uac00\uaca9: {avg_price:.2f}\uc6d0")\n\n# \ud544\ud130\ub9c1\ub41c \ub370\uc774\ud130 \uc800\uc7a5\nprocessor.save(\'seoul_sales.csv\', seoul_data)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\uc608\uc81c-3-\uc124\uc815-\ud30c\uc77c-\uad00\ub9ac\uc790",children:"\uc608\uc81c 3: \uc124\uc815 \ud30c\uc77c \uad00\ub9ac\uc790"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import json\nfrom pathlib import Path\n\nclass ConfigManager:\n    def __init__(self, config_file='config.json'):\n        self.config_file = Path(config_file)\n        self.config = {}\n        self.load()\n\n    def load(self):\n        \"\"\"\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc\"\"\"\n        if self.config_file.exists():\n            with self.config_file.open('r', encoding='utf-8') as file:\n                self.config = json.load(file)\n        else:\n            # \uae30\ubcf8 \uc124\uc815\n            self.config = {\n                'app_name': 'MyApp',\n                'version': '1.0.0',\n                'debug': False,\n                'database': {\n                    'host': 'localhost',\n                    'port': 5432,\n                    'name': 'mydb'\n                }\n            }\n            self.save()\n\n    def save(self):\n        \"\"\"\uc124\uc815 \ud30c\uc77c \uc800\uc7a5\"\"\"\n        with self.config_file.open('w', encoding='utf-8') as file:\n            json.dump(self.config, file, ensure_ascii=False, indent=2)\n\n    def get(self, key, default=None):\n        \"\"\"\uc124\uc815 \uac12 \uac00\uc838\uc624\uae30 (\uc810 \ud45c\uae30\ubc95 \uc9c0\uc6d0)\"\"\"\n        keys = key.split('.')\n        value = self.config\n\n        for k in keys:\n            if isinstance(value, dict):\n                value = value.get(k)\n                if value is None:\n                    return default\n            else:\n                return default\n\n        return value\n\n    def set(self, key, value):\n        \"\"\"\uc124\uc815 \uac12 \uc124\uc815 (\uc810 \ud45c\uae30\ubc95 \uc9c0\uc6d0)\"\"\"\n        keys = key.split('.')\n        config = self.config\n\n        for k in keys[:-1]:\n            if k not in config or not isinstance(config[k], dict):\n                config[k] = {}\n            config = config[k]\n\n        config[keys[-1]] = value\n        self.save()\n\n    def reset(self):\n        \"\"\"\uc124\uc815 \ucd08\uae30\ud654\"\"\"\n        self.config_file.unlink(missing_ok=True)\n        self.load()\n\n# \uc0ac\uc6a9 \uc608\uc81c\nconfig = ConfigManager('app_config.json')\n\n# \uc124\uc815 \uc77d\uae30\napp_name = config.get('app_name')\ndb_host = config.get('database.host')\nprint(f\"\uc571 \uc774\ub984: {app_name}\")\nprint(f\"DB \ud638\uc2a4\ud2b8: {db_host}\")\n\n# \uc124\uc815 \ubcc0\uacbd\nconfig.set('debug', True)\nconfig.set('database.port', 3306)\n\n# \uae30\ubcf8\uac12 \uc0ac\uc6a9\ntheme = config.get('theme', 'dark')\nprint(f\"\ud14c\ub9c8: {theme}\")\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc608\uc81c-4-\ud30c\uc77c-\ubc31\uc5c5-\uc720\ud2f8\ub9ac\ud2f0",children:"\uc608\uc81c 4: \ud30c\uc77c \ubc31\uc5c5 \uc720\ud2f8\ub9ac\ud2f0"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from pathlib import Path\nimport shutil\nfrom datetime import datetime\nimport zipfile\n\nclass BackupUtility:\n    def __init__(self, source_dir, backup_dir=\'backups\'):\n        self.source_dir = Path(source_dir)\n        self.backup_dir = Path(backup_dir)\n        self.backup_dir.mkdir(exist_ok=True)\n\n    def create_backup(self, compress=True):\n        """\ubc31\uc5c5 \uc0dd\uc131"""\n        if not self.source_dir.exists():\n            raise FileNotFoundError(f"{self.source_dir}\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4")\n\n        timestamp = datetime.now().strftime(\'%Y%m%d_%H%M%S\')\n\n        if compress:\n            backup_file = self.backup_dir / f"backup_{timestamp}.zip"\n            self._create_zip_backup(backup_file)\n        else:\n            backup_dir = self.backup_dir / f"backup_{timestamp}"\n            self._create_folder_backup(backup_dir)\n\n        return backup_file if compress else backup_dir\n\n    def _create_zip_backup(self, backup_file):\n        """\uc555\ucd95 \ubc31\uc5c5 \uc0dd\uc131"""\n        with zipfile.ZipFile(backup_file, \'w\', zipfile.ZIP_DEFLATED) as zipf:\n            for file in self.source_dir.rglob(\'*\'):\n                if file.is_file():\n                    arcname = file.relative_to(self.source_dir)\n                    zipf.write(file, arcname)\n\n        print(f"\uc555\ucd95 \ubc31\uc5c5 \uc0dd\uc131: {backup_file}")\n\n    def _create_folder_backup(self, backup_dir):\n        """\ud3f4\ub354 \ubc31\uc5c5 \uc0dd\uc131"""\n        shutil.copytree(self.source_dir, backup_dir)\n        print(f"\ud3f4\ub354 \ubc31\uc5c5 \uc0dd\uc131: {backup_dir}")\n\n    def restore_backup(self, backup_path, restore_dir):\n        """\ubc31\uc5c5 \ubcf5\uc6d0"""\n        backup_path = Path(backup_path)\n        restore_dir = Path(restore_dir)\n\n        if backup_path.suffix == \'.zip\':\n            with zipfile.ZipFile(backup_path, \'r\') as zipf:\n                zipf.extractall(restore_dir)\n        else:\n            shutil.copytree(backup_path, restore_dir)\n\n        print(f"\ubc31\uc5c5 \ubcf5\uc6d0 \uc644\ub8cc: {restore_dir}")\n\n    def list_backups(self):\n        """\ubc31\uc5c5 \ubaa9\ub85d \uc870\ud68c"""\n        backups = []\n\n        for item in self.backup_dir.iterdir():\n            stat = item.stat()\n            backups.append({\n                \'name\': item.name,\n                \'path\': item,\n                \'size\': stat.st_size,\n                \'created\': datetime.fromtimestamp(stat.st_ctime)\n            })\n\n        return sorted(backups, key=lambda x: x[\'created\'], reverse=True)\n\n    def delete_old_backups(self, keep_count=5):\n        """\uc624\ub798\ub41c \ubc31\uc5c5 \uc0ad\uc81c"""\n        backups = self.list_backups()\n\n        for backup in backups[keep_count:]:\n            path = backup[\'path\']\n            if path.is_file():\n                path.unlink()\n            else:\n                shutil.rmtree(path)\n            print(f"\uc0ad\uc81c\ub428: {backup[\'name\']}")\n\n# \uc0ac\uc6a9 \uc608\uc81c\nbackup = BackupUtility(\'important_data\', \'backups\')\n\n# \ubc31\uc5c5 \uc0dd\uc131\nbackup_file = backup.create_backup(compress=True)\n\n# \ubc31\uc5c5 \ubaa9\ub85d \ud655\uc778\nprint("\\n=== \ubc31\uc5c5 \ubaa9\ub85d ===")\nfor b in backup.list_backups():\n    size_mb = b[\'size\'] / (1024 * 1024)\n    print(f"{b[\'name\']} - {size_mb:.2f}MB - {b[\'created\']}")\n\n# \uc624\ub798\ub41c \ubc31\uc5c5 \uc0ad\uc81c (\ucd5c\uadfc 5\uac1c\ub9cc \uc720\uc9c0)\nbackup.delete_old_backups(keep_count=5)\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\uc608\uc81c-5-\ud14d\uc2a4\ud2b8-\ud30c\uc77c-\ud1b5\uacc4-\ubd84\uc11d\uae30",children:"\uc608\uc81c 5: \ud14d\uc2a4\ud2b8 \ud30c\uc77c \ud1b5\uacc4 \ubd84\uc11d\uae30"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from pathlib import Path\nfrom collections import Counter\nimport re\n\nclass TextAnalyzer:\n    def __init__(self, file_path):\n        self.file_path = Path(file_path)\n        self.text = ""\n        self.lines = []\n        self.words = []\n\n    def load(self):\n        """\ud30c\uc77c \ub85c\ub4dc"""\n        self.text = self.file_path.read_text(encoding=\'utf-8\')\n        self.lines = self.text.splitlines()\n\n        # \ub2e8\uc5b4 \ucd94\ucd9c (\ud55c\uae00, \uc601\ubb38, \uc22b\uc790\ub9cc)\n        self.words = re.findall(r\'[\uac00-\ud7a3a-zA-Z0-9]+\', self.text)\n        return self\n\n    def get_stats(self):\n        """\uae30\ubcf8 \ud1b5\uacc4 \uc815\ubcf4"""\n        return {\n            \'characters\': len(self.text),\n            \'characters_no_space\': len(self.text.replace(\' \', \'\')),\n            \'lines\': len(self.lines),\n            \'words\': len(self.words),\n            \'unique_words\': len(set(self.words))\n        }\n\n    def get_word_frequency(self, top_n=10):\n        """\ub2e8\uc5b4 \ube48\ub3c4\uc218"""\n        counter = Counter(self.words)\n        return counter.most_common(top_n)\n\n    def get_line_stats(self):\n        """\uc904 \ud1b5\uacc4"""\n        line_lengths = [len(line) for line in self.lines]\n        return {\n            \'max_length\': max(line_lengths) if line_lengths else 0,\n            \'min_length\': min(line_lengths) if line_lengths else 0,\n            \'avg_length\': sum(line_lengths) / len(line_lengths) if line_lengths else 0,\n            \'empty_lines\': sum(1 for line in self.lines if not line.strip())\n        }\n\n    def search(self, pattern, case_sensitive=False):\n        """\ud328\ud134 \uac80\uc0c9"""\n        flags = 0 if case_sensitive else re.IGNORECASE\n        matches = []\n\n        for i, line in enumerate(self.lines, 1):\n            if re.search(pattern, line, flags):\n                matches.append({\n                    \'line_number\': i,\n                    \'content\': line.strip()\n                })\n\n        return matches\n\n    def save_report(self, output_file):\n        """\ubd84\uc11d \ubcf4\uace0\uc11c \uc800\uc7a5"""\n        stats = self.get_stats()\n        line_stats = self.get_line_stats()\n        word_freq = self.get_word_frequency(20)\n\n        report = [\n            "=== \ud14d\uc2a4\ud2b8 \ubd84\uc11d \ubcf4\uace0\uc11c ===",\n            f"\ud30c\uc77c: {self.file_path}",\n            f"\ubd84\uc11d \uc2dc\uac04: {datetime.now()}",\n            "",\n            "=== \uae30\ubcf8 \ud1b5\uacc4 ===",\n            f"\ucd1d \ubb38\uc790 \uc218: {stats[\'characters\']:,}",\n            f"\uacf5\ubc31 \uc81c\uc678 \ubb38\uc790 \uc218: {stats[\'characters_no_space\']:,}",\n            f"\ucd1d \uc904 \uc218: {stats[\'lines\']:,}",\n            f"\ucd1d \ub2e8\uc5b4 \uc218: {stats[\'words\']:,}",\n            f"\uace0\uc720 \ub2e8\uc5b4 \uc218: {stats[\'unique_words\']:,}",\n            "",\n            "=== \uc904 \ud1b5\uacc4 ===",\n            f"\ucd5c\ub300 \uc904 \uae38\uc774: {line_stats[\'max_length\']}",\n            f"\ucd5c\uc18c \uc904 \uae38\uc774: {line_stats[\'min_length\']}",\n            f"\ud3c9\uade0 \uc904 \uae38\uc774: {line_stats[\'avg_length\']:.2f}",\n            f"\ube48 \uc904: {line_stats[\'empty_lines\']}",\n            "",\n            "=== \uc0c1\uc704 20\uac1c \ub2e8\uc5b4 ===",\n        ]\n\n        for word, count in word_freq:\n            report.append(f"{word}: {count}\ud68c")\n\n        Path(output_file).write_text(\'\\n\'.join(report), encoding=\'utf-8\')\n\n# \uc0ac\uc6a9 \uc608\uc81c\nanalyzer = TextAnalyzer(\'document.txt\')\nanalyzer.load()\n\n# \ud1b5\uacc4 \ucd9c\ub825\nstats = analyzer.get_stats()\nprint(f"\ucd1d \ub2e8\uc5b4: {stats[\'words\']:,}\uac1c")\nprint(f"\uace0\uc720 \ub2e8\uc5b4: {stats[\'unique_words\']:,}\uac1c")\n\n# \ub2e8\uc5b4 \ube48\ub3c4\uc218\nprint("\\n=== \uc0c1\uc704 10\uac1c \ub2e8\uc5b4 ===")\nfor word, count in analyzer.get_word_frequency(10):\n    print(f"{word}: {count}\ud68c")\n\n# \ud2b9\uc815 \ub2e8\uc5b4 \uac80\uc0c9\nmatches = analyzer.search(\'python\', case_sensitive=False)\nprint(f"\\n\'python\' \uac80\uc0c9 \uacb0\uacfc: {len(matches)}\uac1c")\n\n# \ubcf4\uace0\uc11c \uc800\uc7a5\nanalyzer.save_report(\'text_analysis_report.txt\')\n'})}),"\n",(0,s.jsx)(e.h2,{id:"313-\ud30c\uc77c-io-\ubaa8\ubc94-\uc0ac\ub840",children:"3.13 \ud30c\uc77c I/O \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,s.jsx)(e.h3,{id:"1-\ud56d\uc0c1-with-\ubb38-\uc0ac\uc6a9",children:"1. \ud56d\uc0c1 with \ubb38 \uc0ac\uc6a9"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc88b\uc740 \uc608\nwith open('file.txt', 'r', encoding='utf-8') as f:\n    content = f.read()\n\n# \ub098\uc05c \uc608\nf = open('file.txt', 'r')\ncontent = f.read()\nf.close()  # \uc608\uc678 \ubc1c\uc0dd \uc2dc \uc2e4\ud589 \uc548 \ub428\n"})}),"\n",(0,s.jsx)(e.h3,{id:"2-\uc778\ucf54\ub529-\uba85\uc2dc",children:"2. \uc778\ucf54\ub529 \uba85\uc2dc"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc88b\uc740 \uc608\nwith open('file.txt', 'r', encoding='utf-8') as f:\n    content = f.read()\n\n# \ub098\uc05c \uc608 (\uc2dc\uc2a4\ud15c\ub9c8\ub2e4 \uae30\ubcf8 \uc778\ucf54\ub529\uc774 \ub2e4\ub984)\nwith open('file.txt', 'r') as f:\n    content = f.read()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"3-pathlib-\uc0ac\uc6a9-python-34",children:"3. pathlib \uc0ac\uc6a9 (Python 3.4+)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"from pathlib import Path\n\n# \uc88b\uc740 \uc608\nfile_path = Path('data') / 'files' / 'example.txt'\ncontent = file_path.read_text(encoding='utf-8')\n\n# \uad6c\uc2dd \ubc29\ubc95\nimport os\nfile_path = os.path.join('data', 'files', 'example.txt')\nwith open(file_path, 'r', encoding='utf-8') as f:\n    content = f.read()\n"})}),"\n",(0,s.jsx)(e.h3,{id:"4-\ub300\uc6a9\ub7c9-\ud30c\uc77c\uc740-\uccad\ud06c\ub85c-\ucc98\ub9ac",children:"4. \ub300\uc6a9\ub7c9 \ud30c\uc77c\uc740 \uccad\ud06c\ub85c \ucc98\ub9ac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"# \uc88b\uc740 \uc608 - \uba54\ubaa8\ub9ac \ud6a8\uc728\uc801\nwith open('large_file.txt', 'r', encoding='utf-8') as f:\n    for line in f:\n        process_line(line)\n\n# \ub098\uc05c \uc608 - \uba54\ubaa8\ub9ac \ubd80\uc871 \uac00\ub2a5\nwith open('large_file.txt', 'r', encoding='utf-8') as f:\n    lines = f.readlines()  # \uc804\uccb4\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\n    for line in lines:\n        process_line(line)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"5-\uc608\uc678-\ucc98\ub9ac",children:"5. \uc608\uc678 \ucc98\ub9ac"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from pathlib import Path\n\nfile_path = Path(\'data.txt\')\n\ntry:\n    content = file_path.read_text(encoding=\'utf-8\')\nexcept FileNotFoundError:\n    print(f"\ud30c\uc77c\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4: {file_path}")\nexcept PermissionError:\n    print(f"\ud30c\uc77c \uc811\uadfc \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4: {file_path}")\nexcept UnicodeDecodeError:\n    print(f"\ud30c\uc77c \uc778\ucf54\ub529 \uc624\ub958: {file_path}")\n    # \ub2e4\ub978 \uc778\ucf54\ub529\uc73c\ub85c \uc2dc\ub3c4\n    content = file_path.read_text(encoding=\'cp949\')\nexcept Exception as e:\n    print(f"\uc608\uc0c1\uce58 \ubabb\ud55c \uc624\ub958: {e}")\n'})}),"\n",(0,s.jsx)(e.h3,{id:"6-\uc784\uc2dc-\ud30c\uc77c-\uc0ac\uc6a9",children:"6. \uc784\uc2dc \ud30c\uc77c \uc0ac\uc6a9"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import tempfile\n\n# \uc784\uc2dc \ud30c\uc77c \uc0dd\uc131 (\uc790\ub3d9\uc73c\ub85c \uc0ad\uc81c\ub428)\nwith tempfile.NamedTemporaryFile(mode=\'w\', delete=False, encoding=\'utf-8\') as f:\n    f.write("\uc784\uc2dc \ub370\uc774\ud130")\n    temp_path = f.name\n\nprint(f"\uc784\uc2dc \ud30c\uc77c \uc704\uce58: {temp_path}")\n\n# \uc784\uc2dc \ub514\ub809\ud1a0\ub9ac \uc0dd\uc131\nwith tempfile.TemporaryDirectory() as temp_dir:\n    print(f"\uc784\uc2dc \ub514\ub809\ud1a0\ub9ac: {temp_dir}")\n    # \uc791\uc5c5 \uc218\ud589\n    # \ube14\ub85d\uc774 \ub05d\ub098\uba74 \uc790\ub3d9\uc73c\ub85c \uc0ad\uc81c\ub428\n'})}),"\n",(0,s.jsx)(e.h3,{id:"7-\ud30c\uc77c-\uc7a0\uae08-\ub3d9\uc2dc-\uc811\uadfc-\uc81c\uc5b4",children:"7. \ud30c\uc77c \uc7a0\uae08 (\ub3d9\uc2dc \uc811\uadfc \uc81c\uc5b4)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import fcntl  # Unix/Linux\n# import msvcrt  # Windows\n\n# Unix/Linux \uc608\uc81c\nwith open('shared_file.txt', 'r+') as f:\n    # \ubc30\ud0c0\uc801 \uc7a0\uae08\n    fcntl.flock(f.fileno(), fcntl.LOCK_EX)\n    try:\n        content = f.read()\n        # \uc791\uc5c5 \uc218\ud589\n        f.write(\"\uc0c8\ub85c\uc6b4 \ub0b4\uc6a9\")\n    finally:\n        # \uc7a0\uae08 \ud574\uc81c\n        fcntl.flock(f.fileno(), fcntl.LOCK_UN)\n"})}),"\n",(0,s.jsx)(e.h2,{id:"314-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"3.14 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,s.jsx)(e.p,{children:"\ud30c\uc77c I/O \uc791\uc5c5 \uc2dc \ud655\uc778\ud574\uc57c \ud560 \uc0ac\ud56d\ub4e4:"}),"\n",(0,s.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(e.code,{children:"with"})," \ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \ub2eb\uc2b5\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc778\ucf54\ub529\uc744 \uba85\uc2dc\ud588\uc2b5\ub2c8\uae4c? (\ud2b9\ud788 \ud55c\uae00 \ud30c\uc77c)"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud30c\uc77c\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc744 \ub54c\ub97c \ucc98\ub9ac\ud588\uc2b5\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc801\uc808\ud55c \ud30c\uc77c \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\uae4c? (r, w, a, etc.)"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub300\uc6a9\ub7c9 \ud30c\uc77c\uc744 \uccad\ud06c\ub85c \ucc98\ub9ac\ud569\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uacbd\ub85c \ucc98\ub9ac\uc5d0 ",(0,s.jsx)(e.code,{children:"pathlib"}),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","CSV/JSON \uc791\uc5c5 \uc2dc \ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud569\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud30c\uc77c \uc791\uc5c5 \uc804\uc5d0 \uad8c\ud55c\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc5d0\ub7ec \ucc98\ub9ac\ub97c \uc801\uc808\ud788 \ud588\uc2b5\ub2c8\uae4c?"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud50c\ub7ab\ud3fc \ub3c5\ub9bd\uc801\uc778 \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud569\ub2c8\uae4c? (os.path.join \ub610\ub294 pathlib)"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"315-\ud575\uc2ec-\uc694\uc57d",children:"3.15 \ud575\uc2ec \uc694\uc57d"}),"\n",(0,s.jsx)(e.admonition,{title:"\ud30c\uc77c I/O \ud575\uc2ec \ud301",type:"tip",children:(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\ud56d\uc0c1 with \ubb38 \uc0ac\uc6a9"}),": \ud30c\uc77c\uc774 \uc790\ub3d9\uc73c\ub85c \ub2eb\ud788\ub3c4\ub85d \ubcf4\uc7a5"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc778\ucf54\ub529 \uba85\uc2dc"}),": ",(0,s.jsx)(e.code,{children:"encoding='utf-8'"})," \ud56d\uc0c1 \uc9c0\uc815"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"pathlib \uc0ac\uc6a9"}),": \ud604\ub300\uc801\uc774\uace0 \uc9c1\uad00\uc801\uc778 \uacbd\ub85c \ucc98\ub9ac"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc801\uc808\ud55c \ubaa8\ub4dc \uc120\ud0dd"}),": \uc77d\uae30(r), \uc4f0\uae30(w), \ucd94\uac00(a) \uad6c\ubd84"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\ub300\uc6a9\ub7c9 \ud30c\uc77c \uc8fc\uc758"}),": \uccad\ud06c\ub85c \uc77d\uc5b4\uc11c \uba54\ubaa8\ub9ac \uc808\uc57d"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\ud45c\uc900 \ub77c\uc774\ube0c\ub7ec\ub9ac \ud65c\uc6a9"}),": csv, json \ubaa8\ub4c8 \uc0ac\uc6a9"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\uc608\uc678 \ucc98\ub9ac"}),": FileNotFoundError, PermissionError \ub4f1 \ucc98\ub9ac"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"\ubc14\uc774\ub108\ub9ac \ud30c\uc77c"}),": 'b' \ubaa8\ub4dc\ub85c \uc774\ubbf8\uc9c0, \ube44\ub514\uc624 \ub4f1 \ucc98\ub9ac"]}),"\n"]})}),"\n",(0,s.jsx)(e.h2,{id:"\uc5f0\uc2b5-\ubb38\uc81c",children:"\uc5f0\uc2b5 \ubb38\uc81c"}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-1-\ub2e8\uc5b4-\uce74\uc6b4\ud130",children:"\ubb38\uc81c 1: \ub2e8\uc5b4 \uce74\uc6b4\ud130"}),"\n",(0,s.jsx)(e.p,{children:"\ub2e4\uc74c \uae30\ub2a5\uc744 \uac00\uc9c4 \ub2e8\uc5b4 \uce74\uc6b4\ud130\ub97c \uc791\uc131\ud558\uc138\uc694:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc744 \uc77d\uc5b4\uc11c \uac01 \ub2e8\uc5b4\uc758 \ube48\ub3c4\uc218 \uacc4\uc0b0"}),"\n",(0,s.jsx)(e.li,{children:"\uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub41c \ub2e8\uc5b4 10\uac1c \ucd9c\ub825"}),"\n",(0,s.jsx)(e.li,{children:"\uacb0\uacfc\ub97c JSON \ud30c\uc77c\ub85c \uc800\uc7a5"}),"\n"]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import json\nfrom collections import Counter\nimport re\nfrom pathlib import Path\n\ndef word_counter(input_file, output_file='word_count.json', top_n=10):\n    \"\"\"\ub2e8\uc5b4 \ube48\ub3c4\uc218\ub97c \uacc4\uc0b0\ud558\uace0 \uacb0\uacfc\ub97c \uc800\uc7a5\"\"\"\n    # \ud30c\uc77c \uc77d\uae30\n    file_path = Path(input_file)\n    text = file_path.read_text(encoding='utf-8')\n\n    # \ub2e8\uc5b4 \ucd94\ucd9c (\uc601\ubb38, \ud55c\uae00\ub9cc)\n    words = re.findall(r'[a-zA-Z\uac00-\ud7a3]+', text.lower())\n\n    # \ube48\ub3c4\uc218 \uacc4\uc0b0\n    word_freq = Counter(words)\n\n    # \uc0c1\uc704 N\uac1c \ub2e8\uc5b4\n    top_words = dict(word_freq.most_common(top_n))\n\n    # \uacb0\uacfc \ucd9c\ub825\n    print(f\"=== \uc0c1\uc704 {top_n}\uac1c \ub2e8\uc5b4 ===\")\n    for word, count in top_words.items():\n        print(f\"{word}: {count}\ud68c\")\n\n    # JSON\uc73c\ub85c \uc800\uc7a5\n    result = {\n        'total_words': len(words),\n        'unique_words': len(word_freq),\n        'top_words': top_words\n    }\n\n    output_path = Path(output_file)\n    output_path.write_text(\n        json.dumps(result, ensure_ascii=False, indent=2),\n        encoding='utf-8'\n    )\n\n    print(f\"\\n\uacb0\uacfc\uac00 {output_file}\uc5d0 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\")\n\n# \uc0ac\uc6a9 \uc608\uc81c\nword_counter('article.txt', 'word_count.json', top_n=10)\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-2-csv-\ubcd1\ud569\uae30",children:"\ubb38\uc81c 2: CSV \ubcd1\ud569\uae30"}),"\n",(0,s.jsx)(e.p,{children:"\uc5ec\ub7ec CSV \ud30c\uc77c\uc744 \ud558\ub098\ub85c \ubcd1\ud569\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc138\uc694:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\uac19\uc740 \uad6c\uc870\ub97c \uac00\uc9c4 \uc5ec\ub7ec CSV \ud30c\uc77c\uc744 \uc785\ub825\ubc1b\uc74c"}),"\n",(0,s.jsx)(e.li,{children:"\ud5e4\ub354\ub294 \ud55c \ubc88\ub9cc \ud3ec\ud568"}),"\n",(0,s.jsx)(e.li,{children:"\uc911\ubcf5 \ud589 \uc81c\uac70 \uc635\uc158 \uc81c\uacf5"}),"\n"]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import csv\nfrom pathlib import Path\n\ndef merge_csv_files(input_files, output_file, remove_duplicates=True):\n    \"\"\"\uc5ec\ub7ec CSV \ud30c\uc77c\uc744 \ud558\ub098\ub85c \ubcd1\ud569\"\"\"\n    all_rows = []\n    headers = None\n\n    # \ubaa8\ub4e0 CSV \ud30c\uc77c \uc77d\uae30\n    for file_path in input_files:\n        path = Path(file_path)\n        if not path.exists():\n            print(f\"\uacbd\uace0: {file_path}\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\")\n            continue\n\n        with path.open('r', encoding='utf-8') as f:\n            reader = csv.DictReader(f)\n\n            # \uccab \ubc88\uc9f8 \ud30c\uc77c\uc758 \ud5e4\ub354 \uc800\uc7a5\n            if headers is None:\n                headers = reader.fieldnames\n\n            # \ud5e4\ub354\uac00 \ub2e4\ub974\uba74 \uacbd\uace0\n            if reader.fieldnames != headers:\n                print(f\"\uacbd\uace0: {file_path}\uc758 \ud5e4\ub354\uac00 \ub2e4\ub985\ub2c8\ub2e4.\")\n                continue\n\n            # \ud589 \ucd94\uac00\n            for row in reader:\n                all_rows.append(row)\n\n    # \uc911\ubcf5 \uc81c\uac70 (\uc120\ud0dd\uc0ac\ud56d)\n    if remove_duplicates:\n        # dict\ub97c tuple\ub85c \ubcc0\ud658\ud558\uc5ec \uc911\ubcf5 \uc81c\uac70\n        unique_rows = []\n        seen = set()\n\n        for row in all_rows:\n            row_tuple = tuple(sorted(row.items()))\n            if row_tuple not in seen:\n                seen.add(row_tuple)\n                unique_rows.append(row)\n\n        all_rows = unique_rows\n        print(f\"\uc911\ubcf5 \uc81c\uac70: {len(seen)}\uac1c\uc758 \uace0\uc720\ud55c \ud589\")\n\n    # \ubcd1\ud569\ub41c \ud30c\uc77c \uc800\uc7a5\n    output_path = Path(output_file)\n    with output_path.open('w', newline='', encoding='utf-8') as f:\n        if headers:\n            writer = csv.DictWriter(f, fieldnames=headers)\n            writer.writeheader()\n            writer.writerows(all_rows)\n\n    print(f\"\ucd1d {len(all_rows)}\uac1c \ud589\uc774 {output_file}\uc5d0 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\")\n\n# \uc0ac\uc6a9 \uc608\uc81c\ninput_files = ['data1.csv', 'data2.csv', 'data3.csv']\nmerge_csv_files(input_files, 'merged.csv', remove_duplicates=True)\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-3-\uc124\uc815-\ud30c\uc77c-\uac80\uc99d\uae30",children:"\ubb38\uc81c 3: \uc124\uc815 \ud30c\uc77c \uac80\uc99d\uae30"}),"\n",(0,s.jsx)(e.p,{children:"JSON \uc124\uc815 \ud30c\uc77c\uc744 \uc77d\uace0 \ud544\uc218 \ud0a4\uac00 \uc788\ub294\uc9c0 \uac80\uc99d\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc791\uc131\ud558\uc138\uc694:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\ud544\uc218 \ud0a4 \ubaa9\ub85d\uc744 \ubc1b\uc544\uc11c \uac80\uc99d"}),"\n",(0,s.jsx)(e.li,{children:"\ub204\ub77d\ub41c \ud0a4\uac00 \uc788\uc73c\uba74 \uae30\ubcf8\uac12\uc73c\ub85c \ucc44\uc6b0\uae30"}),"\n",(0,s.jsx)(e.li,{children:"\uac80\uc99d \uacb0\uacfc\ub97c \uc0c8 \ud30c\uc77c\ub85c \uc800\uc7a5"}),"\n"]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import json\nfrom pathlib import Path\n\ndef validate_config(config_file, required_keys, defaults, output_file=None):\n    \"\"\"\uc124\uc815 \ud30c\uc77c \uac80\uc99d \ubc0f \uc218\uc815\"\"\"\n    config_path = Path(config_file)\n\n    # \uc124\uc815 \ud30c\uc77c \uc77d\uae30\n    if config_path.exists():\n        config = json.loads(config_path.read_text(encoding='utf-8'))\n    else:\n        print(\"\uc124\uc815 \ud30c\uc77c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \uc0c8\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4.\")\n        config = {}\n\n    # \uac80\uc99d \uacb0\uacfc\n    validation_result = {\n        'valid': True,\n        'missing_keys': [],\n        'added_defaults': []\n    }\n\n    # \ud544\uc218 \ud0a4 \ud655\uc778\n    for key in required_keys:\n        if key not in config:\n            validation_result['valid'] = False\n            validation_result['missing_keys'].append(key)\n\n            # \uae30\ubcf8\uac12\uc73c\ub85c \ucc44\uc6b0\uae30\n            if key in defaults:\n                config[key] = defaults[key]\n                validation_result['added_defaults'].append(key)\n\n    # \uacb0\uacfc \ucd9c\ub825\n    if validation_result['valid']:\n        print(\"\uc124\uc815 \ud30c\uc77c\uc774 \uc720\ud6a8\ud569\ub2c8\ub2e4.\")\n    else:\n        print(\"\uc124\uc815 \ud30c\uc77c\uc5d0 \ub204\ub77d\ub41c \ud0a4\uac00 \uc788\uc2b5\ub2c8\ub2e4:\")\n        for key in validation_result['missing_keys']:\n            print(f\"  - {key}\")\n\n        if validation_result['added_defaults']:\n            print(\"\\n\ub2e4\uc74c \ud0a4\uc5d0 \uae30\ubcf8\uac12\uc774 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4:\")\n            for key in validation_result['added_defaults']:\n                print(f\"  - {key}: {config[key]}\")\n\n    # \uc218\uc815\ub41c \uc124\uc815 \uc800\uc7a5\n    output_path = Path(output_file or config_file)\n    output_path.write_text(\n        json.dumps(config, ensure_ascii=False, indent=2),\n        encoding='utf-8'\n    )\n\n    print(f\"\\n\uc124\uc815\uc774 {output_path}\uc5d0 \uc800\uc7a5\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\")\n    return validation_result\n\n# \uc0ac\uc6a9 \uc608\uc81c\nrequired_keys = ['app_name', 'version', 'database', 'port']\ndefaults = {\n    'app_name': 'MyApp',\n    'version': '1.0.0',\n    'port': 8080,\n    'database': {\n        'host': 'localhost',\n        'port': 5432\n    }\n}\n\nresult = validate_config(\n    'config.json',\n    required_keys,\n    defaults,\n    'validated_config.json'\n)\n"})})]}),"\n",(0,s.jsx)(e.h3,{id:"\ubb38\uc81c-4-\ub85c\uadf8-\ud30c\uc77c-\ub85c\ud14c\uc774\uc158",children:"\ubb38\uc81c 4: \ub85c\uadf8 \ud30c\uc77c \ub85c\ud14c\uc774\uc158"}),"\n",(0,s.jsx)(e.p,{children:"\ub85c\uadf8 \ud30c\uc77c\uc774 \uc77c\uc815 \ud06c\uae30\ub97c \ucd08\uacfc\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \ubc31\uc5c5\ud558\uace0 \uc0c8 \ud30c\uc77c\uc744 \uc2dc\uc791\ud558\ub294 \ub85c\uac70\ub97c \uc791\uc131\ud558\uc138\uc694:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\ucd5c\ub300 \ud30c\uc77c \ud06c\uae30 \uc9c0\uc815 (\uc608: 1MB)"}),"\n",(0,s.jsx)(e.li,{children:"\ubc31\uc5c5 \ud30c\uc77c\uc740 \ubc88\ud638\ub97c \ubd99\uc5ec\uc11c \uc800\uc7a5 (log.1, log.2, ...)"}),"\n",(0,s.jsx)(e.li,{children:"\ucd5c\ub300 \ubc31\uc5c5 \uac1c\uc218 \uc81c\ud55c"}),"\n"]}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'from pathlib import Path\nfrom datetime import datetime\n\nclass RotatingLogger:\n    def __init__(self, log_file, max_bytes=1024*1024, backup_count=5):\n        """\n        Args:\n            log_file: \ub85c\uadf8 \ud30c\uc77c \uacbd\ub85c\n            max_bytes: \ucd5c\ub300 \ud30c\uc77c \ud06c\uae30 (\uae30\ubcf8 1MB)\n            backup_count: \ucd5c\ub300 \ubc31\uc5c5 \ud30c\uc77c \uac1c\uc218\n        """\n        self.log_file = Path(log_file)\n        self.max_bytes = max_bytes\n        self.backup_count = backup_count\n\n    def _should_rotate(self):\n        """\ud30c\uc77c \ud06c\uae30 \ud655\uc778\ud558\uc5ec \ub85c\ud14c\uc774\uc158 \ud544\uc694 \uc5ec\ubd80 \ubc18\ud658"""\n        if not self.log_file.exists():\n            return False\n        return self.log_file.stat().st_size >= self.max_bytes\n\n    def _rotate(self):\n        """\ub85c\uadf8 \ud30c\uc77c \ub85c\ud14c\uc774\uc158 \uc218\ud589"""\n        # \uac00\uc7a5 \uc624\ub798\ub41c \ubc31\uc5c5 \uc0ad\uc81c\n        oldest = self.log_file.with_suffix(f\'.{self.backup_count}\')\n        if oldest.exists():\n            oldest.unlink()\n\n        # \ubc31\uc5c5 \ud30c\uc77c\ub4e4 \ubc88\ud638 \uc99d\uac00\n        for i in range(self.backup_count - 1, 0, -1):\n            src = self.log_file.with_suffix(f\'.{i}\')\n            dst = self.log_file.with_suffix(f\'.{i + 1}\')\n            if src.exists():\n                src.rename(dst)\n\n        # \ud604\uc7ac \ub85c\uadf8 \ud30c\uc77c\uc744 .1\ub85c \ubc31\uc5c5\n        if self.log_file.exists():\n            self.log_file.rename(self.log_file.with_suffix(\'.1\'))\n\n    def log(self, message, level=\'INFO\'):\n        """\ub85c\uadf8 \uba54\uc2dc\uc9c0 \uc791\uc131"""\n        # \ub85c\ud14c\uc774\uc158 \ud544\uc694 \uc5ec\ubd80 \ud655\uc778\n        if self._should_rotate():\n            self._rotate()\n\n        # \ub85c\uadf8 \uba54\uc2dc\uc9c0 \ud3ec\ub9f7\n        timestamp = datetime.now().strftime(\'%Y-%m-%d %H:%M:%S\')\n        log_entry = f"[{timestamp}] [{level}] {message}\\n"\n\n        # \ud30c\uc77c\uc5d0 \ucd94\uac00\n        with self.log_file.open(\'a\', encoding=\'utf-8\') as f:\n            f.write(log_entry)\n\n    def info(self, message):\n        """INFO \ub808\ubca8 \ub85c\uadf8"""\n        self.log(message, \'INFO\')\n\n    def warning(self, message):\n        """WARNING \ub808\ubca8 \ub85c\uadf8"""\n        self.log(message, \'WARNING\')\n\n    def error(self, message):\n        """ERROR \ub808\ubca8 \ub85c\uadf8"""\n        self.log(message, \'ERROR\')\n\n# \uc0ac\uc6a9 \uc608\uc81c\nlogger = RotatingLogger(\'app.log\', max_bytes=1024*100, backup_count=3)\n\n# \ub85c\uadf8 \uc791\uc131\nfor i in range(1000):\n    logger.info(f"\ucc98\ub9ac \uc911: {i}\ubc88\uc9f8 \uc791\uc5c5")\n    if i % 100 == 0:\n        logger.warning(f"\uccb4\ud06c\ud3ec\uc778\ud2b8: {i}")\n\nlogger.error("\ud14c\uc2a4\ud2b8 \uc5d0\ub7ec \uba54\uc2dc\uc9c0")\n'})})]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:["\ub2e4\uc74c \uc139\uc158\uc5d0\uc11c\ub294 ",(0,s.jsx)(e.a,{href:"./decorators",children:"\ub370\ucf54\ub808\uc774\ud130"}),"\uc5d0 \ub300\ud574 \ud559\uc2b5\ud569\ub2c8\ub2e4."]})]})}function p(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var t=i(6540);const s={},l=t.createContext(s);function r(n){const e=t.useContext(l);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);