"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[220],{7598:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>r,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"pandas/visualization","title":"6. \uc2dc\uac01\ud654","description":"pandas\ub294 matplotlib\ub97c \uae30\ubc18\uc73c\ub85c \ud55c \uac15\ub825\ud55c \uc2dc\uac01\ud654 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub370\uc774\ud130 \ubd84\uc11d \uacb0\uacfc\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \uc804\ub2ec\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \ucc28\ud2b8\uc640 \uadf8\ub798\ud504\ub97c \uc27d\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","source":"@site/docs/pandas/visualization.md","sourceDirName":"pandas","slug":"/pandas/visualization","permalink":"/docs/pandas/visualization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pandas/visualization.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"pandasSidebar","previous":{"title":"5. \uace0\uae09 \uae30\ub2a5","permalink":"/docs/pandas/advanced"},"next":{"title":"8. \uc2e4\uc804 \uc608\uc81c","permalink":"/docs/pandas/examples"}}');var l=a(4848),s=a(8453);const o={sidebar_position:6},i="6. \uc2dc\uac01\ud654",r={},d=[{value:"6.1 pandas \uae30\ubcf8 plot",id:"61-pandas-\uae30\ubcf8-plot",level:2},{value:"6.1.1 \ub77c\uc778 \ucc28\ud2b8 (Line Plot)",id:"611-\ub77c\uc778-\ucc28\ud2b8-line-plot",level:3},{value:"6.1.2 \ub9c9\ub300 \ucc28\ud2b8 (Bar Plot)",id:"612-\ub9c9\ub300-\ucc28\ud2b8-bar-plot",level:3},{value:"6.1.3 \uc0b0\uc810\ub3c4 (Scatter Plot)",id:"613-\uc0b0\uc810\ub3c4-scatter-plot",level:3},{value:"6.1.4 \ud788\uc2a4\ud1a0\uadf8\ub7a8 (Histogram)",id:"614-\ud788\uc2a4\ud1a0\uadf8\ub7a8-histogram",level:3},{value:"6.2 matplotlib \ud1b5\ud569",id:"62-matplotlib-\ud1b5\ud569",level:2},{value:"6.2.1 \uc2a4\ud0c0\uc77c\uacfc \uc0c9\uc0c1 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",id:"621-\uc2a4\ud0c0\uc77c\uacfc-\uc0c9\uc0c1-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",level:3},{value:"6.3 seaborn \ud1b5\ud569",id:"63-seaborn-\ud1b5\ud569",level:2},{value:"6.3.1 \uace0\uae09 seaborn \uc2dc\uac01\ud654",id:"631-\uace0\uae09-seaborn-\uc2dc\uac01\ud654",level:3},{value:"6.4 \ub2e4\uc591\ud55c \ucc28\ud2b8 \ud0c0\uc785",id:"64-\ub2e4\uc591\ud55c-\ucc28\ud2b8-\ud0c0\uc785",level:2},{value:"6.4.1 \ubc15\uc2a4 \ud50c\ub86f (Box Plot)",id:"641-\ubc15\uc2a4-\ud50c\ub86f-box-plot",level:3},{value:"6.4.2 \uc6d0\ud615 \ucc28\ud2b8 (Pie Chart)",id:"642-\uc6d0\ud615-\ucc28\ud2b8-pie-chart",level:3},{value:"6.4.3 \uc601\uc5ed \ucc28\ud2b8 (Area Chart)",id:"643-\uc601\uc5ed-\ucc28\ud2b8-area-chart",level:3},{value:"6.5 \uc11c\ube0c\ud50c\ub86f (Subplots)",id:"65-\uc11c\ube0c\ud50c\ub86f-subplots",level:2},{value:"6.5.1 \uadf8\ub9ac\ub4dc \ub808\uc774\uc544\uc6c3",id:"651-\uadf8\ub9ac\ub4dc-\ub808\uc774\uc544\uc6c3",level:3},{value:"6.6 \uc2a4\ud0c0\uc77c\ub9c1 \ubc0f \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",id:"66-\uc2a4\ud0c0\uc77c\ub9c1-\ubc0f-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",level:2},{value:"6.6.1 \ud14c\ub9c8\uc640 \uc2a4\ud0c0\uc77c",id:"661-\ud14c\ub9c8\uc640-\uc2a4\ud0c0\uc77c",level:3},{value:"6.6.2 \ucee4\uc2a4\ud140 \uc0c9\uc0c1 \ud314\ub808\ud2b8",id:"662-\ucee4\uc2a4\ud140-\uc0c9\uc0c1-\ud314\ub808\ud2b8",level:3},{value:"6.6.3 \ud3f0\ud2b8 \ubc0f \ud14d\uc2a4\ud2b8 \uc2a4\ud0c0\uc77c\ub9c1",id:"663-\ud3f0\ud2b8-\ubc0f-\ud14d\uc2a4\ud2b8-\uc2a4\ud0c0\uc77c\ub9c1",level:3},{value:"6.7 \uc778\ud130\ub799\ud2f0\ube0c \uc2dc\uac01\ud654 (Plotly)",id:"67-\uc778\ud130\ub799\ud2f0\ube0c-\uc2dc\uac01\ud654-plotly",level:2},{value:"6.7.1 \ubcf5\ud569 \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc",id:"671-\ubcf5\ud569-\uc778\ud130\ub799\ud2f0\ube0c-\ub300\uc2dc\ubcf4\ub4dc",level:3},{value:"6.8 \uc2dc\uacc4\uc5f4 \uc2dc\uac01\ud654",id:"68-\uc2dc\uacc4\uc5f4-\uc2dc\uac01\ud654",level:2},{value:"6.8.1 \uacc4\uc808\uc131 \ubd84\uc11d",id:"681-\uacc4\uc808\uc131-\ubd84\uc11d",level:3},{value:"6.8.2 \ucd94\uc138 \ubc0f \ud328\ud134 \uc2dc\uac01\ud654",id:"682-\ucd94\uc138-\ubc0f-\ud328\ud134-\uc2dc\uac01\ud654",level:3},{value:"6.9 \uc2e4\uc804 \uc608\uc81c: \ub300\uc2dc\ubcf4\ub4dc\uae09 \ucc28\ud2b8",id:"69-\uc2e4\uc804-\uc608\uc81c-\ub300\uc2dc\ubcf4\ub4dc\uae09-\ucc28\ud2b8",level:2},{value:"6.9.1 \uacbd\uc601\uc9c4 \ub9ac\ud3ec\ud2b8 \ub300\uc2dc\ubcf4\ub4dc",id:"691-\uacbd\uc601\uc9c4-\ub9ac\ud3ec\ud2b8-\ub300\uc2dc\ubcf4\ub4dc",level:3},{value:"6.9.2 \ub9c8\ucf00\ud305 \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc (Plotly)",id:"692-\ub9c8\ucf00\ud305-\ubd84\uc11d-\ub300\uc2dc\ubcf4\ub4dc-plotly",level:3},{value:"6.10 \uc5f0\uc2b5 \ubb38\uc81c",id:"610-\uc5f0\uc2b5-\ubb38\uc81c",level:2},{value:"\ubb38\uc81c 1: \uc885\ud569 \uc2dc\uac01\ud654",id:"\ubb38\uc81c-1-\uc885\ud569-\uc2dc\uac01\ud654",level:3},{value:"\ubb38\uc81c 2: seaborn \uace0\uae09 \uc2dc\uac01\ud654",id:"\ubb38\uc81c-2-seaborn-\uace0\uae09-\uc2dc\uac01\ud654",level:3},{value:"\ubb38\uc81c 3: \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc",id:"\ubb38\uc81c-3-\uc778\ud130\ub799\ud2f0\ube0c-\ub300\uc2dc\ubcf4\ub4dc",level:3},{value:"\ub2e4\uc74c \ub2e8\uacc4",id:"\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function p(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components},{Details:a}=e;return a||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"6-\uc2dc\uac01\ud654",children:"6. \uc2dc\uac01\ud654"})}),"\n",(0,l.jsx)(e.p,{children:"pandas\ub294 matplotlib\ub97c \uae30\ubc18\uc73c\ub85c \ud55c \uac15\ub825\ud55c \uc2dc\uac01\ud654 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub370\uc774\ud130 \ubd84\uc11d \uacb0\uacfc\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \uc804\ub2ec\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \ucc28\ud2b8\uc640 \uadf8\ub798\ud504\ub97c \uc27d\uac8c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,l.jsx)(e.h2,{id:"61-pandas-\uae30\ubcf8-plot",children:"6.1 pandas \uae30\ubcf8 plot"}),"\n",(0,l.jsxs)(e.p,{children:["pandas\ub294 ",(0,l.jsx)(e.code,{children:".plot()"})," \uba54\uc11c\ub4dc\ub97c \ud1b5\ud574 \uac04\ub2e8\ud558\uac8c \uc2dc\uac01\ud654\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,l.jsx)(e.h3,{id:"611-\ub77c\uc778-\ucc28\ud2b8-line-plot",children:"6.1.1 \ub77c\uc778 \ucc28\ud2b8 (Line Plot)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130 \uc0dd\uc131\ndates = pd.date_range('2024-01-01', periods=100)\ndf = pd.DataFrame({\n    '\ub9e4\ucd9c': np.cumsum(np.random.randn(100)) + 100,\n    '\ube44\uc6a9': np.cumsum(np.random.randn(100)) + 80,\n    '\uc774\uc775': np.cumsum(np.random.randn(100)) + 20\n}, index=dates)\n\n# \uae30\ubcf8 \ub77c\uc778 \ucc28\ud2b8\ndf.plot()\nplt.title('\uc6d4\ubcc4 \uc7ac\ubb34 \ub370\uc774\ud130')\nplt.ylabel('\uae08\uc561 (\ub9cc\uc6d0)')\nplt.show()\n\n# \ud2b9\uc815 \uceec\ub7fc\ub9cc \uc120\ud0dd\ndf['\ub9e4\ucd9c'].plot(figsize=(10, 5))\nplt.title('\ub9e4\ucd9c \ucd94\uc774')\nplt.show()\n\n# \uc5ec\ub7ec \uceec\ub7fc\uc744 \uc11c\ube0c\ud50c\ub86f\uc73c\ub85c\ndf.plot(subplots=True, figsize=(10, 8), layout=(3, 1))\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.admonition,{type:"tip",children:(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:".plot()"})," \uba54\uc11c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ub77c\uc778 \ucc28\ud2b8\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. ",(0,l.jsx)(e.code,{children:"kind"})," \ud30c\ub77c\ubbf8\ud130\ub85c \ub2e4\uc591\ud55c \ucc28\ud2b8 \ud0c0\uc785\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."]})}),"\n",(0,l.jsx)(e.h3,{id:"612-\ub9c9\ub300-\ucc28\ud2b8-bar-plot",children:"6.1.2 \ub9c9\ub300 \ucc28\ud2b8 (Bar Plot)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uce74\ud14c\uace0\ub9ac\ubcc4 \ub370\uc774\ud130\ndata = pd.DataFrame({\n    '\uc81c\ud488': ['A', 'B', 'C', 'D', 'E'],\n    '\ud310\ub9e4\ub7c9': [120, 95, 150, 80, 110],\n    '\uc7ac\uace0': [30, 45, 20, 60, 35]\n})\n\n# \uc218\uc9c1 \ub9c9\ub300 \ucc28\ud2b8\ndata.plot(x='\uc81c\ud488', y='\ud310\ub9e4\ub7c9', kind='bar', figsize=(8, 5))\nplt.title('\uc81c\ud488\ubcc4 \ud310\ub9e4\ub7c9')\nplt.ylabel('\ud310\ub9e4\ub7c9')\nplt.xticks(rotation=0)\nplt.show()\n\n# \uc218\ud3c9 \ub9c9\ub300 \ucc28\ud2b8\ndata.plot(x='\uc81c\ud488', y='\ud310\ub9e4\ub7c9', kind='barh', figsize=(8, 5))\nplt.title('\uc81c\ud488\ubcc4 \ud310\ub9e4\ub7c9')\nplt.xlabel('\ud310\ub9e4\ub7c9')\nplt.show()\n\n# \uadf8\ub8f9\ud654\ub41c \ub9c9\ub300 \ucc28\ud2b8\ndata.set_index('\uc81c\ud488')[['\ud310\ub9e4\ub7c9', '\uc7ac\uace0']].plot(kind='bar', figsize=(10, 5))\nplt.title('\uc81c\ud488\ubcc4 \ud310\ub9e4\ub7c9 \ubc0f \uc7ac\uace0')\nplt.ylabel('\uc218\ub7c9')\nplt.xticks(rotation=45)\nplt.legend(['\ud310\ub9e4\ub7c9', '\uc7ac\uace0'])\nplt.show()\n\n# \ub204\uc801 \ub9c9\ub300 \ucc28\ud2b8\ndata.set_index('\uc81c\ud488')[['\ud310\ub9e4\ub7c9', '\uc7ac\uace0']].plot(kind='bar', stacked=True, figsize=(10, 5))\nplt.title('\uc81c\ud488\ubcc4 \ud310\ub9e4\ub7c9 \ubc0f \uc7ac\uace0 (\ub204\uc801)')\nplt.ylabel('\uc218\ub7c9')\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"613-\uc0b0\uc810\ub3c4-scatter-plot",children:"6.1.3 \uc0b0\uc810\ub3c4 (Scatter Plot)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc0c1\uad00\uad00\uacc4 \ubd84\uc11d\uc6a9 \ub370\uc774\ud130\nnp.random.seed(42)\ndf_scatter = pd.DataFrame({\n    '\uad11\uace0\ube44': np.random.uniform(10, 100, 50),\n    '\ub9e4\ucd9c': np.random.uniform(50, 500, 50),\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\ubd80\uc0b0', '\ub300\uad6c'], 50)\n})\n\ndf_scatter['\ub9e4\ucd9c'] = df_scatter['\uad11\uace0\ube44'] * 3.5 + np.random.normal(0, 30, 50)\n\n# \uae30\ubcf8 \uc0b0\uc810\ub3c4\ndf_scatter.plot(kind='scatter', x='\uad11\uace0\ube44', y='\ub9e4\ucd9c', figsize=(8, 6))\nplt.title('\uad11\uace0\ube44\uc640 \ub9e4\ucd9c\uc758 \uc0c1\uad00\uad00\uacc4')\nplt.show()\n\n# \ud06c\uae30\uc640 \uc0c9\uc0c1 \ucd94\uac00\ndf_scatter.plot(kind='scatter', x='\uad11\uace0\ube44', y='\ub9e4\ucd9c',\n                s=df_scatter['\uad11\uace0\ube44']*5,  # \uc810 \ud06c\uae30\n                c='\ub9e4\ucd9c',  # \uc0c9\uc0c1\n                cmap='viridis',  # \uceec\ub7ec\ub9f5\n                figsize=(10, 6),\n                alpha=0.6)\nplt.title('\uad11\uace0\ube44\uc640 \ub9e4\ucd9c\uc758 \uc0c1\uad00\uad00\uacc4 (\ud06c\uae30: \uad11\uace0\ube44, \uc0c9\uc0c1: \ub9e4\ucd9c)')\nplt.colorbar(label='\ub9e4\ucd9c')\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"614-\ud788\uc2a4\ud1a0\uadf8\ub7a8-histogram",children:"6.1.4 \ud788\uc2a4\ud1a0\uadf8\ub7a8 (Histogram)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc815\uaddc\ubd84\ud3ec \ub370\uc774\ud130 \uc0dd\uc131\ndf_hist = pd.DataFrame({\n    '\ud0a4': np.random.normal(170, 10, 1000),\n    '\ubab8\ubb34\uac8c': np.random.normal(65, 12, 1000),\n    '\ub098\uc774': np.random.normal(35, 15, 1000)\n})\n\n# \uae30\ubcf8 \ud788\uc2a4\ud1a0\uadf8\ub7a8\ndf_hist['\ud0a4'].plot(kind='hist', bins=30, figsize=(8, 5), edgecolor='black')\nplt.title('\ud0a4 \ubd84\ud3ec')\nplt.xlabel('\ud0a4 (cm)')\nplt.ylabel('\ube48\ub3c4')\nplt.show()\n\n# \uc5ec\ub7ec \uceec\ub7fc \ub3d9\uc2dc \ud45c\uc2dc\ndf_hist.plot(kind='hist', bins=20, alpha=0.5, figsize=(10, 6))\nplt.title('\uc2e0\uccb4 \uc815\ubcf4 \ubd84\ud3ec')\nplt.xlabel('\uac12')\nplt.ylabel('\ube48\ub3c4')\nplt.show()\n\n# \uc11c\ube0c\ud50c\ub86f\uc73c\ub85c \ubd84\ub9ac\ndf_hist.plot(kind='hist', bins=30, subplots=True,\n             layout=(1, 3), figsize=(15, 4), edgecolor='black')\nplt.tight_layout()\nplt.show()\n\n# \ubc00\ub3c4 \ud50c\ub86f (KDE)\ndf_hist['\ud0a4'].plot(kind='kde', figsize=(8, 5))\nplt.title('\ud0a4 \ubc00\ub3c4 \ubd84\ud3ec')\nplt.xlabel('\ud0a4 (cm)')\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"62-matplotlib-\ud1b5\ud569",children:"6.2 matplotlib \ud1b5\ud569"}),"\n",(0,l.jsx)(e.p,{children:"pandas\ub294 matplotlib\uc640 \uc644\ubcbd\ud558\uac8c \ud1b5\ud569\ub418\uc5b4 \ub354 \uc138\ubc00\ud55c \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"import matplotlib.pyplot as plt\n\n# Figure\uc640 Axes \uac1d\uccb4 \ud65c\uc6a9\nfig, axes = plt.subplots(2, 2, figsize=(12, 10))\n\n# \ub370\uc774\ud130 \uc900\ube44\ndates = pd.date_range('2024-01-01', periods=50)\ndf_sales = pd.DataFrame({\n    '\uc628\ub77c\uc778': np.cumsum(np.random.randn(50)) + 100,\n    '\uc624\ud504\ub77c\uc778': np.cumsum(np.random.randn(50)) + 80\n}, index=dates)\n\n# 1. \ub77c\uc778 \ucc28\ud2b8\ndf_sales.plot(ax=axes[0, 0], title='\ud310\ub9e4 \ucc44\ub110\ubcc4 \ub9e4\ucd9c \ucd94\uc774')\naxes[0, 0].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[0, 0].grid(True, alpha=0.3)\n\n# 2. \uc601\uc5ed \ucc28\ud2b8\ndf_sales.plot(kind='area', ax=axes[0, 1], alpha=0.4, title='\ub204\uc801 \ud310\ub9e4 \ucd94\uc774')\naxes[0, 1].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\n\n# 3. \ub9c9\ub300 \ucc28\ud2b8\nmonthly_avg = df_sales.resample('W').mean()\nmonthly_avg.plot(kind='bar', ax=axes[1, 0], title='\uc8fc\uac04 \ud3c9\uade0 \ub9e4\ucd9c')\naxes[1, 0].set_ylabel('\ud3c9\uade0 \ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[1, 0].tick_params(axis='x', rotation=45)\n\n# 4. \ubc15\uc2a4 \ud50c\ub86f\ndf_sales.plot(kind='box', ax=axes[1, 1], title='\ud310\ub9e4 \ucc44\ub110\ubcc4 \ubd84\ud3ec')\naxes[1, 1].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\n\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"621-\uc2a4\ud0c0\uc77c\uacfc-\uc0c9\uc0c1-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",children:"6.2.1 \uc2a4\ud0c0\uc77c\uacfc \uc0c9\uc0c1 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# matplotlib \uc2a4\ud0c0\uc77c \uc0ac\uc6a9\nplt.style.use('seaborn-v0_8-darkgrid')\n\n# \ucee4\uc2a4\ud140 \uc0c9\uc0c1\uacfc \uc2a4\ud0c0\uc77c\ncolors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A']\ndf_sales.plot(\n    figsize=(12, 6),\n    color=colors[:2],\n    linewidth=2.5,\n    linestyle='--',\n    marker='o',\n    markersize=6,\n    alpha=0.7\n)\n\nplt.title('\ud310\ub9e4 \ucc44\ub110\ubcc4 \ub9e4\ucd9c \ucd94\uc774', fontsize=16, fontweight='bold', pad=20)\nplt.xlabel('\ub0a0\uc9dc', fontsize=12)\nplt.ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)', fontsize=12)\nplt.legend(['\uc628\ub77c\uc778', '\uc624\ud504\ub77c\uc778'], loc='upper left', fontsize=11)\nplt.grid(True, alpha=0.3, linestyle=':', linewidth=1)\nplt.tight_layout()\nplt.show()\n\n# \uc2a4\ud0c0\uc77c \ucd08\uae30\ud654\nplt.style.use('default')\n"})}),"\n",(0,l.jsx)(e.h2,{id:"63-seaborn-\ud1b5\ud569",children:"6.3 seaborn \ud1b5\ud569"}),"\n",(0,l.jsx)(e.p,{children:"seaborn\uc740 \ud1b5\uacc4\uc801 \uc2dc\uac01\ud654\uc5d0 \ud2b9\ud654\ub41c \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c, pandas\uc640 \uc644\ubcbd\ud558\uac8c \ud638\ud658\ub429\ub2c8\ub2e4."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"import seaborn as sns\n\n# seaborn \uc2a4\ud0c0\uc77c \uc124\uc815\nsns.set_style(\"whitegrid\")\nsns.set_palette(\"husl\")\n\n# \uc0d8\ud50c \ub370\uc774\ud130 \uc0dd\uc131\nnp.random.seed(42)\ndf_seaborn = pd.DataFrame({\n    '\uce74\ud14c\uace0\ub9ac': np.random.choice(['A', 'B', 'C'], 200),\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\ubd80\uc0b0', '\ub300\uad6c', '\uc778\ucc9c'], 200),\n    '\ub9e4\ucd9c': np.random.exponential(50, 200),\n    '\uace0\uac1d\uc218': np.random.poisson(30, 200),\n    '\ub9cc\uc871\ub3c4': np.random.normal(7, 1.5, 200)\n})\n\n# 1. \uce74\uc6b4\ud2b8 \ud50c\ub86f\nplt.figure(figsize=(10, 5))\nsns.countplot(data=df_seaborn, x='\uce74\ud14c\uace0\ub9ac', hue='\uc9c0\uc5ed')\nplt.title('\uce74\ud14c\uace0\ub9ac\ubcc4 \uc9c0\uc5ed \ubd84\ud3ec')\nplt.show()\n\n# 2. \ubc15\uc2a4 \ud50c\ub86f\nplt.figure(figsize=(12, 6))\nsns.boxplot(data=df_seaborn, x='\uc9c0\uc5ed', y='\ub9e4\ucd9c', hue='\uce74\ud14c\uace0\ub9ac')\nplt.title('\uc9c0\uc5ed \ubc0f \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c \ubd84\ud3ec')\nplt.show()\n\n# 3. \ubc14\uc774\uc62c\ub9b0 \ud50c\ub86f\nplt.figure(figsize=(12, 6))\nsns.violinplot(data=df_seaborn, x='\uc9c0\uc5ed', y='\ub9cc\uc871\ub3c4', hue='\uce74\ud14c\uace0\ub9ac', split=False)\nplt.title('\uc9c0\uc5ed \ubc0f \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9cc\uc871\ub3c4 \ubd84\ud3ec')\nplt.show()\n\n# 4. \ud788\ud2b8\ub9f5\npivot_data = df_seaborn.pivot_table(values='\ub9e4\ucd9c', index='\uc9c0\uc5ed', columns='\uce74\ud14c\uace0\ub9ac', aggfunc='mean')\nplt.figure(figsize=(8, 6))\nsns.heatmap(pivot_data, annot=True, fmt='.1f', cmap='YlOrRd', linewidths=0.5)\nplt.title('\uc9c0\uc5ed \ubc0f \uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c \ud788\ud2b8\ub9f5')\nplt.show()\n\n# 5. \ud398\uc5b4\ud50c\ub86f (\uc0c1\uad00\uad00\uacc4 \ud589\ub82c)\nsns.pairplot(df_seaborn[['\ub9e4\ucd9c', '\uace0\uac1d\uc218', '\ub9cc\uc871\ub3c4']], diag_kind='kde', height=3)\nplt.suptitle('\ubcc0\uc218 \uac04 \uc0c1\uad00\uad00\uacc4', y=1.02)\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"631-\uace0\uae09-seaborn-\uc2dc\uac01\ud654",children:"6.3.1 \uace0\uae09 seaborn \uc2dc\uac01\ud654"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# 1. \uc870\uc778\ud2b8 \ud50c\ub86f (\uc0b0\uc810\ub3c4 + \ud788\uc2a4\ud1a0\uadf8\ub7a8)\nsns.jointplot(data=df_seaborn, x='\uace0\uac1d\uc218', y='\ub9e4\ucd9c', kind='hex', height=8)\nplt.suptitle('\uace0\uac1d\uc218\uc640 \ub9e4\ucd9c\uc758 \uad00\uacc4', y=1.02)\nplt.show()\n\n# 2. \ud68c\uadc0 \ud50c\ub86f\nplt.figure(figsize=(10, 6))\nsns.regplot(data=df_seaborn, x='\uace0\uac1d\uc218', y='\ub9e4\ucd9c', scatter_kws={'alpha':0.3})\nplt.title('\uace0\uac1d\uc218\uc640 \ub9e4\ucd9c\uc758 \ud68c\uadc0 \ubd84\uc11d')\nplt.show()\n\n# 3. \ud3ec\uc778\ud2b8 \ud50c\ub86f\nplt.figure(figsize=(12, 6))\nsns.pointplot(data=df_seaborn, x='\uc9c0\uc5ed', y='\ub9e4\ucd9c', hue='\uce74\ud14c\uace0\ub9ac',\n              markers=['o', 's', '^'], linestyles=['-', '--', ':'])\nplt.title('\uc9c0\uc5ed \ubc0f \uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c \ube44\uad50')\nplt.show()\n\n# 4. \uc2a4\uc6dc \ud50c\ub86f\nplt.figure(figsize=(12, 6))\nsns.swarmplot(data=df_seaborn, x='\uce74\ud14c\uace0\ub9ac', y='\ub9cc\uc871\ub3c4', hue='\uc9c0\uc5ed', size=3)\nplt.title('\uce74\ud14c\uace0\ub9ac \ubc0f \uc9c0\uc5ed\ubcc4 \ub9cc\uc871\ub3c4 \ubd84\ud3ec')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"64-\ub2e4\uc591\ud55c-\ucc28\ud2b8-\ud0c0\uc785",children:"6.4 \ub2e4\uc591\ud55c \ucc28\ud2b8 \ud0c0\uc785"}),"\n",(0,l.jsx)(e.h3,{id:"641-\ubc15\uc2a4-\ud50c\ub86f-box-plot",children:"6.4.1 \ubc15\uc2a4 \ud50c\ub86f (Box Plot)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc6d4\ubcc4 \uc628\ub3c4 \ub370\uc774\ud130 \uc0dd\uc131\nnp.random.seed(42)\nmonths = ['1\uc6d4', '2\uc6d4', '3\uc6d4', '4\uc6d4', '5\uc6d4', '6\uc6d4',\n          '7\uc6d4', '8\uc6d4', '9\uc6d4', '10\uc6d4', '11\uc6d4', '12\uc6d4']\n\ntemp_data = {\n    '\uc6d4': np.repeat(months, 30),\n    '\uc628\ub3c4': np.concatenate([\n        np.random.normal(0, 3, 30),   # 1\uc6d4\n        np.random.normal(3, 3, 30),   # 2\uc6d4\n        np.random.normal(8, 4, 30),   # 3\uc6d4\n        np.random.normal(14, 4, 30),  # 4\uc6d4\n        np.random.normal(19, 4, 30),  # 5\uc6d4\n        np.random.normal(23, 3, 30),  # 6\uc6d4\n        np.random.normal(27, 3, 30),  # 7\uc6d4\n        np.random.normal(28, 3, 30),  # 8\uc6d4\n        np.random.normal(23, 4, 30),  # 9\uc6d4\n        np.random.normal(17, 4, 30),  # 10\uc6d4\n        np.random.normal(10, 4, 30),  # 11\uc6d4\n        np.random.normal(3, 3, 30),   # 12\uc6d4\n    ])\n}\n\ndf_temp = pd.DataFrame(temp_data)\n\n# pandas \ubc15\uc2a4 \ud50c\ub86f\ndf_temp.boxplot(column='\uc628\ub3c4', by='\uc6d4', figsize=(14, 6))\nplt.title('\uc6d4\ubcc4 \uc628\ub3c4 \ubd84\ud3ec')\nplt.suptitle('')  # \uae30\ubcf8 \uc81c\ubaa9 \uc81c\uac70\nplt.xlabel('\uc6d4')\nplt.ylabel('\uc628\ub3c4 (\xb0C)')\nplt.show()\n\n# seaborn \ubc15\uc2a4 \ud50c\ub86f (\ub354 \uc608\uc068)\nplt.figure(figsize=(14, 6))\nsns.boxplot(data=df_temp, x='\uc6d4', y='\uc628\ub3c4', palette='coolwarm')\nplt.title('\uc6d4\ubcc4 \uc628\ub3c4 \ubd84\ud3ec', fontsize=14, fontweight='bold')\nplt.ylabel('\uc628\ub3c4 (\xb0C)')\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"642-\uc6d0\ud615-\ucc28\ud2b8-pie-chart",children:"6.4.2 \uc6d0\ud615 \ucc28\ud2b8 (Pie Chart)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc2dc\uc7a5 \uc810\uc720\uc728 \ub370\uc774\ud130\nmarket_share = pd.DataFrame({\n    '\uae30\uc5c5': ['A\uc0ac', 'B\uc0ac', 'C\uc0ac', 'D\uc0ac', '\uae30\ud0c0'],\n    '\uc810\uc720\uc728': [35, 25, 20, 12, 8]\n})\n\n# \uae30\ubcf8 \ud30c\uc774 \ucc28\ud2b8\nmarket_share.set_index('\uae30\uc5c5')['\uc810\uc720\uc728'].plot(\n    kind='pie',\n    figsize=(8, 8),\n    autopct='%1.1f%%',\n    startangle=90,\n    colors=['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#96CEB4']\n)\nplt.title('\uc2dc\uc7a5 \uc810\uc720\uc728', fontsize=14, fontweight='bold', pad=20)\nplt.ylabel('')  # y \ub808\uc774\ube14 \uc81c\uac70\nplt.show()\n\n# \ud2b9\uc815 \uc870\uac01 \uac15\uc870 (explode)\nexplode = (0.1, 0, 0, 0, 0)  # A\uc0ac \uac15\uc870\nmarket_share.set_index('\uae30\uc5c5')['\uc810\uc720\uc728'].plot(\n    kind='pie',\n    figsize=(8, 8),\n    autopct='%1.1f%%',\n    startangle=90,\n    explode=explode,\n    shadow=True,\n    colors=['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#96CEB4']\n)\nplt.title('\uc2dc\uc7a5 \uc810\uc720\uc728 (A\uc0ac \uac15\uc870)', fontsize=14, fontweight='bold', pad=20)\nplt.ylabel('')\nplt.show()\n\n# \ub3c4\ub11b \ucc28\ud2b8\nfig, ax = plt.subplots(figsize=(8, 8))\nwedges, texts, autotexts = ax.pie(\n    market_share['\uc810\uc720\uc728'],\n    labels=market_share['\uae30\uc5c5'],\n    autopct='%1.1f%%',\n    startangle=90,\n    colors=['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A', '#96CEB4'],\n    pctdistance=0.85\n)\n\n# \uc911\uc559\uc5d0 \uc6d0 \uadf8\ub9ac\uae30 (\ub3c4\ub11b \ud6a8\uacfc)\ncentre_circle = plt.Circle((0, 0), 0.70, fc='white')\nfig.gca().add_artist(centre_circle)\n\nplt.title('\uc2dc\uc7a5 \uc810\uc720\uc728 (\ub3c4\ub11b \ucc28\ud2b8)', fontsize=14, fontweight='bold', pad=20)\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"643-\uc601\uc5ed-\ucc28\ud2b8-area-chart",children:"6.4.3 \uc601\uc5ed \ucc28\ud2b8 (Area Chart)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc5d0\ub108\uc9c0 \uc18c\ube44 \ub370\uc774\ud130\ndates = pd.date_range('2024-01-01', periods=100)\nenergy_data = pd.DataFrame({\n    '\ud0dc\uc591\uad11': np.cumsum(np.random.randn(100) * 2) + 50,\n    '\ud48d\ub825': np.cumsum(np.random.randn(100) * 2) + 40,\n    '\uc218\ub825': np.cumsum(np.random.randn(100) * 2) + 30,\n    '\uc6d0\uc790\ub825': np.cumsum(np.random.randn(100) * 2) + 60\n}, index=dates)\n\n# \uae30\ubcf8 \uc601\uc5ed \ucc28\ud2b8\nenergy_data.plot(kind='area', figsize=(12, 6), alpha=0.4)\nplt.title('\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubc1c\uc804\ub7c9 \ucd94\uc774', fontsize=14, fontweight='bold')\nplt.ylabel('\ubc1c\uc804\ub7c9 (MWh)')\nplt.xlabel('\ub0a0\uc9dc')\nplt.legend(loc='upper left')\nplt.grid(True, alpha=0.3)\nplt.show()\n\n# \ub204\uc801 \uc601\uc5ed \ucc28\ud2b8 (\uae30\ubcf8\uac12)\nenergy_data.plot(kind='area', stacked=True, figsize=(12, 6), alpha=0.7,\n                 color=['#FFD93D', '#6BCB77', '#4D96FF', '#FF6B6B'])\nplt.title('\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ucd1d \ubc1c\uc804\ub7c9 (\ub204\uc801)', fontsize=14, fontweight='bold')\nplt.ylabel('\ubc1c\uc804\ub7c9 (MWh)')\nplt.xlabel('\ub0a0\uc9dc')\nplt.legend(loc='upper left')\nplt.show()\n\n# \ube44\ub204\uc801 \uc601\uc5ed \ucc28\ud2b8\nenergy_data.plot(kind='area', stacked=False, figsize=(12, 6), alpha=0.3)\nplt.title('\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubc1c\uc804\ub7c9 \ucd94\uc774 (\ube44\ub204\uc801)', fontsize=14, fontweight='bold')\nplt.ylabel('\ubc1c\uc804\ub7c9 (MWh)')\nplt.xlabel('\ub0a0\uc9dc')\nplt.legend(loc='upper left')\nplt.grid(True, alpha=0.3)\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"65-\uc11c\ube0c\ud50c\ub86f-subplots",children:"6.5 \uc11c\ube0c\ud50c\ub86f (Subplots)"}),"\n",(0,l.jsx)(e.p,{children:"\uc5ec\ub7ec \ucc28\ud2b8\ub97c \ud55c \ud654\uba74\uc5d0 \ubc30\uce58\ud558\uc5ec \ube44\uad50 \ubd84\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc885\ud569 \ub300\uc2dc\ubcf4\ub4dc \ub370\uc774\ud130\nnp.random.seed(42)\ndates = pd.date_range('2024-01-01', periods=365)\ndashboard_data = pd.DataFrame({\n    '\ub9e4\ucd9c': np.cumsum(np.random.randn(365)) * 10 + 1000,\n    '\ubc29\ubb38\uc790': np.random.poisson(500, 365),\n    '\uc804\ud658\uc728': np.random.beta(2, 5, 365) * 100,\n    '\uad11\uace0\ube44': np.random.gamma(2, 50, 365)\n}, index=dates)\n\n# 2x2 \uc11c\ube0c\ud50c\ub86f\nfig, axes = plt.subplots(2, 2, figsize=(15, 10))\nfig.suptitle('\ube44\uc988\ub2c8\uc2a4 \ub300\uc2dc\ubcf4\ub4dc', fontsize=16, fontweight='bold')\n\n# 1. \ub9e4\ucd9c \ucd94\uc774\ndashboard_data['\ub9e4\ucd9c'].plot(ax=axes[0, 0], color='#FF6B6B', linewidth=2)\naxes[0, 0].set_title('\uc77c\ubcc4 \ub9e4\ucd9c \ucd94\uc774', fontweight='bold')\naxes[0, 0].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[0, 0].grid(True, alpha=0.3)\n\n# 2. \ubc29\ubb38\uc790 \uc218\ndashboard_data['\ubc29\ubb38\uc790'].plot(ax=axes[0, 1], color='#4ECDC4', alpha=0.6)\naxes[0, 1].fill_between(dates, dashboard_data['\ubc29\ubb38\uc790'], alpha=0.3, color='#4ECDC4')\naxes[0, 1].set_title('\uc77c\ubcc4 \ubc29\ubb38\uc790 \uc218', fontweight='bold')\naxes[0, 1].set_ylabel('\ubc29\ubb38\uc790 \uc218')\naxes[0, 1].grid(True, alpha=0.3)\n\n# 3. \uc804\ud658\uc728 \ud788\uc2a4\ud1a0\uadf8\ub7a8\ndashboard_data['\uc804\ud658\uc728'].plot(kind='hist', ax=axes[1, 0], bins=30,\n                            color='#45B7D1', edgecolor='black')\naxes[1, 0].set_title('\uc804\ud658\uc728 \ubd84\ud3ec', fontweight='bold')\naxes[1, 0].set_xlabel('\uc804\ud658\uc728 (%)')\naxes[1, 0].set_ylabel('\ube48\ub3c4')\n\n# 4. \ub9e4\ucd9c vs \uad11\uace0\ube44 \uc0b0\uc810\ub3c4\naxes[1, 1].scatter(dashboard_data['\uad11\uace0\ube44'], dashboard_data['\ub9e4\ucd9c'],\n                   alpha=0.5, color='#FFA07A')\naxes[1, 1].set_title('\uad11\uace0\ube44 vs \ub9e4\ucd9c', fontweight='bold')\naxes[1, 1].set_xlabel('\uad11\uace0\ube44 (\ub9cc\uc6d0)')\naxes[1, 1].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[1, 1].grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"651-\uadf8\ub9ac\ub4dc-\ub808\uc774\uc544\uc6c3",children:"6.5.1 \uadf8\ub9ac\ub4dc \ub808\uc774\uc544\uc6c3"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ubcf5\uc7a1\ud55c \uadf8\ub9ac\ub4dc \ub808\uc774\uc544\uc6c3\nfig = plt.figure(figsize=(16, 10))\ngs = fig.add_gridspec(3, 3, hspace=0.3, wspace=0.3)\n\n# \ud070 \ucc28\ud2b8 (\uc0c1\ub2e8 \uc804\uccb4)\nax1 = fig.add_subplot(gs[0, :])\ndashboard_data[['\ub9e4\ucd9c', '\uad11\uace0\ube44']].plot(ax=ax1, linewidth=2)\nax1.set_title('\ub9e4\ucd9c \ubc0f \uad11\uace0\ube44 \ucd94\uc774', fontsize=12, fontweight='bold')\nax1.set_ylabel('\uae08\uc561 (\ub9cc\uc6d0)')\nax1.grid(True, alpha=0.3)\n\n# \uc911\uac04 3\uac1c \ucc28\ud2b8\nax2 = fig.add_subplot(gs[1, 0])\ndashboard_data['\ubc29\ubb38\uc790'].resample('W').mean().plot(ax=ax2, color='#4ECDC4')\nax2.set_title('\uc8fc\uac04 \ud3c9\uade0 \ubc29\ubb38\uc790', fontweight='bold')\nax2.set_ylabel('\ubc29\ubb38\uc790 \uc218')\n\nax3 = fig.add_subplot(gs[1, 1])\ndashboard_data['\uc804\ud658\uc728'].resample('W').mean().plot(ax=ax3, color='#45B7D1')\nax3.set_title('\uc8fc\uac04 \ud3c9\uade0 \uc804\ud658\uc728', fontweight='bold')\nax3.set_ylabel('\uc804\ud658\uc728 (%)')\n\nax4 = fig.add_subplot(gs[1, 2])\nmonthly_sales = dashboard_data['\ub9e4\ucd9c'].resample('M').sum()\nmonthly_sales.plot(kind='bar', ax=ax4, color='#FF6B6B')\nax4.set_title('\uc6d4\ubcc4 \ucd1d \ub9e4\ucd9c', fontweight='bold')\nax4.set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\nax4.tick_params(axis='x', rotation=45)\n\n# \ud558\ub2e8 2\uac1c \ucc28\ud2b8\nax5 = fig.add_subplot(gs[2, :2])\ndashboard_data[['\ubc29\ubb38\uc790', '\uc804\ud658\uc728']].plot(ax=ax5, secondary_y='\uc804\ud658\uc728')\nax5.set_title('\ubc29\ubb38\uc790 \ubc0f \uc804\ud658\uc728 \ube44\uad50', fontweight='bold')\nax5.set_ylabel('\ubc29\ubb38\uc790 \uc218')\nax5.right_ax.set_ylabel('\uc804\ud658\uc728 (%)')\n\nax6 = fig.add_subplot(gs[2, 2])\ndashboard_data[['\ub9e4\ucd9c', '\ubc29\ubb38\uc790', '\uc804\ud658\uc728', '\uad11\uace0\ube44']].corr()['\ub9e4\ucd9c'].plot(\n    kind='barh', ax=ax6, color='#FFA07A')\nax6.set_title('\ub9e4\ucd9c \uc0c1\uad00\uacc4\uc218', fontweight='bold')\nax6.set_xlabel('\uc0c1\uad00\uacc4\uc218')\n\nplt.suptitle('\uc885\ud569 \ube44\uc988\ub2c8\uc2a4 \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc', fontsize=16, fontweight='bold', y=0.995)\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"66-\uc2a4\ud0c0\uc77c\ub9c1-\ubc0f-\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5",children:"6.6 \uc2a4\ud0c0\uc77c\ub9c1 \ubc0f \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5"}),"\n",(0,l.jsx)(e.h3,{id:"661-\ud14c\ub9c8\uc640-\uc2a4\ud0c0\uc77c",children:"6.6.1 \ud14c\ub9c8\uc640 \uc2a4\ud0c0\uc77c"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc2a4\ud0c0\uc77c \ud655\uc778\nprint(\"\uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc2a4\ud0c0\uc77c:\", plt.style.available)\n\n# \ub2e4\uc591\ud55c \uc2a4\ud0c0\uc77c \ube44\uad50\nstyles = ['default', 'seaborn-v0_8', 'ggplot', 'bmh', 'fivethirtyeight']\nfig, axes = plt.subplots(2, 3, figsize=(18, 10))\naxes = axes.flatten()\n\nsample_data = pd.DataFrame({\n    'A': np.cumsum(np.random.randn(50)),\n    'B': np.cumsum(np.random.randn(50)),\n    'C': np.cumsum(np.random.randn(50))\n})\n\nfor idx, style in enumerate(styles):\n    with plt.style.context(style):\n        sample_data.plot(ax=axes[idx], title=f'\uc2a4\ud0c0\uc77c: {style}')\n        axes[idx].grid(True, alpha=0.3)\n\n# \ub9c8\uc9c0\ub9c9 \uc11c\ube0c\ud50c\ub86f \uc81c\uac70\nfig.delaxes(axes[-1])\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"662-\ucee4\uc2a4\ud140-\uc0c9\uc0c1-\ud314\ub808\ud2b8",children:"6.6.2 \ucee4\uc2a4\ud140 \uc0c9\uc0c1 \ud314\ub808\ud2b8"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ucee4\uc2a4\ud140 \uc0c9\uc0c1 \ud314\ub808\ud2b8 \uc815\uc758\ncustom_colors = {\n    'primary': '#FF6B6B',\n    'secondary': '#4ECDC4',\n    'accent': '#45B7D1',\n    'warning': '#FFA07A',\n    'success': '#96CEB4'\n}\n\n# \ub370\uc774\ud130 \uc900\ube44\ncategories = ['\uc81c\ud488A', '\uc81c\ud488B', '\uc81c\ud488C', '\uc81c\ud488D', '\uc81c\ud488E']\nvalues = pd.DataFrame({\n    'Q1': [120, 95, 150, 80, 110],\n    'Q2': [135, 105, 145, 95, 125],\n    'Q3': [150, 115, 160, 100, 130],\n    'Q4': [165, 125, 175, 110, 145]\n}, index=categories)\n\n# \ucee4\uc2a4\ud140 \uc0c9\uc0c1 \uc801\uc6a9\nfig, axes = plt.subplots(1, 2, figsize=(15, 6))\n\n# \uadf8\ub8f9\ud654\ub41c \ub9c9\ub300 \ucc28\ud2b8\nvalues.plot(kind='bar', ax=axes[0],\n            color=[custom_colors['primary'], custom_colors['secondary'],\n                   custom_colors['accent'], custom_colors['warning']])\naxes[0].set_title('\ubd84\uae30\ubcc4 \uc81c\ud488 \ud310\ub9e4\ub7c9', fontsize=14, fontweight='bold')\naxes[0].set_ylabel('\ud310\ub9e4\ub7c9')\naxes[0].set_xlabel('\uc81c\ud488')\naxes[0].legend(title='\ubd84\uae30')\naxes[0].grid(True, alpha=0.3, axis='y')\n\n# \ub204\uc801 \uc601\uc5ed \ucc28\ud2b8\nvalues.T.plot(kind='area', ax=axes[1], alpha=0.7,\n              color=list(custom_colors.values()))\naxes[1].set_title('\ubd84\uae30\ubcc4 \ub204\uc801 \ud310\ub9e4\ub7c9', fontsize=14, fontweight='bold')\naxes[1].set_ylabel('\ud310\ub9e4\ub7c9')\naxes[1].set_xlabel('\ubd84\uae30')\naxes[1].legend(title='\uc81c\ud488', loc='upper left')\naxes[1].grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"663-\ud3f0\ud2b8-\ubc0f-\ud14d\uc2a4\ud2b8-\uc2a4\ud0c0\uc77c\ub9c1",children:"6.6.3 \ud3f0\ud2b8 \ubc0f \ud14d\uc2a4\ud2b8 \uc2a4\ud0c0\uc77c\ub9c1"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ud55c\uae00 \ud3f0\ud2b8 \uc124\uc815 (Windows \uae30\uc900)\nplt.rcParams['font.family'] = 'Malgun Gothic'  # \ub9d1\uc740 \uace0\ub515\nplt.rcParams['axes.unicode_minus'] = False  # \ub9c8\uc774\ub108\uc2a4 \uae30\ud638 \uae68\uc9d0 \ubc29\uc9c0\n\n# \uc804\uc5ed \uc2a4\ud0c0\uc77c \uc124\uc815\nplt.rcParams['figure.figsize'] = (12, 6)\nplt.rcParams['font.size'] = 10\nplt.rcParams['axes.labelsize'] = 12\nplt.rcParams['axes.titlesize'] = 14\nplt.rcParams['xtick.labelsize'] = 10\nplt.rcParams['ytick.labelsize'] = 10\nplt.rcParams['legend.fontsize'] = 10\nplt.rcParams['lines.linewidth'] = 2\n\n# \uc608\uc81c \ucc28\ud2b8\nfig, ax = plt.subplots()\nsample_data.plot(ax=ax)\n\n# \uc81c\ubaa9 \ubc0f \ub808\uc774\ube14 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\nax.set_title('\ud55c\uae00 \ud3f0\ud2b8 \uc801\uc6a9 \uc608\uc81c',\n             fontsize=16,\n             fontweight='bold',\n             pad=20,\n             fontdict={'family': 'Malgun Gothic'})\n\nax.set_xlabel('\uc778\ub371\uc2a4', fontsize=12, fontweight='bold')\nax.set_ylabel('\uac12', fontsize=12, fontweight='bold')\n\n# \ubc94\ub840 \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\nax.legend(['\ub370\uc774\ud130 A', '\ub370\uc774\ud130 B', '\ub370\uc774\ud130 C'],\n          loc='upper left',\n          frameon=True,\n          shadow=True,\n          fancybox=True)\n\n# \uadf8\ub9ac\ub4dc \uc2a4\ud0c0\uc77c\nax.grid(True, linestyle='--', alpha=0.5, color='gray')\n\n# \ubc30\uacbd\uc0c9\nax.set_facecolor('#F8F9FA')\nfig.patch.set_facecolor('white')\n\nplt.tight_layout()\nplt.show()\n\n# \uc124\uc815 \ucd08\uae30\ud654\nplt.rcParams.update(plt.rcParamsDefault)\n"})}),"\n",(0,l.jsx)(e.h2,{id:"67-\uc778\ud130\ub799\ud2f0\ube0c-\uc2dc\uac01\ud654-plotly",children:"6.7 \uc778\ud130\ub799\ud2f0\ube0c \uc2dc\uac01\ud654 (Plotly)"}),"\n",(0,l.jsx)(e.p,{children:"Plotly\ub97c \uc0ac\uc6a9\ud558\uba74 \uc778\ud130\ub799\ud2f0\ube0c\ud55c \ucc28\ud2b8\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"import plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\n# \uc0d8\ud50c \ub370\uc774\ud130\ndf_plotly = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=100),\n    '\ub9e4\ucd9c': np.cumsum(np.random.randn(100)) * 10 + 1000,\n    '\ubc29\ubb38\uc790': np.random.poisson(500, 100),\n    '\uc804\ud658\uc728': np.random.beta(2, 5, 100) * 100,\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\ubd80\uc0b0', '\ub300\uad6c'], 100)\n})\n\n# 1. \uae30\ubcf8 \ub77c\uc778 \ucc28\ud2b8\nfig = px.line(df_plotly, x='\ub0a0\uc9dc', y='\ub9e4\ucd9c',\n              title='\uc77c\ubcc4 \ub9e4\ucd9c \ucd94\uc774',\n              labels={'\ub9e4\ucd9c': '\ub9e4\ucd9c (\ub9cc\uc6d0)', '\ub0a0\uc9dc': '\ub0a0\uc9dc'})\nfig.update_traces(line_color='#FF6B6B', line_width=3)\nfig.update_layout(hovermode='x unified')\nfig.show()\n\n# 2. \ub2e4\uc911 \ub77c\uc778 \ucc28\ud2b8\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=df_plotly['\ub0a0\uc9dc'], y=df_plotly['\ub9e4\ucd9c'],\n                         mode='lines', name='\ub9e4\ucd9c',\n                         line=dict(color='#FF6B6B', width=2)))\nfig.add_trace(go.Scatter(x=df_plotly['\ub0a0\uc9dc'], y=df_plotly['\ubc29\ubb38\uc790'],\n                         mode='lines', name='\ubc29\ubb38\uc790',\n                         line=dict(color='#4ECDC4', width=2),\n                         yaxis='y2'))\n\nfig.update_layout(\n    title='\ub9e4\ucd9c \ubc0f \ubc29\ubb38\uc790 \ucd94\uc774',\n    xaxis=dict(title='\ub0a0\uc9dc'),\n    yaxis=dict(title='\ub9e4\ucd9c (\ub9cc\uc6d0)', side='left'),\n    yaxis2=dict(title='\ubc29\ubb38\uc790 \uc218', side='right', overlaying='y'),\n    hovermode='x unified',\n    height=500\n)\nfig.show()\n\n# 3. \uc778\ud130\ub799\ud2f0\ube0c \uc0b0\uc810\ub3c4\nfig = px.scatter(df_plotly, x='\ubc29\ubb38\uc790', y='\ub9e4\ucd9c', color='\uc9c0\uc5ed',\n                 size='\uc804\ud658\uc728', hover_data=['\ub0a0\uc9dc', '\uc804\ud658\uc728'],\n                 title='\ubc29\ubb38\uc790 vs \ub9e4\ucd9c (\uc9c0\uc5ed\ubcc4)',\n                 labels={'\ubc29\ubb38\uc790': '\ubc29\ubb38\uc790 \uc218', '\ub9e4\ucd9c': '\ub9e4\ucd9c (\ub9cc\uc6d0)'})\nfig.update_traces(marker=dict(line=dict(width=1, color='white')))\nfig.show()\n\n# 4. \ubc15\uc2a4 \ud50c\ub86f\nfig = px.box(df_plotly, x='\uc9c0\uc5ed', y='\ub9e4\ucd9c', color='\uc9c0\uc5ed',\n             title='\uc9c0\uc5ed\ubcc4 \ub9e4\ucd9c \ubd84\ud3ec',\n             labels={'\ub9e4\ucd9c': '\ub9e4\ucd9c (\ub9cc\uc6d0)'})\nfig.update_traces(marker=dict(line=dict(width=1)))\nfig.show()\n\n# 5. \ud788\uc2a4\ud1a0\uadf8\ub7a8\nfig = px.histogram(df_plotly, x='\uc804\ud658\uc728', nbins=30,\n                   title='\uc804\ud658\uc728 \ubd84\ud3ec',\n                   labels={'\uc804\ud658\uc728': '\uc804\ud658\uc728 (%)'},\n                   color_discrete_sequence=['#45B7D1'])\nfig.update_layout(bargap=0.1)\nfig.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"671-\ubcf5\ud569-\uc778\ud130\ub799\ud2f0\ube0c-\ub300\uc2dc\ubcf4\ub4dc",children:"6.7.1 \ubcf5\ud569 \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc11c\ube0c\ud50c\ub86f\uc744 \ud65c\uc6a9\ud55c \ub300\uc2dc\ubcf4\ub4dc\nfig = make_subplots(\n    rows=2, cols=2,\n    subplot_titles=('\ub9e4\ucd9c \ucd94\uc774', '\uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c', '\uc804\ud658\uc728 \ubd84\ud3ec', '\ubc29\ubb38\uc790 vs \ub9e4\ucd9c'),\n    specs=[[{'type': 'scatter'}, {'type': 'bar'}],\n           [{'type': 'histogram'}, {'type': 'scatter'}]]\n)\n\n# 1. \ub9e4\ucd9c \ucd94\uc774 (\ub77c\uc778)\nfig.add_trace(\n    go.Scatter(x=df_plotly['\ub0a0\uc9dc'], y=df_plotly['\ub9e4\ucd9c'],\n               mode='lines', name='\ub9e4\ucd9c',\n               line=dict(color='#FF6B6B', width=2)),\n    row=1, col=1\n)\n\n# 2. \uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c (\ub9c9\ub300)\nregion_avg = df_plotly.groupby('\uc9c0\uc5ed')['\ub9e4\ucd9c'].mean().reset_index()\nfig.add_trace(\n    go.Bar(x=region_avg['\uc9c0\uc5ed'], y=region_avg['\ub9e4\ucd9c'],\n           name='\ud3c9\uade0 \ub9e4\ucd9c',\n           marker_color=['#FF6B6B', '#4ECDC4', '#45B7D1']),\n    row=1, col=2\n)\n\n# 3. \uc804\ud658\uc728 \ubd84\ud3ec (\ud788\uc2a4\ud1a0\uadf8\ub7a8)\nfig.add_trace(\n    go.Histogram(x=df_plotly['\uc804\ud658\uc728'], nbinsx=30,\n                 name='\uc804\ud658\uc728',\n                 marker_color='#FFA07A'),\n    row=2, col=1\n)\n\n# 4. \ubc29\ubb38\uc790 vs \ub9e4\ucd9c (\uc0b0\uc810\ub3c4)\nfig.add_trace(\n    go.Scatter(x=df_plotly['\ubc29\ubb38\uc790'], y=df_plotly['\ub9e4\ucd9c'],\n               mode='markers', name='\ub370\uc774\ud130',\n               marker=dict(size=8, color='#96CEB4', opacity=0.6)),\n    row=2, col=2\n)\n\n# \ub808\uc774\uc544\uc6c3 \uc5c5\ub370\uc774\ud2b8\nfig.update_layout(\n    title_text='\ube44\uc988\ub2c8\uc2a4 \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc',\n    showlegend=False,\n    height=700\n)\n\nfig.update_xaxes(title_text='\ub0a0\uc9dc', row=1, col=1)\nfig.update_xaxes(title_text='\uc9c0\uc5ed', row=1, col=2)\nfig.update_xaxes(title_text='\uc804\ud658\uc728 (%)', row=2, col=1)\nfig.update_xaxes(title_text='\ubc29\ubb38\uc790 \uc218', row=2, col=2)\n\nfig.update_yaxes(title_text='\ub9e4\ucd9c (\ub9cc\uc6d0)', row=1, col=1)\nfig.update_yaxes(title_text='\ub9e4\ucd9c (\ub9cc\uc6d0)', row=1, col=2)\nfig.update_yaxes(title_text='\ube48\ub3c4', row=2, col=1)\nfig.update_yaxes(title_text='\ub9e4\ucd9c (\ub9cc\uc6d0)', row=2, col=2)\n\nfig.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"68-\uc2dc\uacc4\uc5f4-\uc2dc\uac01\ud654",children:"6.8 \uc2dc\uacc4\uc5f4 \uc2dc\uac01\ud654"}),"\n",(0,l.jsx)(e.p,{children:"\uc2dc\uacc4\uc5f4 \ub370\uc774\ud130\uc758 \ud2b9\uc131\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ud45c\ud604\ud558\ub294 \ubc29\ubc95\ub4e4\uc785\ub2c8\ub2e4."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130 \uc0dd\uc131\nnp.random.seed(42)\ndates = pd.date_range('2023-01-01', '2024-12-31', freq='D')\nts_data = pd.DataFrame({\n    '\ub9e4\ucd9c': np.cumsum(np.random.randn(len(dates))) * 5 + 1000,\n    '\ube44\uc6a9': np.cumsum(np.random.randn(len(dates))) * 4 + 800,\n}, index=dates)\n\n# \ucd94\uc138\uc120 \ucd94\uac00\nts_data['\uc774\uc775'] = ts_data['\ub9e4\ucd9c'] - ts_data['\ube44\uc6a9']\nts_data['\ub9e4\ucd9c_\uc774\ub3d9\ud3c9\uade0_7\uc77c'] = ts_data['\ub9e4\ucd9c'].rolling(window=7).mean()\nts_data['\ub9e4\ucd9c_\uc774\ub3d9\ud3c9\uade0_30\uc77c'] = ts_data['\ub9e4\ucd9c'].rolling(window=30).mean()\n\n# 1. \uae30\ubcf8 \uc2dc\uacc4\uc5f4 \ucc28\ud2b8\nfig, ax = plt.subplots(figsize=(14, 6))\nts_data['\ub9e4\ucd9c'].plot(ax=ax, alpha=0.5, label='\uc77c\ubcc4 \ub9e4\ucd9c', color='lightblue')\nts_data['\ub9e4\ucd9c_\uc774\ub3d9\ud3c9\uade0_7\uc77c'].plot(ax=ax, label='7\uc77c \uc774\ub3d9\ud3c9\uade0', color='blue', linewidth=2)\nts_data['\ub9e4\ucd9c_\uc774\ub3d9\ud3c9\uade0_30\uc77c'].plot(ax=ax, label='30\uc77c \uc774\ub3d9\ud3c9\uade0', color='darkblue', linewidth=2)\nax.set_title('\ub9e4\ucd9c \ucd94\uc774 \ubc0f \uc774\ub3d9\ud3c9\uade0', fontsize=14, fontweight='bold')\nax.set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\nax.legend(loc='upper left')\nax.grid(True, alpha=0.3)\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"681-\uacc4\uc808\uc131-\ubd84\uc11d",children:"6.8.1 \uacc4\uc808\uc131 \ubd84\uc11d"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc6d4\ubcc4 \uc9d1\uacc4\nmonthly_data = ts_data.resample('M').mean()\nquarterly_data = ts_data.resample('Q').sum()\n\nfig, axes = plt.subplots(2, 2, figsize=(16, 10))\nfig.suptitle('\uc2dc\uacc4\uc5f4 \ub2e4\uba74 \ubd84\uc11d', fontsize=16, fontweight='bold')\n\n# 1. \uc77c\ubcc4 \ub370\uc774\ud130\nts_data[['\ub9e4\ucd9c', '\ube44\uc6a9', '\uc774\uc775']].plot(ax=axes[0, 0], alpha=0.7)\naxes[0, 0].set_title('\uc77c\ubcc4 \uc7ac\ubb34 \ub370\uc774\ud130', fontweight='bold')\naxes[0, 0].set_ylabel('\uae08\uc561 (\ub9cc\uc6d0)')\naxes[0, 0].grid(True, alpha=0.3)\n\n# 2. \uc6d4\ubcc4 \ud3c9\uade0\nmonthly_data[['\ub9e4\ucd9c', '\ube44\uc6a9']].plot(kind='bar', ax=axes[0, 1])\naxes[0, 1].set_title('\uc6d4\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c \ubc0f \ube44\uc6a9', fontweight='bold')\naxes[0, 1].set_ylabel('\uae08\uc561 (\ub9cc\uc6d0)')\naxes[0, 1].tick_params(axis='x', rotation=45)\naxes[0, 1].grid(True, alpha=0.3, axis='y')\n\n# 3. \ubd84\uae30\ubcc4 \ucd1d\ud569\nquarterly_data.plot(kind='area', ax=axes[1, 0], alpha=0.6)\naxes[1, 0].set_title('\ubd84\uae30\ubcc4 \ucd1d \ub9e4\ucd9c \ubc0f \ube44\uc6a9', fontweight='bold')\naxes[1, 0].set_ylabel('\uae08\uc561 (\ub9cc\uc6d0)')\naxes[1, 0].grid(True, alpha=0.3)\n\n# 4. \uc6d4\ubcc4 \ubc15\uc2a4 \ud50c\ub86f (\uacc4\uc808\uc131 \ud655\uc778)\nts_data['\uc6d4'] = ts_data.index.month\nmonthly_box = ts_data.pivot_table(values='\ub9e4\ucd9c', index=ts_data.index.date, columns='\uc6d4')\nmonthly_box.plot(kind='box', ax=axes[1, 1])\naxes[1, 1].set_title('\uc6d4\ubcc4 \ub9e4\ucd9c \ubd84\ud3ec (\uacc4\uc808\uc131)', fontweight='bold')\naxes[1, 1].set_xlabel('\uc6d4')\naxes[1, 1].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\n\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"682-\ucd94\uc138-\ubc0f-\ud328\ud134-\uc2dc\uac01\ud654",children:"6.8.2 \ucd94\uc138 \ubc0f \ud328\ud134 \uc2dc\uac01\ud654"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"from scipy import stats\n\n# \uc120\ud615 \ud68c\uadc0\ub97c \ud1b5\ud55c \ucd94\uc138\uc120\nx = np.arange(len(ts_data))\nslope, intercept, r_value, p_value, std_err = stats.linregress(x, ts_data['\ub9e4\ucd9c'])\ntrend_line = slope * x + intercept\n\nfig, axes = plt.subplots(2, 1, figsize=(14, 10))\n\n# 1. \ucd94\uc138\uc120\uacfc \uc2e0\ub8b0\uad6c\uac04\naxes[0].plot(ts_data.index, ts_data['\ub9e4\ucd9c'], alpha=0.3, label='\uc2e4\uc81c \ub9e4\ucd9c')\naxes[0].plot(ts_data.index, trend_line, 'r--', linewidth=2, label='\ucd94\uc138\uc120')\n\n# \uc2e0\ub8b0\uad6c\uac04 \uacc4\uc0b0\nresiduals = ts_data['\ub9e4\ucd9c'] - trend_line\nstd_residuals = np.std(residuals)\naxes[0].fill_between(ts_data.index,\n                      trend_line - 2*std_residuals,\n                      trend_line + 2*std_residuals,\n                      alpha=0.2, color='red', label='95% \uc2e0\ub8b0\uad6c\uac04')\n\naxes[0].set_title(f'\ub9e4\ucd9c \ucd94\uc138 \ubd84\uc11d (R\xb2 = {r_value**2:.4f})', fontweight='bold', fontsize=12)\naxes[0].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[0].legend()\naxes[0].grid(True, alpha=0.3)\n\n# 2. \uc794\ucc28 \ud50c\ub86f\naxes[1].scatter(ts_data.index, residuals, alpha=0.3, s=10)\naxes[1].axhline(y=0, color='r', linestyle='--', linewidth=2)\naxes[1].axhline(y=2*std_residuals, color='orange', linestyle=':', linewidth=1, label='\xb12\u03c3')\naxes[1].axhline(y=-2*std_residuals, color='orange', linestyle=':', linewidth=1)\naxes[1].set_title('\uc794\ucc28 \ubd84\uc11d', fontweight='bold', fontsize=12)\naxes[1].set_ylabel('\uc794\ucc28')\naxes[1].set_xlabel('\ub0a0\uc9dc')\naxes[1].legend()\naxes[1].grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"69-\uc2e4\uc804-\uc608\uc81c-\ub300\uc2dc\ubcf4\ub4dc\uae09-\ucc28\ud2b8",children:"6.9 \uc2e4\uc804 \uc608\uc81c: \ub300\uc2dc\ubcf4\ub4dc\uae09 \ucc28\ud2b8"}),"\n",(0,l.jsx)(e.p,{children:"\uc2e4\ubb34\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uae09 \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uc5b4\ubd05\uc2dc\ub2e4."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc2e4\uc804 \ub370\uc774\ud130 \uc0dd\uc131\nnp.random.seed(42)\ndates = pd.date_range('2024-01-01', periods=365)\n\nreal_data = pd.DataFrame({\n    '\ub0a0\uc9dc': dates,\n    '\ub9e4\ucd9c': np.cumsum(np.random.randn(365)) * 20 + 5000,\n    '\uc2e0\uaddc\uace0\uac1d': np.random.poisson(50, 365),\n    '\uc7ac\ubc29\ubb38\uace0\uac1d': np.random.poisson(150, 365),\n    '\uc804\ud658\uc728': np.random.beta(8, 2, 365) * 10,\n    '\ud3c9\uade0\uad6c\ub9e4\uc561': np.random.gamma(2, 30, 365) + 50,\n    '\uad11\uace0\ube44': np.random.gamma(3, 20, 365),\n    '\uce74\ud14c\uace0\ub9ac': np.random.choice(['\uc804\uc790\uc81c\ud488', '\uc758\ub958', '\uc2dd\ud488', '\ub3c4\uc11c'], 365),\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\uacbd\uae30', '\ubd80\uc0b0', '\uae30\ud0c0'], 365)\n}).set_index('\ub0a0\uc9dc')\n\n# \ud30c\uc0dd \ubcc0\uc218 \uc0dd\uc131\nreal_data['\ucd1d\ubc29\ubb38\uc790'] = real_data['\uc2e0\uaddc\uace0\uac1d'] + real_data['\uc7ac\ubc29\ubb38\uace0\uac1d']\nreal_data['ROI'] = (real_data['\ub9e4\ucd9c'] / real_data['\uad11\uace0\ube44']) * 100\nreal_data['\uc774\uc775'] = real_data['\ub9e4\ucd9c'] - real_data['\uad11\uace0\ube44']\n"})}),"\n",(0,l.jsx)(e.h3,{id:"691-\uacbd\uc601\uc9c4-\ub9ac\ud3ec\ud2b8-\ub300\uc2dc\ubcf4\ub4dc",children:"6.9.1 \uacbd\uc601\uc9c4 \ub9ac\ud3ec\ud2b8 \ub300\uc2dc\ubcf4\ub4dc"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \uc885\ud569 \ub300\uc2dc\ubcf4\ub4dc \uc0dd\uc131\nfig = plt.figure(figsize=(20, 12))\ngs = fig.add_gridspec(4, 4, hspace=0.4, wspace=0.4)\n\n# \uc0c1\ub2e8 KPI \uce74\ub4dc\nkpi_data = {\n    '\ucd1d \ub9e4\ucd9c': f\"{real_data['\ub9e4\ucd9c'].sum():,.0f}\ub9cc\uc6d0\",\n    '\ud3c9\uade0 \uc77c\ub9e4\ucd9c': f\"{real_data['\ub9e4\ucd9c'].mean():,.0f}\ub9cc\uc6d0\",\n    '\ucd1d \ubc29\ubb38\uc790': f\"{real_data['\ucd1d\ubc29\ubb38\uc790'].sum():,}\uba85\",\n    '\ud3c9\uade0 \uc804\ud658\uc728': f\"{real_data['\uc804\ud658\uc728'].mean():.2f}%\"\n}\n\n# 1. \ub9e4\ucd9c \ucd94\uc774 (\uc0c1\ub2e8 \uc804\uccb4)\nax1 = fig.add_subplot(gs[0, :])\nreal_data['\ub9e4\ucd9c'].plot(ax=ax1, color='#2E86AB', linewidth=2)\nmonthly_sales = real_data['\ub9e4\ucd9c'].resample('M').sum()\nax1.bar(monthly_sales.index, monthly_sales.values, alpha=0.3, color='#A23B72', width=25)\nax1.set_title('\uc77c\ubcc4 \ub9e4\ucd9c \ucd94\uc774 \ubc0f \uc6d4\uac04 \uc9d1\uacc4', fontsize=14, fontweight='bold', pad=20)\nax1.set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)', fontsize=11)\nax1.grid(True, alpha=0.3, linestyle='--')\nax1.legend(['\uc77c\ubcc4 \ub9e4\ucd9c', '\uc6d4\uac04 \ucd1d\ub9e4\ucd9c'], loc='upper left')\n\n# KPI \ud14d\uc2a4\ud2b8 \ucd94\uac00\nkpi_text = ' | '.join([f\"{k}: {v}\" for k, v in kpi_data.items()])\nax1.text(0.5, 1.08, kpi_text, transform=ax1.transAxes,\n         ha='center', fontsize=11, fontweight='bold',\n         bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\n# 2. \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c (\ud30c\uc774 \ucc28\ud2b8)\nax2 = fig.add_subplot(gs[1, 0])\ncategory_sales = real_data.groupby('\uce74\ud14c\uace0\ub9ac')['\ub9e4\ucd9c'].sum()\ncolors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A']\nwedges, texts, autotexts = ax2.pie(category_sales.values, labels=category_sales.index,\n                                     autopct='%1.1f%%', colors=colors, startangle=90)\nax2.set_title('\uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c \ube44\uc911', fontweight='bold', pad=10)\nfor autotext in autotexts:\n    autotext.set_color('white')\n    autotext.set_fontweight('bold')\n\n# 3. \uc9c0\uc5ed\ubcc4 \ub9e4\ucd9c (\ub9c9\ub300 \ucc28\ud2b8)\nax3 = fig.add_subplot(gs[1, 1])\nregion_sales = real_data.groupby('\uc9c0\uc5ed')['\ub9e4\ucd9c'].sum().sort_values(ascending=True)\nregion_sales.plot(kind='barh', ax=ax3, color='#96CEB4')\nax3.set_title('\uc9c0\uc5ed\ubcc4 \ucd1d \ub9e4\ucd9c', fontweight='bold', pad=10)\nax3.set_xlabel('\ub9e4\ucd9c (\ub9cc\uc6d0)', fontsize=10)\nfor i, v in enumerate(region_sales.values):\n    ax3.text(v, i, f' {v:,.0f}', va='center', fontsize=9)\n\n# 4. \ubc29\ubb38\uc790 \ucd94\uc774 (\uc601\uc5ed \ucc28\ud2b8)\nax4 = fig.add_subplot(gs[1, 2:])\nvisitor_weekly = real_data[['\uc2e0\uaddc\uace0\uac1d', '\uc7ac\ubc29\ubb38\uace0\uac1d']].resample('W').sum()\nvisitor_weekly.plot(kind='area', ax=ax4, alpha=0.6, color=['#FF6B6B', '#4ECDC4'])\nax4.set_title('\uc8fc\uac04 \uc2e0\uaddc/\uc7ac\ubc29\ubb38 \uace0\uac1d \ucd94\uc774', fontweight='bold', pad=10)\nax4.set_ylabel('\ubc29\ubb38\uc790 \uc218', fontsize=10)\nax4.legend(['\uc2e0\uaddc\uace0\uac1d', '\uc7ac\ubc29\ubb38\uace0\uac1d'], loc='upper left')\nax4.grid(True, alpha=0.3, axis='y')\n\n# 5. \uc804\ud658\uc728 \ubd84\ud3ec (\ud788\uc2a4\ud1a0\uadf8\ub7a8 + KDE)\nax5 = fig.add_subplot(gs[2, 0])\nreal_data['\uc804\ud658\uc728'].plot(kind='hist', bins=30, ax=ax5, alpha=0.6,\n                        color='#45B7D1', edgecolor='black')\nax5_twin = ax5.twinx()\nreal_data['\uc804\ud658\uc728'].plot(kind='kde', ax=ax5_twin, color='red', linewidth=2)\nax5.set_title('\uc804\ud658\uc728 \ubd84\ud3ec', fontweight='bold', pad=10)\nax5.set_xlabel('\uc804\ud658\uc728 (%)', fontsize=10)\nax5.set_ylabel('\ube48\ub3c4', fontsize=10)\nax5_twin.set_ylabel('\ubc00\ub3c4', fontsize=10)\nax5_twin.grid(False)\n\n# 6. \uad11\uace0\ube44 vs ROI (\uc0b0\uc810\ub3c4)\nax6 = fig.add_subplot(gs[2, 1])\nscatter = ax6.scatter(real_data['\uad11\uace0\ube44'], real_data['ROI'],\n                      c=real_data['\ub9e4\ucd9c'], cmap='YlOrRd',\n                      alpha=0.6, s=50, edgecolors='black', linewidth=0.5)\nax6.set_title('\uad11\uace0\ube44 vs ROI', fontweight='bold', pad=10)\nax6.set_xlabel('\uad11\uace0\ube44 (\ub9cc\uc6d0)', fontsize=10)\nax6.set_ylabel('ROI (%)', fontsize=10)\nax6.grid(True, alpha=0.3)\nplt.colorbar(scatter, ax=ax6, label='\ub9e4\ucd9c (\ub9cc\uc6d0)')\n\n# 7. \uc6d4\ubcc4 \ud3c9\uade0 \uad6c\ub9e4\uc561 (\ub77c\uc778 + \ub9c9\ub300)\nax7 = fig.add_subplot(gs[2, 2:])\nmonthly_avg = real_data.resample('M').agg({\n    '\ud3c9\uade0\uad6c\ub9e4\uc561': 'mean',\n    '\ucd1d\ubc29\ubb38\uc790': 'sum'\n})\nax7.plot(monthly_avg.index, monthly_avg['\ud3c9\uade0\uad6c\ub9e4\uc561'],\n         marker='o', linewidth=2, color='#2E86AB', label='\ud3c9\uade0 \uad6c\ub9e4\uc561')\nax7_twin = ax7.twinx()\nax7_twin.bar(monthly_avg.index, monthly_avg['\ucd1d\ubc29\ubb38\uc790'],\n             alpha=0.3, color='#A23B72', width=20, label='\ucd1d \ubc29\ubb38\uc790')\nax7.set_title('\uc6d4\ubcc4 \ud3c9\uade0 \uad6c\ub9e4\uc561 \ubc0f \ucd1d \ubc29\ubb38\uc790', fontweight='bold', pad=10)\nax7.set_ylabel('\ud3c9\uade0 \uad6c\ub9e4\uc561 (\uc6d0)', fontsize=10, color='#2E86AB')\nax7_twin.set_ylabel('\ucd1d \ubc29\ubb38\uc790 (\uba85)', fontsize=10, color='#A23B72')\nax7.tick_params(axis='y', labelcolor='#2E86AB')\nax7_twin.tick_params(axis='y', labelcolor='#A23B72')\nax7.legend(loc='upper left')\nax7_twin.legend(loc='upper right')\nax7.grid(True, alpha=0.3)\n\n# 8. \uc77c\ubcc4 \uc774\uc775 \ud788\ud2b8\ub9f5\nax8 = fig.add_subplot(gs[3, :2])\n# \uc694\uc77c\ubcc4, \uc8fc\ucc28\ubcc4 \uc774\uc775 \ud53c\ubc97\nreal_data['\uc694\uc77c'] = real_data.index.dayofweek\nreal_data['\uc8fc\ucc28'] = real_data.index.isocalendar().week\npivot_profit = real_data.pivot_table(values='\uc774\uc775', index='\uc694\uc77c', columns='\uc8fc\ucc28', aggfunc='mean')\nim = ax8.imshow(pivot_profit.values, cmap='RdYlGn', aspect='auto')\nax8.set_yticks(range(7))\nax8.set_yticklabels(['\uc6d4', '\ud654', '\uc218', '\ubaa9', '\uae08', '\ud1a0', '\uc77c'])\nax8.set_xlabel('\uc8fc\ucc28', fontsize=10)\nax8.set_title('\uc694\uc77c\ubcc4/\uc8fc\ucc28\ubcc4 \ud3c9\uade0 \uc774\uc775 \ud788\ud2b8\ub9f5', fontweight='bold', pad=10)\nplt.colorbar(im, ax=ax8, label='\ud3c9\uade0 \uc774\uc775 (\ub9cc\uc6d0)')\n\n# 9. \uce74\ud14c\uace0\ub9ac\ubcc4 \uc804\ud658\uc728 \ubc15\uc2a4\ud50c\ub86f\nax9 = fig.add_subplot(gs[3, 2:])\ncategory_conversion = [real_data[real_data['\uce74\ud14c\uace0\ub9ac'] == cat]['\uc804\ud658\uc728'].values\n                       for cat in real_data['\uce74\ud14c\uace0\ub9ac'].unique()]\nbp = ax9.boxplot(category_conversion, labels=real_data['\uce74\ud14c\uace0\ub9ac'].unique(),\n                 patch_artist=True, notch=True)\nfor patch, color in zip(bp['boxes'], colors):\n    patch.set_facecolor(color)\n    patch.set_alpha(0.6)\nax9.set_title('\uce74\ud14c\uace0\ub9ac\ubcc4 \uc804\ud658\uc728 \ubd84\ud3ec', fontweight='bold', pad=10)\nax9.set_ylabel('\uc804\ud658\uc728 (%)', fontsize=10)\nax9.grid(True, alpha=0.3, axis='y')\n\n# \uc804\uccb4 \uc81c\ubaa9\nfig.suptitle('2024\ub144 E-Commerce \ube44\uc988\ub2c8\uc2a4 \uc885\ud569 \ub300\uc2dc\ubcf4\ub4dc',\n             fontsize=18, fontweight='bold', y=0.995)\n\nplt.show()\n"})}),"\n",(0,l.jsx)(e.h3,{id:"692-\ub9c8\ucf00\ud305-\ubd84\uc11d-\ub300\uc2dc\ubcf4\ub4dc-plotly",children:"6.9.2 \ub9c8\ucf00\ud305 \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc (Plotly)"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# Plotly \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\n# \uc11c\ube0c\ud50c\ub86f \uc0dd\uc131\nfig = make_subplots(\n    rows=3, cols=2,\n    subplot_titles=('\ub9e4\ucd9c \ubc0f \uad11\uace0\ube44 \ucd94\uc774', '\uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c',\n                    '\uc9c0\uc5ed\ubcc4 \ubc29\ubb38\uc790', 'ROI \ubd84\ud3ec',\n                    '\uc804\ud658\uc728 vs \ud3c9\uade0\uad6c\ub9e4\uc561', '\uc6d4\ubcc4 \uc774\uc775 \ucd94\uc138'),\n    specs=[[{'type': 'scatter'}, {'type': 'bar'}],\n           [{'type': 'bar'}, {'type': 'histogram'}],\n           [{'type': 'scatter'}, {'type': 'scatter'}]],\n    vertical_spacing=0.12,\n    horizontal_spacing=0.15\n)\n\n# 1. \ub9e4\ucd9c \ubc0f \uad11\uace0\ube44 \ucd94\uc774\nfig.add_trace(\n    go.Scatter(x=real_data.index, y=real_data['\ub9e4\ucd9c'],\n               mode='lines', name='\ub9e4\ucd9c',\n               line=dict(color='#2E86AB', width=2)),\n    row=1, col=1\n)\nfig.add_trace(\n    go.Scatter(x=real_data.index, y=real_data['\uad11\uace0\ube44'],\n               mode='lines', name='\uad11\uace0\ube44',\n               line=dict(color='#FF6B6B', width=2, dash='dash')),\n    row=1, col=1\n)\n\n# 2. \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c\ncategory_sales = real_data.groupby('\uce74\ud14c\uace0\ub9ac')['\ub9e4\ucd9c'].sum().sort_values(ascending=True)\nfig.add_trace(\n    go.Bar(x=category_sales.values, y=category_sales.index,\n           orientation='h', name='\uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c',\n           marker_color=['#FF6B6B', '#4ECDC4', '#45B7D1', '#FFA07A']),\n    row=1, col=2\n)\n\n# 3. \uc9c0\uc5ed\ubcc4 \ubc29\ubb38\uc790\nregion_visitors = real_data.groupby('\uc9c0\uc5ed')['\ucd1d\ubc29\ubb38\uc790'].sum().sort_values(ascending=False)\nfig.add_trace(\n    go.Bar(x=region_visitors.index, y=region_visitors.values,\n           name='\uc9c0\uc5ed\ubcc4 \ubc29\ubb38\uc790',\n           marker_color='#96CEB4'),\n    row=2, col=1\n)\n\n# 4. ROI \ubd84\ud3ec\nfig.add_trace(\n    go.Histogram(x=real_data['ROI'], nbinsx=40,\n                 name='ROI \ubd84\ud3ec',\n                 marker_color='#45B7D1'),\n    row=2, col=2\n)\n\n# 5. \uc804\ud658\uc728 vs \ud3c9\uade0\uad6c\ub9e4\uc561\nfig.add_trace(\n    go.Scatter(x=real_data['\uc804\ud658\uc728'], y=real_data['\ud3c9\uade0\uad6c\ub9e4\uc561'],\n               mode='markers', name='\ub370\uc774\ud130',\n               marker=dict(size=6, color=real_data['\ub9e4\ucd9c'],\n                          colorscale='Viridis', showscale=True,\n                          colorbar=dict(title='\ub9e4\ucd9c', x=0.46, y=0.15, len=0.3))),\n    row=3, col=1\n)\n\n# 6. \uc6d4\ubcc4 \uc774\uc775 \ucd94\uc138\nmonthly_profit = real_data['\uc774\uc775'].resample('M').sum()\nfig.add_trace(\n    go.Scatter(x=monthly_profit.index, y=monthly_profit.values,\n               mode='lines+markers', name='\uc6d4\ubcc4 \uc774\uc775',\n               line=dict(color='#2E86AB', width=3),\n               marker=dict(size=8)),\n    row=3, col=2\n)\n\n# \ub808\uc774\uc544\uc6c3 \uc5c5\ub370\uc774\ud2b8\nfig.update_layout(\n    title_text='\ub9c8\ucf00\ud305 \uc131\uacfc \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc',\n    title_font_size=20,\n    showlegend=True,\n    height=1000,\n    hovermode='closest'\n)\n\n# \ucd95 \ub808\uc774\ube14\nfig.update_xaxes(title_text='\ub0a0\uc9dc', row=1, col=1)\nfig.update_xaxes(title_text='\ub9e4\ucd9c (\ub9cc\uc6d0)', row=1, col=2)\nfig.update_xaxes(title_text='\uc9c0\uc5ed', row=2, col=1)\nfig.update_xaxes(title_text='ROI (%)', row=2, col=2)\nfig.update_xaxes(title_text='\uc804\ud658\uc728 (%)', row=3, col=1)\nfig.update_xaxes(title_text='\ub0a0\uc9dc', row=3, col=2)\n\nfig.update_yaxes(title_text='\uae08\uc561 (\ub9cc\uc6d0)', row=1, col=1)\nfig.update_yaxes(title_text='\uce74\ud14c\uace0\ub9ac', row=1, col=2)\nfig.update_yaxes(title_text='\ubc29\ubb38\uc790 \uc218', row=2, col=1)\nfig.update_yaxes(title_text='\ube48\ub3c4', row=2, col=2)\nfig.update_yaxes(title_text='\ud3c9\uade0\uad6c\ub9e4\uc561 (\uc6d0)', row=3, col=1)\nfig.update_yaxes(title_text='\uc774\uc775 (\ub9cc\uc6d0)', row=3, col=2)\n\nfig.show()\n"})}),"\n",(0,l.jsx)(e.h2,{id:"610-\uc5f0\uc2b5-\ubb38\uc81c",children:"6.10 \uc5f0\uc2b5 \ubb38\uc81c"}),"\n",(0,l.jsx)(e.h3,{id:"\ubb38\uc81c-1-\uc885\ud569-\uc2dc\uac01\ud654",children:"\ubb38\uc81c 1: \uc885\ud569 \uc2dc\uac01\ud654"}),"\n",(0,l.jsx)(e.p,{children:"\ub2e4\uc74c \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec 4\uac1c\uc758 \uc11c\ube0c\ud50c\ub86f\uc744 \uac00\uc9c4 \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4dc\uc138\uc694."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ub370\uc774\ud130\nexercise_data = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=90),\n    '\ub9e4\ucd9c': np.random.gamma(2, 50, 90) + 500,\n    '\ubc29\ubb38\uc790': np.random.poisson(200, 90),\n    '\uad11\uace0\ud074\ub9ad': np.random.poisson(50, 90),\n    '\uc81c\ud488': np.random.choice(['A', 'B', 'C'], 90)\n})\n"})}),"\n",(0,l.jsx)(e.p,{children:"\uc694\uad6c\uc0ac\ud56d:"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"\ub9e4\ucd9c \ucd94\uc774 (\ub77c\uc778 \ucc28\ud2b8)"}),"\n",(0,l.jsx)(e.li,{children:"\uc81c\ud488\ubcc4 \ucd1d \ub9e4\ucd9c (\ub9c9\ub300 \ucc28\ud2b8)"}),"\n",(0,l.jsx)(e.li,{children:"\ubc29\ubb38\uc790 \ubd84\ud3ec (\ud788\uc2a4\ud1a0\uadf8\ub7a8)"}),"\n",(0,l.jsx)(e.li,{children:"\uad11\uace0\ud074\ub9ad vs \ub9e4\ucd9c (\uc0b0\uc810\ub3c4)"}),"\n"]}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"fig, axes = plt.subplots(2, 2, figsize=(15, 10))\nfig.suptitle('\ube44\uc988\ub2c8\uc2a4 \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc', fontsize=16, fontweight='bold')\n\n# 1. \ub9e4\ucd9c \ucd94\uc774\nexercise_data.plot(x='\ub0a0\uc9dc', y='\ub9e4\ucd9c', ax=axes[0, 0],\n                   color='#2E86AB', linewidth=2, legend=False)\naxes[0, 0].set_title('\ub9e4\ucd9c \ucd94\uc774', fontweight='bold')\naxes[0, 0].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[0, 0].grid(True, alpha=0.3)\n\n# 2. \uc81c\ud488\ubcc4 \ucd1d \ub9e4\ucd9c\nproduct_sales = exercise_data.groupby('\uc81c\ud488')['\ub9e4\ucd9c'].sum()\nproduct_sales.plot(kind='bar', ax=axes[0, 1],\n                   color=['#FF6B6B', '#4ECDC4', '#45B7D1'])\naxes[0, 1].set_title('\uc81c\ud488\ubcc4 \ucd1d \ub9e4\ucd9c', fontweight='bold')\naxes[0, 1].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[0, 1].set_xlabel('\uc81c\ud488')\naxes[0, 1].tick_params(axis='x', rotation=0)\n\n# 3. \ubc29\ubb38\uc790 \ubd84\ud3ec\nexercise_data['\ubc29\ubb38\uc790'].plot(kind='hist', bins=20, ax=axes[1, 0],\n                           color='#96CEB4', edgecolor='black')\naxes[1, 0].set_title('\ubc29\ubb38\uc790 \ubd84\ud3ec', fontweight='bold')\naxes[1, 0].set_xlabel('\ubc29\ubb38\uc790 \uc218')\naxes[1, 0].set_ylabel('\ube48\ub3c4')\n\n# 4. \uad11\uace0\ud074\ub9ad vs \ub9e4\ucd9c\naxes[1, 1].scatter(exercise_data['\uad11\uace0\ud074\ub9ad'], exercise_data['\ub9e4\ucd9c'],\n                   alpha=0.6, c=exercise_data['\ubc29\ubb38\uc790'],\n                   cmap='viridis', s=50, edgecolors='black')\naxes[1, 1].set_title('\uad11\uace0\ud074\ub9ad vs \ub9e4\ucd9c', fontweight='bold')\naxes[1, 1].set_xlabel('\uad11\uace0\ud074\ub9ad \uc218')\naxes[1, 1].set_ylabel('\ub9e4\ucd9c (\ub9cc\uc6d0)')\naxes[1, 1].grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n"})})]}),"\n",(0,l.jsx)(e.h3,{id:"\ubb38\uc81c-2-seaborn-\uace0\uae09-\uc2dc\uac01\ud654",children:"\ubb38\uc81c 2: seaborn \uace0\uae09 \uc2dc\uac01\ud654"}),"\n",(0,l.jsx)(e.p,{children:"\ub2e4\uc74c \ub370\uc774\ud130\uc14b\uc744 \uc0ac\uc6a9\ud558\uc5ec \uce74\ud14c\uace0\ub9ac\ubcc4, \uc9c0\uc5ed\ubcc4 \ud310\ub9e4 \ud328\ud134\uc744 \ubd84\uc11d\ud558\ub294 \uc2dc\uac01\ud654\ub97c \ub9cc\ub4dc\uc138\uc694."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ub370\uc774\ud130\nnp.random.seed(42)\nexercise_data2 = pd.DataFrame({\n    '\uce74\ud14c\uace0\ub9ac': np.random.choice(['\uc804\uc790', '\uc758\ub958', '\uc2dd\ud488'], 300),\n    '\uc9c0\uc5ed': np.random.choice(['\uc11c\uc6b8', '\ubd80\uc0b0', '\ub300\uad6c'], 300),\n    '\ud310\ub9e4\ub7c9': np.random.gamma(2, 30, 300),\n    '\uac00\uaca9': np.random.normal(50000, 15000, 300),\n    '\ub9cc\uc871\ub3c4': np.random.normal(4.0, 0.8, 300)\n})\nexercise_data2['\ub9e4\ucd9c'] = exercise_data2['\ud310\ub9e4\ub7c9'] * exercise_data2['\uac00\uaca9']\n"})}),"\n",(0,l.jsx)(e.p,{children:"\uc694\uad6c\uc0ac\ud56d:"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"\uce74\ud14c\uace0\ub9ac\ubcc4 \ud310\ub9e4\ub7c9 \ubc14\uc774\uc62c\ub9b0 \ud50c\ub86f"}),"\n",(0,l.jsx)(e.li,{children:"\uc9c0\uc5ed/\uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c \ud788\ud2b8\ub9f5"}),"\n",(0,l.jsx)(e.li,{children:"\uac00\uaca9 vs \ub9cc\uc871\ub3c4 \ud68c\uadc0 \ud50c\ub86f (\uce74\ud14c\uace0\ub9ac\ubcc4 \uc0c9\uc0c1)"}),"\n"]}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"fig, axes = plt.subplots(1, 3, figsize=(18, 5))\nfig.suptitle('\uce74\ud14c\uace0\ub9ac \ubc0f \uc9c0\uc5ed\ubcc4 \ud310\ub9e4 \ubd84\uc11d', fontsize=16, fontweight='bold')\n\n# 1. \ubc14\uc774\uc62c\ub9b0 \ud50c\ub86f\nsns.violinplot(data=exercise_data2, x='\uce74\ud14c\uace0\ub9ac', y='\ud310\ub9e4\ub7c9',\n               ax=axes[0], palette='Set2')\naxes[0].set_title('\uce74\ud14c\uace0\ub9ac\ubcc4 \ud310\ub9e4\ub7c9 \ubd84\ud3ec', fontweight='bold')\naxes[0].set_ylabel('\ud310\ub9e4\ub7c9')\n\n# 2. \ud788\ud2b8\ub9f5\npivot_sales = exercise_data2.pivot_table(\n    values='\ub9e4\ucd9c', index='\uc9c0\uc5ed', columns='\uce74\ud14c\uace0\ub9ac', aggfunc='mean'\n)\nsns.heatmap(pivot_sales, annot=True, fmt='.0f', cmap='YlOrRd',\n            ax=axes[1], linewidths=1)\naxes[1].set_title('\uc9c0\uc5ed/\uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \ub9e4\ucd9c', fontweight='bold')\n\n# 3. \ud68c\uadc0 \ud50c\ub86f\nfor category, color in zip(['\uc804\uc790', '\uc758\ub958', '\uc2dd\ud488'],\n                           ['#FF6B6B', '#4ECDC4', '#45B7D1']):\n    data = exercise_data2[exercise_data2['\uce74\ud14c\uace0\ub9ac'] == category]\n    sns.regplot(data=data, x='\uac00\uaca9', y='\ub9cc\uc871\ub3c4',\n                ax=axes[2], label=category, color=color,\n                scatter_kws={'alpha': 0.5})\n\naxes[2].set_title('\uac00\uaca9 vs \ub9cc\uc871\ub3c4 (\uce74\ud14c\uace0\ub9ac\ubcc4)', fontweight='bold')\naxes[2].set_xlabel('\uac00\uaca9 (\uc6d0)')\naxes[2].set_ylabel('\ub9cc\uc871\ub3c4')\naxes[2].legend()\n\nplt.tight_layout()\nplt.show()\n"})})]}),"\n",(0,l.jsx)(e.h3,{id:"\ubb38\uc81c-3-\uc778\ud130\ub799\ud2f0\ube0c-\ub300\uc2dc\ubcf4\ub4dc",children:"\ubb38\uc81c 3: \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc"}),"\n",(0,l.jsx)(e.p,{children:"Plotly\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc74c \uae30\ub2a5\uc744 \uac00\uc9c4 \uc778\ud130\ub799\ud2f0\ube0c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4dc\uc138\uc694."}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ub370\uc774\ud130\nexercise_data3 = pd.DataFrame({\n    '\ub0a0\uc9dc': pd.date_range('2024-01-01', periods=200),\n    '\uc81c\ud488A_\ub9e4\ucd9c': np.cumsum(np.random.randn(200)) * 5 + 1000,\n    '\uc81c\ud488B_\ub9e4\ucd9c': np.cumsum(np.random.randn(200)) * 4 + 800,\n    '\uc81c\ud488C_\ub9e4\ucd9c': np.cumsum(np.random.randn(200)) * 6 + 1200,\n    '\uace0\uac1d\uc218': np.random.poisson(100, 200),\n    '\ud3c9\uade0\uc8fc\ubb38\uc561': np.random.gamma(3, 20, 200)\n})\n"})}),"\n",(0,l.jsx)(e.p,{children:"\uc694\uad6c\uc0ac\ud56d:"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsx)(e.li,{children:"\uc81c\ud488\ubcc4 \ub9e4\ucd9c \ucd94\uc774 (\ub2e4\uc911 \ub77c\uc778)"}),"\n",(0,l.jsx)(e.li,{children:"\uace0\uac1d\uc218 vs \ud3c9\uade0\uc8fc\ubb38\uc561 (\ubc84\ube14 \ucc28\ud2b8, \ud06c\uae30\ub294 \ucd1d \ub9e4\ucd9c)"}),"\n",(0,l.jsx)(e.li,{children:"\ud638\ubc84 \uc2dc \uc0c1\uc138 \uc815\ubcf4 \ud45c\uc2dc"}),"\n"]}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"\ud574\ub2f5 \ubcf4\uae30"}),(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"# \ucd1d \ub9e4\ucd9c \uacc4\uc0b0\nexercise_data3['\ucd1d\ub9e4\ucd9c'] = (exercise_data3['\uc81c\ud488A_\ub9e4\ucd9c'] +\n                           exercise_data3['\uc81c\ud488B_\ub9e4\ucd9c'] +\n                           exercise_data3['\uc81c\ud488C_\ub9e4\ucd9c'])\n\n# \uc11c\ube0c\ud50c\ub86f \uc0dd\uc131\nfig = make_subplots(\n    rows=1, cols=2,\n    subplot_titles=('\uc81c\ud488\ubcc4 \ub9e4\ucd9c \ucd94\uc774', '\uace0\uac1d\uc218 vs \ud3c9\uade0\uc8fc\ubb38\uc561'),\n    specs=[[{'type': 'scatter'}, {'type': 'scatter'}]]\n)\n\n# 1. \uc81c\ud488\ubcc4 \ub9e4\ucd9c \ucd94\uc774\ncolors_products = ['#FF6B6B', '#4ECDC4', '#45B7D1']\nfor product, color in zip(['\uc81c\ud488A_\ub9e4\ucd9c', '\uc81c\ud488B_\ub9e4\ucd9c', '\uc81c\ud488C_\ub9e4\ucd9c'], colors_products):\n    fig.add_trace(\n        go.Scatter(x=exercise_data3['\ub0a0\uc9dc'], y=exercise_data3[product],\n                   mode='lines', name=product.replace('_\ub9e4\ucd9c', ''),\n                   line=dict(color=color, width=2)),\n        row=1, col=1\n    )\n\n# 2. \ubc84\ube14 \ucc28\ud2b8\nfig.add_trace(\n    go.Scatter(\n        x=exercise_data3['\uace0\uac1d\uc218'],\n        y=exercise_data3['\ud3c9\uade0\uc8fc\ubb38\uc561'],\n        mode='markers',\n        name='\ub370\uc774\ud130',\n        marker=dict(\n            size=exercise_data3['\ucd1d\ub9e4\ucd9c'] / 50,  # \ud06c\uae30 \uc870\uc815\n            color=exercise_data3['\ucd1d\ub9e4\ucd9c'],\n            colorscale='Viridis',\n            showscale=True,\n            colorbar=dict(title='\ucd1d\ub9e4\ucd9c', x=1.15),\n            line=dict(width=1, color='white')\n        ),\n        text=[f\"\ub0a0\uc9dc: {date.strftime('%Y-%m-%d')}<br>\uace0\uac1d\uc218: {cust}<br>\ud3c9\uade0\uc8fc\ubb38\uc561: {avg:.0f}<br>\ucd1d\ub9e4\ucd9c: {total:.0f}\"\n              for date, cust, avg, total in zip(\n                  exercise_data3['\ub0a0\uc9dc'],\n                  exercise_data3['\uace0\uac1d\uc218'],\n                  exercise_data3['\ud3c9\uade0\uc8fc\ubb38\uc561'],\n                  exercise_data3['\ucd1d\ub9e4\ucd9c'])],\n        hovertemplate='%{text}<extra></extra>'\n    ),\n    row=1, col=2\n)\n\n# \ub808\uc774\uc544\uc6c3 \uc5c5\ub370\uc774\ud2b8\nfig.update_layout(\n    title_text='\uc81c\ud488 \ud310\ub9e4 \ubd84\uc11d \ub300\uc2dc\ubcf4\ub4dc',\n    showlegend=True,\n    height=500,\n    hovermode='closest'\n)\n\nfig.update_xaxes(title_text='\ub0a0\uc9dc', row=1, col=1)\nfig.update_xaxes(title_text='\uace0\uac1d\uc218', row=1, col=2)\nfig.update_yaxes(title_text='\ub9e4\ucd9c (\ub9cc\uc6d0)', row=1, col=1)\nfig.update_yaxes(title_text='\ud3c9\uade0\uc8fc\ubb38\uc561 (\uc6d0)', row=1, col=2)\n\nfig.show()\n"})})]}),"\n",(0,l.jsxs)(e.admonition,{type:"tip",children:[(0,l.jsx)(e.p,{children:"\uc2e4\uc804\uc5d0\uc11c\ub294 \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4 \ub54c \ub2e4\uc74c\uc744 \uace0\ub824\ud558\uc138\uc694:"}),(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\ubaa9\uc801"}),": \ub204\uac00, \ubb34\uc5c7\uc744 \uc704\ud574 \ubcf4\ub294\uac00?"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"KPI"}),": \ud575\uc2ec \uc9c0\ud45c\ub97c \uc0c1\ub2e8\uc5d0 \ubc30\uce58"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\uc0c9\uc0c1"}),": \uc77c\uad00\ub41c \uc0c9\uc0c1 \ud314\ub808\ud2b8 \uc0ac\uc6a9"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\uc778\ud130\ub799\uc158"}),": Plotly\ub85c \ub4dc\ub9b4\ub2e4\uc6b4 \uae30\ub2a5 \ucd94\uac00"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\uc5c5\ub370\uc774\ud2b8"}),": \uc790\ub3d9\ud654\ub41c \ub370\uc774\ud130 \uac31\uc2e0 \uad6c\uc870"]}),"\n"]})]}),"\n",(0,l.jsx)(e.h2,{id:"\ub2e4\uc74c-\ub2e8\uacc4",children:"\ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,l.jsx)(e.p,{children:"\uc2dc\uac01\ud654\ub97c \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74 \uc774\uc81c \uc2e4\uc804 \uc608\uc81c\ub85c \ub118\uc5b4\uac11\ub2c8\ub2e4!"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.a,{href:"./examples",children:"\uc2e4\uc804 \uc608\uc81c"})})]})}function c(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(p,{...n})}):p(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>i});var t=a(6540);const l={},s=t.createContext(l);function o(n){const e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:o(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);