"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[6254],{7226:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"oauth/intermediate/github-oauth","title":"GitHub OAuth \ud1b5\ud569","description":"FastAPI\uc5d0\uc11c GitHub OAuth 2.0\uc744 \ud1b5\ud569\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/oauth/intermediate/github-oauth.md","sourceDirName":"oauth/intermediate","slug":"/oauth/intermediate/github-oauth","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/github-oauth","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/intermediate/github-oauth.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"oauthSidebar","previous":{"title":"Google OAuth \ud1b5\ud569","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/google-oauth"},"next":{"title":"JWT \ud1a0\ud070 \ucc98\ub9ac","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/jwt-tokens"}}');var i=t(4848),a=t(8453);const r={sidebar_position:3},o="GitHub OAuth \ud1b5\ud569",c={},l=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\u26a0\ufe0f \uc911\uc694: GitHub\ub294 OIDC \ubbf8\uc9c0\uc6d0",id:"\ufe0f-\uc911\uc694-github\ub294-oidc-\ubbf8\uc9c0\uc6d0",level:2},{value:"\ud83d\ude80 GitHub OAuth App \uc124\uc815",id:"-github-oauth-app-\uc124\uc815",level:2},{value:"1. OAuth App \uc0dd\uc131",id:"1-oauth-app-\uc0dd\uc131",level:3},{value:"2. Client ID &amp; Secret \uc800\uc7a5",id:"2-client-id--secret-\uc800\uc7a5",level:3},{value:"\ud83d\udce6 \uc124\uce58",id:"-\uc124\uce58",level:2},{value:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604",id:"-\uae30\ubcf8-\uad6c\ud604",level:2},{value:"\uc804\uccb4 \ucf54\ub4dc (main.py)",id:"\uc804\uccb4-\ucf54\ub4dc-mainpy",level:3},{value:"\ud83d\udd0d \uc0c1\uc138 \uc124\uba85",id:"-\uc0c1\uc138-\uc124\uba85",level:2},{value:"1. \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30",id:"1-\uc0ac\uc6a9\uc790-\uc815\ubcf4-\uac00\uc838\uc624\uae30",level:3},{value:"2. Scopes (\uad8c\ud55c \ubc94\uc704)",id:"2-scopes-\uad8c\ud55c-\ubc94\uc704",level:3},{value:"3. API \uc694\uccad \ud5e4\ub354",id:"3-api-\uc694\uccad-\ud5e4\ub354",level:3},{value:"\ud83c\udfa8 GitHub API \ud65c\uc6a9",id:"-github-api-\ud65c\uc6a9",level:2},{value:"\uc800\uc7a5\uc18c \ubaa9\ub85d",id:"\uc800\uc7a5\uc18c-\ubaa9\ub85d",level:3},{value:"Gist \ubaa9\ub85d",id:"gist-\ubaa9\ub85d",level:3},{value:"\ucee4\ubc0b \uc0dd\uc131",id:"\ucee4\ubc0b-\uc0dd\uc131",level:3},{value:"Issues \uc0dd\uc131",id:"issues-\uc0dd\uc131",level:3},{value:"\ud83d\udd04 Token Expiration",id:"-token-expiration",level:2},{value:"GitHub Access Token \ub9cc\ub8cc",id:"github-access-token-\ub9cc\ub8cc",level:3},{value:"\ud83d\udee1\ufe0f \ubcf4\uc548 \uac15\ud654",id:"\ufe0f-\ubcf4\uc548-\uac15\ud654",level:2},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Webhook Verification",id:"webhook-verification",level:3},{value:"\ud83d\udcca Google vs GitHub \ube44\uad50",id:"-google-vs-github-\ube44\uad50",level:2},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"github-oauth-\ud1b5\ud569",children:"GitHub OAuth \ud1b5\ud569"})}),"\n",(0,i.jsx)(n.p,{children:"FastAPI\uc5d0\uc11c GitHub OAuth 2.0\uc744 \ud1b5\ud569\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 GitHub OAuth App \uc124\uc815"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 GitHub OAuth \uad6c\ud604"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 GitHub API \ud65c\uc6a9"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 OIDC\uc640\uc758 \ucc28\uc774\uc810 \uc774\ud574"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-\uc911\uc694-github\ub294-oidc-\ubbf8\uc9c0\uc6d0",children:"\u26a0\ufe0f \uc911\uc694: GitHub\ub294 OIDC \ubbf8\uc9c0\uc6d0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'github_oauth = {\n    "\ud504\ub85c\ud1a0\ucf5c": "OAuth 2.0 (\uc21c\uc218)",\n    "OIDC \uc9c0\uc6d0": "\u274c \uc5c6\uc74c",\n    "ID Token": "\u274c \uc5c6\uc74c",\n    "UserInfo Endpoint": "\u274c \ud45c\uc900 \uc5c6\uc74c",\n    "\uc0ac\uc6a9\uc790 \uc815\ubcf4": "GitHub API\ub85c \ubcc4\ub3c4 \uc694\uccad"\n}\n\n# Google (OIDC)\ngoogle_flow = {\n    "1": "Authorization Code \ubc1b\uae30",\n    "2": "Code \u2192 Access Token + ID Token",  # ID Token\uc5d0 \uc0ac\uc6a9\uc790 \uc815\ubcf4 \ud3ec\ud568!\n}\n\n# GitHub (OAuth 2.0 only)\ngithub_flow = {\n    "1": "Authorization Code \ubc1b\uae30",\n    "2": "Code \u2192 Access Token",  # Access Token\ub9cc\n    "3": "/user API \ud638\ucd9c",  # \ubcc4\ub3c4\ub85c \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uc694\uccad\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-github-oauth-app-\uc124\uc815",children:"\ud83d\ude80 GitHub OAuth App \uc124\uc815"}),"\n",(0,i.jsx)(n.h3,{id:"1-oauth-app-\uc0dd\uc131",children:"1. OAuth App \uc0dd\uc131"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/settings/developers",children:"GitHub Settings"})," \uc811\uc18d"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Developer settings > OAuth Apps > New OAuth App"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"Application name: My FastAPI App\nHomepage URL: http://localhost:8000\nAuthorization callback URL: http://localhost:8000/auth/github\n\n# \uac1c\ubc1c/\ud504\ub85c\ub355\uc158 \ubd84\ub9ac \uad8c\uc7a5\n# \uac1c\ubc1c: http://localhost:8000/auth/github\n# \ud504\ub85c\ub355\uc158: https://yourdomain.com/auth/github\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-client-id--secret-\uc800\uc7a5",children:"2. Client ID & Secret \uc800\uc7a5"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# .env\nGITHUB_CLIENT_ID=Iv1.a1b2c3d4e5f6g7h8\nGITHUB_CLIENT_SECRET=your-github-client-secret-here\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-\uc124\uce58",children:"\ud83d\udce6 \uc124\uce58"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install fastapi uvicorn\npip install authlib httpx\npip install python-dotenv\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-\uae30\ubcf8-\uad6c\ud604",children:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604"}),"\n",(0,i.jsx)(n.h3,{id:"\uc804\uccb4-\ucf54\ub4dc-mainpy",children:"\uc804\uccb4 \ucf54\ub4dc (main.py)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, Request, HTTPException\nfrom fastapi.responses import RedirectResponse, HTMLResponse\nfrom starlette.middleware.sessions import SessionMiddleware\nfrom authlib.integrations.starlette_client import OAuth\nfrom starlette.config import Config\nimport httpx\n\n# \ud658\uacbd\ubcc0\uc218 \ub85c\ub4dc\nconfig = Config('.env')\n\napp = FastAPI(title=\"GitHub OAuth Example\")\n\n# \uc138\uc158 \ubbf8\ub4e4\uc6e8\uc5b4\napp.add_middleware(\n    SessionMiddleware,\n    secret_key=config('SECRET_KEY', default='super-secret-key')\n)\n\n# OAuth \uc124\uc815\noauth = OAuth(config)\n\noauth.register(\n    name='github',\n    client_id=config('GITHUB_CLIENT_ID'),\n    client_secret=config('GITHUB_CLIENT_SECRET'),\n    authorize_url='https://github.com/login/oauth/authorize',\n    access_token_url='https://github.com/login/oauth/access_token',\n    api_base_url='https://api.github.com/',\n    client_kwargs={'scope': 'user:email'}\n)\n\n# ==================== \ub77c\uc6b0\ud2b8 ====================\n\n@app.get('/', response_class=HTMLResponse)\nasync def home(request: Request):\n    \"\"\"\ud648\ud398\uc774\uc9c0\"\"\"\n    user = request.session.get('user')\n\n    if user:\n        return f\"\"\"\n        <html>\n            <body>\n                <h1>\ud658\uc601\ud569\ub2c8\ub2e4, {user['name']}\ub2d8!</h1>\n                <img src=\"{user['avatar']}\" alt=\"\uc544\ubc14\ud0c0\" width=\"100\">\n                <p>\uc0ac\uc6a9\uc790\uba85: @{user['login']}</p>\n                <p>\uc774\uba54\uc77c: {user.get('email', 'N/A')}</p>\n                <a href=\"/logout\">\ub85c\uadf8\uc544\uc6c3</a>\n                <br><br>\n                <a href=\"/profile\">\ub0b4 \ud504\ub85c\ud544</a>\n                <a href=\"/api/repos\">\ub0b4 \uc800\uc7a5\uc18c</a>\n            </body>\n        </html>\n        \"\"\"\n    else:\n        return \"\"\"\n        <html>\n            <body>\n                <h1>GitHub OAuth \uc608\uc81c</h1>\n                <a href=\"/login\">GitHub\ub85c \ub85c\uadf8\uc778</a>\n            </body>\n        </html>\n        \"\"\"\n\n@app.get('/login')\nasync def login(request: Request):\n    \"\"\"GitHub \ub85c\uadf8\uc778 \uc2dc\uc791\"\"\"\n    redirect_uri = request.url_for('auth')\n    return await oauth.github.authorize_redirect(request, redirect_uri)\n\n@app.get('/auth')\nasync def auth(request: Request):\n    \"\"\"GitHub OAuth \ucf5c\ubc31\"\"\"\n    try:\n        # Access Token \ubc1b\uae30\n        token = await oauth.github.authorize_access_token(request)\n\n        # \u26a0\ufe0f GitHub\ub294 ID Token \uc5c6\uc74c! API\ub85c \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uc694\uccad\n        # 1. \uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc815\ubcf4\n        resp = await oauth.github.get('user', token=token)\n        user_data = resp.json()\n\n        # 2. \uc774\uba54\uc77c \uc815\ubcf4 (\ubcc4\ub3c4 \uc694\uccad)\n        emails_resp = await oauth.github.get('user/emails', token=token)\n        emails = emails_resp.json()\n\n        # Primary \uc774\uba54\uc77c \ucc3e\uae30\n        primary_email = next(\n            (email['email'] for email in emails if email['primary']),\n            user_data.get('email')  # fallback\n        )\n\n        # \uc138\uc158\uc5d0 \uc800\uc7a5\n        request.session['user'] = {\n            'id': user_data['id'],\n            'login': user_data['login'],\n            'name': user_data.get('name', user_data['login']),\n            'email': primary_email,\n            'avatar': user_data['avatar_url'],\n            'bio': user_data.get('bio'),\n            'company': user_data.get('company'),\n            'location': user_data.get('location'),\n            'blog': user_data.get('blog')\n        }\n\n        # \ud1a0\ud070 \uc800\uc7a5\n        request.session['tokens'] = {\n            'access_token': token['access_token'],\n            'scope': token.get('scope', '')\n        }\n\n        return RedirectResponse(url='/')\n\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@app.get('/logout')\nasync def logout(request: Request):\n    \"\"\"\ub85c\uadf8\uc544\uc6c3\"\"\"\n    request.session.clear()\n    return RedirectResponse(url='/')\n\n@app.get('/profile')\nasync def profile(request: Request):\n    \"\"\"\uc0ac\uc6a9\uc790 \ud504\ub85c\ud544\"\"\"\n    user = request.session.get('user')\n\n    if not user:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n\n    return user\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-\uc0c1\uc138-\uc124\uba85",children:"\ud83d\udd0d \uc0c1\uc138 \uc124\uba85"}),"\n",(0,i.jsx)(n.h3,{id:"1-\uc0ac\uc6a9\uc790-\uc815\ubcf4-\uac00\uc838\uc624\uae30",children:"1. \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# GitHub\ub294 OIDC\uac00 \uc544\ub2c8\ubbc0\ub85c API \ud638\ucd9c \ud544\uc694\n\nasync def get_github_user(access_token: str):\n    """GitHub \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30"""\n\n    async with httpx.AsyncClient() as client:\n        # 1. \uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc815\ubcf4\n        user_response = await client.get(\n            \'https://api.github.com/user\',\n            headers={\n                \'Authorization\': f\'Bearer {access_token}\',\n                \'Accept\': \'application/vnd.github.v3+json\'\n            }\n        )\n        user = user_response.json()\n\n        # {\n        #   "login": "octocat",\n        #   "id": 1,\n        #   "avatar_url": "https://github.com/images/error/octocat_happy.gif",\n        #   "name": "The Octocat",\n        #   "email": "octocat@github.com",  # public email\ub9cc\n        #   "bio": "There once was...",\n        #   "company": "@github",\n        #   "location": "San Francisco",\n        #   "blog": "https://github.blog"\n        # }\n\n        # 2. \uc774\uba54\uc77c \ubaa9\ub85d (user:email scope \ud544\uc694)\n        emails_response = await client.get(\n            \'https://api.github.com/user/emails\',\n            headers={\n                \'Authorization\': f\'Bearer {access_token}\',\n                \'Accept\': \'application/vnd.github.v3+json\'\n            }\n        )\n        emails = emails_response.json()\n\n        # [\n        #   {\n        #     "email": "octocat@github.com",\n        #     "primary": true,\n        #     "verified": true,\n        #     "visibility": "public"\n        #   }\n        # ]\n\n        # Primary \uc774\uba54\uc77c \ucd94\uac00\n        primary_email = next(\n            (e[\'email\'] for e in emails if e[\'primary\']),\n            user.get(\'email\')\n        )\n        user[\'primary_email\'] = primary_email\n\n        return user\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-scopes-\uad8c\ud55c-\ubc94\uc704",children:"2. Scopes (\uad8c\ud55c \ubc94\uc704)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# GitHub OAuth Scopes\ngithub_scopes = {\n    # \uc0ac\uc6a9\uc790 \uc815\ubcf4\n    "user": "\uc0ac\uc6a9\uc790 \ud504\ub85c\ud544 \uc77d\uae30/\uc4f0\uae30",\n    "user:email": "\uc774\uba54\uc77c \uc8fc\uc18c \uc77d\uae30",\n    "user:follow": "\ud314\ub85c\uc6b0/\uc5b8\ud314\ub85c\uc6b0",\n\n    # \uc800\uc7a5\uc18c\n    "repo": "\ubaa8\ub4e0 \uc800\uc7a5\uc18c \uc811\uadfc (public + private)",\n    "public_repo": "\uacf5\uac1c \uc800\uc7a5\uc18c\ub9cc \uc811\uadfc",\n    "repo_deployment": "\ubc30\ud3ec \uc0c1\ud0dc",\n    "repo:status": "\ucee4\ubc0b \uc0c1\ud0dc",\n    "delete_repo": "\uc800\uc7a5\uc18c \uc0ad\uc81c",\n\n    # \uc870\uc9c1\n    "read:org": "\uc870\uc9c1 \uc815\ubcf4 \uc77d\uae30",\n    "write:org": "\uc870\uc9c1 \uc815\ubcf4 \uc4f0\uae30",\n    "admin:org": "\uc870\uc9c1 \uad00\ub9ac",\n\n    # Gist\n    "gist": "Gist \uc0dd\uc131",\n\n    # \uc54c\ub9bc\n    "notifications": "\uc54c\ub9bc \uc77d\uae30",\n\n    # \uc6cc\ud06c\ud50c\ub85c\uc6b0\n    "workflow": "GitHub Actions \uc6cc\ud06c\ud50c\ub85c\uc6b0"\n}\n\n# \uc0ac\uc6a9 \uc608\noauth.register(\n    name=\'github\',\n    client_kwargs={\n        \'scope\': \'user:email read:user public_repo\'  # \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\n    }\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-api-\uc694\uccad-\ud5e4\ub354",children:"3. API \uc694\uccad \ud5e4\ub354"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# GitHub API v3 \ud5e4\ub354\nheaders = {\n    "Authorization": f"Bearer {access_token}",\n    "Accept": "application/vnd.github.v3+json"  # API \ubc84\uc804 \uc9c0\uc815\n}\n\n# GitHub API\ub294 \ub2e4\uc591\ud55c Accept \ud5e4\ub354 \uc9c0\uc6d0\napi_versions = {\n    "v3 (\uae30\ubcf8)": "application/vnd.github.v3+json",\n    "v3 (raw)": "application/vnd.github.v3.raw+json",\n    "v3 (text)": "application/vnd.github.v3.text+json",\n    "v3 (html)": "application/vnd.github.v3.html+json",\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-github-api-\ud65c\uc6a9",children:"\ud83c\udfa8 GitHub API \ud65c\uc6a9"}),"\n",(0,i.jsx)(n.h3,{id:"\uc800\uc7a5\uc18c-\ubaa9\ub85d",children:"\uc800\uc7a5\uc18c \ubaa9\ub85d"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"@app.get('/api/repos')\nasync def get_repos(request: Request):\n    \"\"\"\uc0ac\uc6a9\uc790 \uc800\uc7a5\uc18c \ubaa9\ub85d\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401)\n\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://api.github.com/user/repos',\n            headers={\n                'Authorization': f'Bearer {tokens[\"access_token\"]}',\n                'Accept': 'application/vnd.github.v3+json'\n            },\n            params={\n                'sort': 'updated',  # created, updated, pushed, full_name\n                'direction': 'desc',\n                'per_page': 10\n            }\n        )\n\n        if response.status_code != 200:\n            raise HTTPException(\n                status_code=response.status_code,\n                detail=\"Failed to fetch repos\"\n            )\n\n        repos = response.json()\n\n        return {\n            \"count\": len(repos),\n            \"repos\": [\n                {\n                    \"name\": repo['name'],\n                    \"full_name\": repo['full_name'],\n                    \"description\": repo['description'],\n                    \"html_url\": repo['html_url'],\n                    \"private\": repo['private'],\n                    \"language\": repo['language'],\n                    \"stargazers_count\": repo['stargazers_count'],\n                    \"forks_count\": repo['forks_count'],\n                    \"updated_at\": repo['updated_at']\n                }\n                for repo in repos\n            ]\n        }\n"})}),"\n",(0,i.jsx)(n.h3,{id:"gist-\ubaa9\ub85d",children:"Gist \ubaa9\ub85d"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"@app.get('/api/gists')\nasync def get_gists(request: Request):\n    \"\"\"\uc0ac\uc6a9\uc790 Gist \ubaa9\ub85d\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401)\n\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://api.github.com/gists',\n            headers={\n                'Authorization': f'Bearer {tokens[\"access_token\"]}',\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        )\n\n        return response.json()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\ucee4\ubc0b-\uc0dd\uc131",children:"\ucee4\ubc0b \uc0dd\uc131"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from pydantic import BaseModel\n\nclass CommitCreate(BaseModel):\n    repo: str  # \"owner/repo\"\n    path: str\n    message: str\n    content: str\n    branch: str = \"main\"\n\n@app.post('/api/commit')\nasync def create_commit(\n    commit_data: CommitCreate,\n    request: Request\n):\n    \"\"\"\ud30c\uc77c \ucee4\ubc0b\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401)\n\n    # \ud544\uc694 scope \ud655\uc778\n    if 'repo' not in tokens.get('scope', ''):\n        raise HTTPException(\n            status_code=403,\n            detail=\"repo scope required\"\n        )\n\n    import base64\n\n    async with httpx.AsyncClient() as client:\n        # \ud30c\uc77c \uc0dd\uc131/\uc218\uc815\n        response = await client.put(\n            f'https://api.github.com/repos/{commit_data.repo}/contents/{commit_data.path}',\n            headers={\n                'Authorization': f'Bearer {tokens[\"access_token\"]}',\n                'Accept': 'application/vnd.github.v3+json'\n            },\n            json={\n                'message': commit_data.message,\n                'content': base64.b64encode(\n                    commit_data.content.encode()\n                ).decode(),\n                'branch': commit_data.branch\n            }\n        )\n\n        if response.status_code not in [200, 201]:\n            raise HTTPException(\n                status_code=response.status_code,\n                detail=response.json()\n            )\n\n        return response.json()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"issues-\uc0dd\uc131",children:"Issues \uc0dd\uc131"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class IssueCreate(BaseModel):\n    repo: str  # \"owner/repo\"\n    title: str\n    body: str\n    labels: list[str] = []\n\n@app.post('/api/issues')\nasync def create_issue(\n    issue: IssueCreate,\n    request: Request\n):\n    \"\"\"Issue \uc0dd\uc131\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401)\n\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            f'https://api.github.com/repos/{issue.repo}/issues',\n            headers={\n                'Authorization': f'Bearer {tokens[\"access_token\"]}',\n                'Accept': 'application/vnd.github.v3+json'\n            },\n            json={\n                'title': issue.title,\n                'body': issue.body,\n                'labels': issue.labels\n            }\n        )\n\n        if response.status_code != 201:\n            raise HTTPException(\n                status_code=response.status_code,\n                detail=response.json()\n            )\n\n        return response.json()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-token-expiration",children:"\ud83d\udd04 Token Expiration"}),"\n",(0,i.jsx)(n.h3,{id:"github-access-token-\ub9cc\ub8cc",children:"GitHub Access Token \ub9cc\ub8cc"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# GitHub Access Token \ud2b9\uc9d5\ngithub_token = {\n    "\ub9cc\ub8cc": "\uc5c6\uc74c (\uae30\ubcf8\uc801\uc73c\ub85c \uc601\uad6c)",\n    "Refresh Token": "\uc5c6\uc74c",\n    "\uc7ac\ubc1c\uae09": "\uc0ac\uc6a9\uc790\uac00 \uc9c1\uc811 \ub85c\uadf8\uc778",\n    "\ud3d0\uae30": "Settings\uc5d0\uc11c \uc218\ub3d9 \ub610\ub294 API\ub85c"\n}\n\n# Token \ud3d0\uae30\nasync def revoke_github_token(access_token: str):\n    """GitHub Access Token \ud3d0\uae30"""\n\n    async with httpx.AsyncClient() as client:\n        response = await client.delete(\n            f\'https://api.github.com/applications/{CLIENT_ID}/token\',\n            auth=(CLIENT_ID, CLIENT_SECRET),\n            headers={\'Accept\': \'application/vnd.github.v3+json\'},\n            json={\'access_token\': access_token}\n        )\n\n        return response.status_code == 204\n\n# \ub85c\uadf8\uc544\uc6c3 \uc2dc \ud3d0\uae30\n@app.post(\'/logout\')\nasync def logout(request: Request):\n    tokens = request.session.get(\'tokens\')\n\n    if tokens:\n        await revoke_github_token(tokens[\'access_token\'])\n\n    request.session.clear()\n    return {"message": "Logged out"}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-\ubcf4\uc548-\uac15\ud654",children:"\ud83d\udee1\ufe0f \ubcf4\uc548 \uac15\ud654"}),"\n",(0,i.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# GitHub API Rate Limits\nrate_limits = {\n    "\uc778\uc99d\ub428": "5,000 requests/hour",\n    "\ubbf8\uc778\uc99d": "60 requests/hour"\n}\n\nasync def check_rate_limit(access_token: str):\n    """Rate Limit \ud655\uc778"""\n\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            \'https://api.github.com/rate_limit\',\n            headers={\'Authorization\': f\'Bearer {access_token}\'}\n        )\n\n        data = response.json()\n\n        # {\n        #   "resources": {\n        #     "core": {\n        #       "limit": 5000,\n        #       "remaining": 4999,\n        #       "reset": 1372700873,  # Unix timestamp\n        #       "used": 1\n        #     }\n        #   }\n        # }\n\n        return data\n\n# Middleware\ub85c Rate Limit \ubaa8\ub2c8\ud130\ub9c1\nfrom starlette.middleware.base import BaseHTTPMiddleware\n\nclass RateLimitMiddleware(BaseHTTPMiddleware):\n    async def dispatch(self, request, call_next):\n        response = await call_next(request)\n\n        # X-RateLimit \ud5e4\ub354 \ud655\uc778\n        rate_limit = response.headers.get(\'X-RateLimit-Limit\')\n        rate_remaining = response.headers.get(\'X-RateLimit-Remaining\')\n\n        if rate_remaining and int(rate_remaining) < 100:\n            # \uc54c\ub9bc \ub610\ub294 \ub85c\uae45\n            print(f"Warning: Only {rate_remaining} requests remaining")\n\n        return response\n'})}),"\n",(0,i.jsx)(n.h3,{id:"webhook-verification",children:"Webhook Verification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import hmac\nimport hashlib\n\ndef verify_github_webhook(payload: bytes, signature: str, secret: str) -> bool:\n    """GitHub Webhook \uc11c\uba85 \uac80\uc99d"""\n\n    # signature: "sha256=hash"\n    expected = hmac.new(\n        secret.encode(),\n        payload,\n        hashlib.sha256\n    ).hexdigest()\n\n    return hmac.compare_digest(\n        f"sha256={expected}",\n        signature\n    )\n\n@app.post(\'/webhooks/github\')\nasync def github_webhook(request: Request):\n    """GitHub Webhook \ud578\ub4e4\ub7ec"""\n\n    # \uc11c\uba85 \ud655\uc778\n    signature = request.headers.get(\'X-Hub-Signature-256\')\n    if not signature:\n        raise HTTPException(status_code=400, detail="Missing signature")\n\n    payload = await request.body()\n\n    if not verify_github_webhook(payload, signature, WEBHOOK_SECRET):\n        raise HTTPException(status_code=401, detail="Invalid signature")\n\n    # \uc774\ubca4\ud2b8 \ucc98\ub9ac\n    event_type = request.headers.get(\'X-GitHub-Event\')\n    data = await request.json()\n\n    if event_type == \'push\':\n        # Push \uc774\ubca4\ud2b8 \ucc98\ub9ac\n        pass\n    elif event_type == \'pull_request\':\n        # PR \uc774\ubca4\ud2b8 \ucc98\ub9ac\n        pass\n\n    return {"status": "ok"}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-google-vs-github-\ube44\uad50",children:"\ud83d\udcca Google vs GitHub \ube44\uad50"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"\ud2b9\uc131"}),(0,i.jsx)(n.th,{children:"Google"}),(0,i.jsx)(n.th,{children:"GitHub"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"\ud504\ub85c\ud1a0\ucf5c"})}),(0,i.jsx)(n.td,{children:"OAuth 2.0 + OIDC"}),(0,i.jsx)(n.td,{children:"OAuth 2.0 only"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"ID Token"})}),(0,i.jsx)(n.td,{children:"\u2705 \uc788\uc74c (JWT)"}),(0,i.jsx)(n.td,{children:"\u274c \uc5c6\uc74c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"\uc0ac\uc6a9\uc790 \uc815\ubcf4"})}),(0,i.jsx)(n.td,{children:"ID Token \ub610\ub294 UserInfo"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"/user"})," API\ub9cc"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Discovery"})}),(0,i.jsx)(n.td,{children:"\u2705 \uc9c0\uc6d0"}),(0,i.jsx)(n.td,{children:"\u274c \uc5c6\uc74c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Refresh Token"})}),(0,i.jsx)(n.td,{children:"\u2705 \uc788\uc74c"}),(0,i.jsx)(n.td,{children:"\u274c \uc5c6\uc74c"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Token \ub9cc\ub8cc"})}),(0,i.jsx)(n.td,{children:"1\uc2dc\uac04"}),(0,i.jsx)(n.td,{children:"\uc5c6\uc74c (\uc601\uad6c)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Scopes"})}),(0,i.jsx)(n.td,{children:"Google API"}),(0,i.jsx)(n.td,{children:"GitHub \ub9ac\uc18c\uc2a4"})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Google (\uac04\ub2e8)\ntoken = await oauth.google.authorize_access_token(request)\nuser = token.get('userinfo')  # ID Token\uc5d0\uc11c \uc790\ub3d9 \ud30c\uc2f1\n\n# GitHub (\ucd94\uac00 \uc791\uc5c5 \ud544\uc694)\ntoken = await oauth.github.authorize_access_token(request)\nresp = await oauth.github.get('user', token=token)  # \ubcc4\ub3c4 API \ud638\ucd9c\nuser = resp.json()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./fastapi-basics",children:"FastAPI OAuth \uae30\ucd08"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./google-oauth",children:"Google OAuth \ud1b5\ud569"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"./jwt-tokens",children:"JWT \ud1a0\ud070 \ucc98\ub9ac"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../advanced/security",children:"\ubcf4\uc548 Best Practices"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,i.jsx)(n.p,{children:"GitHub OAuth\ub97c \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c JWT \ud1a0\ud070 \ucc98\ub9ac\ub97c \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,i.jsx)(n.a,{href:"./jwt-tokens",children:"JWT \ud1a0\ud070 \ucc98\ub9ac"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": GitHub\ub294 OIDC\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc9c0\ub9cc, OAuth 2.0 \ud50c\ub85c\uc6b0\ub294 \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc815\ubcf4\ub9cc \ubcc4\ub3c4 API\ub85c \uac00\uc838\uc624\uba74 \ub429\ub2c8\ub2e4!"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);