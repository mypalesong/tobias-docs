"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[7040],{4691:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>E,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"database/patterns/versioning","title":"\ubc84\uc804 \uad00\ub9ac","description":"\ub370\uc774\ud130 \ubcc0\uacbd \uc774\ub825\uacfc \uc2dc\uc810 \ubcf5\uc6d0\uc744 \uc704\ud55c \ubc84\uc804 \uad00\ub9ac \uc2dc\uc2a4\ud15c","source":"@site/docs/database/patterns/versioning.md","sourceDirName":"database/patterns","slug":"/database/patterns/versioning","permalink":"/tobias-docs/comp-1/docs/database/patterns/versioning","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/database/patterns/versioning.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"slug":"/database/patterns/versioning"},"sidebar":"databaseSidebar","previous":{"title":"\uac10\uc0ac \ub85c\uadf8","permalink":"/tobias-docs/comp-1/docs/database/patterns/audit-log"},"next":{"title":"PostgreSQL \uace0\uae09","permalink":"/tobias-docs/comp-1/docs/database/postgres/advanced/intro"}}');var s=t(4848),d=t(8453);const c={sidebar_position:4,slug:"/database/patterns/versioning"},o="\ubc84\uc804 \uad00\ub9ac",E={},r=[{value:"\ud83c\udfaf \ubc84\uc804 \uad00\ub9ac\uac00 \ud544\uc694\ud55c \uc774\uc720",id:"-\ubc84\uc804-\uad00\ub9ac\uac00-\ud544\uc694\ud55c-\uc774\uc720",level:2},{value:"\uc8fc\uc694 \ubaa9\uc801",id:"\uc8fc\uc694-\ubaa9\uc801",level:3},{value:"\uc5b8\uc81c \uc0ac\uc6a9\ud558\ub098?",id:"\uc5b8\uc81c-\uc0ac\uc6a9\ud558\ub098",level:3},{value:"\ud83d\udd27 \uae30\ubcf8 \ud328\ud134",id:"-\uae30\ubcf8-\ud328\ud134",level:2},{value:"\ud328\ud134 1: \ubcc4\ub3c4 \ubc84\uc804 \ud14c\uc774\ube14",id:"\ud328\ud134-1-\ubcc4\ub3c4-\ubc84\uc804-\ud14c\uc774\ube14",level:3},{value:"\ud328\ud134 2: \ub2e8\uc77c \ud14c\uc774\ube14 \ubc84\uc804 \uad00\ub9ac",id:"\ud328\ud134-2-\ub2e8\uc77c-\ud14c\uc774\ube14-\ubc84\uc804-\uad00\ub9ac",level:3},{value:"\ud328\ud134 3: \ud0c0\uc784\uc2a4\ud0ec\ud504 \ubc84\uc804 \uad00\ub9ac (Temporal Tables)",id:"\ud328\ud134-3-\ud0c0\uc784\uc2a4\ud0ec\ud504-\ubc84\uc804-\uad00\ub9ac-temporal-tables",level:3},{value:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134",id:"-\uace0\uae09-\ud328\ud134",level:2},{value:"\ucc28\ubd84(Delta) \uc800\uc7a5",id:"\ucc28\ubd84delta-\uc800\uc7a5",level:3},{value:"\ubd84\uae30(Branching) \uc9c0\uc6d0",id:"\ubd84\uae30branching-\uc9c0\uc6d0",level:3},{value:"\ub3d9\uc2dc\uc131 \uc81c\uc5b4",id:"\ub3d9\uc2dc\uc131-\uc81c\uc5b4",level:3},{value:"\ud83d\udcca \ucffc\ub9ac \ud328\ud134",id:"-\ucffc\ub9ac-\ud328\ud134",level:2},{value:"\ubc84\uc804 \ube44\uad50",id:"\ubc84\uc804-\ube44\uad50",level:3},{value:"\ubc84\uc804 \ud1b5\uacc4",id:"\ubc84\uc804-\ud1b5\uacc4",level:3},{value:"\ud83d\uddc4\ufe0f \uc131\ub2a5 \ucd5c\uc801\ud654",id:"\ufe0f-\uc131\ub2a5-\ucd5c\uc801\ud654",level:2},{value:"\ud30c\ud2f0\uc154\ub2dd",id:"\ud30c\ud2f0\uc154\ub2dd",level:3},{value:"\uc555\ucd95",id:"\uc555\ucd95",level:3},{value:"\u2705 \ubc84\uc804 \uad00\ub9ac \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"-\ubc84\uc804-\uad00\ub9ac-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\uc124\uacc4",id:"\uc124\uacc4",level:3},{value:"\uae30\ub2a5",id:"\uae30\ub2a5",level:3},{value:"\uc131\ub2a5",id:"\uc131\ub2a5",level:3},{value:"\ubcf4\uc548",id:"\ubcf4\uc548",level:3},{value:"\ud83d\udca1 \ubaa8\ubc94 \uc0ac\ub840",id:"-\ubaa8\ubc94-\uc0ac\ub840",level:2},{value:"\ud83d\ude80 \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\ubc84\uc804-\uad00\ub9ac",children:"\ubc84\uc804 \uad00\ub9ac"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\ub370\uc774\ud130 \ubcc0\uacbd \uc774\ub825\uacfc \uc2dc\uc810 \ubcf5\uc6d0\uc744 \uc704\ud55c \ubc84\uc804 \uad00\ub9ac \uc2dc\uc2a4\ud15c"})}),"\n",(0,s.jsx)(e.p,{children:"\ubc84\uc804 \uad00\ub9ac(Versioning)\ub294 \ub370\uc774\ud130\uc758 \ubaa8\ub4e0 \ubcc0\uacbd\uc744 \ucd94\uc801\ud558\uace0 \ud2b9\uc815 \uc2dc\uc810\uc758 \uc0c1\ud0dc\ub85c \ub418\ub3cc\ub9b4 \uc218 \uc788\uac8c \ud558\ub294 \ud328\ud134\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.h2,{id:"-\ubc84\uc804-\uad00\ub9ac\uac00-\ud544\uc694\ud55c-\uc774\uc720",children:"\ud83c\udfaf \ubc84\uc804 \uad00\ub9ac\uac00 \ud544\uc694\ud55c \uc774\uc720"}),"\n",(0,s.jsx)(e.h3,{id:"\uc8fc\uc694-\ubaa9\uc801",children:"\uc8fc\uc694 \ubaa9\uc801"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'versioning_purposes = {\n    "\uc774\ub825 \ucd94\uc801": "\ubaa8\ub4e0 \ubcc0\uacbd \uc0ac\ud56d \uae30\ub85d",\n    "\uc2dc\uc810 \ubcf5\uc6d0": "\ud2b9\uc815 \uc2dc\uc810\uc758 \ub370\uc774\ud130 \uc0c1\ud0dc\ub85c \ubcf5\uc6d0",\n    "\ube44\uad50": "\ubc84\uc804 \uac04 \ucc28\uc774 \ud655\uc778",\n    "\ud611\uc5c5": "\uc5ec\ub7ec \uc0ac\uc6a9\uc790\uc758 \ub3d9\uc2dc \ud3b8\uc9d1 \uad00\ub9ac",\n    "\uac10\uc0ac": "\ub204\uac00, \uc5b8\uc81c \ubcc0\uacbd\ud588\ub294\uc9c0 \ucd94\uc801",\n    "\ub864\ubc31": "\uc798\ubabb\ub41c \ubcc0\uacbd \ucde8\uc18c"\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\uc5b8\uc81c-\uc0ac\uc6a9\ud558\ub098",children:"\uc5b8\uc81c \uc0ac\uc6a9\ud558\ub098?"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'use_cases = {\n    "\ubb38\uc11c \uc2dc\uc2a4\ud15c": "\uc704\ud0a4, CMS, \uacc4\uc57d\uc11c",\n    "\uc124\uc815 \uad00\ub9ac": "\uc2dc\uc2a4\ud15c \uc124\uc815, \uc0ac\uc6a9\uc790 \ud658\uacbd\uc124\uc815",\n    "\uc81c\ud488 \uc815\ubcf4": "\uac00\uaca9, \uc124\uba85, \uc2a4\ud399 \ubcc0\uacbd \uc774\ub825",\n    "\ubc95\uc801 \ubb38\uc11c": "\uc57d\uad00, \uc815\ucc45 \ubcc0\uacbd \ucd94\uc801",\n    "\ud611\uc5c5 \ub3c4\uad6c": "\uacf5\ub3d9 \ud3b8\uc9d1, \ubcc0\uacbd \uc774\ub825"\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-\uae30\ubcf8-\ud328\ud134",children:"\ud83d\udd27 \uae30\ubcf8 \ud328\ud134"}),"\n",(0,s.jsx)(e.h3,{id:"\ud328\ud134-1-\ubcc4\ub3c4-\ubc84\uc804-\ud14c\uc774\ube14",children:"\ud328\ud134 1: \ubcc4\ub3c4 \ubc84\uc804 \ud14c\uc774\ube14"}),"\n",(0,s.jsx)(e.p,{children:"\uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"-- \ud604\uc7ac \ubc84\uc804 (\uba54\uc778 \ud14c\uc774\ube14)\nCREATE TABLE documents (\n    id BIGSERIAL PRIMARY KEY,\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    author_id BIGINT NOT NULL REFERENCES users(id),\n\n    -- \ubc84\uc804 \uad00\ub9ac\n    version INTEGER NOT NULL DEFAULT 1,\n\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \ubc84\uc804 \uc774\ub825\nCREATE TABLE document_versions (\n    id BIGSERIAL PRIMARY KEY,\n    document_id BIGINT NOT NULL REFERENCES documents(id) ON DELETE CASCADE,\n\n    -- \ubc84\uc804 \uc815\ubcf4\n    version INTEGER NOT NULL,\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n\n    -- \uba54\ud0c0\ub370\uc774\ud130\n    author_id BIGINT NOT NULL REFERENCES users(id),\n    change_summary TEXT,  -- \ubcc0\uacbd \uc694\uc57d\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n\n    UNIQUE (document_id, version)\n);\n\nCREATE INDEX idx_document_versions_document ON document_versions(document_id);\nCREATE INDEX idx_document_versions_version ON document_versions(document_id, version);\n\n-- \ud2b8\ub9ac\uac70: \ubcc0\uacbd \uc2dc \uc790\ub3d9\uc73c\ub85c \ubc84\uc804 \uc800\uc7a5\nCREATE OR REPLACE FUNCTION save_document_version()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF TG_OP = 'UPDATE' THEN\n        -- \uc774\uc804 \ubc84\uc804 \uc800\uc7a5\n        INSERT INTO document_versions (\n            document_id, version, title, content, author_id\n        )\n        VALUES (\n            OLD.id, OLD.version, OLD.title, OLD.content, OLD.author_id\n        );\n\n        -- \ubc84\uc804 \ubc88\ud638 \uc99d\uac00\n        NEW.version := OLD.version + 1;\n        NEW.updated_at := CURRENT_TIMESTAMP;\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER document_versioning\nBEFORE UPDATE ON documents\nFOR EACH ROW\nEXECUTE FUNCTION save_document_version();\n\n-- \uc0ac\uc6a9 \uc608\nINSERT INTO documents (title, content, author_id) VALUES\n('My Document', 'Initial content', 1);\n\nUPDATE documents SET content = 'Updated content' WHERE id = 1;\n-- document_versions\uc5d0 v1 \uc800\uc7a5\ub428, documents\ub294 v2\n\nUPDATE documents SET title = 'New Title', content = 'New content' WHERE id = 1;\n-- document_versions\uc5d0 v2 \uc800\uc7a5\ub428, documents\ub294 v3\n\n-- \ud2b9\uc815 \ubc84\uc804 \uc870\ud68c\nSELECT * FROM document_versions\nWHERE document_id = 1 AND version = 2;\n\n-- \ubaa8\ub4e0 \ubc84\uc804 \uc870\ud68c\nSELECT version, title, created_at\nFROM document_versions\nWHERE document_id = 1\nORDER BY version DESC;\n\n-- \ud2b9\uc815 \uc2dc\uc810\uc758 \ubc84\uc804 \uc870\ud68c\nSELECT * FROM document_versions\nWHERE document_id = 1\n  AND created_at <= '2024-01-15 10:00:00'\nORDER BY created_at DESC\nLIMIT 1;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud328\ud134-2-\ub2e8\uc77c-\ud14c\uc774\ube14-\ubc84\uc804-\uad00\ub9ac",children:"\ud328\ud134 2: \ub2e8\uc77c \ud14c\uc774\ube14 \ubc84\uc804 \uad00\ub9ac"}),"\n",(0,s.jsx)(e.p,{children:"\ud604\uc7ac\uc640 \uc774\uc804 \ubc84\uc804\uc744 \ubaa8\ub450 \ud55c \ud14c\uc774\ube14\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE documents (\n    id BIGSERIAL PRIMARY KEY,\n    document_id BIGINT NOT NULL,  -- \ub17c\ub9ac\uc801 \ubb38\uc11c ID\n    version INTEGER NOT NULL,\n\n    -- \ub370\uc774\ud130\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    author_id BIGINT NOT NULL REFERENCES users(id),\n\n    -- \ubc84\uc804 \uc0c1\ud0dc\n    is_current BOOLEAN DEFAULT false,  -- \ud604\uc7ac \ubc84\uc804 \uc5ec\ubd80\n    valid_from TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n    valid_to TIMESTAMPTZ,  -- NULL = \ud604\uc7ac \ubc84\uc804\n\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n\n    UNIQUE (document_id, version)\n);\n\n-- \uc778\ub371\uc2a4\nCREATE INDEX idx_documents_current ON documents(document_id) WHERE is_current = true;\nCREATE INDEX idx_documents_valid ON documents(document_id, valid_from, valid_to);\n\n-- \uc2dc\ud000\uc2a4 (\ub17c\ub9ac\uc801 document_id \uc0dd\uc131)\nCREATE SEQUENCE document_id_seq;\n\n-- \uc0c8 \ubb38\uc11c \uc0dd\uc131\nINSERT INTO documents (document_id, version, title, content, author_id, is_current)\nVALUES (nextval('document_id_seq'), 1, 'My Document', 'Content', 1, true);\n\n-- \uc0c8 \ubc84\uc804 \uc0dd\uc131 \ud568\uc218\nCREATE OR REPLACE FUNCTION create_new_document_version(\n    p_document_id BIGINT,\n    p_title VARCHAR(200),\n    p_content TEXT,\n    p_author_id BIGINT\n) RETURNS BIGINT AS $$\nDECLARE\n    v_new_version INTEGER;\n    v_new_id BIGINT;\nBEGIN\n    -- \ud604\uc7ac \ubc84\uc804 \ubc88\ud638 \uc870\ud68c\n    SELECT MAX(version) + 1 INTO v_new_version\n    FROM documents\n    WHERE document_id = p_document_id;\n\n    -- \uae30\uc874 \ud604\uc7ac \ubc84\uc804 \ube44\ud65c\uc131\ud654\n    UPDATE documents\n    SET\n        is_current = false,\n        valid_to = CURRENT_TIMESTAMP\n    WHERE document_id = p_document_id\n      AND is_current = true;\n\n    -- \uc0c8 \ubc84\uc804 \uc0dd\uc131\n    INSERT INTO documents (\n        document_id, version, title, content, author_id, is_current\n    )\n    VALUES (\n        p_document_id, v_new_version, p_title, p_content, p_author_id, true\n    )\n    RETURNING id INTO v_new_id;\n\n    RETURN v_new_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc0ac\uc6a9\nSELECT create_new_document_version(1, 'Updated Title', 'Updated Content', 1);\n\n-- \ud604\uc7ac \ubc84\uc804 \uc870\ud68c\nSELECT * FROM documents\nWHERE document_id = 1 AND is_current = true;\n\n-- \ubaa8\ub4e0 \ubc84\uc804 \uc870\ud68c\nSELECT version, title, valid_from, valid_to\nFROM documents\nWHERE document_id = 1\nORDER BY version DESC;\n\n-- \ud2b9\uc815 \uc2dc\uc810\uc758 \ubc84\uc804 \uc870\ud68c\nSELECT * FROM documents\nWHERE document_id = 1\n  AND valid_from <= '2024-01-15 10:00:00'\n  AND (valid_to IS NULL OR valid_to > '2024-01-15 10:00:00')\nLIMIT 1;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ud328\ud134-3-\ud0c0\uc784\uc2a4\ud0ec\ud504-\ubc84\uc804-\uad00\ub9ac-temporal-tables",children:"\ud328\ud134 3: \ud0c0\uc784\uc2a4\ud0ec\ud504 \ubc84\uc804 \uad00\ub9ac (Temporal Tables)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"-- PostgreSQL 13+ \uc5d0\uc11c \uac00\ub2a5\nCREATE TABLE documents (\n    id BIGINT,\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    author_id BIGINT NOT NULL,\n\n    -- \uc2dc\uc2a4\ud15c \uc2dc\uac04 \ucd94\uc801\n    sys_period tstzrange NOT NULL,\n\n    PRIMARY KEY (id, sys_period WITHOUT OVERLAPS)\n);\n\n-- \uc774\ub825 \ud14c\uc774\ube14\nCREATE TABLE documents_history (\n    LIKE documents\n);\n\n-- \uc790\ub3d9 \uc774\ub825 \uc800\uc7a5 \ud2b8\ub9ac\uac70\n-- (\ubcf5\uc7a1\ud558\ubbc0\ub85c temporal_tables \ud655\uc7a5 \uc0ac\uc6a9 \uad8c\uc7a5)\n"})}),"\n",(0,s.jsx)(e.h2,{id:"-\uace0\uae09-\ud328\ud134",children:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134"}),"\n",(0,s.jsx)(e.h3,{id:"\ucc28\ubd84delta-\uc800\uc7a5",children:"\ucc28\ubd84(Delta) \uc800\uc7a5"}),"\n",(0,s.jsx)(e.p,{children:"\uc804\uccb4 \ub370\uc774\ud130 \ub300\uc2e0 \ubcc0\uacbd\ub41c \ubd80\ubd84\ub9cc \uc800\uc7a5\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE documents (\n    id BIGSERIAL PRIMARY KEY,\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    version INTEGER NOT NULL DEFAULT 1,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE document_deltas (\n    id BIGSERIAL PRIMARY KEY,\n    document_id BIGINT NOT NULL REFERENCES documents(id) ON DELETE CASCADE,\n    version INTEGER NOT NULL,\n\n    -- \ubcc0\uacbd \uc0ac\ud56d\ub9cc \uc800\uc7a5\n    changes JSONB NOT NULL,  -- {\"title\": {\"old\": \"...\", \"new\": \"...\"}}\n\n    author_id BIGINT NOT NULL REFERENCES users(id),\n    change_summary TEXT,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \ubcc0\uacbd \uc0ac\ud56d \uae30\ub85d \ud2b8\ub9ac\uac70\nCREATE OR REPLACE FUNCTION save_document_delta()\nRETURNS TRIGGER AS $$\nDECLARE\n    delta JSONB := '{}'::jsonb;\nBEGIN\n    -- \ubcc0\uacbd\ub41c \ud544\ub4dc\ub9cc \uae30\ub85d\n    IF OLD.title IS DISTINCT FROM NEW.title THEN\n        delta := delta || jsonb_build_object(\n            'title',\n            jsonb_build_object('old', OLD.title, 'new', NEW.title)\n        );\n    END IF;\n\n    IF OLD.content IS DISTINCT FROM NEW.content THEN\n        delta := delta || jsonb_build_object(\n            'content',\n            jsonb_build_object('old', OLD.content, 'new', NEW.content)\n        );\n    END IF;\n\n    -- \ubcc0\uacbd\uc0ac\ud56d\uc774 \uc788\uc73c\uba74 \uc800\uc7a5\n    IF delta != '{}'::jsonb THEN\n        INSERT INTO document_deltas (document_id, version, changes, author_id)\n        VALUES (NEW.id, OLD.version, delta,\n                current_setting('app.current_user_id', true)::BIGINT);\n\n        NEW.version := OLD.version + 1;\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER document_delta_tracking\nBEFORE UPDATE ON documents\nFOR EACH ROW\nEXECUTE FUNCTION save_document_delta();\n\n-- \ud2b9\uc815 \ubc84\uc804\uc73c\ub85c \ubcf5\uc6d0\nCREATE OR REPLACE FUNCTION restore_document_version(\n    p_document_id BIGINT,\n    p_target_version INTEGER\n) RETURNS void AS $$\nDECLARE\n    delta_record RECORD;\n    current_doc RECORD;\n    restored_title VARCHAR(200);\n    restored_content TEXT;\nBEGIN\n    -- \ud604\uc7ac \ubb38\uc11c \uc870\ud68c\n    SELECT * INTO current_doc FROM documents WHERE id = p_document_id;\n\n    restored_title := current_doc.title;\n    restored_content := current_doc.content;\n\n    -- \ubaa9\ud45c \ubc84\uc804\ubd80\ud130 \ud604\uc7ac\uae4c\uc9c0 \uc5ed\uc21c\uc73c\ub85c \ub418\ub3cc\ub9ac\uae30\n    FOR delta_record IN\n        SELECT changes\n        FROM document_deltas\n        WHERE document_id = p_document_id\n          AND version > p_target_version\n        ORDER BY version DESC\n    LOOP\n        -- \ubcc0\uacbd\uc0ac\ud56d \ub418\ub3cc\ub9ac\uae30\n        IF delta_record.changes ? 'title' THEN\n            restored_title := delta_record.changes->'title'->>'old';\n        END IF;\n\n        IF delta_record.changes ? 'content' THEN\n            restored_content := delta_record.changes->'content'->>'old';\n        END IF;\n    END LOOP;\n\n    -- \ubb38\uc11c \uc5c5\ub370\uc774\ud2b8\n    UPDATE documents\n    SET title = restored_title,\n        content = restored_content,\n        version = p_target_version\n    WHERE id = p_document_id;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ubd84\uae30branching-\uc9c0\uc6d0",children:"\ubd84\uae30(Branching) \uc9c0\uc6d0"}),"\n",(0,s.jsx)(e.p,{children:"Git\ucc98\ub7fc \ubd84\uae30\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE documents (\n    id BIGSERIAL PRIMARY KEY,\n    document_id BIGINT NOT NULL,  -- \ub17c\ub9ac\uc801 ID\n    branch VARCHAR(50) NOT NULL DEFAULT 'main',\n    version INTEGER NOT NULL,\n\n    -- \ubd80\ubaa8 \ubc84\uc804 (\ubd84\uae30 \ucd94\uc801)\n    parent_id BIGINT REFERENCES documents(id),\n\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    author_id BIGINT NOT NULL REFERENCES users(id),\n\n    is_current BOOLEAN DEFAULT false,  -- \ube0c\ub79c\uce58\uc758 \ud604\uc7ac \ubc84\uc804\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n\n    UNIQUE (document_id, branch, version)\n);\n\nCREATE INDEX idx_documents_branch ON documents(document_id, branch);\n\n-- \uc0c8 \ube0c\ub79c\uce58 \uc0dd\uc131\nCREATE OR REPLACE FUNCTION create_branch(\n    p_document_id BIGINT,\n    p_from_version_id BIGINT,\n    p_new_branch VARCHAR(50),\n    p_author_id BIGINT\n) RETURNS BIGINT AS $$\nDECLARE\n    v_source RECORD;\n    v_new_id BIGINT;\nBEGIN\n    -- \uc6d0\ubcf8 \ubc84\uc804 \uc870\ud68c\n    SELECT * INTO v_source FROM documents WHERE id = p_from_version_id;\n\n    -- \uc0c8 \ube0c\ub79c\uce58 \uccab \ubc84\uc804 \uc0dd\uc131\n    INSERT INTO documents (\n        document_id, branch, version, parent_id,\n        title, content, author_id, is_current\n    )\n    VALUES (\n        p_document_id, p_new_branch, 1, p_from_version_id,\n        v_source.title, v_source.content, p_author_id, true\n    )\n    RETURNING id INTO v_new_id;\n\n    RETURN v_new_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \ube0c\ub79c\uce58 \ubcd1\ud569\nCREATE OR REPLACE FUNCTION merge_branch(\n    p_document_id BIGINT,\n    p_source_branch VARCHAR(50),\n    p_target_branch VARCHAR(50),\n    p_author_id BIGINT\n) RETURNS BIGINT AS $$\nDECLARE\n    v_source RECORD;\n    v_target RECORD;\n    v_new_version INTEGER;\n    v_new_id BIGINT;\nBEGIN\n    -- \uc18c\uc2a4 \ube0c\ub79c\uce58\uc758 \ud604\uc7ac \ubc84\uc804\n    SELECT * INTO v_source FROM documents\n    WHERE document_id = p_document_id\n      AND branch = p_source_branch\n      AND is_current = true;\n\n    -- \ud0c0\uac9f \ube0c\ub79c\uce58\uc758 \ud604\uc7ac \ubc84\uc804\n    SELECT * INTO v_target FROM documents\n    WHERE document_id = p_document_id\n      AND branch = p_target_branch\n      AND is_current = true;\n\n    v_new_version := v_target.version + 1;\n\n    -- \ud0c0\uac9f \ube0c\ub79c\uce58 \ube44\ud65c\uc131\ud654\n    UPDATE documents\n    SET is_current = false\n    WHERE id = v_target.id;\n\n    -- \ubcd1\ud569\ub41c \uc0c8 \ubc84\uc804 \uc0dd\uc131\n    INSERT INTO documents (\n        document_id, branch, version, parent_id,\n        title, content, author_id, is_current\n    )\n    VALUES (\n        p_document_id, p_target_branch, v_new_version, v_source.id,\n        v_source.title, v_source.content, p_author_id, true\n    )\n    RETURNING id INTO v_new_id;\n\n    RETURN v_new_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc0ac\uc6a9 \uc608\n-- 1. main \ube0c\ub79c\uce58\uc5d0 \ubb38\uc11c \uc0dd\uc131\nINSERT INTO documents (document_id, branch, version, title, content, author_id, is_current)\nVALUES (1, 'main', 1, 'My Document', 'Content', 1, true);\n\n-- 2. feature \ube0c\ub79c\uce58 \uc0dd\uc131\nSELECT create_branch(1, 1, 'feature', 1);\n\n-- 3. feature \ube0c\ub79c\uce58\uc5d0\uc11c \uc791\uc5c5\n-- ...\n\n-- 4. main\uc73c\ub85c \ubcd1\ud569\nSELECT merge_branch(1, 'feature', 'main', 1);\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ub3d9\uc2dc\uc131-\uc81c\uc5b4",children:"\ub3d9\uc2dc\uc131 \uc81c\uc5b4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:'-- \ub099\uad00\uc801 \uc7a0\uae08 (Optimistic Locking)\nCREATE TABLE documents (\n    id BIGSERIAL PRIMARY KEY,\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    version INTEGER NOT NULL DEFAULT 1,\n    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \uc5c5\ub370\uc774\ud2b8 \uc2dc \ubc84\uc804 \ud655\uc778\nCREATE OR REPLACE FUNCTION update_with_version_check(\n    p_id BIGINT,\n    p_title VARCHAR(200),\n    p_content TEXT,\n    p_expected_version INTEGER\n) RETURNS BOOLEAN AS $$\nDECLARE\n    v_updated INTEGER;\nBEGIN\n    UPDATE documents\n    SET\n        title = p_title,\n        content = p_content,\n        version = version + 1,\n        updated_at = CURRENT_TIMESTAMP\n    WHERE id = p_id\n      AND version = p_expected_version;  -- \ubc84\uc804 \ud655\uc778\n\n    GET DIAGNOSTICS v_updated = ROW_COUNT;\n\n    IF v_updated = 0 THEN\n        RAISE EXCEPTION \'Conflict: Document has been modified by another user\';\n    END IF;\n\n    RETURN true;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc0ac\uc6a9 (\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c)\n"""\n# \ubb38\uc11c \uc870\ud68c\ndoc = await conn.fetchrow("SELECT * FROM documents WHERE id = $1", doc_id)\ncurrent_version = doc[\'version\']\n\n# \uc0ac\uc6a9\uc790\uac00 \ud3b8\uc9d1\n# ...\n\n# \uc800\uc7a5 \uc2dc\ub3c4\ntry:\n    await conn.execute(\n        "SELECT update_with_version_check($1, $2, $3, $4)",\n        doc_id, new_title, new_content, current_version\n    )\nexcept Exception:\n    # \ucda9\ub3cc \ubc1c\uc0dd - \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc54c\ub9bc\n    pass\n"""\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-\ucffc\ub9ac-\ud328\ud134",children:"\ud83d\udcca \ucffc\ub9ac \ud328\ud134"}),"\n",(0,s.jsx)(e.h3,{id:"\ubc84\uc804-\ube44\uad50",children:"\ubc84\uc804 \ube44\uad50"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"-- \ub450 \ubc84\uc804 \uac04 \ucc28\uc774\nWITH v1 AS (\n    SELECT * FROM document_versions WHERE document_id = 1 AND version = 1\n),\nv2 AS (\n    SELECT * FROM document_versions WHERE document_id = 1 AND version = 2\n)\nSELECT\n    CASE\n        WHEN v1.title != v2.title THEN 'title changed'\n        WHEN v1.content != v2.content THEN 'content changed'\n    END as change_type,\n    v1.title as old_title,\n    v2.title as new_title,\n    v1.content as old_content,\n    v2.content as new_content\nFROM v1, v2;\n\n-- \ub378\ud0c0\ub85c \ubcc0\uacbd \uc774\ub825\nSELECT\n    version,\n    changes->>'field' as field,\n    changes->'old' as old_value,\n    changes->'new' as new_value,\n    created_at\nFROM document_deltas\nWHERE document_id = 1\nORDER BY version;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\ubc84\uc804-\ud1b5\uacc4",children:"\ubc84\uc804 \ud1b5\uacc4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"-- \ubb38\uc11c\ubcc4 \ubc84\uc804 \uc218\nSELECT\n    d.id,\n    d.title,\n    COUNT(dv.id) as version_count,\n    MAX(dv.created_at) as last_modified\nFROM documents d\nLEFT JOIN document_versions dv ON d.id = dv.document_id\nGROUP BY d.id, d.title\nORDER BY version_count DESC;\n\n-- \uac00\uc7a5 \ud65c\ubc1c\ud55c \ubb38\uc11c\nSELECT\n    document_id,\n    COUNT(*) as edit_count,\n    COUNT(DISTINCT author_id) as contributor_count,\n    MAX(created_at) - MIN(created_at) as lifetime\nFROM document_versions\nGROUP BY document_id\nORDER BY edit_count DESC\nLIMIT 10;\n\n-- \uc0ac\uc6a9\uc790\ubcc4 \ud3b8\uc9d1 \ud1b5\uacc4\nSELECT\n    u.username,\n    COUNT(*) as edit_count,\n    COUNT(DISTINCT dv.document_id) as documents_edited\nFROM document_versions dv\nJOIN users u ON dv.author_id = u.id\nGROUP BY u.id, u.username\nORDER BY edit_count DESC;\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\ufe0f-\uc131\ub2a5-\ucd5c\uc801\ud654",children:"\ud83d\uddc4\ufe0f \uc131\ub2a5 \ucd5c\uc801\ud654"}),"\n",(0,s.jsx)(e.h3,{id:"\ud30c\ud2f0\uc154\ub2dd",children:"\ud30c\ud2f0\uc154\ub2dd"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"-- \uc624\ub798\ub41c \ubc84\uc804\uc740 \ubcc4\ub3c4 \ud30c\ud2f0\uc158\nCREATE TABLE document_versions (\n    id BIGSERIAL,\n    document_id BIGINT NOT NULL,\n    version INTEGER NOT NULL,\n    title VARCHAR(200) NOT NULL,\n    content TEXT,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n) PARTITION BY RANGE (created_at);\n\n-- \ud604\uc7ac \ubc84\uc804 (\uc790\uc8fc \uc811\uadfc)\nCREATE TABLE document_versions_current PARTITION OF document_versions\nFOR VALUES FROM ('2024-01-01') TO ('2025-01-01');\n\n-- \uacfc\uac70 \ubc84\uc804 (\ub4dc\ubb3c\uac8c \uc811\uadfc)\nCREATE TABLE document_versions_2023 PARTITION OF document_versions\nFOR VALUES FROM ('2023-01-01') TO ('2024-01-01');\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\uc555\ucd95",children:"\uc555\ucd95"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sql",children:"-- \uc624\ub798\ub41c \ubc84\uc804 \uc555\ucd95 (TOAST)\nALTER TABLE document_versions\nALTER COLUMN content SET STORAGE EXTERNAL;  -- \uc555\ucd95 \ud65c\uc131\ud654\n\n-- \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub808\ubca8\uc5d0\uc11c \uc555\ucd95\nCREATE TABLE document_versions (\n    id BIGSERIAL PRIMARY KEY,\n    document_id BIGINT NOT NULL,\n    version INTEGER NOT NULL,\n    title VARCHAR(200) NOT NULL,\n    content_compressed BYTEA,  -- gzip \uc555\ucd95\ub41c \ub0b4\uc6a9\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n"})}),"\n",(0,s.jsx)(e.h2,{id:"-\ubc84\uc804-\uad00\ub9ac-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\u2705 \ubc84\uc804 \uad00\ub9ac \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,s.jsx)(e.h3,{id:"\uc124\uacc4",children:"\uc124\uacc4"}),"\n",(0,s.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubc84\uc804 \uad00\ub9ac \uc804\ub7b5 \uc120\ud0dd (\ubcc4\ub3c4 \ud14c\uc774\ube14 vs \ub2e8\uc77c \ud14c\uc774\ube14)"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc804\uccb4 \uc800\uc7a5 vs \ucc28\ubd84 \uc800\uc7a5 \uacb0\uc815"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubcf4\uc874 \uae30\uac04 \uc815\ucc45"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ub3d9\uc2dc\uc131 \uc81c\uc5b4 \ubc29\uc2dd"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\uae30\ub2a5",children:"\uae30\ub2a5"}),"\n",(0,s.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubc84\uc804 \uc0dd\uc131 \uc790\ub3d9\ud654 (\ud2b8\ub9ac\uac70)"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubc84\uc804 \uc870\ud68c \ucffc\ub9ac"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubc84\uc804 \ube44\uad50 \uae30\ub2a5"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud2b9\uc815 \ubc84\uc804 \ubcf5\uc6d0 \uae30\ub2a5"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\uc131\ub2a5",children:"\uc131\ub2a5"}),"\n",(0,s.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc778\ub371\uc2a4 \ucd5c\uc801\ud654"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud30c\ud2f0\uc154\ub2dd (\ub300\uc6a9\ub7c9)"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc624\ub798\ub41c \ubc84\uc804 \uc544\uce74\uc774\ube0c"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc555\ucd95 \uace0\ub824"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\ubcf4\uc548",children:"\ubcf4\uc548"}),"\n",(0,s.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubc84\uc804 \uc811\uadfc \uad8c\ud55c"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubcc0\uacbd \ucd94\uc801 (\ub204\uac00)"]}),"\n",(0,s.jsxs)(e.li,{className:"task-list-item",children:[(0,s.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubb34\uacb0\uc131 \ubcf4\uc7a5"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"-\ubaa8\ubc94-\uc0ac\ub840",children:"\ud83d\udca1 \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'versioning_best_practices = {\n    "\uc790\ub3d9\ud654": "\ud2b8\ub9ac\uac70\ub85c \ubc84\uc804 \uc790\ub3d9 \uc0dd\uc131",\n    "\ubd88\ubcc0\uc131": "\uc774\uc804 \ubc84\uc804\uc740 \uc218\uc815 \ubd88\uac00",\n    "\uba54\ud0c0\ub370\uc774\ud130": "\ub204\uac00, \uc5b8\uc81c, \uc65c \ubcc0\uacbd\ud588\ub294\uc9c0 \uae30\ub85d",\n    "\uc131\ub2a5": "\ud604\uc7ac \ubc84\uc804\uc740 \ube60\ub974\uac8c, \uc774\uc804 \ubc84\uc804\uc740 \ubcc4\ub3c4 \uc800\uc7a5",\n    "\uc815\ub9ac": "\uc624\ub798\ub41c \ubc84\uc804 \uc815\uae30\uc801\uc73c\ub85c \uc544\uce74\uc774\ube0c",\n    "UI": "\ubc84\uc804 \ube44\uad50 \ubc0f \ubcf5\uc6d0 UI \uc81c\uacf5"\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83d\ude80 \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,s.jsx)(e.p,{children:"Patterns \uc139\uc158\uc744 \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \uc2e4\uc81c \uc2dc\uc2a4\ud15c \uc124\uacc4 \uc0ac\ub840\ub97c \ubc30\uc6cc\ubd05\uc2dc\ub2e4."}),"\n",(0,s.jsxs)(e.p,{children:["\ud83d\udc49 ",(0,s.jsx)(e.a,{href:"../scenarios/ecommerce",children:"\uc804\uc790\uc0c1\uac70\ub798"})]})]})}function l(n={}){const{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>o});var i=t(6540);const s={},d=i.createContext(s);function c(n){const e=i.useContext(d);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),i.createElement(d.Provider,{value:e},n.children)}}}]);