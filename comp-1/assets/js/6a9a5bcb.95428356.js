"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[5060],{7578:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>N,frontMatter:()=>E,metadata:()=>d,toc:()=>r});const d=JSON.parse('{"id":"database/patterns/soft-delete","title":"\uc18c\ud504\ud2b8 \uc0ad\uc81c","description":"\ub370\uc774\ud130\ub97c \ubcf4\uc874\ud558\uba74\uc11c \uc0ad\uc81c \uae30\ub2a5 \uad6c\ud604\ud558\uae30","source":"@site/docs/database/patterns/soft-delete.md","sourceDirName":"database/patterns","slug":"/database/patterns/soft-delete","permalink":"/docs/database/patterns/soft-delete","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/database/patterns/soft-delete.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"slug":"/database/patterns/soft-delete"},"sidebar":"databaseSidebar","previous":{"title":"\uacf5\ud1b5 \ud328\ud134","permalink":"/docs/database/patterns/common-patterns"},"next":{"title":"\uac10\uc0ac \ub85c\uadf8","permalink":"/docs/database/patterns/audit-log"}}');var l=s(4848),t=s(8453);const E={sidebar_position:2,slug:"/database/patterns/soft-delete"},a="\uc18c\ud504\ud2b8 \uc0ad\uc81c",i={},r=[{value:"\ud83c\udfaf \uc18c\ud504\ud2b8 \uc0ad\uc81c\uac00 \ud544\uc694\ud55c \uc774\uc720",id:"-\uc18c\ud504\ud2b8-\uc0ad\uc81c\uac00-\ud544\uc694\ud55c-\uc774\uc720",level:2},{value:"\ud558\ub4dc \uc0ad\uc81c vs \uc18c\ud504\ud2b8 \uc0ad\uc81c",id:"\ud558\ub4dc-\uc0ad\uc81c-vs-\uc18c\ud504\ud2b8-\uc0ad\uc81c",level:3},{value:"\uc18c\ud504\ud2b8 \uc0ad\uc81c\uc758 \uc7a5\uc810",id:"\uc18c\ud504\ud2b8-\uc0ad\uc81c\uc758-\uc7a5\uc810",level:3},{value:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604",id:"-\uae30\ubcf8-\uad6c\ud604",level:2},{value:"\ub2e8\uc21c \uc18c\ud504\ud2b8 \uc0ad\uc81c",id:"\ub2e8\uc21c-\uc18c\ud504\ud2b8-\uc0ad\uc81c",level:3},{value:"\uc0ad\uc81c \uc0ac\uc6a9\uc790 \uc815\ubcf4 \ucd94\uc801",id:"\uc0ad\uc81c-\uc0ac\uc6a9\uc790-\uc815\ubcf4-\ucd94\uc801",level:3},{value:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134",id:"-\uace0\uae09-\ud328\ud134",level:2},{value:"\ubdf0\ub97c \uc0ac\uc6a9\ud55c \ucd94\uc0c1\ud654",id:"\ubdf0\ub97c-\uc0ac\uc6a9\ud55c-\ucd94\uc0c1\ud654",level:3},{value:"UNIQUE \uc81c\uc57d\uc870\uac74 \ucc98\ub9ac",id:"unique-\uc81c\uc57d\uc870\uac74-\ucc98\ub9ac",level:3},{value:"\uc678\ub798 \ud0a4 \ucc98\ub9ac",id:"\uc678\ub798-\ud0a4-\ucc98\ub9ac",level:3},{value:"\ubcf5\uad6c \uae30\ub2a5",id:"\ubcf5\uad6c-\uae30\ub2a5",level:3},{value:"\ud83d\uddc4\ufe0f \ub300\uc6a9\ub7c9 \ub370\uc774\ud130 \ucc98\ub9ac",id:"\ufe0f-\ub300\uc6a9\ub7c9-\ub370\uc774\ud130-\ucc98\ub9ac",level:2},{value:"\ud30c\ud2f0\uc154\ub2dd\uc73c\ub85c \uc131\ub2a5 \uac1c\uc120",id:"\ud30c\ud2f0\uc154\ub2dd\uc73c\ub85c-\uc131\ub2a5-\uac1c\uc120",level:3},{value:"\uc815\uae30\uc801\uc778 \ud558\ub4dc \uc0ad\uc81c",id:"\uc815\uae30\uc801\uc778-\ud558\ub4dc-\uc0ad\uc81c",level:3},{value:"\ud83d\udcca \ucffc\ub9ac \ud328\ud134",id:"-\ucffc\ub9ac-\ud328\ud134",level:2},{value:"\uae30\ubcf8 \ucffc\ub9ac",id:"\uae30\ubcf8-\ucffc\ub9ac",level:3},{value:"JOIN \ucffc\ub9ac",id:"join-\ucffc\ub9ac",level:3},{value:"\uc9d1\uacc4 \ucffc\ub9ac",id:"\uc9d1\uacc4-\ucffc\ub9ac",level:3},{value:"\ud83d\udd10 \ubcf4\uc548 \uace0\ub824\uc0ac\ud56d",id:"-\ubcf4\uc548-\uace0\ub824\uc0ac\ud56d",level:2},{value:"\uad8c\ud55c \uad00\ub9ac",id:"\uad8c\ud55c-\uad00\ub9ac",level:3},{value:"GDPR \uc900\uc218",id:"gdpr-\uc900\uc218",level:3},{value:"\u2705 \uc18c\ud504\ud2b8 \uc0ad\uc81c \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"-\uc18c\ud504\ud2b8-\uc0ad\uc81c-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\uc124\uacc4",id:"\uc124\uacc4",level:3},{value:"\ucffc\ub9ac",id:"\ucffc\ub9ac",level:3},{value:"\uc131\ub2a5",id:"\uc131\ub2a5",level:3},{value:"\ubcf4\uc548",id:"\ubcf4\uc548",level:3},{value:"\ud83d\udca1 \uc5b8\uc81c \uc0ac\uc6a9\ud558\ub098?",id:"-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\ub098",level:2},{value:"\ud83d\ude80 \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function T(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"\uc18c\ud504\ud2b8-\uc0ad\uc81c",children:"\uc18c\ud504\ud2b8 \uc0ad\uc81c"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"\ub370\uc774\ud130\ub97c \ubcf4\uc874\ud558\uba74\uc11c \uc0ad\uc81c \uae30\ub2a5 \uad6c\ud604\ud558\uae30"})}),"\n",(0,l.jsx)(n.p,{children:'\uc18c\ud504\ud2b8 \uc0ad\uc81c(Soft Delete)\ub294 \ub370\uc774\ud130\ub97c \uc2e4\uc81c\ub85c \uc0ad\uc81c\ud558\uc9c0 \uc54a\uace0 "\uc0ad\uc81c\ub428" \ud45c\uc2dc\ub9cc \ud558\ub294 \ud328\ud134\uc785\ub2c8\ub2e4. \ub370\uc774\ud130 \ubcf5\uad6c, \uac10\uc0ac, \uaddc\uc815 \uc900\uc218\uc5d0 \ud544\uc218\uc801\uc785\ub2c8\ub2e4.'}),"\n",(0,l.jsx)(n.h2,{id:"-\uc18c\ud504\ud2b8-\uc0ad\uc81c\uac00-\ud544\uc694\ud55c-\uc774\uc720",children:"\ud83c\udfaf \uc18c\ud504\ud2b8 \uc0ad\uc81c\uac00 \ud544\uc694\ud55c \uc774\uc720"}),"\n",(0,l.jsx)(n.h3,{id:"\ud558\ub4dc-\uc0ad\uc81c-vs-\uc18c\ud504\ud2b8-\uc0ad\uc81c",children:"\ud558\ub4dc \uc0ad\uc81c vs \uc18c\ud504\ud2b8 \uc0ad\uc81c"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \u274c \ud558\ub4dc \uc0ad\uc81c (Hard Delete)\nDELETE FROM users WHERE id = 1;\n-- \ub370\uc774\ud130 \uc601\uad6c \uc0ad\uc81c, \ubcf5\uad6c \ubd88\uac00\n\n-- \u2705 \uc18c\ud504\ud2b8 \uc0ad\uc81c (Soft Delete)\nUPDATE users SET deleted_at = CURRENT_TIMESTAMP WHERE id = 1;\n-- \ub370\uc774\ud130 \ubcf4\uc874, \ubcf5\uad6c \uac00\ub2a5\n"})}),"\n",(0,l.jsx)(n.h3,{id:"\uc18c\ud504\ud2b8-\uc0ad\uc81c\uc758-\uc7a5\uc810",children:"\uc18c\ud504\ud2b8 \uc0ad\uc81c\uc758 \uc7a5\uc810"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'soft_delete_benefits = {\n    "\ub370\uc774\ud130 \ubcf5\uad6c": "\uc2e4\uc218\ub85c \uc0ad\uc81c\ud55c \ub370\uc774\ud130 \ubcf5\uc6d0 \uac00\ub2a5",\n    "\uac10\uc0ac \ucd94\uc801": "\uc0ad\uc81c \uc774\ub825 \ubcf4\uc874",\n    "\uaddc\uc815 \uc900\uc218": "GDPR, \uae08\uc735 \uaddc\uc81c \ub4f1 \ub370\uc774\ud130 \ubcf4\uc874 \uc694\uad6c\uc0ac\ud56d",\n    "\ucc38\uc870 \ubb34\uacb0\uc131": "\uc678\ub798 \ud0a4 \uad00\uacc4 \uc720\uc9c0",\n    "\ubd84\uc11d": "\uc0ad\uc81c\ub41c \ub370\uc774\ud130 \ud1b5\uacc4 \ubd84\uc11d \uac00\ub2a5"\n}\n\nsoft_delete_drawbacks = {\n    "\ucffc\ub9ac \ubcf5\uc7a1\ub3c4": "\ud56d\uc0c1 WHERE deleted_at IS NULL \ucd94\uac00",\n    "\uc778\ub371\uc2a4 \ud06c\uae30": "\uc0ad\uc81c\ub41c \ub370\uc774\ud130\ub3c4 \uc778\ub371\uc2a4\uc5d0 \ud3ec\ud568",\n    "UNIQUE \uc81c\uc57d": "\uc0ad\uc81c\ub41c \ub370\uc774\ud130\ub3c4 \uace0\ub824 \ud544\uc694",\n    "\uc131\ub2a5": "\ud14c\uc774\ube14 \ud06c\uae30 \uc99d\uac00\ub85c \uc2a4\uce94 \ub290\ub824\uc9c8 \uc218 \uc788\uc74c"\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"-\uae30\ubcf8-\uad6c\ud604",children:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604"}),"\n",(0,l.jsx)(n.h3,{id:"\ub2e8\uc21c-\uc18c\ud504\ud2b8-\uc0ad\uc81c",children:"\ub2e8\uc21c \uc18c\ud504\ud2b8 \uc0ad\uc81c"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    email VARCHAR(255) NOT NULL,\n    username VARCHAR(50) NOT NULL,\n\n    -- \uc18c\ud504\ud2b8 \uc0ad\uc81c \uceec\ub7fc\n    deleted_at TIMESTAMPTZ,  -- NULL = \ud65c\uc131, NOT NULL = \uc0ad\uc81c\ub428\n\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \ud65c\uc131 \uc0ac\uc6a9\uc790\ub9cc \uc870\ud68c\nSELECT * FROM users WHERE deleted_at IS NULL;\n\n-- \uc0ad\uc81c\ub41c \uc0ac\uc6a9\uc790\ub9cc \uc870\ud68c\nSELECT * FROM users WHERE deleted_at IS NOT NULL;\n\n-- \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \uc870\ud68c (\uc0ad\uc81c \ud3ec\ud568)\nSELECT * FROM users;\n\n-- \uc18c\ud504\ud2b8 \uc0ad\uc81c \uc2e4\ud589\nUPDATE users\nSET deleted_at = CURRENT_TIMESTAMP,\n    updated_at = CURRENT_TIMESTAMP\nWHERE id = 1;\n\n-- \ubcf5\uad6c\nUPDATE users\nSET deleted_at = NULL,\n    updated_at = CURRENT_TIMESTAMP\nWHERE id = 1;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"\uc0ad\uc81c-\uc0ac\uc6a9\uc790-\uc815\ubcf4-\ucd94\uc801",children:"\uc0ad\uc81c \uc0ac\uc6a9\uc790 \uc815\ubcf4 \ucd94\uc801"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    email VARCHAR(255) NOT NULL,\n    username VARCHAR(50) NOT NULL,\n\n    -- \uc18c\ud504\ud2b8 \uc0ad\uc81c\n    deleted_at TIMESTAMPTZ,\n    deleted_by BIGINT REFERENCES users(id),  -- \ub204\uac00 \uc0ad\uc81c\ud588\ub294\uc9c0\n    deletion_reason TEXT,  -- \uc0ad\uc81c \uc0ac\uc720\n\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \uc0ad\uc81c \ud568\uc218\nCREATE OR REPLACE FUNCTION soft_delete_user(\n    p_user_id BIGINT,\n    p_deleted_by BIGINT,\n    p_reason TEXT DEFAULT NULL\n) RETURNS void AS $$\nBEGIN\n    UPDATE users\n    SET\n        deleted_at = CURRENT_TIMESTAMP,\n        deleted_by = p_deleted_by,\n        deletion_reason = p_reason,\n        updated_at = CURRENT_TIMESTAMP\n    WHERE id = p_user_id\n      AND deleted_at IS NULL;  -- \uc774\ubbf8 \uc0ad\uc81c\ub41c \uacbd\uc6b0 \ubb34\uc2dc\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc0ac\uc6a9\nSELECT soft_delete_user(1, 100, '\uaddc\uc815 \uc704\ubc18');\n"})}),"\n",(0,l.jsx)(n.h2,{id:"-\uace0\uae09-\ud328\ud134",children:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134"}),"\n",(0,l.jsx)(n.h3,{id:"\ubdf0\ub97c-\uc0ac\uc6a9\ud55c-\ucd94\uc0c1\ud654",children:"\ubdf0\ub97c \uc0ac\uc6a9\ud55c \ucd94\uc0c1\ud654"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ud65c\uc131 \ub808\ucf54\ub4dc\ub9cc \ubcf4\ub294 \ubdf0\nCREATE VIEW active_users AS\nSELECT *\nFROM users\nWHERE deleted_at IS NULL;\n\n-- \uc0ad\uc81c\ub41c \ub808\ucf54\ub4dc\ub9cc \ubcf4\ub294 \ubdf0\nCREATE VIEW deleted_users AS\nSELECT *\nFROM users\nWHERE deleted_at IS NOT NULL;\n\n-- \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubdf0 \uc0ac\uc6a9\nSELECT * FROM active_users WHERE email = 'alice@example.com';\n\n-- \uc7a5\uc810: WHERE \uc808 \ubc18\ubcf5 \uc81c\uac70\n-- \ub2e8\uc810: INSERT/UPDATE\uac00 \ubcf5\uc7a1\ud574\uc9c8 \uc218 \uc788\uc74c\n"})}),"\n",(0,l.jsx)(n.h3,{id:"unique-\uc81c\uc57d\uc870\uac74-\ucc98\ub9ac",children:"UNIQUE \uc81c\uc57d\uc870\uac74 \ucc98\ub9ac"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ubb38\uc81c: \uc18c\ud504\ud2b8 \uc0ad\uc81c \uc2dc UNIQUE \ucda9\ub3cc\nCREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    email VARCHAR(255) UNIQUE NOT NULL,  -- \ubb38\uc81c!\n    username VARCHAR(50) UNIQUE NOT NULL,\n    deleted_at TIMESTAMPTZ\n);\n\n-- \uc2dc\ub098\ub9ac\uc624:\n-- 1. user@example.com \uc0dd\uc131\n-- 2. user@example.com \uc18c\ud504\ud2b8 \uc0ad\uc81c\n-- 3. user@example.com \ub2e4\uc2dc \uc0dd\uc131 \u2192 UNIQUE \uc81c\uc57d \uc704\ubc18!\n\n-- \u2705 \ud574\uacb0\ucc45 1: \ubd80\ubd84 UNIQUE \uc778\ub371\uc2a4 (PostgreSQL)\nCREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    email VARCHAR(255) NOT NULL,\n    username VARCHAR(50) NOT NULL,\n    deleted_at TIMESTAMPTZ,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \ud65c\uc131 \uc0ac\uc6a9\uc790\ub9cc UNIQUE\nCREATE UNIQUE INDEX uq_active_users_email\nON users(email)\nWHERE deleted_at IS NULL;\n\nCREATE UNIQUE INDEX uq_active_users_username\nON users(username)\nWHERE deleted_at IS NULL;\n\n-- \ud65c\uc131 \uc0ac\uc6a9\uc790\ub294 email \uc911\ubcf5 \ubd88\uac00\n-- \uc0ad\uc81c\ub41c \uc0ac\uc6a9\uc790\ub294 email \uc911\ubcf5 \uac00\ub2a5\n\n-- \u2705 \ud574\uacb0\ucc45 2: \ubcf5\ud569 UNIQUE (email + deleted_at)\nCREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    email VARCHAR(255) NOT NULL,\n    username VARCHAR(50) NOT NULL,\n    deleted_at TIMESTAMPTZ DEFAULT TIMESTAMPTZ '-infinity',  -- \uae30\ubcf8\uac12 \uc124\uc815\n\n    UNIQUE (email, deleted_at),\n    UNIQUE (username, deleted_at)\n);\n\n-- \uac01 deleted_at \uac12\ub9c8\ub2e4 email UNIQUE\n-- \ub2e8\uc810: \ucffc\ub9ac \uc2dc deleted_at \uc870\uac74 \ud544\uc218\n\n-- \u2705 \ud574\uacb0\ucc45 3: \uc0ad\uc81c \uc2dc email \ubcc0\uacbd\nCREATE OR REPLACE FUNCTION soft_delete_user(p_user_id BIGINT)\nRETURNS void AS $$\nBEGIN\n    UPDATE users\n    SET\n        email = email || '.deleted.' || id || '.' || EXTRACT(EPOCH FROM CURRENT_TIMESTAMP),\n        username = username || '.deleted.' || id,\n        deleted_at = CURRENT_TIMESTAMP\n    WHERE id = p_user_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- alice@example.com \u2192 alice@example.com.deleted.123.1234567890\n-- \uc7a5\uc810: \ub2e8\uc21c\ud568, \uae30\uc874 UNIQUE \uc81c\uc57d \uc720\uc9c0\n-- \ub2e8\uc810: \uc6d0\ubcf8 \ub370\uc774\ud130 \ubcc0\uacbd, \ubcf5\uad6c \uc2dc \ubcf5\uc7a1\n"})}),"\n",(0,l.jsx)(n.h3,{id:"\uc678\ub798-\ud0a4-\ucc98\ub9ac",children:"\uc678\ub798 \ud0a4 \ucc98\ub9ac"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:'-- \ubb38\uc81c: \uc18c\ud504\ud2b8 \uc0ad\uc81c\ub41c \ubd80\ubaa8 \ub808\ucf54\ub4dc \ucc38\uc870\n\nCREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    deleted_at TIMESTAMPTZ\n);\n\nCREATE TABLE posts (\n    id BIGSERIAL PRIMARY KEY,\n    user_id BIGINT NOT NULL REFERENCES users(id),\n    title VARCHAR(200) NOT NULL,\n    deleted_at TIMESTAMPTZ\n);\n\n-- \uc2dc\ub098\ub9ac\uc624:\n-- 1. user_id=1 \uc18c\ud504\ud2b8 \uc0ad\uc81c\n-- 2. posts\uc5d0\uc11c user_id=1\uc778 \uac8c\uc2dc\ubb3c\uc740?\n--    - \uc5ec\uc804\ud788 \uc874\uc7ac (FK\ub294 \uc720\ud6a8)\n--    - \ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790\ub294 "\uc0ad\uc81c\ub428"\n\n-- \u2705 \ud574\uacb0\ucc45 1: \uc5f0\uc1c4 \uc18c\ud504\ud2b8 \uc0ad\uc81c\nCREATE OR REPLACE FUNCTION soft_delete_user_cascade(p_user_id BIGINT)\nRETURNS void AS $$\nBEGIN\n    -- \uad00\ub828 \uac8c\uc2dc\ubb3c\ub3c4 \uc18c\ud504\ud2b8 \uc0ad\uc81c\n    UPDATE posts\n    SET deleted_at = CURRENT_TIMESTAMP\n    WHERE user_id = p_user_id\n      AND deleted_at IS NULL;\n\n    -- \uc0ac\uc6a9\uc790 \uc18c\ud504\ud2b8 \uc0ad\uc81c\n    UPDATE users\n    SET deleted_at = CURRENT_TIMESTAMP\n    WHERE id = p_user_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \u2705 \ud574\uacb0\ucc45 2: \ud2b8\ub9ac\uac70\ub85c \uc790\ub3d9\ud654\nCREATE OR REPLACE FUNCTION cascade_soft_delete_to_posts()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF NEW.deleted_at IS NOT NULL AND OLD.deleted_at IS NULL THEN\n        UPDATE posts\n        SET deleted_at = NEW.deleted_at\n        WHERE user_id = NEW.id\n          AND deleted_at IS NULL;\n    END IF;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER user_soft_delete_cascade\nAFTER UPDATE ON users\nFOR EACH ROW\nEXECUTE FUNCTION cascade_soft_delete_to_posts();\n\n-- \u2705 \ud574\uacb0\ucc45 3: \uc0ad\uc81c\ub41c \ub808\ucf54\ub4dc \uc81c\uc678 \uc870\ud68c\nSELECT p.*, u.username\nFROM posts p\nJOIN users u ON p.user_id = u.id\nWHERE p.deleted_at IS NULL\n  AND u.deleted_at IS NULL;  -- \uc0ad\uc81c\ub41c \uc0ac\uc6a9\uc790 \uc81c\uc678\n'})}),"\n",(0,l.jsx)(n.h3,{id:"\ubcf5\uad6c-\uae30\ub2a5",children:"\ubcf5\uad6c \uae30\ub2a5"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ub2e8\uc21c \ubcf5\uad6c\nCREATE OR REPLACE FUNCTION restore_user(p_user_id BIGINT)\nRETURNS void AS $$\nBEGIN\n    UPDATE users\n    SET deleted_at = NULL,\n        deleted_by = NULL,\n        deletion_reason = NULL,\n        updated_at = CURRENT_TIMESTAMP\n    WHERE id = p_user_id;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc5f0\uc1c4 \ubcf5\uad6c (\uc790\uc2dd \ub808\ucf54\ub4dc\ub3c4 \ubcf5\uad6c)\nCREATE OR REPLACE FUNCTION restore_user_cascade(p_user_id BIGINT)\nRETURNS void AS $$\nBEGIN\n    -- \uc0ac\uc6a9\uc790 \ubcf5\uad6c\n    UPDATE users\n    SET deleted_at = NULL,\n        updated_at = CURRENT_TIMESTAMP\n    WHERE id = p_user_id;\n\n    -- \ud574\ub2f9 \uc0ac\uc6a9\uc790\uc758 \uac8c\uc2dc\ubb3c\ub3c4 \ubcf5\uad6c\n    UPDATE posts\n    SET deleted_at = NULL,\n        updated_at = CURRENT_TIMESTAMP\n    WHERE user_id = p_user_id\n      AND deleted_at IS NOT NULL;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"\ufe0f-\ub300\uc6a9\ub7c9-\ub370\uc774\ud130-\ucc98\ub9ac",children:"\ud83d\uddc4\ufe0f \ub300\uc6a9\ub7c9 \ub370\uc774\ud130 \ucc98\ub9ac"}),"\n",(0,l.jsx)(n.h3,{id:"\ud30c\ud2f0\uc154\ub2dd\uc73c\ub85c-\uc131\ub2a5-\uac1c\uc120",children:"\ud30c\ud2f0\uc154\ub2dd\uc73c\ub85c \uc131\ub2a5 \uac1c\uc120"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ud65c\uc131/\uc0ad\uc81c \ub370\uc774\ud130 \ud30c\ud2f0\uc154\ub2dd\nCREATE TABLE users (\n    id BIGSERIAL,\n    email VARCHAR(255) NOT NULL,\n    username VARCHAR(50) NOT NULL,\n    deleted_at TIMESTAMPTZ,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n) PARTITION BY LIST (\n    CASE WHEN deleted_at IS NULL THEN 'active' ELSE 'deleted' END\n);\n\n-- \ud65c\uc131 \uc0ac\uc6a9\uc790 \ud30c\ud2f0\uc158\nCREATE TABLE users_active PARTITION OF users\nFOR VALUES IN ('active');\n\n-- \uc0ad\uc81c\ub41c \uc0ac\uc6a9\uc790 \ud30c\ud2f0\uc158\nCREATE TABLE users_deleted PARTITION OF users\nFOR VALUES IN ('deleted');\n\n-- \uc7a5\uc810: \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc870\ud68c \uc2dc users_active\ub9cc \uc2a4\uce94 (\ube60\ub984)\nSELECT * FROM users WHERE deleted_at IS NULL;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"\uc815\uae30\uc801\uc778-\ud558\ub4dc-\uc0ad\uc81c",children:"\uc815\uae30\uc801\uc778 \ud558\ub4dc \uc0ad\uc81c"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \uc77c\uc815 \uae30\uac04 \ud6c4 \uc601\uad6c \uc0ad\uc81c\nCREATE OR REPLACE FUNCTION purge_old_deleted_records()\nRETURNS void AS $$\nBEGIN\n    -- 30\uc77c \uc774\uc0c1 \uc0ad\uc81c\ub41c \ub808\ucf54\ub4dc \uc601\uad6c \uc0ad\uc81c\n    DELETE FROM users\n    WHERE deleted_at IS NOT NULL\n      AND deleted_at < CURRENT_TIMESTAMP - INTERVAL '30 days';\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Cron\uc73c\ub85c \uc8fc\uae30\uc801 \uc2e4\ud589\nSELECT cron.schedule('purge-deleted-users', '0 2 * * *',\n    'SELECT purge_old_deleted_records()');\n\n-- \ub610\ub294 \uc544\uce74\uc774\ube0c \ud14c\uc774\ube14\ub85c \uc774\ub3d9\nCREATE TABLE users_archive (\n    LIKE users INCLUDING ALL\n);\n\nCREATE OR REPLACE FUNCTION archive_old_deleted_users()\nRETURNS void AS $$\nBEGIN\n    -- \uc544\uce74\uc774\ube0c\ub85c \uc774\ub3d9\n    INSERT INTO users_archive\n    SELECT *\n    FROM users\n    WHERE deleted_at IS NOT NULL\n      AND deleted_at < CURRENT_TIMESTAMP - INTERVAL '90 days';\n\n    -- \uc6d0\ubcf8\uc5d0\uc11c \uc0ad\uc81c\n    DELETE FROM users\n    WHERE deleted_at IS NOT NULL\n      AND deleted_at < CURRENT_TIMESTAMP - INTERVAL '90 days';\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"-\ucffc\ub9ac-\ud328\ud134",children:"\ud83d\udcca \ucffc\ub9ac \ud328\ud134"}),"\n",(0,l.jsx)(n.h3,{id:"\uae30\ubcf8-\ucffc\ub9ac",children:"\uae30\ubcf8 \ucffc\ub9ac"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ud65c\uc131 \ub808\ucf54\ub4dc\ub9cc\nSELECT * FROM users\nWHERE deleted_at IS NULL;\n\n-- \ucd5c\uadfc \uc0ad\uc81c\ub41c \ub808\ucf54\ub4dc\nSELECT * FROM users\nWHERE deleted_at IS NOT NULL\nORDER BY deleted_at DESC\nLIMIT 10;\n\n-- \ud2b9\uc815 \uae30\uac04 \uc0ad\uc81c \ub808\ucf54\ub4dc\nSELECT * FROM users\nWHERE deleted_at BETWEEN '2024-01-01' AND '2024-01-31';\n\n-- \uc0ad\uc81c \ud1b5\uacc4\nSELECT\n    DATE(deleted_at) as deleted_date,\n    COUNT(*) as deleted_count\nFROM users\nWHERE deleted_at IS NOT NULL\nGROUP BY DATE(deleted_at)\nORDER BY deleted_date DESC;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"join-\ucffc\ub9ac",children:"JOIN \ucffc\ub9ac"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ud65c\uc131 \ub808\ucf54\ub4dc\ub9cc JOIN\nSELECT p.*, u.username\nFROM posts p\nJOIN users u ON p.user_id = u.id\nWHERE p.deleted_at IS NULL\n  AND u.deleted_at IS NULL;\n\n-- \ubdf0 \ud65c\uc6a9 (\uac04\uacb0\ud568)\nCREATE VIEW active_posts AS\nSELECT * FROM posts WHERE deleted_at IS NULL;\n\nCREATE VIEW active_users AS\nSELECT * FROM users WHERE deleted_at IS NULL;\n\nSELECT p.*, u.username\nFROM active_posts p\nJOIN active_users u ON p.user_id = u.id;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"\uc9d1\uacc4-\ucffc\ub9ac",children:"\uc9d1\uacc4 \ucffc\ub9ac"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \ud65c\uc131/\uc0ad\uc81c \uce74\uc6b4\ud2b8\nSELECT\n    COUNT(*) FILTER (WHERE deleted_at IS NULL) as active_count,\n    COUNT(*) FILTER (WHERE deleted_at IS NOT NULL) as deleted_count,\n    COUNT(*) as total_count\nFROM users;\n\n-- \uc0ac\uc6a9\uc790\ubcc4 \uac8c\uc2dc\ubb3c \uc218 (\ud65c\uc131\ub9cc)\nSELECT\n    u.username,\n    COUNT(p.id) as post_count\nFROM users u\nLEFT JOIN posts p ON u.user_id = p.user_id\n    AND p.deleted_at IS NULL\nWHERE u.deleted_at IS NULL\nGROUP BY u.id, u.username;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"-\ubcf4\uc548-\uace0\ub824\uc0ac\ud56d",children:"\ud83d\udd10 \ubcf4\uc548 \uace0\ub824\uc0ac\ud56d"}),"\n",(0,l.jsx)(n.h3,{id:"\uad8c\ud55c-\uad00\ub9ac",children:"\uad8c\ud55c \uad00\ub9ac"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- \uc77c\ubc18 \uc0ac\uc6a9\uc790: \uc18c\ud504\ud2b8 \uc0ad\uc81c\ub9cc \uac00\ub2a5\nGRANT SELECT, INSERT, UPDATE ON users TO app_user;\nREVOKE DELETE ON users FROM app_user;\n\n-- \uad00\ub9ac\uc790: \ud558\ub4dc \uc0ad\uc81c \uac00\ub2a5\nGRANT ALL ON users TO admin_user;\n\n-- \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud568\uc218\ub85c \uc81c\uc5b4\nCREATE OR REPLACE FUNCTION soft_delete_user(\n    p_user_id BIGINT,\n    p_deleted_by BIGINT\n) RETURNS void\nSECURITY DEFINER  -- \ud568\uc218 \uc18c\uc720\uc790 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\nAS $$\nBEGIN\n    -- \uad8c\ud55c \ud655\uc778 (\uc608: \uad00\ub9ac\uc790\ub9cc \uc0ad\uc81c \uac00\ub2a5)\n    IF NOT (SELECT is_admin FROM users WHERE id = p_deleted_by) THEN\n        RAISE EXCEPTION 'Insufficient privileges';\n    END IF;\n\n    UPDATE users\n    SET deleted_at = CURRENT_TIMESTAMP,\n        deleted_by = p_deleted_by\n    WHERE id = p_user_id;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"gdpr-\uc900\uc218",children:"GDPR \uc900\uc218"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- GDPR \"\uc78a\ud600\uc9c8 \uad8c\ub9ac\" (Right to be Forgotten)\n-- \uac1c\uc778\uc815\ubcf4\ub294 \uc601\uad6c \uc0ad\uc81c, \ud1b5\uacc4\ub294 \uc775\uba85\ud654\n\nCREATE OR REPLACE FUNCTION gdpr_delete_user(p_user_id BIGINT)\nRETURNS void AS $$\nBEGIN\n    -- 1. \uac1c\uc778\uc815\ubcf4 \uc0ad\uc81c\n    UPDATE users\n    SET\n        email = 'deleted-' || id || '@deleted.com',\n        username = 'deleted-' || id,\n        password_hash = '',\n        phone = NULL,\n        -- \ud1b5\uacc4\ub97c \uc704\ud574 \uc77c\ubd80 \ud544\ub4dc\ub294 \uc720\uc9c0\n        deleted_at = CURRENT_TIMESTAMP\n    WHERE id = p_user_id;\n\n    -- 2. \uad00\ub828 \uac1c\uc778\uc815\ubcf4\ub3c4 \uc0ad\uc81c\n    DELETE FROM user_profiles WHERE user_id = p_user_id;\n    DELETE FROM user_sessions WHERE user_id = p_user_id;\n\n    -- 3. \uac8c\uc2dc\ubb3c\uc740 \"\uc775\uba85 \uc0ac\uc6a9\uc790\"\ub85c\n    UPDATE posts\n    SET user_id = 0  -- 0 = \uc0ad\uc81c\ub41c \uc0ac\uc6a9\uc790\n    WHERE user_id = p_user_id;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"-\uc18c\ud504\ud2b8-\uc0ad\uc81c-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\u2705 \uc18c\ud504\ud2b8 \uc0ad\uc81c \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,l.jsx)(n.h3,{id:"\uc124\uacc4",children:"\uc124\uacc4"}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","deleted_at \uceec\ub7fc \ucd94\uac00 (TIMESTAMPTZ)"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","deleted_by \uceec\ub7fc \ucd94\uac00 (\ub204\uac00 \uc0ad\uc81c\ud588\ub294\uc9c0)"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","UNIQUE \uc81c\uc57d\uc870\uac74 \ucc98\ub9ac (\ubd80\ubd84 \uc778\ub371\uc2a4)"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uc678\ub798 \ud0a4 \ucc98\ub9ac \uc804\ub7b5 \uacb0\uc815"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\ucffc\ub9ac",children:"\ucffc\ub9ac"}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ubaa8\ub4e0 SELECT\uc5d0 deleted_at IS NULL \ucd94\uac00"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ubdf0 \ub610\ub294 \uc2a4\ucf54\ud504\ub85c \ucd94\uc0c1\ud654"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","JOIN \uc2dc \uc591\ucabd \ubaa8\ub450 deleted_at \ud655\uc778"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\uc131\ub2a5",children:"\uc131\ub2a5"}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","deleted_at \uc778\ub371\uc2a4 \ucd94\uac00 (\ud544\uc694\uc2dc)"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ud30c\ud2f0\uc154\ub2dd \uace0\ub824 (\ub300\uc6a9\ub7c9 \ub370\uc774\ud130)"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uc815\uae30\uc801\uc778 \uc544\uce74\uc774\ube0c/\ud37c\uc9c0"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"\ubcf4\uc548",children:"\ubcf4\uc548"}),"\n",(0,l.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uc0ad\uc81c \uad8c\ud55c \uad00\ub9ac"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","GDPR \uc900\uc218 (\uac1c\uc778\uc815\ubcf4 \uc601\uad6c \uc0ad\uc81c)"]}),"\n",(0,l.jsxs)(n.li,{className:"task-list-item",children:[(0,l.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uac10\uc0ac \ub85c\uadf8 (\ub204\uac00, \uc5b8\uc81c, \uc65c)"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"-\uc5b8\uc81c-\uc0ac\uc6a9\ud558\ub098",children:"\ud83d\udca1 \uc5b8\uc81c \uc0ac\uc6a9\ud558\ub098?"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'use_soft_delete = {\n    "\u2705 \uc0ac\uc6a9": [\n        "\uc0ac\uc6a9\uc790 \uacc4\uc815",\n        "\uc8fc\ubb38/\uacb0\uc81c \ub370\uc774\ud130",\n        "\uac10\uc0ac\uac00 \ud544\uc694\ud55c \ub370\uc774\ud130",\n        "\ubc95\uc801 \ubcf4\uc874 \uc758\ubb34\uac00 \uc788\ub294 \ub370\uc774\ud130",\n        "\uc2e4\uc218\ub85c \uc0ad\uc81c\ud558\uae30 \uc26c\uc6b4 \ub370\uc774\ud130"\n    ],\n\n    "\u274c \uc0ac\uc6a9 \uc548\ud568": [\n        "\uc138\uc158/\ud1a0\ud070 (\ub9cc\ub8cc \ud6c4 \uc0ad\uc81c)",\n        "\ub85c\uadf8 \ub370\uc774\ud130 (\uc544\uce74\uc774\ube0c\ub85c \uc774\ub3d9)",\n        "\uc784\uc2dc \ub370\uc774\ud130",\n        "\uc131\ub2a5\uc774 \uc911\uc694\ud558\uace0 \ubcf5\uad6c \ubd88\ud544\uc694\ud55c \ub370\uc774\ud130"\n    ]\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83d\ude80 \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,l.jsx)(n.p,{children:"\uc18c\ud504\ud2b8 \uc0ad\uc81c \ud328\ud134\uc744 \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c \uac10\uc0ac \ub85c\uadf8\ub97c \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,l.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,l.jsx)(n.a,{href:"./audit-log",children:"\uac10\uc0ac \ub85c\uadf8"})]})]})}function N(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(T,{...e})}):T(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>E,x:()=>a});var d=s(6540);const l={},t=d.createContext(l);function E(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:E(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);