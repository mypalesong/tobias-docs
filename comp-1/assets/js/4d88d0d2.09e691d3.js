"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[6005],{3282:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"oauth/basic/oidc","title":"OpenID Connect (OIDC)","description":"OAuth 2.0 \uc704\uc5d0 \uad6c\ucd95\ub41c \uc778\uc99d \ub808\uc774\uc5b4\uc778 OpenID Connect\ub97c \uc774\ud574\ud569\ub2c8\ub2e4.","source":"@site/docs/oauth/basic/oidc.md","sourceDirName":"oauth/basic","slug":"/oauth/basic/oidc","permalink":"/tobias-docs/comp-1/docs/oauth/basic/oidc","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/basic/oidc.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"oauthSidebar","previous":{"title":"OAuth 2.0 \ud575\uc2ec \uac1c\ub150","permalink":"/tobias-docs/comp-1/docs/oauth/basic/concepts"},"next":{"title":"Authorization Flows","permalink":"/tobias-docs/comp-1/docs/oauth/basic/flows"}}');var t=i(4848),s=i(8453);const r={sidebar_position:2},a="OpenID Connect (OIDC)",l={},c=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83e\udd14 OpenID Connect\ub780?",id:"-openid-connect\ub780",level:2},{value:"\uc815\uc758",id:"\uc815\uc758",level:3},{value:"OAuth 2.0 vs OIDC",id:"oauth-20-vs-oidc",level:3},{value:"\ud83d\udd11 \ud575\uc2ec \uac1c\ub150",id:"-\ud575\uc2ec-\uac1c\ub150",level:2},{value:"1. ID Token",id:"1-id-token",level:3},{value:"2. Standard Scopes",id:"2-standard-scopes",level:3},{value:"3. Claims (\ud074\ub808\uc784)",id:"3-claims-\ud074\ub808\uc784",level:3},{value:"\ud83d\udd04 OIDC \ud50c\ub85c\uc6b0",id:"-oidc-\ud50c\ub85c\uc6b0",level:2},{value:"Authorization Code Flow",id:"authorization-code-flow",level:3},{value:"\ud83c\udfa8 ID Token vs Access Token",id:"-id-token-vs-access-token",level:2},{value:"\ucc28\uc774\uc810",id:"\ucc28\uc774\uc810",level:3},{value:"\uc0ac\uc6a9 \uc608",id:"\uc0ac\uc6a9-\uc608",level:3},{value:"\ud83d\udd0d UserInfo Endpoint",id:"-userinfo-endpoint",level:2},{value:"\ud83d\udee1\ufe0f ID Token \uac80\uc99d",id:"\ufe0f-id-token-\uac80\uc99d",level:2},{value:"\ud544\uc218 \uac80\uc99d \ud56d\ubaa9",id:"\ud544\uc218-\uac80\uc99d-\ud56d\ubaa9",level:3},{value:"\ud83c\udf10 Discovery Document",id:"-discovery-document",level:2},{value:"FastAPI\uc5d0\uc11c \uc790\ub3d9 \uc124\uc815",id:"fastapi\uc5d0\uc11c-\uc790\ub3d9-\uc124\uc815",level:3},{value:"\ud83d\udca1 \uc2e4\uc804 \uc608\uc81c",id:"-\uc2e4\uc804-\uc608\uc81c",level:2},{value:"\uc644\uc804\ud55c Google \ub85c\uadf8\uc778",id:"\uc644\uc804\ud55c-google-\ub85c\uadf8\uc778",level:3},{value:"\ud83d\udd17 \uc8fc\uc694 OIDC Providers",id:"-\uc8fc\uc694-oidc-providers",level:2},{value:"Google",id:"google",level:3},{value:"GitHub (OAuth 2.0 only, OIDC X)",id:"github-oauth-20-only-oidc-x",level:3},{value:"Microsoft (Azure AD)",id:"microsoft-azure-ad",level:3},{value:"\ud83d\udca1 \ud504\ub85c \ud301",id:"-\ud504\ub85c-\ud301",level:2},{value:"1. \ud56d\uc0c1 ID Token \uac80\uc99d",id:"1-\ud56d\uc0c1-id-token-\uac80\uc99d",level:3},{value:"2. sub Claim\uc744 \uc0ac\uc6a9\uc790 ID\ub85c",id:"2-sub-claim\uc744-\uc0ac\uc6a9\uc790-id\ub85c",level:3},{value:"3. Scope \ucd5c\uc18c\ud654",id:"3-scope-\ucd5c\uc18c\ud654",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"openid-connect-oidc",children:"OpenID Connect (OIDC)"})}),"\n",(0,t.jsx)(n.p,{children:"OAuth 2.0 \uc704\uc5d0 \uad6c\ucd95\ub41c \uc778\uc99d \ub808\uc774\uc5b4\uc778 OpenID Connect\ub97c \uc774\ud574\ud569\ub2c8\ub2e4."}),"\n",(0,t.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 OIDC\ub780 \ubb34\uc5c7\uc778\uac00"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 OAuth 2.0\uacfc\uc758 \ucc28\uc774\uc810"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 ID Token \uc774\ud574"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 UserInfo Endpoint"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 \uc2e4\uc804 \uad6c\ud604"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-openid-connect\ub780",children:"\ud83e\udd14 OpenID Connect\ub780?"}),"\n",(0,t.jsx)(n.h3,{id:"\uc815\uc758",children:"\uc815\uc758"}),"\n",(0,t.jsxs)(n.p,{children:["**OpenID Connect (OIDC)**\ub294 OAuth 2.0 \uc704\uc5d0 ",(0,t.jsx)(n.strong,{children:"\uc778\uc99d(Authentication) \ub808\uc774\uc5b4"}),"\ub97c \ucd94\uac00\ud55c \ud504\ub85c\ud1a0\ucf5c\uc785\ub2c8\ub2e4."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# OAuth 2.0: \uad8c\ud55c \uc704\uc784\n"\uc774 \uc571\uc774 \ub0b4 \uc0ac\uc9c4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub098\uc694?" \u2192 "\ub124"\n\n# OpenID Connect: \uc778\uc99d + \uad8c\ud55c \uc704\uc784\n"\ub2f9\uc2e0\uc740 \ub204\uad6c\uc2e0\uac00\uc694?" \u2192 "Alice (alice@example.com)"\n"\uc774 \uc571\uc774 \uc0ac\uc9c4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub098\uc694?" \u2192 "\ub124"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"oauth-20-vs-oidc",children:"OAuth 2.0 vs OIDC"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\ud2b9\uc131"}),(0,t.jsx)(n.th,{children:"OAuth 2.0"}),(0,t.jsx)(n.th,{children:"OpenID Connect"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\ubaa9\uc801"})}),(0,t.jsx)(n.td,{children:"\uc778\uac00 (Authorization)"}),(0,t.jsx)(n.td,{children:"\uc778\uc99d + \uc778\uac00"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\uc0ac\uc6a9 \uc0ac\ub840"})}),(0,t.jsx)(n.td,{children:"API \uc811\uadfc \uad8c\ud55c"}),(0,t.jsx)(n.td,{children:"\uc18c\uc15c \ub85c\uadf8\uc778 (SSO)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\ubc18\ud658 \ud1a0\ud070"})}),(0,t.jsx)(n.td,{children:"Access Token"}),(0,t.jsxs)(n.td,{children:["Access Token + ",(0,t.jsx)(n.strong,{children:"ID Token"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\uc0ac\uc6a9\uc790 \uc815\ubcf4"})}),(0,t.jsx)(n.td,{children:"\ubcc4\ub3c4 API \ud638\ucd9c \ud544\uc694"}),(0,t.jsx)(n.td,{children:"ID Token\uc5d0 \ud3ec\ud568"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\ud45c\uc900 Scope"})}),(0,t.jsx)(n.td,{children:"\uc5c6\uc74c"}),(0,t.jsx)(n.td,{children:"openid, profile, email"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"-\ud575\uc2ec-\uac1c\ub150",children:"\ud83d\udd11 \ud575\uc2ec \uac1c\ub150"}),"\n",(0,t.jsx)(n.h3,{id:"1-id-token",children:"1. ID Token"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ID Token"}),"\uc740 \uc0ac\uc6a9\uc790 \uc815\ubcf4\ub97c \ub2f4\uc740 **JWT (JSON Web Token)**\uc785\ub2c8\ub2e4."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# ID Token \uad6c\uc870 (JWT)\nid_token = "eyJhbGciOiJSUzI1NiIsImtpZCI6IjE2M..."\n\n# Decoded (\uac80\uc99d \ud6c4)\n{\n    # Header\n    "alg": "RS256",\n    "kid": "163ef..."\n\n    # Payload\n    "iss": "https://accounts.google.com",           # Issuer (\ubc1c\uae09\uc790)\n    "sub": "10769150350006150715113082367",         # Subject (\uc0ac\uc6a9\uc790 ID)\n    "aud": "your-client-id",                        # Audience (\ud074\ub77c\uc774\uc5b8\ud2b8 ID)\n    "exp": 1701234567,                              # Expiration (\ub9cc\ub8cc \uc2dc\uac04)\n    "iat": 1701230967,                              # Issued At (\ubc1c\uae09 \uc2dc\uac04)\n    "email": "alice@example.com",                   # \uc774\uba54\uc77c\n    "email_verified": true,                         # \uc774\uba54\uc77c \uc778\uc99d \uc5ec\ubd80\n    "name": "Alice Smith",                          # \uc774\ub984\n    "picture": "https://lh3.googleusercontent.com/...", # \ud504\ub85c\ud544 \uc0ac\uc9c4\n    "given_name": "Alice",                          # \uc774\ub984\n    "family_name": "Smith",                         # \uc131\n    "locale": "en"                                  # \uc5b8\uc5b4\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-standard-scopes",children:"2. Standard Scopes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# openid (\ud544\uc218)\n# OIDC \ud65c\uc131\ud654, \uc5c6\uc73c\uba74 OAuth 2.0\ub9cc\nscopes = ["openid"]\n\n# profile\n# \ud504\ub85c\ud544 \uc815\ubcf4 (name, picture, etc.)\nscopes = ["openid", "profile"]\n\n# email\n# \uc774\uba54\uc77c \uc8fc\uc18c\nscopes = ["openid", "email"]\n\n# \uc870\ud569\nscopes = ["openid", "profile", "email"]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-claims-\ud074\ub808\uc784",children:"3. Claims (\ud074\ub808\uc784)"}),"\n",(0,t.jsxs)(n.p,{children:["ID Token\uc5d0 \ud3ec\ud568\ub41c \uc0ac\uc6a9\uc790 \uc815\ubcf4\ub97c ",(0,t.jsx)(n.strong,{children:"Claims"}),"\ub77c\uace0 \ud569\ub2c8\ub2e4."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Standard Claims\nclaims = {\n    "sub": "\uc0ac\uc6a9\uc790 \uace0\uc720 ID (\ud544\uc218)",\n    "name": "\uc804\uccb4 \uc774\ub984",\n    "given_name": "\uc774\ub984",\n    "family_name": "\uc131",\n    "middle_name": "\uc911\uac04 \uc774\ub984",\n    "nickname": "\ub2c9\ub124\uc784",\n    "preferred_username": "\uc120\ud638 \uc0ac\uc6a9\uc790\uba85",\n    "profile": "\ud504\ub85c\ud544 \ud398\uc774\uc9c0 URL",\n    "picture": "\ud504\ub85c\ud544 \uc0ac\uc9c4 URL",\n    "website": "\uc6f9\uc0ac\uc774\ud2b8",\n    "email": "\uc774\uba54\uc77c",\n    "email_verified": "\uc774\uba54\uc77c \uc778\uc99d \uc5ec\ubd80",\n    "gender": "\uc131\ubcc4",\n    "birthdate": "\uc0dd\ub144\uc6d4\uc77c",\n    "zoneinfo": "\uc2dc\uac04\ub300",\n    "locale": "\uc5b8\uc5b4/\uc9c0\uc5ed",\n    "phone_number": "\uc804\ud654\ubc88\ud638",\n    "phone_number_verified": "\uc804\ud654\ubc88\ud638 \uc778\uc99d \uc5ec\ubd80",\n    "address": "\uc8fc\uc18c",\n    "updated_at": "\uc815\ubcf4 \uc5c5\ub370\uc774\ud2b8 \uc2dc\uac04"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-oidc-\ud50c\ub85c\uc6b0",children:"\ud83d\udd04 OIDC \ud50c\ub85c\uc6b0"}),"\n",(0,t.jsx)(n.h3,{id:"authorization-code-flow",children:"Authorization Code Flow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, Request\nfrom authlib.integrations.starlette_client import OAuth\n\napp = FastAPI()\noauth = OAuth()\n\n# OIDC \uc124\uc815\noauth.register(\n    name='google',\n    client_id='YOUR_CLIENT_ID',\n    client_secret='YOUR_CLIENT_SECRET',\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration',\n    client_kwargs={\n        'scope': 'openid email profile'  # OIDC scopes\n    }\n)\n\n@app.get('/login')\nasync def login(request: Request):\n    \"\"\"Step 1: OIDC Provider\ub85c \ub9ac\ub2e4\uc774\ub809\ud2b8\"\"\"\n    redirect_uri = request.url_for('auth')\n    return await oauth.google.authorize_redirect(request, redirect_uri)\n\n@app.get('/auth')\nasync def auth(request: Request):\n    \"\"\"Step 2: Token \ubc1b\uace0 \uac80\uc99d\"\"\"\n    # Access Token + ID Token \ubc1b\uae30\n    token = await oauth.google.authorize_access_token(request)\n\n    # ID Token \uc790\ub3d9 \uac80\uc99d (Authlib\uac00 \ucc98\ub9ac)\n    user = token.get('userinfo')\n\n    return {\n        'sub': user['sub'],              # \uace0\uc720 ID\n        'email': user['email'],          # \uc774\uba54\uc77c\n        'name': user['name'],            # \uc774\ub984\n        'picture': user['picture'],      # \ud504\ub85c\ud544 \uc0ac\uc9c4\n        'email_verified': user['email_verified']\n    }\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-id-token-vs-access-token",children:"\ud83c\udfa8 ID Token vs Access Token"}),"\n",(0,t.jsx)(n.h3,{id:"\ucc28\uc774\uc810",children:"\ucc28\uc774\uc810"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Access Token\naccess_token = {\n    "token": "ya29.a0AfH6SMBx...",\n    "purpose": "API \uc811\uadfc\uc6a9",\n    "format": "Opaque (\ubd88\ud22c\uba85)",\n    "contains": "\uc544\ubb34 \uc815\ubcf4\ub3c4 \uc5c6\uc74c (\ucc38\uc870\ub9cc)",\n    "usage": "Resource Server\uc5d0 \uc804\ub2ec",\n    "validation": "Resource Server\uac00 \uac80\uc99d"\n}\n\n# ID Token\nid_token = {\n    "token": "eyJhbGciOiJSUzI1NiIs...",\n    "purpose": "\uc0ac\uc6a9\uc790 \uc778\uc99d\uc6a9",\n    "format": "JWT (JSON Web Token)",\n    "contains": "\uc0ac\uc6a9\uc790 \uc815\ubcf4",\n    "usage": "Client\uc5d0\uc11c \uc0ac\uc6a9",\n    "validation": "Client\uac00 \uc11c\uba85 \uac80\uc99d"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc608",children:"\uc0ac\uc6a9 \uc608"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \u2705 \uc62c\ubc14\ub978 \uc0ac\uc6a9\n# ID Token: \uc0ac\uc6a9\uc790\uac00 \ub204\uad6c\uc778\uc9c0 \ud655\uc778\nuser_id = id_token['sub']\nuser_email = id_token['email']\n\n# Access Token: API \ud638\ucd9c\nphotos = requests.get(\n    'https://photoslibrary.googleapis.com/v1/mediaItems',\n    headers={'Authorization': f'Bearer {access_token}'}\n)\n\n# \u274c \uc798\ubabb\ub41c \uc0ac\uc6a9\n# ID Token\uc73c\ub85c API \ud638\ucd9c (\ub3d9\uc791 \uc548 \ud568)\nphotos = requests.get(\n    'https://api.example.com/photos',\n    headers={'Authorization': f'Bearer {id_token}'}  # \u274c\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-userinfo-endpoint",children:"\ud83d\udd0d UserInfo Endpoint"}),"\n",(0,t.jsxs)(n.p,{children:["ID Token \uc678\uc5d0\ub3c4 ",(0,t.jsx)(n.strong,{children:"UserInfo Endpoint"}),"\ub85c \ucd94\uac00 \uc815\ubcf4\ub97c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import httpx\n\nasync def get_userinfo(access_token: str):\n    """UserInfo Endpoint \ud638\ucd9c"""\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            \'https://www.googleapis.com/oauth2/v2/userinfo\',\n            headers={\'Authorization\': f\'Bearer {access_token}\'}\n        )\n        return response.json()\n\n# \uc0ac\uc6a9\nuser_info = await get_userinfo(token[\'access_token\'])\n\n# \ubc18\ud658 \uc608\n{\n    "sub": "10769150350006150715113082367",\n    "name": "Alice Smith",\n    "given_name": "Alice",\n    "family_name": "Smith",\n    "picture": "https://lh3.googleusercontent.com/...",\n    "email": "alice@example.com",\n    "email_verified": true,\n    "locale": "en"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-id-token-\uac80\uc99d",children:"\ud83d\udee1\ufe0f ID Token \uac80\uc99d"}),"\n",(0,t.jsx)(n.h3,{id:"\ud544\uc218-\uac80\uc99d-\ud56d\ubaa9",children:"\ud544\uc218 \uac80\uc99d \ud56d\ubaa9"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from jose import jwt, JWTError\nfrom datetime import datetime\n\ndef validate_id_token(id_token: str, client_id: str, issuer: str):\n    \"\"\"ID Token \uac80\uc99d\"\"\"\n    try:\n        # 1. JWT \ub514\ucf54\ub529 & \uc11c\uba85 \uac80\uc99d\n        payload = jwt.decode(\n            id_token,\n            key=get_public_key(issuer),\n            algorithms=['RS256'],\n            audience=client_id,\n            issuer=issuer\n        )\n\n        # 2. Issuer \ud655\uc778\n        assert payload['iss'] == issuer, \"Invalid issuer\"\n\n        # 3. Audience \ud655\uc778 (Client ID)\n        assert payload['aud'] == client_id, \"Invalid audience\"\n\n        # 4. \ub9cc\ub8cc \uc2dc\uac04 \ud655\uc778\n        assert payload['exp'] > datetime.now().timestamp(), \"Token expired\"\n\n        # 5. \ubc1c\uae09 \uc2dc\uac04 \ud655\uc778\n        assert payload['iat'] <= datetime.now().timestamp(), \"Invalid issued time\"\n\n        return payload\n\n    except JWTError as e:\n        raise ValueError(f\"Invalid ID Token: {e}\")\n\n# \uc0ac\uc6a9\npayload = validate_id_token(\n    id_token=token['id_token'],\n    client_id='YOUR_CLIENT_ID',\n    issuer='https://accounts.google.com'\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-discovery-document",children:"\ud83c\udf10 Discovery Document"}),"\n",(0,t.jsx)(n.p,{children:"OIDC Provider\uc758 \ubaa8\ub4e0 \uc815\ubcf4\ub97c \ub2f4\uc740 \ubb38\uc11c\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Google\uc758 Discovery Document\n# https://accounts.google.com/.well-known/openid-configuration\n\n{\n    "issuer": "https://accounts.google.com",\n    "authorization_endpoint": "https://accounts.google.com/o/oauth2/v2/auth",\n    "token_endpoint": "https://oauth2.googleapis.com/token",\n    "userinfo_endpoint": "https://openidconnect.googleapis.com/v1/userinfo",\n    "jwks_uri": "https://www.googleapis.com/oauth2/v3/certs",\n    "scopes_supported": [\n        "openid",\n        "email",\n        "profile"\n    ],\n    "response_types_supported": [\n        "code",\n        "token",\n        "id_token",\n        "code token",\n        "code id_token",\n        "token id_token",\n        "code token id_token"\n    ],\n    "subject_types_supported": ["public"],\n    "id_token_signing_alg_values_supported": ["RS256"],\n    "token_endpoint_auth_methods_supported": [\n        "client_secret_post",\n        "client_secret_basic"\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"fastapi\uc5d0\uc11c-\uc790\ub3d9-\uc124\uc815",children:"FastAPI\uc5d0\uc11c \uc790\ub3d9 \uc124\uc815"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from authlib.integrations.starlette_client import OAuth\n\noauth = OAuth()\n\n# Discovery Document\ub85c \uc790\ub3d9 \uc124\uc815\noauth.register(\n    name='google',\n    client_id='YOUR_CLIENT_ID',\n    client_secret='YOUR_CLIENT_SECRET',\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration'\n    # \uc704 URL\ub9cc\uc73c\ub85c \ubaa8\ub4e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc790\ub3d9 \uc124\uc815!\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\uc2e4\uc804-\uc608\uc81c",children:"\ud83d\udca1 \uc2e4\uc804 \uc608\uc81c"}),"\n",(0,t.jsx)(n.h3,{id:"\uc644\uc804\ud55c-google-\ub85c\uadf8\uc778",children:"\uc644\uc804\ud55c Google \ub85c\uadf8\uc778"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, Request, HTTPException\nfrom authlib.integrations.starlette_client import OAuth\nfrom starlette.config import Config\nfrom starlette.middleware.sessions import SessionMiddleware\n\napp = FastAPI()\n\n# \uc138\uc158 \ubbf8\ub4e4\uc6e8\uc5b4 (state \uc800\uc7a5\uc6a9)\napp.add_middleware(SessionMiddleware, secret_key=\"SECRET_KEY\")\n\n# OAuth \uc124\uc815\nconfig = Config('.env')\noauth = OAuth(config)\n\noauth.register(\n    name='google',\n    client_id=config('GOOGLE_CLIENT_ID'),\n    client_secret=config('GOOGLE_CLIENT_SECRET'),\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration',\n    client_kwargs={\n        'scope': 'openid email profile'\n    }\n)\n\n@app.get('/login')\nasync def login(request: Request):\n    \"\"\"Google \ub85c\uadf8\uc778 \uc2dc\uc791\"\"\"\n    redirect_uri = request.url_for('auth')\n    return await oauth.google.authorize_redirect(request, redirect_uri)\n\n@app.get('/auth')\nasync def auth(request: Request):\n    \"\"\"Google \ucf5c\ubc31\"\"\"\n    try:\n        # Token \ubc1b\uae30 (Access Token + ID Token)\n        token = await oauth.google.authorize_access_token(request)\n\n        # UserInfo \uac00\uc838\uc624\uae30 (ID Token\uc5d0\uc11c \uc790\ub3d9 \ud30c\uc2f1)\n        user = token.get('userinfo')\n\n        if not user:\n            raise HTTPException(status_code=400, detail=\"Failed to get user info\")\n\n        # \uc138\uc158\uc5d0 \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uc800\uc7a5\n        request.session['user'] = {\n            'sub': user['sub'],\n            'email': user['email'],\n            'name': user['name'],\n            'picture': user['picture']\n        }\n\n        return {\"message\": \"Login successful\", \"user\": user}\n\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@app.get('/me')\nasync def me(request: Request):\n    \"\"\"\ud604\uc7ac \uc0ac\uc6a9\uc790 \uc815\ubcf4\"\"\"\n    user = request.session.get('user')\n    if not user:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n    return user\n\n@app.get('/logout')\nasync def logout(request: Request):\n    \"\"\"\ub85c\uadf8\uc544\uc6c3\"\"\"\n    request.session.pop('user', None)\n    return {\"message\": \"Logged out\"}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\uc8fc\uc694-oidc-providers",children:"\ud83d\udd17 \uc8fc\uc694 OIDC Providers"}),"\n",(0,t.jsx)(n.h3,{id:"google",children:"Google"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"oauth.register(\n    name='google',\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration',\n    client_kwargs={'scope': 'openid email profile'}\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"github-oauth-20-only-oidc-x",children:"GitHub (OAuth 2.0 only, OIDC X)"}),"\n",(0,t.jsx)(n.p,{children:"GitHub\uc740 OIDC\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. OAuth 2.0\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4."}),"\n",(0,t.jsx)(n.h3,{id:"microsoft-azure-ad",children:"Microsoft (Azure AD)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"oauth.register(\n    name='microsoft',\n    server_metadata_url='https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration',\n    client_kwargs={'scope': 'openid email profile'}\n)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\ud504\ub85c-\ud301",children:"\ud83d\udca1 \ud504\ub85c \ud301"}),"\n",(0,t.jsx)(n.h3,{id:"1-\ud56d\uc0c1-id-token-\uac80\uc99d",children:"1. \ud56d\uc0c1 ID Token \uac80\uc99d"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \u2705 Authlib\ub294 \uc790\ub3d9\uc73c\ub85c \uac80\uc99d\ntoken = await oauth.google.authorize_access_token(request)\n# \ub0b4\ubd80\uc801\uc73c\ub85c \uc11c\uba85, issuer, audience, exp \ubaa8\ub450 \uac80\uc99d\n\n# \u26a0\ufe0f \uc218\ub3d9 \uac80\uc99d \uc2dc \uc8fc\uc758\n# \ubc18\ub4dc\uc2dc \uc11c\uba85 \uac80\uc99d \ud544\uc694\npayload = jwt.decode(id_token, key, algorithms=['RS256'])\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-sub-claim\uc744-\uc0ac\uc6a9\uc790-id\ub85c",children:"2. sub Claim\uc744 \uc0ac\uc6a9\uc790 ID\ub85c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \u2705 sub (Subject) \uc0ac\uc6a9\nuser_id = id_token['sub']  # \uace0\uc720\ud558\uace0 \ubcc0\uacbd \ubd88\uac00\n\n# \u274c email \uc0ac\uc6a9 \uae08\uc9c0\nuser_id = id_token['email']  # \ubcc0\uacbd \uac00\ub2a5!\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-scope-\ucd5c\uc18c\ud654",children:"3. Scope \ucd5c\uc18c\ud654"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \u2705 \ud544\uc694\ud55c \uac83\ub9cc\nscopes = ['openid', 'email']\n\n# \u274c \uacfc\ub3c4\ud55c \uc694\uccad\nscopes = ['openid', 'profile', 'email', 'address', 'phone']\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"./concepts",children:"OAuth 2.0 \uac1c\ub150"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"./flows",children:"Authorization Flows"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../intermediate/fastapi-basics",children:"FastAPI \uad6c\ud604"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,t.jsx)(n.p,{children:"OIDC\ub97c \uc774\ud574\ud588\ub2e4\uba74, \uc774\uc81c \ub2e4\uc591\ud55c Authorization Flows\ub97c \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,t.jsx)(n.a,{href:"./flows",children:"Authorization Flows"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),': OIDC\ub294 "\ub85c\uadf8\uc778"\uc5d0 \ucd5c\uc801\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc18c\uc15c \ub85c\uadf8\uc778\uc744 \uad6c\ud604\ud55c\ub2e4\uba74 OIDC\ub97c \uc0ac\uc6a9\ud558\uc138\uc694!']})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var o=i(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);