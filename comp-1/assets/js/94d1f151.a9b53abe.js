"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[312],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}},9286:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"sqlalchemy/scenarios/intro","title":"\uc2e4\uc804\ud3b8 \uc18c\uac1c","description":"\uc2e4\uc81c \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 SQLAlchemy + PostgreSQL \ud328\ud134\uacfc \uc544\ud0a4\ud14d\ucc98\ub97c \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/sqlalchemy/scenarios/intro.md","sourceDirName":"sqlalchemy/scenarios","slug":"/sqlalchemy/scenarios/intro","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/scenarios/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sqlalchemy/scenarios/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"sqlalchemySidebar","previous":{"title":"\uc138\uc158 \uad00\ub9ac","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/intermediate/sessions"},"next":{"title":"\uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uacc4","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/scenarios/ecommerce"}}');var i=s(4848),t=s(8453);const l={sidebar_position:1},a="\uc2e4\uc804\ud3b8 \uc18c\uac1c",o={},c=[{value:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c",id:"-\ud559\uc2b5-\ubaa9\ud45c",level:2},{value:"\ud83d\udcda \uc2e4\uc804 \uc2dc\ub098\ub9ac\uc624",id:"-\uc2e4\uc804-\uc2dc\ub098\ub9ac\uc624",level:2},{value:"\uc2dc\ub098\ub9ac\uc624 1: \uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4",id:"\uc2dc\ub098\ub9ac\uc624-1-\uc804\uc790\uc0c1\uac70\ub798-\ub370\uc774\ud130\ubca0\uc774\uc2a4",level:3},{value:"\uc2dc\ub098\ub9ac\uc624 2: FastAPI \ud1b5\ud569",id:"\uc2dc\ub098\ub9ac\uc624-2-fastapi-\ud1b5\ud569",level:3},{value:"\uc2dc\ub098\ub9ac\uc624 3: \ud14c\uc2a4\ud305",id:"\uc2dc\ub098\ub9ac\uc624-3-\ud14c\uc2a4\ud305",level:3},{value:"\ud83c\udfd7\ufe0f \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870",id:"\ufe0f-\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",level:2},{value:"\uad8c\uc7a5 \uad6c\uc870",id:"\uad8c\uc7a5-\uad6c\uc870",level:3},{value:"\ud83d\udca1 \uc2e4\uc804 \ud328\ud134",id:"-\uc2e4\uc804-\ud328\ud134",level:2},{value:"1. Repository \ud328\ud134",id:"1-repository-\ud328\ud134",level:3},{value:"2. Service \ub808\uc774\uc5b4",id:"2-service-\ub808\uc774\uc5b4",level:3},{value:"3. Dependency Injection",id:"3-dependency-injection",level:3},{value:"\ud83c\udfa8 \ub514\uc790\uc778 \ud328\ud134",id:"-\ub514\uc790\uc778-\ud328\ud134",level:2},{value:"1. Unit of Work",id:"1-unit-of-work",level:3},{value:"2. Factory Pattern",id:"2-factory-pattern",level:3},{value:"3. Strategy Pattern",id:"3-strategy-pattern",level:3},{value:"\ud83d\udee0\ufe0f \uac1c\ubc1c \ub3c4\uad6c",id:"\ufe0f-\uac1c\ubc1c-\ub3c4\uad6c",level:2},{value:"\ud544\uc218 \ub77c\uc774\ube0c\ub7ec\ub9ac",id:"\ud544\uc218-\ub77c\uc774\ube0c\ub7ec\ub9ac",level:3},{value:"\uc124\uc815 \ud30c\uc77c",id:"\uc124\uc815-\ud30c\uc77c",level:3},{value:"\ud83d\ude80 \uc2dc\uc791\ud558\uae30",id:"-\uc2dc\uc791\ud558\uae30",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"\uc2e4\uc804\ud3b8-\uc18c\uac1c",children:"\uc2e4\uc804\ud3b8 \uc18c\uac1c"})}),"\n",(0,i.jsx)(n.p,{children:"\uc2e4\uc81c \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 SQLAlchemy + PostgreSQL \ud328\ud134\uacfc \uc544\ud0a4\ud14d\ucc98\ub97c \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.h2,{id:"-\ud559\uc2b5-\ubaa9\ud45c",children:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c"}),"\n",(0,i.jsx)(n.p,{children:"\uc2e4\uc804\ud3b8\uc5d0\uc11c\ub294 \uc644\uc804\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud558\uba74\uc11c \uc2e4\ubb34 \ud328\ud134\uc744 \ubc30\uc6c1\ub2c8\ub2e4:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\uc804\uc790\uc0c1\uac70\ub798 \uc2dc\uc2a4\ud15c"}),": \uc644\uc804\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uacc4"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FastAPI \ud1b5\ud569"}),": \ud604\ub300\uc801\uc778 \uc6f9 API \uac1c\ubc1c"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ud14c\uc2a4\ud305"}),": \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud14c\uc2a4\ud2b8 \uc804\ub7b5"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\ub9c8\uc774\uadf8\ub808\uc774\uc158"}),": Alembic\uc73c\ub85c \uc2a4\ud0a4\ub9c8 \uad00\ub9ac"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-\uc2e4\uc804-\uc2dc\ub098\ub9ac\uc624",children:"\ud83d\udcda \uc2e4\uc804 \uc2dc\ub098\ub9ac\uc624"}),"\n",(0,i.jsx)(n.h3,{id:"\uc2dc\ub098\ub9ac\uc624-1-\uc804\uc790\uc0c1\uac70\ub798-\ub370\uc774\ud130\ubca0\uc774\uc2a4",children:"\uc2dc\ub098\ub9ac\uc624 1: \uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4"}),"\n",(0,i.jsx)(n.p,{children:"\uc2e4\uc81c \uc1fc\ud551\ubab0\uc758 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ucc98\uc74c\ubd80\ud130 \uc124\uacc4\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# \uc8fc\uc694 \uae30\ub2a5\n- \uc0ac\uc6a9\uc790 \uc778\uc99d/\uad8c\ud55c\n- \uc0c1\ud488 \uce74\ud0c8\ub85c\uadf8\n- \uc7a5\ubc14\uad6c\ub2c8\n- \uc8fc\ubb38 \ucc98\ub9ac\n- \uacb0\uc81c \ud1b5\ud569\n- \ub9ac\ubdf0/\ud3c9\uc810 \uc2dc\uc2a4\ud15c\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\ubc30\uc6b0\ub294 \ub0b4\uc6a9:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\ubcf5\uc7a1\ud55c \uad00\uacc4 \uc124\uacc4"}),"\n",(0,i.jsx)(n.li,{children:"\uc7ac\uace0 \uad00\ub9ac (\ub3d9\uc2dc\uc131 \uc81c\uc5b4)"}),"\n",(0,i.jsx)(n.li,{children:"\uc8fc\ubb38 \uc0c1\ud0dc \uad00\ub9ac"}),"\n",(0,i.jsx)(n.li,{children:"\uc131\ub2a5 \ucd5c\uc801\ud654 (\uc778\ub371\uc2a4, \uce90\uc2f1)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\uc2dc\ub098\ub9ac\uc624-2-fastapi-\ud1b5\ud569",children:"\uc2dc\ub098\ub9ac\uc624 2: FastAPI \ud1b5\ud569"}),"\n",(0,i.jsx)(n.p,{children:"FastAPI\ub85c RESTful API\ub97c \uad6c\ucd95\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Depends\nfrom sqlalchemy.orm import Session\n\napp = FastAPI()\n\n@app.get("/users/{user_id}")\ndef get_user(user_id: int, db: Session = Depends(get_db)):\n    return db.get(User, user_id)\n\n@app.post("/users/")\ndef create_user(user_data: UserCreate, db: Session = Depends(get_db)):\n    user = User(**user_data.dict())\n    db.add(user)\n    db.commit()\n    return user\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\ubc30\uc6b0\ub294 \ub0b4\uc6a9:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dependency Injection"}),"\n",(0,i.jsx)(n.li,{children:"Pydantic \ubaa8\ub378 \ud1b5\ud569"}),"\n",(0,i.jsx)(n.li,{children:"\uc5d0\ub7ec \ucc98\ub9ac"}),"\n",(0,i.jsx)(n.li,{children:"\uc778\uc99d/\uad8c\ud55c (JWT)"}),"\n",(0,i.jsx)(n.li,{children:"API \ubb38\uc11c\ud654"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\uc2dc\ub098\ub9ac\uc624-3-\ud14c\uc2a4\ud305",children:"\uc2dc\ub098\ub9ac\uc624 3: \ud14c\uc2a4\ud305"}),"\n",(0,i.jsx)(n.p,{children:"\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud14c\uc2a4\ud2b8\ub97c \uc791\uc131\ud569\ub2c8\ub2e4."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import pytest\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\n@pytest.fixture\ndef test_db():\n    # \ud14c\uc2a4\ud2b8 DB \uc0dd\uc131\n    engine = create_engine('postgresql://localhost/test_db')\n    Base.metadata.create_all(engine)\n\n    SessionLocal = sessionmaker(bind=engine)\n    session = SessionLocal()\n\n    yield session\n\n    session.close()\n    Base.metadata.drop_all(engine)\n\ndef test_create_user(test_db):\n    user = User(username='test')\n    test_db.add(user)\n    test_db.commit()\n\n    assert user.id is not None\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\ubc30\uc6b0\ub294 \ub0b4\uc6a9:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"pytest fixtures"}),"\n",(0,i.jsx)(n.li,{children:"\ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uaca9\ub9ac"}),"\n",(0,i.jsx)(n.li,{children:"Factory Pattern (Factory Boy)"}),"\n",(0,i.jsx)(n.li,{children:"Mock\uacfc Stub"}),"\n",(0,i.jsx)(n.li,{children:"Integration Tests"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",children:"\ud83c\udfd7\ufe0f \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870"}),"\n",(0,i.jsx)(n.h3,{id:"\uad8c\uc7a5-\uad6c\uc870",children:"\uad8c\uc7a5 \uad6c\uc870"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"myapp/\n\u251c\u2500\u2500 models/              # SQLAlchemy \ubaa8\ub378\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 user.py\n\u2502   \u251c\u2500\u2500 product.py\n\u2502   \u2514\u2500\u2500 order.py\n\u251c\u2500\u2500 schemas/             # Pydantic \uc2a4\ud0a4\ub9c8\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2514\u2500\u2500 product.py\n\u251c\u2500\u2500 crud/                # CRUD \uc791\uc5c5\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2514\u2500\u2500 product.py\n\u251c\u2500\u2500 api/                 # FastAPI \ub77c\uc6b0\ud130\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 users.py\n\u2502   \u2514\u2500\u2500 products.py\n\u251c\u2500\u2500 core/                # \ud575\uc2ec \uc124\uc815\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 config.py\n\u2502   \u251c\u2500\u2500 database.py\n\u2502   \u2514\u2500\u2500 security.py\n\u251c\u2500\u2500 tests/               # \ud14c\uc2a4\ud2b8\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 conftest.py\n\u2502   \u2514\u2500\u2500 test_users.py\n\u251c\u2500\u2500 alembic/             # \ub9c8\uc774\uadf8\ub808\uc774\uc158\n\u2502   \u2514\u2500\u2500 versions/\n\u251c\u2500\u2500 alembic.ini\n\u251c\u2500\u2500 main.py\n\u2514\u2500\u2500 requirements.txt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-\uc2e4\uc804-\ud328\ud134",children:"\ud83d\udca1 \uc2e4\uc804 \ud328\ud134"}),"\n",(0,i.jsx)(n.h3,{id:"1-repository-\ud328\ud134",children:"1. Repository \ud328\ud134"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# repositories/user.py\nclass UserRepository:\n    def __init__(self, session: Session):\n        self.session = session\n\n    def get_by_id(self, user_id: int) -> Optional[User]:\n        return self.session.get(User, user_id)\n\n    def get_by_email(self, email: str) -> Optional[User]:\n        stmt = select(User).where(User.email == email)\n        return self.session.execute(stmt).scalar_one_or_none()\n\n    def create(self, user_data: dict) -> User:\n        user = User(**user_data)\n        self.session.add(user)\n        self.session.flush()\n        return user\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-service-\ub808\uc774\uc5b4",children:"2. Service \ub808\uc774\uc5b4"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# services/user.py\nclass UserService:\n    def __init__(self, session: Session):\n        self.repo = UserRepository(session)\n\n    def register(self, username: str, email: str, password: str) -> User:\n        # \uc911\ubcf5 \uccb4\ud06c\n        if self.repo.get_by_email(email):\n            raise ValueError(\"Email already exists\")\n\n        # \ube44\ubc00\ubc88\ud638 \ud574\uc2dc\n        password_hash = hash_password(password)\n\n        # \uc0dd\uc131\n        user = self.repo.create({\n            'username': username,\n            'email': email,\n            'password_hash': password_hash\n        })\n\n        # \ud658\uc601 \uc774\uba54\uc77c\n        send_welcome_email(user.email)\n\n        return user\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-dependency-injection",children:"3. Dependency Injection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# core/database.py\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine('postgresql://...')\nSessionLocal = sessionmaker(bind=engine)\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n# api/users.py\nfrom fastapi import APIRouter, Depends\n\nrouter = APIRouter()\n\n@router.get(\"/users/{user_id}\")\ndef get_user(user_id: int, db: Session = Depends(get_db)):\n    service = UserService(db)\n    return service.get_user(user_id)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-\ub514\uc790\uc778-\ud328\ud134",children:"\ud83c\udfa8 \ub514\uc790\uc778 \ud328\ud134"}),"\n",(0,i.jsx)(n.h3,{id:"1-unit-of-work",children:"1. Unit of Work"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class UnitOfWork:\n    def __init__(self, session_factory):\n        self.session_factory = session_factory\n\n    def __enter__(self):\n        self.session = self.session_factory()\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if exc_type:\n            self.rollback()\n        else:\n            self.commit()\n        self.session.close()\n\n    def commit(self):\n        self.session.commit()\n\n    def rollback(self):\n        self.session.rollback()\n\n# \uc0ac\uc6a9\nwith UnitOfWork(SessionLocal) as uow:\n    user = User(username='alice')\n    uow.session.add(user)\n    # \uc790\ub3d9 \ucee4\ubc0b/\ub864\ubc31\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-factory-pattern",children:"2. Factory Pattern"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from factory import Factory, Faker\nfrom factory.alchemy import SQLAlchemyModelFactory\n\nclass UserFactory(SQLAlchemyModelFactory):\n    class Meta:\n        model = User\n        sqlalchemy_session = session\n\n    username = Faker('user_name')\n    email = Faker('email')\n    password_hash = Faker('sha256')\n\n# \ud14c\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9\ndef test_user_creation():\n    user = UserFactory.create()\n    assert user.id is not None\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-strategy-pattern",children:"3. Strategy Pattern"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class PaymentStrategy(ABC):\n    @abstractmethod\n    def process(self, amount: Decimal) -> PaymentResult:\n        pass\n\nclass CreditCardPayment(PaymentStrategy):\n    def process(self, amount: Decimal) -> PaymentResult:\n        # \uc2e0\uc6a9\uce74\ub4dc \uacb0\uc81c\n        pass\n\nclass PaypalPayment(PaymentStrategy):\n    def process(self, amount: Decimal) -> PaymentResult:\n        # PayPal \uacb0\uc81c\n        pass\n\nclass OrderService:\n    def __init__(self, payment_strategy: PaymentStrategy):\n        self.payment = payment_strategy\n\n    def checkout(self, order: Order):\n        result = self.payment.process(order.total)\n        # ...\n"})}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-\uac1c\ubc1c-\ub3c4\uad6c",children:"\ud83d\udee0\ufe0f \uac1c\ubc1c \ub3c4\uad6c"}),"\n",(0,i.jsx)(n.h3,{id:"\ud544\uc218-\ub77c\uc774\ube0c\ub7ec\ub9ac",children:"\ud544\uc218 \ub77c\uc774\ube0c\ub7ec\ub9ac"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# \ud575\uc2ec\npip install sqlalchemy psycopg2-binary\n\n# \uc6f9 \ud504\ub808\uc784\uc6cc\ud06c\npip install fastapi uvicorn\n\n# \uac80\uc99d\npip install pydantic\n\n# \ub9c8\uc774\uadf8\ub808\uc774\uc158\npip install alembic\n\n# \ud14c\uc2a4\ud2b8\npip install pytest pytest-asyncio factory-boy faker\n\n# \uac1c\ubc1c \ub3c4\uad6c\npip install black flake8 mypy\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\uc124\uc815-\ud30c\uc77c",children:"\uc124\uc815 \ud30c\uc77c"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"pyproject.toml"}),":"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[tool.black]\nline-length = 100\ntarget-version = [\'py39\']\n\n[tool.mypy]\npython_version = "3.9"\nwarn_return_any = true\nwarn_unused_configs = true\ndisallow_untyped_defs = true\n\n[[tool.mypy.overrides]]\nmodule = "sqlalchemy.*"\nignore_missing_imports = true\n\n[tool.pytest.ini_options]\ntestpaths = ["tests"]\npython_files = "test_*.py"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-\uc2dc\uc791\ud558\uae30",children:"\ud83d\ude80 \uc2dc\uc791\ud558\uae30"}),"\n",(0,i.jsx)(n.p,{children:"\uc900\ube44\ub418\uc168\ub098\uc694? \uccab \ubc88\uc9f8 \uc2dc\ub098\ub9ac\uc624\ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4!"}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,i.jsx)(n.a,{href:"./ecommerce",children:"\uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": \uc2e4\uc804\ud3b8\uc740 \uc2e4\uc81c\ub85c \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uba70 \ub530\ub77c\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \ud6a8\uacfc\uc801\uc785\ub2c8\ub2e4. \uac01 \uc608\uc81c\ub97c \uc9c1\uc811 \uad6c\ud604\ud574\ubcf4\uc138\uc694!"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);