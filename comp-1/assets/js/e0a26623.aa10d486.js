"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[2088],{1875:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"oauth/basic/flows","title":"Authorization Flows","description":"OAuth 2.0\uc758 \ub2e4\uc591\ud55c \uc778\uac00 \ud50c\ub85c\uc6b0\ub97c \uc774\ud574\ud558\uace0 \uc801\uc808\ud55c \uc0c1\ud669\uc5d0\uc11c \uc120\ud0dd\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/oauth/basic/flows.md","sourceDirName":"oauth/basic","slug":"/oauth/basic/flows","permalink":"/tobias-docs/comp-1/docs/oauth/basic/flows","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/basic/flows.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"oauthSidebar","previous":{"title":"OpenID Connect (OIDC)","permalink":"/tobias-docs/comp-1/docs/oauth/basic/oidc"},"next":{"title":"\uc6a9\uc5b4 \uc815\ub9ac","permalink":"/tobias-docs/comp-1/docs/oauth/basic/terminology"}}');var s=t(4848),r=t(8453);const o={sidebar_position:3},a="Authorization Flows",c={},l=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udd04 \ud50c\ub85c\uc6b0 \uac1c\uc694",id:"-\ud50c\ub85c\uc6b0-\uac1c\uc694",level:2},{value:"\ud50c\ub85c\uc6b0 \uc120\ud0dd \uac00\uc774\ub4dc",id:"\ud50c\ub85c\uc6b0-\uc120\ud0dd-\uac00\uc774\ub4dc",level:3},{value:"1\ufe0f\u20e3 Authorization Code Flow",id:"1\ufe0f\u20e3-authorization-code-flow",level:2},{value:"\uc815\uc758",id:"\uc815\uc758",level:3},{value:"\uc0ac\uc6a9 \uc0ac\ub840",id:"\uc0ac\uc6a9-\uc0ac\ub840",level:3},{value:"\ud50c\ub85c\uc6b0 \ub2e4\uc774\uc5b4\uadf8\ub7a8",id:"\ud50c\ub85c\uc6b0-\ub2e4\uc774\uc5b4\uadf8\ub7a8",level:3},{value:"FastAPI \uad6c\ud604",id:"fastapi-\uad6c\ud604",level:3},{value:"\ubcf4\uc548 \ud2b9\uc131",id:"\ubcf4\uc548-\ud2b9\uc131",level:3},{value:"2\ufe0f\u20e3 Authorization Code Flow with PKCE",id:"2\ufe0f\u20e3-authorization-code-flow-with-pkce",level:2},{value:"\uc815\uc758",id:"\uc815\uc758-1",level:3},{value:"PKCE\ub780?",id:"pkce\ub780",level:3},{value:"\uc0ac\uc6a9 \uc0ac\ub840",id:"\uc0ac\uc6a9-\uc0ac\ub840-1",level:3},{value:"PKCE \ud50c\ub85c\uc6b0",id:"pkce-\ud50c\ub85c\uc6b0",level:3},{value:"FastAPI \uad6c\ud604",id:"fastapi-\uad6c\ud604-1",level:3},{value:"\ubcf4\uc548 \ud2b9\uc131",id:"\ubcf4\uc548-\ud2b9\uc131-1",level:3},{value:"3\ufe0f\u20e3 Client Credentials Flow",id:"3\ufe0f\u20e3-client-credentials-flow",level:2},{value:"\uc815\uc758",id:"\uc815\uc758-2",level:3},{value:"\uc0ac\uc6a9 \uc0ac\ub840",id:"\uc0ac\uc6a9-\uc0ac\ub840-2",level:3},{value:"\ud50c\ub85c\uc6b0 \ub2e4\uc774\uc5b4\uadf8\ub7a8",id:"\ud50c\ub85c\uc6b0-\ub2e4\uc774\uc5b4\uadf8\ub7a8-1",level:3},{value:"FastAPI \uad6c\ud604",id:"fastapi-\uad6c\ud604-2",level:3},{value:"\ubcf4\uc548 \ud2b9\uc131",id:"\ubcf4\uc548-\ud2b9\uc131-2",level:3},{value:"4\ufe0f\u20e3 Device Authorization Flow",id:"4\ufe0f\u20e3-device-authorization-flow",level:2},{value:"\uc815\uc758",id:"\uc815\uc758-3",level:3},{value:"\uc0ac\uc6a9 \uc0ac\ub840",id:"\uc0ac\uc6a9-\uc0ac\ub840-3",level:3},{value:"\ud50c\ub85c\uc6b0 \ub2e4\uc774\uc5b4\uadf8\ub7a8",id:"\ud50c\ub85c\uc6b0-\ub2e4\uc774\uc5b4\uadf8\ub7a8-2",level:3},{value:"FastAPI \uad6c\ud604",id:"fastapi-\uad6c\ud604-3",level:3},{value:"\uc2e4\uc81c \uc0ac\uc6a9 \uc608",id:"\uc2e4\uc81c-\uc0ac\uc6a9-\uc608",level:3},{value:"5\ufe0f\u20e3 Refresh Token Flow",id:"5\ufe0f\u20e3-refresh-token-flow",level:2},{value:"\uc815\uc758",id:"\uc815\uc758-4",level:3},{value:"\uc0ac\uc6a9 \uc0ac\ub840",id:"\uc0ac\uc6a9-\uc0ac\ub840-4",level:3},{value:"FastAPI \uad6c\ud604",id:"fastapi-\uad6c\ud604-4",level:3},{value:"Refresh Token Rotation",id:"refresh-token-rotation",level:3},{value:"6\ufe0f\u20e3 Implicit Flow (Deprecated)",id:"6\ufe0f\u20e3-implicit-flow-deprecated",level:2},{value:"\u26a0\ufe0f \uc0ac\uc6a9 \uae08\uc9c0",id:"\ufe0f-\uc0ac\uc6a9-\uae08\uc9c0",level:3},{value:"7\ufe0f\u20e3 Resource Owner Password Flow (Legacy)",id:"7\ufe0f\u20e3-resource-owner-password-flow-legacy",level:2},{value:"\u26a0\ufe0f \ub808\uac70\uc2dc",id:"\ufe0f-\ub808\uac70\uc2dc",level:3},{value:"\ud83d\udcca \ud50c\ub85c\uc6b0 \ube44\uad50\ud45c",id:"-\ud50c\ub85c\uc6b0-\ube44\uad50\ud45c",level:2},{value:"\ud83d\udca1 \ud50c\ub85c\uc6b0 \uc120\ud0dd \uac00\uc774\ub4dc",id:"-\ud50c\ub85c\uc6b0-\uc120\ud0dd-\uac00\uc774\ub4dc",level:2},{value:"1. \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158",id:"1-\uc6f9-\uc560\ud50c\ub9ac\ucf00\uc774\uc158",level:3},{value:"2. SPA (React, Vue)",id:"2-spa-react-vue",level:3},{value:"3. \ubaa8\ubc14\uc77c \uc571",id:"3-\ubaa8\ubc14\uc77c-\uc571",level:3},{value:"4. \ubc31\uc5d4\ub4dc \uc11c\ube44\uc2a4",id:"4-\ubc31\uc5d4\ub4dc-\uc11c\ube44\uc2a4",level:3},{value:"5. IoT \ub514\ubc14\uc774\uc2a4",id:"5-iot-\ub514\ubc14\uc774\uc2a4",level:3},{value:"\ud83d\udd12 \ubcf4\uc548 Best Practices",id:"-\ubcf4\uc548-best-practices",level:2},{value:"1. \ud56d\uc0c1 PKCE \uc0ac\uc6a9",id:"1-\ud56d\uc0c1-pkce-\uc0ac\uc6a9",level:3},{value:"2. State Parameter \uc0ac\uc6a9",id:"2-state-parameter-\uc0ac\uc6a9",level:3},{value:"3. Redirect URI \uac80\uc99d",id:"3-redirect-uri-\uac80\uc99d",level:3},{value:"4. Token \uc548\uc804\ud558\uac8c \uc800\uc7a5",id:"4-token-\uc548\uc804\ud558\uac8c-\uc800\uc7a5",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"authorization-flows",children:"Authorization Flows"})}),"\n",(0,s.jsx)(n.p,{children:"OAuth 2.0\uc758 \ub2e4\uc591\ud55c \uc778\uac00 \ud50c\ub85c\uc6b0\ub97c \uc774\ud574\ud558\uace0 \uc801\uc808\ud55c \uc0c1\ud669\uc5d0\uc11c \uc120\ud0dd\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 \uac01 \ud50c\ub85c\uc6b0\uc758 \uc6a9\ub3c4 \uc774\ud574"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \ud50c\ub85c\uc6b0\ubcc4 \ubcf4\uc548 \ud2b9\uc131 \ud30c\uc545"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \uc0c1\ud669\uc5d0 \ub9de\ub294 \ud50c\ub85c\uc6b0 \uc120\ud0dd"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 FastAPI\ub85c \uad6c\ud604"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \ubcf4\uc548 Best Practices"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-\ud50c\ub85c\uc6b0-\uac1c\uc694",children:"\ud83d\udd04 \ud50c\ub85c\uc6b0 \uac1c\uc694"}),"\n",(0,s.jsx)(n.p,{children:"OAuth 2.0\ub294 \ub2e4\uc591\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc720\ud615\uacfc \uc0ac\uc6a9 \uc0ac\ub840\ub97c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 \uc5ec\ub7ec \ud50c\ub85c\uc6b0\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.h3,{id:"\ud50c\ub85c\uc6b0-\uc120\ud0dd-\uac00\uc774\ub4dc",children:"\ud50c\ub85c\uc6b0 \uc120\ud0dd \uac00\uc774\ub4dc"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \ud074\ub77c\uc774\uc5b8\ud2b8 \uc720\ud615\ubcc4 \ucd94\ucc9c \ud50c\ub85c\uc6b0\nflow_selection = {\n    # \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 (\uc11c\ubc84 \uce21)\n    "Web App (Server-side)": "Authorization Code Flow + PKCE",\n\n    # SPA (Single Page Application)\n    "SPA (React, Vue, Angular)": "Authorization Code Flow + PKCE",\n\n    # \ubaa8\ubc14\uc77c \uc571 (iOS, Android)\n    "Mobile App": "Authorization Code Flow + PKCE",\n\n    # \ubc31\uc5d4\ub4dc \uc11c\ube44\uc2a4 (\uc11c\ubc84 \uac04 \ud1b5\uc2e0)\n    "Backend Service": "Client Credentials Flow",\n\n    # IoT \ub514\ubc14\uc774\uc2a4 (\uc785\ub825 \uc81c\ud55c)\n    "IoT Device": "Device Authorization Flow",\n\n    # \ub808\uac70\uc2dc \uc571 (\ube44\ucd94\ucc9c)\n    "Legacy App": "Resource Owner Password Flow (deprecated)",\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"1\ufe0f\u20e3-authorization-code-flow",children:"1\ufe0f\u20e3 Authorization Code Flow"}),"\n",(0,s.jsx)(n.h3,{id:"\uc815\uc758",children:"\uc815\uc758"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\uac00\uc7a5 \uc548\uc804\ud558\uace0 \uc77c\ubc18\uc801\uc778 \ud50c\ub85c\uc6b0"}),"\uc785\ub2c8\ub2e4. \uc11c\ubc84 \uce21 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ucd5c\uc801\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc0ac\ub840",children:"\uc0ac\uc6a9 \uc0ac\ub840"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 \uc804\ud1b5\uc801\uc778 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \ubc31\uc5d4\ub4dc \uc11c\ubc84\uac00 \uc788\ub294 \uc571"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Client Secret\uc744 \uc548\uc804\ud558\uac8c \ubcf4\uad00 \uac00\ub2a5"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\ud50c\ub85c\uc6b0-\ub2e4\uc774\uc5b4\uadf8\ub7a8",children:"\ud50c\ub85c\uc6b0 \ub2e4\uc774\uc5b4\uadf8\ub7a8"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"User                Client App         Auth Server        Resource Server\n |                      |                    |                    |\n |  1. \ub85c\uadf8\uc778 \ud074\ub9ad       |                    |                    |\n |---------------------\x3e|                    |                    |\n |                      |                    |                    |\n |  2. Authorization Request (redirect)      |                    |\n |                      |-------------------\x3e|                    |\n |                      |                    |                    |\n |  3. \ub85c\uadf8\uc778 & \uad8c\ud55c \uc2b9\uc778                     |                    |\n |<---------------------------------------|                    |\n |---------------------------------------\x3e|                    |\n |                      |                    |                    |\n |  4. Authorization Code (redirect)         |                    |\n |<---------------------------------------|                    |\n |---------------------\x3e|                    |                    |\n |                      |                    |                    |\n |                      |  5. Code + Secret  |                    |\n |                      |-------------------\x3e|                    |\n |                      |                    |                    |\n |                      |  6. Access Token   |                    |\n |                      |<-------------------|                    |\n |                      |                    |                    |\n |                      |  7. API Request    |                    |\n |                      |-------------------------------------------\x3e|\n |                      |                    |                    |\n |                      |  8. Resource       |                    |\n |                      |<-------------------------------------------|\n"})}),"\n",(0,s.jsx)(n.h3,{id:"fastapi-\uad6c\ud604",children:"FastAPI \uad6c\ud604"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, Request, HTTPException\nfrom authlib.integrations.starlette_client import OAuth\nfrom starlette.config import Config\nfrom starlette.middleware.sessions import SessionMiddleware\nimport secrets\n\napp = FastAPI()\n\n# \uc138\uc158 \ubbf8\ub4e4\uc6e8\uc5b4 (state \uc800\uc7a5\uc6a9)\napp.add_middleware(SessionMiddleware, secret_key=secrets.token_urlsafe(32))\n\n# OAuth \uc124\uc815\nconfig = Config('.env')\noauth = OAuth(config)\n\noauth.register(\n    name='google',\n    client_id=config('GOOGLE_CLIENT_ID'),\n    client_secret=config('GOOGLE_CLIENT_SECRET'),\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration',\n    client_kwargs={'scope': 'openid email profile'}\n)\n\n@app.get('/login')\nasync def login(request: Request):\n    \"\"\"Step 1 & 2: Authorization Request\"\"\"\n    # State parameter for CSRF protection\n    redirect_uri = request.url_for('callback')\n\n    # Redirect to authorization server\n    return await oauth.google.authorize_redirect(request, redirect_uri)\n\n@app.get('/callback')\nasync def callback(request: Request):\n    \"\"\"Step 4, 5, 6: Handle callback and exchange code for token\"\"\"\n    try:\n        # Exchange authorization code for access token\n        token = await oauth.google.authorize_access_token(request)\n\n        # Get user info\n        user = token.get('userinfo')\n\n        # Store in session\n        request.session['user'] = {\n            'sub': user['sub'],\n            'email': user['email'],\n            'name': user['name']\n        }\n\n        return {\"message\": \"Login successful\", \"user\": user}\n\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@app.get('/api/protected')\nasync def protected_route(request: Request):\n    \"\"\"Step 7: Use access token to access protected resource\"\"\"\n    user = request.session.get('user')\n\n    if not user:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n\n    return {\"message\": \"Protected data\", \"user\": user}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\ubcf4\uc548-\ud2b9\uc131",children:"\ubcf4\uc548 \ud2b9\uc131"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 \uc7a5\uc810\nadvantages = {\n    "Client Secret \ubcf4\ud638": "\uc11c\ubc84\uc5d0\uc11c\ub9cc \uc0ac\uc6a9, \ube0c\ub77c\uc6b0\uc800\uc5d0 \ub178\ucd9c \uc548 \ub428",\n    "Access Token \ubcf4\ud638": "\ube0c\ub77c\uc6b0\uc800\uc5d0 \ub178\ucd9c \uc548 \ub428 (\ubc31\ucc44\ub110 \uc804\uc1a1)",\n    "Refresh Token \uc9c0\uc6d0": "\uc7a5\uae30 \uc561\uc138\uc2a4 \uac00\ub2a5",\n    "\uac00\uc7a5 \uc548\uc804\ud55c \ud50c\ub85c\uc6b0": "\ubaa8\ub4e0 \ubcf4\uc548 \uc694\uad6c\uc0ac\ud56d \ucda9\uc871"\n}\n\n# \u26a0\ufe0f \uc694\uad6c\uc0ac\ud56d\nrequirements = {\n    "\uc11c\ubc84 \ud544\uc218": "\ubc31\uc5d4\ub4dc \uc11c\ubc84\uac00 \uc788\uc5b4\uc57c \ud568",\n    "Redirect \ud544\uc694": "\uc0ac\uc6a9\uc790 \ube0c\ub77c\uc6b0\uc800 \ub9ac\ub2e4\uc774\ub809\ud2b8",\n    "Client Secret \uad00\ub9ac": "\uc548\uc804\ud55c \ubcf4\uad00 \ud544\uc694"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"2\ufe0f\u20e3-authorization-code-flow-with-pkce",children:"2\ufe0f\u20e3 Authorization Code Flow with PKCE"}),"\n",(0,s.jsx)(n.h3,{id:"\uc815\uc758-1",children:"\uc815\uc758"}),"\n",(0,s.jsx)(n.p,{children:"**PKCE (Proof Key for Code Exchange)**\ub97c \ucd94\uac00\ud558\uc5ec \ubcf4\uc548\uc744 \uac15\ud654\ud55c \ud50c\ub85c\uc6b0\uc785\ub2c8\ub2e4."}),"\n",(0,s.jsx)(n.h3,{id:"pkce\ub780",children:"PKCE\ub780?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# PKCE\ub294 Authorization Code \ud0c8\ucde8 \uacf5\uaca9\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4\n\n# \ubb38\uc81c: Authorization Code Interception Attack\n# \uacf5\uaca9\uc790\uac00 Authorization Code\ub97c \uac00\ub85c\ucc44\uba74?\n# \u2192 Client Secret \uc5c6\uc5b4\ub3c4 Token \uad50\ud658 \uac00\ub2a5 (Public Client\uc758 \uacbd\uc6b0)\n\n# \ud574\uacb0: PKCE\n# \u2192 Code Verifier\ub85c Code\ub97c \ubcf4\ud638\n# \u2192 \uacf5\uaca9\uc790\uac00 Code\ub97c \uac00\ub85c\ucc44\ub3c4 Token \uad50\ud658 \ubd88\uac00\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc0ac\ub840-1",children:"\uc0ac\uc6a9 \uc0ac\ub840"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"\ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8"})," (OAuth 2.1 \ud45c\uc900)"]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 SPA (React, Vue, Angular)"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \ubaa8\ubc14\uc77c \uc571 (iOS, Android)"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Public Clients (Client Secret \uc5c6\ub294 \uc571)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"pkce-\ud50c\ub85c\uc6b0",children:"PKCE \ud50c\ub85c\uc6b0"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import hashlib\nimport base64\nimport secrets\n\n# Step 1: Code Verifier \uc0dd\uc131 (\ud074\ub77c\uc774\uc5b8\ud2b8)\ncode_verifier = secrets.token_urlsafe(32)\n# \uc608: "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"\n\n# Step 2: Code Challenge \uc0dd\uc131\ncode_challenge = base64.urlsafe_b64encode(\n    hashlib.sha256(code_verifier.encode()).digest()\n).decode().rstrip(\'=\')\n# \uc608: "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM"\n\n# Step 3: Authorization Request (code_challenge \ud3ec\ud568)\nauth_url = (\n    "https://accounts.google.com/o/oauth2/v2/auth"\n    f"?client_id={CLIENT_ID}"\n    f"&redirect_uri={REDIRECT_URI}"\n    "&response_type=code"\n    "&scope=openid email profile"\n    f"&code_challenge={code_challenge}"\n    "&code_challenge_method=S256"  # SHA-256\n)\n\n# Step 4: Token Request (code_verifier \ud3ec\ud568)\ntoken_data = {\n    "code": authorization_code,\n    "client_id": CLIENT_ID,\n    "redirect_uri": REDIRECT_URI,\n    "grant_type": "authorization_code",\n    "code_verifier": code_verifier  # \uc6d0\ubcf8 verifier\n}\n\n# Auth Server\ub294 code_challenge\uc640 code_verifier\ub97c \uac80\uc99d\n# SHA256(code_verifier) == code_challenge ?\n'})}),"\n",(0,s.jsx)(n.h3,{id:"fastapi-\uad6c\ud604-1",children:"FastAPI \uad6c\ud604"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Request, Response\nimport httpx\nimport hashlib\nimport base64\nimport secrets\n\napp = FastAPI()\n\n@app.get(\'/login\')\nasync def login(response: Response):\n    """PKCE with Authorization Code Flow"""\n\n    # 1. Code Verifier \uc0dd\uc131\n    code_verifier = secrets.token_urlsafe(32)\n\n    # 2. Code Challenge \uc0dd\uc131\n    code_challenge = base64.urlsafe_b64encode(\n        hashlib.sha256(code_verifier.encode()).digest()\n    ).decode().rstrip(\'=\')\n\n    # 3. Code Verifier\ub97c \ucfe0\ud0a4\uc5d0 \uc800\uc7a5 (\ub098\uc911\uc5d0 \uc0ac\uc6a9)\n    response.set_cookie(\n        key="code_verifier",\n        value=code_verifier,\n        httponly=True,\n        secure=True,\n        samesite=\'lax\'\n    )\n\n    # 4. Authorization URL \uc0dd\uc131 (code_challenge \ud3ec\ud568)\n    auth_url = (\n        "https://accounts.google.com/o/oauth2/v2/auth"\n        f"?client_id={CLIENT_ID}"\n        f"&redirect_uri={REDIRECT_URI}"\n        "&response_type=code"\n        "&scope=openid email profile"\n        f"&code_challenge={code_challenge}"\n        "&code_challenge_method=S256"\n    )\n\n    return {"auth_url": auth_url}\n\n@app.get(\'/callback\')\nasync def callback(code: str, request: Request):\n    """Token exchange with PKCE"""\n\n    # 1. Code Verifier \uac00\uc838\uc624\uae30\n    code_verifier = request.cookies.get(\'code_verifier\')\n\n    if not code_verifier:\n        raise HTTPException(status_code=400, detail="Missing code verifier")\n\n    # 2. Token \uc694\uccad (code_verifier \ud3ec\ud568)\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            \'https://oauth2.googleapis.com/token\',\n            data={\n                \'code\': code,\n                \'client_id\': CLIENT_ID,\n                \'redirect_uri\': REDIRECT_URI,\n                \'grant_type\': \'authorization_code\',\n                \'code_verifier\': code_verifier  # PKCE\n            }\n        )\n\n    token = response.json()\n\n    return {"access_token": token[\'access_token\']}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"\ubcf4\uc548-\ud2b9\uc131-1",children:"\ubcf4\uc548 \ud2b9\uc131"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 PKCE\uc758 \uc7a5\uc810\npkce_advantages = {\n    "Code Injection \ubc29\uc9c0": "\ud0c8\ucde8\ud55c Code\ub85c Token \uad50\ud658 \ubd88\uac00",\n    "Public Client \ubcf4\ud638": "Client Secret \uc5c6\uc5b4\ub3c4 \uc548\uc804",\n    "\ucd94\uac00 \ubcf4\uc548 \ub808\uc774\uc5b4": "Authorization Code Flow\uc5d0 \ubcf4\uc548 \ucd94\uac00",\n    "OAuth 2.1 \ud45c\uc900": "\ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uad8c\uc7a5"\n}\n\n# \ud83d\udcca PKCE vs \uc77c\ubc18 Authorization Code\ncomparison = {\n    "\uc77c\ubc18": "Client Secret\ub85c \ubcf4\ud638",\n    "PKCE": "Client Secret + Code Verifier\ub85c \ubcf4\ud638"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"3\ufe0f\u20e3-client-credentials-flow",children:"3\ufe0f\u20e3 Client Credentials Flow"}),"\n",(0,s.jsx)(n.h3,{id:"\uc815\uc758-2",children:"\uc815\uc758"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\uc11c\ubc84 \uac04 \ud1b5\uc2e0"}),"\uc744 \uc704\ud55c \ud50c\ub85c\uc6b0\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc5c6\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc9c1\uc811 \uc778\uc99d\ud569\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc0ac\ub840-2",children:"\uc0ac\uc6a9 \uc0ac\ub840"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 \ubc31\uc5d4\ub4dc \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Cron Jobs"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 CLI \ub3c4\uad6c"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4 \uac04 API \ud638\ucd9c"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\ud50c\ub85c\uc6b0-\ub2e4\uc774\uc5b4\uadf8\ub7a8-1",children:"\ud50c\ub85c\uc6b0 \ub2e4\uc774\uc5b4\uadf8\ub7a8"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Client App                 Auth Server               Resource Server\n    |                            |                           |\n    |  1. Client ID + Secret     |                           |\n    |---------------------------\x3e|                           |\n    |                            |                           |\n    |  2. Access Token           |                           |\n    |<---------------------------|                           |\n    |                            |                           |\n    |  3. API Request (Token)    |                           |\n    |--------------------------------------------------------\x3e|\n    |                            |                           |\n    |  4. Resource               |                           |\n    |<--------------------------------------------------------|\n"})}),"\n",(0,s.jsx)(n.h3,{id:"fastapi-\uad6c\ud604-2",children:"FastAPI \uad6c\ud604"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, Depends, HTTPException\nfrom fastapi.security import HTTPBearer, HTTPAuthorizationCredentials\nimport httpx\n\napp = FastAPI()\nsecurity = HTTPBearer()\n\n# Client Credentials Flow\nasync def get_access_token():\n    \"\"\"\ud074\ub77c\uc774\uc5b8\ud2b8 \uc790\uaca9\uc99d\uba85\uc73c\ub85c Access Token \ubc1b\uae30\"\"\"\n\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            'https://oauth2.googleapis.com/token',\n            data={\n                'grant_type': 'client_credentials',\n                'client_id': CLIENT_ID,\n                'client_secret': CLIENT_SECRET,\n                'scope': 'https://www.googleapis.com/auth/cloud-platform'\n            }\n        )\n\n    token_data = response.json()\n    return token_data['access_token']\n\n@app.get('/api/service-to-service')\nasync def service_to_service():\n    \"\"\"\uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0 \uc608\uc81c\"\"\"\n\n    # 1. Access Token \ubc1b\uae30\n    access_token = await get_access_token()\n\n    # 2. \ub2e4\ub978 \uc11c\ube44\uc2a4 API \ud638\ucd9c\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://api.example.com/data',\n            headers={'Authorization': f'Bearer {access_token}'}\n        )\n\n    return response.json()\n\n# FastAPI Dependency\ub85c \uad6c\ud604\nfrom functools import lru_cache\nfrom datetime import datetime, timedelta\n\nclass TokenManager:\n    def __init__(self):\n        self.token = None\n        self.expires_at = None\n\n    async def get_token(self):\n        \"\"\"\uce90\uc2f1\ub41c \ud1a0\ud070 \ubc18\ud658 (\ub9cc\ub8cc \uc2dc \uac31\uc2e0)\"\"\"\n\n        if self.token and self.expires_at > datetime.now():\n            return self.token\n\n        # Token \uac31\uc2e0\n        async with httpx.AsyncClient() as client:\n            response = await client.post(\n                'https://oauth2.googleapis.com/token',\n                data={\n                    'grant_type': 'client_credentials',\n                    'client_id': CLIENT_ID,\n                    'client_secret': CLIENT_SECRET\n                }\n            )\n\n        data = response.json()\n        self.token = data['access_token']\n        self.expires_at = datetime.now() + timedelta(seconds=data['expires_in'])\n\n        return self.token\n\ntoken_manager = TokenManager()\n\n@app.get('/api/cached-service')\nasync def cached_service():\n    \"\"\"\uce90\uc2f1\ub41c \ud1a0\ud070 \uc0ac\uc6a9\"\"\"\n    token = await token_manager.get_token()\n\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://api.example.com/data',\n            headers={'Authorization': f'Bearer {token}'}\n        )\n\n    return response.json()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\ubcf4\uc548-\ud2b9\uc131-2",children:"\ubcf4\uc548 \ud2b9\uc131"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 \ud2b9\uc9d5\ncharacteristics = {\n    "\uc0ac\uc6a9\uc790 \uc5c6\uc74c": "\uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub9cc \uc778\uc99d",\n    "\uac04\ub2e8\ud55c \ud50c\ub85c\uc6b0": "2\ub2e8\uacc4\ub85c \uc644\ub8cc",\n    "\uc11c\ubc84 \uac04 \ud1b5\uc2e0": "\ubc31\uc5d4\ub4dc \uc11c\ube44\uc2a4\uc6a9",\n    "Refresh Token \uc5c6\uc74c": "\uc0c8\ub85c\uc6b4 Access Token \ubc1c\uae09"\n}\n\n# \u26a0\ufe0f \uc8fc\uc758\uc0ac\ud56d\nwarnings = {\n    "\uc0ac\uc6a9\uc790 \ucee8\ud14d\uc2a4\ud2b8 \uc5c6\uc74c": "\ud2b9\uc815 \uc0ac\uc6a9\uc790 \ub300\uc2e0 \ud589\ub3d9 \ubd88\uac00",\n    "Client Secret \ud544\uc218": "\uc548\uc804\ud55c \ubcf4\uad00 \ud544\uc694",\n    "\ubc31\uc5d4\ub4dc\ub9cc": "\ud504\ub860\ud2b8\uc5d4\ub4dc\uc5d0\uc11c \uc0ac\uc6a9 \uae08\uc9c0"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"4\ufe0f\u20e3-device-authorization-flow",children:"4\ufe0f\u20e3 Device Authorization Flow"}),"\n",(0,s.jsx)(n.h3,{id:"\uc815\uc758-3",children:"\uc815\uc758"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\uc785\ub825 \uc81c\ud55c \ub514\ubc14\uc774\uc2a4"}),"\ub97c \uc704\ud55c \ud50c\ub85c\uc6b0\uc785\ub2c8\ub2e4. (\uc2a4\ub9c8\ud2b8 TV, IoT \uae30\uae30 \ub4f1)"]}),"\n",(0,s.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc0ac\ub840-3",children:"\uc0ac\uc6a9 \uc0ac\ub840"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 \uc2a4\ub9c8\ud2b8 TV \uc571"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \uac8c\uc784 \ucf58\uc194"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 IoT \ub514\ubc14\uc774\uc2a4"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 CLI \ub3c4\uad6c"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\ud50c\ub85c\uc6b0-\ub2e4\uc774\uc5b4\uadf8\ub7a8-2",children:"\ud50c\ub85c\uc6b0 \ub2e4\uc774\uc5b4\uadf8\ub7a8"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Device              User (on Phone/PC)     Auth Server      Resource Server\n  |                         |                    |                 |\n  |  1. Device Auth Request |                    |                 |\n  |----------------------------------------\x3e|                 |\n  |                         |                    |                 |\n  |  2. Device Code + User Code                  |                 |\n  |<----------------------------------------|                 |\n  |                         |                    |                 |\n  |  3. Display: "Visit https://device.com"      |                 |\n  |     "Enter code: ABCD-1234"                  |                 |\n  |                         |                    |                 |\n  |                         |  4. Visit URL      |                 |\n  |                         |-------------------\x3e|                 |\n  |                         |                    |                 |\n  |                         |  5. Enter Code     |                 |\n  |                         |-------------------\x3e|                 |\n  |                         |                    |                 |\n  |                         |  6. Approve        |                 |\n  |                         |-------------------\x3e|                 |\n  |                         |                    |                 |\n  |  7. Poll for Token      |                    |                 |\n  |----------------------------------------\x3e|                 |\n  |                         |                    |                 |\n  |  8. Access Token        |                    |                 |\n  |<----------------------------------------|                 |\n'})}),"\n",(0,s.jsx)(n.h3,{id:"fastapi-\uad6c\ud604-3",children:"FastAPI \uad6c\ud604"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI\nimport httpx\nimport asyncio\n\napp = FastAPI()\n\n@app.get('/device/login')\nasync def device_login():\n    \"\"\"Device Authorization Flow \uc2dc\uc791\"\"\"\n\n    # 1. Device Code \uc694\uccad\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            'https://oauth2.googleapis.com/device/code',\n            data={\n                'client_id': CLIENT_ID,\n                'scope': 'email profile'\n            }\n        )\n\n    data = response.json()\n\n    # {\n    #   \"device_code\": \"4/4-GMMhmHCXhWEzkobqIHGG_EnNYYsAkukHspeYUk9E8\",\n    #   \"user_code\": \"GQVQ-JKEC\",\n    #   \"verification_url\": \"https://www.google.com/device\",\n    #   \"expires_in\": 1800,\n    #   \"interval\": 5\n    # }\n\n    # 2. \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc548\ub0b4\n    print(f\"\ubc29\ubb38: {data['verification_url']}\")\n    print(f\"\ucf54\ub4dc \uc785\ub825: {data['user_code']}\")\n\n    # 3. Token \ud3f4\ub9c1\n    token = await poll_for_token(\n        device_code=data['device_code'],\n        interval=data['interval']\n    )\n\n    return {\"access_token\": token}\n\nasync def poll_for_token(device_code: str, interval: int):\n    \"\"\"\uc8fc\uae30\uc801\uc73c\ub85c Token \uc694\uccad (\ud3f4\ub9c1)\"\"\"\n\n    while True:\n        await asyncio.sleep(interval)\n\n        async with httpx.AsyncClient() as client:\n            response = await client.post(\n                'https://oauth2.googleapis.com/token',\n                data={\n                    'client_id': CLIENT_ID,\n                    'client_secret': CLIENT_SECRET,\n                    'device_code': device_code,\n                    'grant_type': 'urn:ietf:params:oauth:grant-type:device_code'\n                }\n            )\n\n        data = response.json()\n\n        # \uc5d0\ub7ec \ucc98\ub9ac\n        if 'error' in data:\n            if data['error'] == 'authorization_pending':\n                # \uc544\uc9c1 \uc2b9\uc778 \uc548 \ub428, \uacc4\uc18d \ud3f4\ub9c1\n                continue\n            elif data['error'] == 'slow_down':\n                # \ud3f4\ub9c1 \uac04\uaca9 \uc99d\uac00\n                interval += 5\n                continue\n            elif data['error'] == 'expired_token':\n                # Device Code \ub9cc\ub8cc\n                raise Exception(\"Device code expired\")\n            else:\n                raise Exception(f\"Error: {data['error']}\")\n\n        # Token \ubc1b\uc74c!\n        return data['access_token']\n\n# CLI \ub3c4\uad6c \uc608\uc81c\n@app.command()\nasync def cli_login():\n    \"\"\"CLI\uc5d0\uc11c Device Flow \uc0ac\uc6a9\"\"\"\n\n    async with httpx.AsyncClient() as client:\n        # Device Code \uc694\uccad\n        response = await client.post(\n            'https://github.com/login/device/code',\n            data={\n                'client_id': GITHUB_CLIENT_ID,\n                'scope': 'repo user'\n            }\n        )\n\n    data = response.json()\n\n    # \ud130\ubbf8\ub110\uc5d0 \ucd9c\ub825\n    print(f\"\\n{data['verification_uri']} \ubc29\ubb38\")\n    print(f\"\ucf54\ub4dc \uc785\ub825: {data['user_code']}\\n\")\n    print(\"\uc2b9\uc778 \ub300\uae30 \uc911...\")\n\n    # \ud3f4\ub9c1\n    token = await poll_for_token(\n        device_code=data['device_code'],\n        interval=data['interval']\n    )\n\n    # Token \uc800\uc7a5\n    save_token(token)\n    print(\"\u2705 \ub85c\uadf8\uc778 \uc131\uacf5!\")\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\uc2e4\uc81c-\uc0ac\uc6a9-\uc608",children:"\uc2e4\uc81c \uc0ac\uc6a9 \uc608"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# CLI \ub3c4\uad6c \uc2e4\ud589\n$ python cli_tool.py login\n\nhttps://github.com/login/device \ubc29\ubb38\n\ucf54\ub4dc \uc785\ub825: WDJB-MJHT\n\n\uc2b9\uc778 \ub300\uae30 \uc911...\n\u2705 \ub85c\uadf8\uc778 \uc131\uacf5!\n"})}),"\n",(0,s.jsx)(n.h2,{id:"5\ufe0f\u20e3-refresh-token-flow",children:"5\ufe0f\u20e3 Refresh Token Flow"}),"\n",(0,s.jsx)(n.h3,{id:"\uc815\uc758-4",children:"\uc815\uc758"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ub9cc\ub8cc\ub41c Access Token\uc744 \uac31\uc2e0"}),"\ud558\ub294 \ud50c\ub85c\uc6b0\uc785\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc0ac\ub840-4",children:"\uc0ac\uc6a9 \uc0ac\ub840"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Access Token \ub9cc\ub8cc \uc2dc"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \uc0ac\uc6a9\uc790 \uc7ac\ub85c\uadf8\uc778 \uc5c6\uc774 \uacc4\uc18d \uc0ac\uc6a9"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \uc7a5\uae30 \uc138\uc158 \uc720\uc9c0"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"fastapi-\uad6c\ud604-4",children:"FastAPI \uad6c\ud604"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, HTTPException, Depends\nfrom datetime import datetime, timedelta\nfrom typing import Optional\n\napp = FastAPI()\n\nclass TokenStore:\n    \"\"\"\ud1a0\ud070 \uc800\uc7a5\uc18c (\uc2e4\uc81c\ub85c\ub294 DB \uc0ac\uc6a9)\"\"\"\n\n    def __init__(self):\n        self.tokens = {}\n\n    def save_token(self, user_id: str, access_token: str,\n                   refresh_token: str, expires_in: int):\n        self.tokens[user_id] = {\n            'access_token': access_token,\n            'refresh_token': refresh_token,\n            'expires_at': datetime.now() + timedelta(seconds=expires_in)\n        }\n\n    def get_token(self, user_id: str) -> Optional[dict]:\n        return self.tokens.get(user_id)\n\n    def is_expired(self, user_id: str) -> bool:\n        token_data = self.tokens.get(user_id)\n        if not token_data:\n            return True\n        return datetime.now() >= token_data['expires_at']\n\ntoken_store = TokenStore()\n\nasync def refresh_access_token(refresh_token: str) -> dict:\n    \"\"\"Refresh Token\uc73c\ub85c \uc0c8 Access Token \ubc1c\uae09\"\"\"\n\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            'https://oauth2.googleapis.com/token',\n            data={\n                'client_id': CLIENT_ID,\n                'client_secret': CLIENT_SECRET,\n                'refresh_token': refresh_token,\n                'grant_type': 'refresh_token'\n            }\n        )\n\n    if response.status_code != 200:\n        raise HTTPException(status_code=401, detail=\"Refresh token expired\")\n\n    return response.json()\n\nasync def get_valid_token(user_id: str) -> str:\n    \"\"\"\uc720\ud6a8\ud55c Access Token \ubc18\ud658 (\ud544\uc694 \uc2dc \uc790\ub3d9 \uac31\uc2e0)\"\"\"\n\n    token_data = token_store.get_token(user_id)\n\n    if not token_data:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n\n    # Token\uc774 \ub9cc\ub8cc\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\n    if token_store.is_expired(user_id):\n        # Refresh Token\uc73c\ub85c \uac31\uc2e0\n        new_token = await refresh_access_token(token_data['refresh_token'])\n\n        # \uc0c8 \ud1a0\ud070 \uc800\uc7a5\n        token_store.save_token(\n            user_id=user_id,\n            access_token=new_token['access_token'],\n            refresh_token=token_data['refresh_token'],  # \uae30\uc874 Refresh Token \uc720\uc9c0\n            expires_in=new_token['expires_in']\n        )\n\n        return new_token['access_token']\n\n    return token_data['access_token']\n\n@app.get('/api/auto-refresh')\nasync def auto_refresh_example(user_id: str):\n    \"\"\"\uc790\ub3d9 \ud1a0\ud070 \uac31\uc2e0 \uc608\uc81c\"\"\"\n\n    # \uc720\ud6a8\ud55c Token \uac00\uc838\uc624\uae30 (\ub9cc\ub8cc \uc2dc \uc790\ub3d9 \uac31\uc2e0)\n    access_token = await get_valid_token(user_id)\n\n    # API \ud638\ucd9c\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://www.googleapis.com/oauth2/v2/userinfo',\n            headers={'Authorization': f'Bearer {access_token}'}\n        )\n\n    return response.json()\n\n# Middleware\ub85c \uc790\ub3d9 \uac31\uc2e0\nfrom starlette.middleware.base import BaseHTTPMiddleware\n\nclass TokenRefreshMiddleware(BaseHTTPMiddleware):\n    async def dispatch(self, request, call_next):\n        user_id = request.session.get('user_id')\n\n        if user_id:\n            try:\n                # Token \uac31\uc2e0 \ud655\uc778\n                await get_valid_token(user_id)\n            except HTTPException:\n                # Refresh Token\ub3c4 \ub9cc\ub8cc\ub428 \u2192 \uc7ac\ub85c\uadf8\uc778 \ud544\uc694\n                request.session.clear()\n\n        response = await call_next(request)\n        return response\n\napp.add_middleware(TokenRefreshMiddleware)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"refresh-token-rotation",children:"Refresh Token Rotation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# \ubcf4\uc548 \uac15\ud654: Refresh Token Rotation\n# \ub9e4\ubc88 \uc0c8\ub85c\uc6b4 Refresh Token \ubc1c\uae09\n\nasync def refresh_with_rotation(refresh_token: str) -> dict:\n    \"\"\"Refresh Token\ub3c4 \ud568\uaed8 \uac31\uc2e0 (Rotation)\"\"\"\n\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            'https://oauth2.googleapis.com/token',\n            data={\n                'client_id': CLIENT_ID,\n                'client_secret': CLIENT_SECRET,\n                'refresh_token': refresh_token,\n                'grant_type': 'refresh_token'\n            }\n        )\n\n    token_data = response.json()\n\n    # \uc0c8\ub85c\uc6b4 Access Token + Refresh Token\n    return {\n        'access_token': token_data['access_token'],\n        'refresh_token': token_data.get('refresh_token', refresh_token),  # \uc0c8 RT\n        'expires_in': token_data['expires_in']\n    }\n\n# Refresh Token \uc7ac\uc0ac\uc6a9 \ubc29\uc9c0\n# \uc774\uc804 Refresh Token \ubb34\ud6a8\ud654\n"})}),"\n",(0,s.jsx)(n.h2,{id:"6\ufe0f\u20e3-implicit-flow-deprecated",children:"6\ufe0f\u20e3 Implicit Flow (Deprecated)"}),"\n",(0,s.jsx)(n.h3,{id:"\ufe0f-\uc0ac\uc6a9-\uae08\uc9c0",children:"\u26a0\ufe0f \uc0ac\uc6a9 \uae08\uc9c0"}),"\n",(0,s.jsxs)(n.p,{children:["Implicit Flow\ub294 ",(0,s.jsx)(n.strong,{children:"\ubcf4\uc548 \ucde8\uc57d\uc810"}),"\uc73c\ub85c \uc778\ud574 \ub354 \uc774\uc0c1 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u274c Implicit Flow (\uc0ac\uc6a9 \uae08\uc9c0)\n# Access Token\uc774 URL\uc5d0 \ub178\ucd9c\ub428\n# https://myapp.com/callback#access_token=eyJhbGc...\n\n# \ubb38\uc81c\uc810:\nproblems = {\n    "\ube0c\ub77c\uc6b0\uc800 \ud788\uc2a4\ud1a0\ub9ac \ub178\ucd9c": "Access Token\uc774 \uae30\ub85d\ub428",\n    "Referrer \ub178\ucd9c": "\ub2e4\ub978 \uc0ac\uc774\ud2b8\ub85c \uc720\ucd9c \uac00\ub2a5",\n    "Refresh Token \uc5c6\uc74c": "\uc7ac\ub85c\uadf8\uc778 \ud544\uc694",\n    "\ubcf4\uc548 \ucde8\uc57d": "CSRF, Token \ud0c8\ucde8 \uc704\ud5d8"\n}\n\n# \u2705 \ub300\uc548: Authorization Code Flow + PKCE\n# SPA\ub3c4 PKCE\ub97c \uc0ac\uc6a9\ud558\uc138\uc694!\n'})}),"\n",(0,s.jsx)(n.h2,{id:"7\ufe0f\u20e3-resource-owner-password-flow-legacy",children:"7\ufe0f\u20e3 Resource Owner Password Flow (Legacy)"}),"\n",(0,s.jsx)(n.h3,{id:"\ufe0f-\ub808\uac70\uc2dc",children:"\u26a0\ufe0f \ub808\uac70\uc2dc"}),"\n",(0,s.jsxs)(n.p,{children:["\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638\ub97c \uc9c1\uc811 \uc785\ub825\ubc1b\ub294 \ud50c\ub85c\uc6b0\uc785\ub2c8\ub2e4. ",(0,s.jsx)(n.strong,{children:"\ub808\uac70\uc2dc \uc2dc\uc2a4\ud15c\uc5d0\uc11c\ub9cc"})," \uc0ac\uc6a9\ud558\uc138\uc694."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u274c Resource Owner Password Flow (\ube44\ucd94\ucc9c)\nasync def password_flow(username: str, password: str):\n    """\uc0ac\uc6a9\uc790 \ube44\ubc00\ubc88\ud638\ub85c \uc9c1\uc811 \ub85c\uadf8\uc778"""\n\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            \'https://oauth2.googleapis.com/token\',\n            data={\n                \'grant_type\': \'password\',\n                \'username\': username,\n                \'password\': password,\n                \'client_id\': CLIENT_ID,\n                \'client_secret\': CLIENT_SECRET\n            }\n        )\n\n    return response.json()\n\n# \ubb38\uc81c\uc810:\nissues = {\n    "\ube44\ubc00\ubc88\ud638 \ub178\ucd9c": "\ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ube44\ubc00\ubc88\ud638 \ud655\uc778",\n    "OAuth \ucca0\ud559 \uc704\ubc30": "\ube44\ubc00\ubc88\ud638 \uacf5\uc720 \uc548 \ud568\uc774 \ubaa9\uc801",\n    "\ubcf4\uc548 \uc704\ud5d8": "\ud53c\uc2f1 \uacf5\uaca9 \uac00\ub2a5\uc131",\n    "\uc81c\ud55c\ub41c \uae30\ub2a5": "2FA \uc9c0\uc6d0 \uc548 \ub428"\n}\n\n# \u2705 \ub300\uc548: Authorization Code Flow\n# \uc808\ub300 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694!\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-\ud50c\ub85c\uc6b0-\ube44\uad50\ud45c",children:"\ud83d\udcca \ud50c\ub85c\uc6b0 \ube44\uad50\ud45c"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\ud50c\ub85c\uc6b0"}),(0,s.jsx)(n.th,{children:"\ud074\ub77c\uc774\uc5b8\ud2b8 \uc720\ud615"}),(0,s.jsx)(n.th,{children:"Refresh Token"}),(0,s.jsx)(n.th,{children:"\ubcf4\uc548 \uc218\uc900"}),(0,s.jsx)(n.th,{children:"\uc0ac\uc6a9 \uad8c\uc7a5"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Authorization Code"})}),(0,s.jsx)(n.td,{children:"Web App (\uc11c\ubc84)"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12\ud83d\udd12\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u2705 \uad8c\uc7a5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Authorization Code + PKCE"})}),(0,s.jsx)(n.td,{children:"SPA, Mobile"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12\ud83d\udd12\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u2705 \uad8c\uc7a5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Client Credentials"})}),(0,s.jsx)(n.td,{children:"Backend Service"}),(0,s.jsx)(n.td,{children:"\u274c"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u2705 \uad8c\uc7a5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Device Authorization"})}),(0,s.jsx)(n.td,{children:"IoT, TV"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u2705 \uad8c\uc7a5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Refresh Token"})}),(0,s.jsx)(n.td,{children:"All"}),(0,s.jsx)(n.td,{children:"N/A"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u2705 \uad8c\uc7a5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Implicit"})}),(0,s.jsx)(n.td,{children:"\u274c (Deprecated)"}),(0,s.jsx)(n.td,{children:"\u274c"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u274c \uae08\uc9c0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Password"})}),(0,s.jsx)(n.td,{children:"\u274c (Legacy)"}),(0,s.jsx)(n.td,{children:"\u2705"}),(0,s.jsx)(n.td,{children:"\ud83d\udd12"}),(0,s.jsx)(n.td,{children:"\u274c \uae08\uc9c0"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"-\ud50c\ub85c\uc6b0-\uc120\ud0dd-\uac00\uc774\ub4dc",children:"\ud83d\udca1 \ud50c\ub85c\uc6b0 \uc120\ud0dd \uac00\uc774\ub4dc"}),"\n",(0,s.jsx)(n.h3,{id:"1-\uc6f9-\uc560\ud50c\ub9ac\ucf00\uc774\uc158",children:"1. \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 Authorization Code Flow + PKCE\nuse_case = {\n    "\ud074\ub77c\uc774\uc5b8\ud2b8": "\uc11c\ubc84 \uce21 \uc6f9 \uc571 (Django, FastAPI, Flask)",\n    "\ud50c\ub85c\uc6b0": "Authorization Code + PKCE",\n    "\uc774\uc720": "\uac00\uc7a5 \uc548\uc804, Client Secret \ubcf4\ud638 \uac00\ub2a5"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-spa-react-vue",children:"2. SPA (React, Vue)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 Authorization Code Flow + PKCE\nuse_case = {\n    "\ud074\ub77c\uc774\uc5b8\ud2b8": "SPA (React, Vue, Angular)",\n    "\ud50c\ub85c\uc6b0": "Authorization Code + PKCE",\n    "\uc774\uc720": "Client Secret \uc5c6\uc5b4\ub3c4 \uc548\uc804 (PKCE \ub355\ubd84)"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-\ubaa8\ubc14\uc77c-\uc571",children:"3. \ubaa8\ubc14\uc77c \uc571"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 Authorization Code Flow + PKCE\nuse_case = {\n    "\ud074\ub77c\uc774\uc5b8\ud2b8": "iOS, Android \uc571",\n    "\ud50c\ub85c\uc6b0": "Authorization Code + PKCE",\n    "\uc774\uc720": "\uc571 \ub514\ucef4\ud30c\uc77c \ubc29\uc9c0, Native \ube0c\ub77c\uc6b0\uc800 \uc0ac\uc6a9"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"4-\ubc31\uc5d4\ub4dc-\uc11c\ube44\uc2a4",children:"4. \ubc31\uc5d4\ub4dc \uc11c\ube44\uc2a4"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 Client Credentials Flow\nuse_case = {\n    "\ud074\ub77c\uc774\uc5b8\ud2b8": "\ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4, Cron Job",\n    "\ud50c\ub85c\uc6b0": "Client Credentials",\n    "\uc774\uc720": "\uc0ac\uc6a9\uc790 \uc5c6\uc74c, \uc11c\ubc84 \uac04 \ud1b5\uc2e0"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-iot-\ub514\ubc14\uc774\uc2a4",children:"5. IoT \ub514\ubc14\uc774\uc2a4"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 Device Authorization Flow\nuse_case = {\n    "\ud074\ub77c\uc774\uc5b8\ud2b8": "\uc2a4\ub9c8\ud2b8 TV, IoT \uae30\uae30",\n    "\ud50c\ub85c\uc6b0": "Device Authorization",\n    "\uc774\uc720": "\uc785\ub825 \uc81c\ud55c, \ub2e4\ub978 \uae30\uae30\ub85c \uc778\uc99d"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-\ubcf4\uc548-best-practices",children:"\ud83d\udd12 \ubcf4\uc548 Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"1-\ud56d\uc0c1-pkce-\uc0ac\uc6a9",children:"1. \ud56d\uc0c1 PKCE \uc0ac\uc6a9"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# \u2705 \ubaa8\ub4e0 public clients\ub294 PKCE \ud544\uc218\n# OAuth 2.1\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 PKCE \uad8c\uc7a5\n\nrecommendation = {\n    "Web App": "Authorization Code + PKCE",\n    "SPA": "Authorization Code + PKCE (\ud544\uc218)",\n    "Mobile": "Authorization Code + PKCE (\ud544\uc218)",\n    "Backend": "Client Credentials (PKCE \ubd88\ud544\uc694)"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-state-parameter-\uc0ac\uc6a9",children:"2. State Parameter \uc0ac\uc6a9"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# CSRF \ubc29\uc9c0\nimport secrets\n\nstate = secrets.token_urlsafe(32)\nsave_state_to_session(state)\n\n# \ucf5c\ubc31 \uc2dc \uac80\uc99d\nif request.args['state'] != get_state_from_session():\n    raise SecurityError(\"CSRF detected\")\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-redirect-uri-\uac80\uc99d",children:"3. Redirect URI \uac80\uc99d"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# \ub4f1\ub85d\ub41c URI\ub9cc \ud5c8\uc6a9\nALLOWED_REDIRECT_URIS = [\n    'https://myapp.com/callback',\n    'https://myapp.com/auth/google/callback'\n]\n\nif redirect_uri not in ALLOWED_REDIRECT_URIS:\n    raise ValueError(\"Invalid redirect URI\")\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-token-\uc548\uc804\ud558\uac8c-\uc800\uc7a5",children:"4. Token \uc548\uc804\ud558\uac8c \uc800\uc7a5"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# \u2705 \uc11c\ubc84 \uce21: \uc554\ud638\ud654\ub41c DB\n# \u2705 \ube0c\ub77c\uc6b0\uc800: HttpOnly Cookie\n# \u274c \ube0c\ub77c\uc6b0\uc800: localStorage (XSS \uc704\ud5d8)\n\n# HttpOnly Cookie \uc0ac\uc6a9\nresponse.set_cookie(\n    key=\"access_token\",\n    value=access_token,\n    httponly=True,  # JavaScript \uc811\uadfc \ubd88\uac00\n    secure=True,    # HTTPS\ub9cc\n    samesite='lax'  # CSRF \ubc29\uc9c0\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./concepts",children:"OAuth 2.0 \uac1c\ub150"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./oidc",children:"OpenID Connect"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../advanced/pkce",children:"PKCE \uad6c\ud604"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../advanced/security",children:"\ubcf4\uc548 Best Practices"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,s.jsx)(n.p,{children:"\ud50c\ub85c\uc6b0\ub97c \uc774\ud574\ud588\ub2e4\uba74, \uc774\uc81c \uc8fc\uc694 \uc6a9\uc5b4\ub97c \uc815\ub9ac\ud574\ubd05\uc2dc\ub2e4!"}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,s.jsx)(n.a,{href:"./terminology",children:"\uc6a9\uc5b4 \uc815\ub9ac"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": 2024\ub144 \uae30\uc900\uc73c\ub85c ",(0,s.jsx)(n.strong,{children:"\ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 PKCE"}),"\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uad8c\uc7a5\ub429\ub2c8\ub2e4. OAuth 2.1\uc5d0\uc11c\ub294 PKCE\uac00 \ud544\uc218\uc785\ub2c8\ub2e4!"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);