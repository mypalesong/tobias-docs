"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9007],{8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(n){const e=r.useContext(i);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:e},n.children)}},8964:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"oauth/scenarios/social-login","title":"\uc18c\uc15c \ub85c\uadf8\uc778 \uc644\uc804 \uad6c\ud604","description":"Google, GitHub, Microsoft \uc18c\uc15c \ub85c\uadf8\uc778\uc744 \uc9c0\uc6d0\ud558\ub294 \uc644\uc804\ud55c FastAPI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ucc98\uc74c\ubd80\ud130 \ub05d\uae4c\uc9c0 \uad6c\ucd95\ud569\ub2c8\ub2e4.","source":"@site/docs/oauth/scenarios/social-login.md","sourceDirName":"oauth/scenarios","slug":"/oauth/scenarios/social-login","permalink":"/tobias-docs/comp-1/docs/oauth/scenarios/social-login","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/scenarios/social-login.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"oauthSidebar","previous":{"title":"JWT \ud1a0\ud070 \ucc98\ub9ac","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/jwt-tokens"},"next":{"title":"\uc790\uccb4 OAuth 2.0 \uc11c\ubc84 \uad6c\ucd95","permalink":"/tobias-docs/comp-1/docs/oauth/scenarios/oauth-server"}}');var o=t(4848),i=t(8453);const s={sidebar_position:1},a="\uc18c\uc15c \ub85c\uadf8\uc778 \uc644\uc804 \uad6c\ud604",c={},l=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udcc1 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870",id:"-\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",level:2},{value:"\ud83d\udee0\ufe0f \ubc31\uc5d4\ub4dc \uad6c\ud604",id:"\ufe0f-\ubc31\uc5d4\ub4dc-\uad6c\ud604",level:2},{value:"1. \uc758\uc874\uc131 \uc124\uce58",id:"1-\uc758\uc874\uc131-\uc124\uce58",level:3},{value:"2. \ud658\uacbd\ubcc0\uc218 (.env)",id:"2-\ud658\uacbd\ubcc0\uc218-env",level:3},{value:"3. \uc124\uc815 (config.py)",id:"3-\uc124\uc815-configpy",level:3},{value:"4. \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubaa8\ub378",id:"4-\ub370\uc774\ud130\ubca0\uc774\uc2a4-\ubaa8\ub378",level:3},{value:"5. OAuth \uc124\uc815 (auth/oauth.py)",id:"5-oauth-\uc124\uc815-authoauthpy",level:3},{value:"6. \uc778\uc99d \ub77c\uc6b0\ud2b8 (auth/routes.py)",id:"6-\uc778\uc99d-\ub77c\uc6b0\ud2b8-authroutespy",level:3},{value:"\u269b\ufe0f \ud504\ub860\ud2b8\uc5d4\ub4dc \uad6c\ud604 (React + TypeScript)",id:"\ufe0f-\ud504\ub860\ud2b8\uc5d4\ub4dc-\uad6c\ud604-react--typescript",level:2},{value:"1. \ub85c\uadf8\uc778 \ucef4\ud3ec\ub10c\ud2b8",id:"1-\ub85c\uadf8\uc778-\ucef4\ud3ec\ub10c\ud2b8",level:3},{value:"2. \uc778\uc99d \ud6c5",id:"2-\uc778\uc99d-\ud6c5",level:3},{value:"3. \ucf5c\ubc31 \ud398\uc774\uc9c0",id:"3-\ucf5c\ubc31-\ud398\uc774\uc9c0",level:3},{value:"4. \uba54\uc778 \uc571",id:"4-\uba54\uc778-\uc571",level:3},{value:"\ud83d\ude80 \ubc30\ud3ec",id:"-\ubc30\ud3ec",level:2},{value:"Docker Compose",id:"docker-compose",level:3},{value:"\ud504\ub85c\ub355\uc158 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"\ud504\ub85c\ub355\uc158-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function u(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"\uc18c\uc15c-\ub85c\uadf8\uc778-\uc644\uc804-\uad6c\ud604",children:"\uc18c\uc15c \ub85c\uadf8\uc778 \uc644\uc804 \uad6c\ud604"})}),"\n",(0,o.jsx)(e.p,{children:"Google, GitHub, Microsoft \uc18c\uc15c \ub85c\uadf8\uc778\uc744 \uc9c0\uc6d0\ud558\ub294 \uc644\uc804\ud55c FastAPI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ucc98\uc74c\ubd80\ud130 \ub05d\uae4c\uc9c0 \uad6c\ucd95\ud569\ub2c8\ub2e4."}),"\n",(0,o.jsx)(e.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"\u2705 \ud504\ub85c\ub355\uc158\uae09 \uc18c\uc15c \ub85c\uadf8\uc778 \uad6c\ud604"}),"\n",(0,o.jsx)(e.li,{children:"\u2705 \ub2e4\uc911 Provider \uc9c0\uc6d0"}),"\n",(0,o.jsx)(e.li,{children:"\u2705 \uacc4\uc815 \uc5f0\ub3d9 \ubc0f \uad00\ub9ac"}),"\n",(0,o.jsx)(e.li,{children:"\u2705 \ud504\ub860\ud2b8\uc5d4\ub4dc \ud1b5\ud569"}),"\n",(0,o.jsx)(e.li,{children:"\u2705 \ubc30\ud3ec \ubc0f \uc6b4\uc601"}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"-\ud504\ub85c\uc81d\ud2b8-\uad6c\uc870",children:"\ud83d\udcc1 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"social-login-app/\n\u251c\u2500\u2500 backend/\n\u2502   \u251c\u2500\u2500 app/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 main.py              # FastAPI \uc571\n\u2502   \u2502   \u251c\u2500\u2500 config.py            # \uc124\uc815\n\u2502   \u2502   \u251c\u2500\u2500 database.py          # DB \uc5f0\uacb0\n\u2502   \u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 user.py          # \uc0ac\uc6a9\uc790 \ubaa8\ub378\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 provider.py      # Provider \ubaa8\ub378\n\u2502   \u2502   \u251c\u2500\u2500 schemas/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 user.py          # Pydantic \uc2a4\ud0a4\ub9c8\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 auth.py\n\u2502   \u2502   \u251c\u2500\u2500 auth/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 oauth.py         # OAuth \uc124\uc815\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 dependencies.py  # \uc778\uc99d \uc758\uc874\uc131\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 routes.py        # \uc778\uc99d \ub77c\uc6b0\ud2b8\n\u2502   \u2502   \u2514\u2500\u2500 api/\n\u2502   \u2502       \u251c\u2500\u2500 __init__.py\n\u2502   \u2502       \u2514\u2500\u2500 routes.py        # API \ub77c\uc6b0\ud2b8\n\u2502   \u251c\u2500\u2500 migrations/              # Alembic migrations\n\u2502   \u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 .env\n\u2502   \u251c\u2500\u2500 requirements.txt\n\u2502   \u2514\u2500\u2500 alembic.ini\n\u251c\u2500\u2500 frontend/\n\u2502   \u251c\u2500\u2500 src/\n\u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 LoginButton.tsx\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 AccountSettings.tsx\n\u2502   \u2502   \u251c\u2500\u2500 hooks/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 useAuth.ts\n\u2502   \u2502   \u251c\u2500\u2500 App.tsx\n\u2502   \u2502   \u2514\u2500\u2500 main.tsx\n\u2502   \u251c\u2500\u2500 package.json\n\u2502   \u2514\u2500\u2500 vite.config.ts\n\u2514\u2500\u2500 docker-compose.yml\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\ufe0f-\ubc31\uc5d4\ub4dc-\uad6c\ud604",children:"\ud83d\udee0\ufe0f \ubc31\uc5d4\ub4dc \uad6c\ud604"}),"\n",(0,o.jsx)(e.h3,{id:"1-\uc758\uc874\uc131-\uc124\uce58",children:"1. \uc758\uc874\uc131 \uc124\uce58"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"# requirements.txt\nfastapi==0.109.0\nuvicorn[standard]==0.27.0\nsqlalchemy==2.0.25\nalembic==1.13.1\npsycopg2-binary==2.9.9\nauthlib==1.3.0\nhttpx==0.26.0\npython-jose[cryptography]==3.3.0\npasslib[bcrypt]==1.7.4\npython-dotenv==1.0.0\npython-multipart==0.0.6\nredis==5.0.1\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"pip install -r requirements.txt\n"})}),"\n",(0,o.jsx)(e.h3,{id:"2-\ud658\uacbd\ubcc0\uc218-env",children:"2. \ud658\uacbd\ubcc0\uc218 (.env)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"# \ub370\uc774\ud130\ubca0\uc774\uc2a4\nDATABASE_URL=postgresql://user:password@localhost:5432/sociallogin\n\n# JWT\nSECRET_KEY=your-super-secret-jwt-key-change-this\nALGORITHM=HS256\nACCESS_TOKEN_EXPIRE_MINUTES=15\nREFRESH_TOKEN_EXPIRE_DAYS=30\n\n# Google OAuth\nGOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com\nGOOGLE_CLIENT_SECRET=your-google-client-secret\n\n# GitHub OAuth\nGITHUB_CLIENT_ID=your-github-client-id\nGITHUB_CLIENT_SECRET=your-github-client-secret\n\n# Microsoft OAuth\nMICROSOFT_CLIENT_ID=your-microsoft-client-id\nMICROSOFT_CLIENT_SECRET=your-microsoft-client-secret\n\n# Redis\nREDIS_URL=redis://localhost:6379\n\n# \uc571 \uc124\uc815\nBASE_URL=http://localhost:8000\nFRONTEND_URL=http://localhost:3000\n"})}),"\n",(0,o.jsx)(e.h3,{id:"3-\uc124\uc815-configpy",children:"3. \uc124\uc815 (config.py)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'from pydantic_settings import BaseSettings\nfrom functools import lru_cache\n\nclass Settings(BaseSettings):\n    # \ub370\uc774\ud130\ubca0\uc774\uc2a4\n    database_url: str\n\n    # JWT\n    secret_key: str\n    algorithm: str = "HS256"\n    access_token_expire_minutes: int = 15\n    refresh_token_expire_days: int = 30\n\n    # OAuth Providers\n    google_client_id: str\n    google_client_secret: str\n    github_client_id: str\n    github_client_secret: str\n    microsoft_client_id: str\n    microsoft_client_secret: str\n\n    # Redis\n    redis_url: str\n\n    # \uc571\n    base_url: str\n    frontend_url: str\n\n    class Config:\n        env_file = ".env"\n        case_sensitive = False\n\n@lru_cache()\ndef get_settings() -> Settings:\n    return Settings()\n'})}),"\n",(0,o.jsx)(e.h3,{id:"4-\ub370\uc774\ud130\ubca0\uc774\uc2a4-\ubaa8\ub378",children:"4. \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubaa8\ub378"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'# models/user.py\nfrom sqlalchemy import Column, Integer, String, Boolean, DateTime\nfrom sqlalchemy.orm import relationship\nfrom datetime import datetime\nfrom app.database import Base\n\nclass User(Base):\n    __tablename__ = "users"\n\n    id = Column(Integer, primary_key=True, index=True)\n    email = Column(String, unique=True, index=True, nullable=False)\n    name = Column(String, nullable=True)\n    picture = Column(String, nullable=True)\n    email_verified = Column(Boolean, default=False)\n    is_active = Column(Boolean, default=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n\n    # \uad00\uacc4\n    provider_accounts = relationship("ProviderAccount", back_populates="user")\n\n# models/provider.py\nfrom sqlalchemy import Column, Integer, String, DateTime, ForeignKey, JSON\nfrom sqlalchemy.orm import relationship\nfrom app.database import Base\n\nclass ProviderAccount(Base):\n    __tablename__ = "provider_accounts"\n\n    id = Column(Integer, primary_key=True, index=True)\n    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)\n    provider = Column(String(50), nullable=False)\n    provider_user_id = Column(String(255), nullable=False)\n    provider_data = Column(JSON, nullable=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n\n    # \uad00\uacc4\n    user = relationship("User", back_populates="provider_accounts")\n\n    # Unique constraint\n    __table_args__ = (\n        UniqueConstraint(\'provider\', \'provider_user_id\'),\n    )\n'})}),"\n",(0,o.jsx)(e.h3,{id:"5-oauth-\uc124\uc815-authoauthpy",children:"5. OAuth \uc124\uc815 (auth/oauth.py)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"from authlib.integrations.starlette_client import OAuth\nfrom starlette.config import Config\nfrom app.config import get_settings\n\nsettings = get_settings()\nconfig = Config('.env')\n\noauth = OAuth(config)\n\n# Google\noauth.register(\n    name='google',\n    client_id=settings.google_client_id,\n    client_secret=settings.google_client_secret,\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration',\n    client_kwargs={'scope': 'openid email profile'}\n)\n\n# GitHub\noauth.register(\n    name='github',\n    client_id=settings.github_client_id,\n    client_secret=settings.github_client_secret,\n    authorize_url='https://github.com/login/oauth/authorize',\n    access_token_url='https://github.com/login/oauth/access_token',\n    api_base_url='https://api.github.com/',\n    client_kwargs={'scope': 'user:email'}\n)\n\n# Microsoft\noauth.register(\n    name='microsoft',\n    client_id=settings.microsoft_client_id,\n    client_secret=settings.microsoft_client_secret,\n    server_metadata_url='https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration',\n    client_kwargs={'scope': 'openid email profile'}\n)\n"})}),"\n",(0,o.jsx)(e.h3,{id:"6-\uc778\uc99d-\ub77c\uc6b0\ud2b8-authroutespy",children:"6. \uc778\uc99d \ub77c\uc6b0\ud2b8 (auth/routes.py)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"from fastapi import APIRouter, Request, HTTPException, Depends\nfrom fastapi.responses import RedirectResponse\nfrom sqlalchemy.orm import Session\nfrom app.auth.oauth import oauth\nfrom app.database import get_db\nfrom app.models.user import User\nfrom app.models.provider import ProviderAccount\nfrom app.config import get_settings\nimport httpx\n\nrouter = APIRouter(prefix=\"/auth\", tags=[\"Authentication\"])\nsettings = get_settings()\n\n@router.get(\"/login/{provider}\")\nasync def login(provider: str, request: Request):\n    \"\"\"\uc18c\uc15c \ub85c\uadf8\uc778 \uc2dc\uc791\"\"\"\n    provider_client = getattr(oauth, provider)\n    redirect_uri = f\"{settings.base_url}/auth/{provider}/callback\"\n    return await provider_client.authorize_redirect(request, redirect_uri)\n\n@router.get(\"/{provider}/callback\")\nasync def callback(\n    provider: str,\n    request: Request,\n    db: Session = Depends(get_db)\n):\n    \"\"\"OAuth \ucf5c\ubc31\"\"\"\n    try:\n        # Token \ubc1b\uae30\n        provider_client = getattr(oauth, provider)\n        token = await provider_client.authorize_access_token(request)\n\n        # \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30\n        user_info = await get_user_info(provider, token)\n\n        # \uc0ac\uc6a9\uc790 \ucc3e\uae30 \ub610\ub294 \uc0dd\uc131\n        user = find_or_create_user(db, provider, user_info)\n\n        # JWT \ud1a0\ud070 \uc0dd\uc131\n        from app.auth.jwt import create_token_pair\n        tokens = create_token_pair(user.id)\n\n        # \ud504\ub860\ud2b8\uc5d4\ub4dc\ub85c \ub9ac\ub2e4\uc774\ub809\ud2b8 (\ud1a0\ud070 \ud3ec\ud568)\n        redirect_url = (\n            f\"{settings.frontend_url}/auth/callback\"\n            f\"?access_token={tokens['access_token']}\"\n            f\"&refresh_token={tokens['refresh_token']}\"\n        )\n\n        return RedirectResponse(url=redirect_url)\n\n    except Exception as e:\n        error_url = f\"{settings.frontend_url}/auth/error?message={str(e)}\"\n        return RedirectResponse(url=error_url)\n\nasync def get_user_info(provider: str, token: dict) -> dict:\n    \"\"\"Provider\ubcc4 \uc0ac\uc6a9\uc790 \uc815\ubcf4 \ucd94\ucd9c\"\"\"\n    if provider == \"google\":\n        userinfo = token.get('userinfo')\n        return {\n            'provider': 'google',\n            'provider_user_id': userinfo['sub'],\n            'email': userinfo['email'],\n            'email_verified': userinfo.get('email_verified', False),\n            'name': userinfo.get('name'),\n            'picture': userinfo.get('picture')\n        }\n    elif provider == \"github\":\n        async with httpx.AsyncClient() as client:\n            user_resp = await client.get(\n                'https://api.github.com/user',\n                headers={'Authorization': f'Bearer {token[\"access_token\"]}'}\n            )\n            user_data = user_resp.json()\n\n            emails_resp = await client.get(\n                'https://api.github.com/user/emails',\n                headers={'Authorization': f'Bearer {token[\"access_token\"]}'}\n            )\n            emails = emails_resp.json()\n\n        primary_email = next((e['email'] for e in emails if e['primary']), None)\n\n        return {\n            'provider': 'github',\n            'provider_user_id': str(user_data['id']),\n            'email': primary_email,\n            'email_verified': True,\n            'name': user_data.get('name', user_data['login']),\n            'picture': user_data['avatar_url']\n        }\n    # Microsoft \ucd94\uac00...\n\ndef find_or_create_user(db: Session, provider: str, user_info: dict) -> User:\n    \"\"\"\uc0ac\uc6a9\uc790 \ucc3e\uae30 \ub610\ub294 \uc0dd\uc131\"\"\"\n    # Provider \uacc4\uc815\uc73c\ub85c \ucc3e\uae30\n    provider_account = db.query(ProviderAccount).filter_by(\n        provider=provider,\n        provider_user_id=user_info['provider_user_id']\n    ).first()\n\n    if provider_account:\n        return provider_account.user\n\n    # \uc774\uba54\uc77c\ub85c \uae30\uc874 \uc0ac\uc6a9\uc790 \ucc3e\uae30\n    user = None\n    if user_info.get('email'):\n        user = db.query(User).filter_by(email=user_info['email']).first()\n\n    if not user:\n        # \uc0c8 \uc0ac\uc6a9\uc790 \uc0dd\uc131\n        user = User(\n            email=user_info['email'],\n            name=user_info.get('name'),\n            picture=user_info.get('picture'),\n            email_verified=user_info.get('email_verified', False)\n        )\n        db.add(user)\n        db.flush()\n\n    # Provider \uacc4\uc815 \uc5f0\uacb0\n    provider_account = ProviderAccount(\n        user_id=user.id,\n        provider=provider,\n        provider_user_id=user_info['provider_user_id'],\n        provider_data=user_info\n    )\n    db.add(provider_account)\n    db.commit()\n\n    return user\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\ufe0f-\ud504\ub860\ud2b8\uc5d4\ub4dc-\uad6c\ud604-react--typescript",children:"\u269b\ufe0f \ud504\ub860\ud2b8\uc5d4\ub4dc \uad6c\ud604 (React + TypeScript)"}),"\n",(0,o.jsx)(e.h3,{id:"1-\ub85c\uadf8\uc778-\ucef4\ud3ec\ub10c\ud2b8",children:"1. \ub85c\uadf8\uc778 \ucef4\ud3ec\ub10c\ud2b8"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// components/LoginButton.tsx\nimport React from 'react';\n\ninterface LoginButtonProps {\n  provider: 'google' | 'github' | 'microsoft';\n}\n\nexport const LoginButton: React.FC<LoginButtonProps> = ({ provider }) => {\n  const handleLogin = () => {\n    window.location.href = `http://localhost:8000/auth/login/${provider}`;\n  };\n\n  const providerInfo = {\n    google: { name: 'Google', icon: '\ud83d\udd35', color: '#4285f4' },\n    github: { name: 'GitHub', icon: '\u26ab', color: '#333' },\n    microsoft: { name: 'Microsoft', icon: '\ud83d\udd37', color: '#00a4ef' }\n  };\n\n  const info = providerInfo[provider];\n\n  return (\n    <button\n      onClick={handleLogin}\n      style={{\n        backgroundColor: info.color,\n        color: 'white',\n        padding: '12px 24px',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        fontSize: '16px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      }}\n    >\n      <span>{info.icon}</span>\n      <span>{info.name}\ub85c \ub85c\uadf8\uc778</span>\n    </button>\n  );\n};\n"})}),"\n",(0,o.jsx)(e.h3,{id:"2-\uc778\uc99d-\ud6c5",children:"2. \uc778\uc99d \ud6c5"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// hooks/useAuth.ts\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  email: string;\n  name: string;\n  picture: string;\n}\n\nexport const useAuth = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const accessToken = localStorage.getItem('access_token');\n\n    if (!accessToken) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.get('http://localhost:8000/api/me', {\n        headers: { Authorization: `Bearer ${accessToken}` }\n      });\n\n      setUser(response.data);\n    } catch (error) {\n      // Token \ub9cc\ub8cc \u2192 Refresh \uc2dc\ub3c4\n      await refreshToken();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshToken = async () => {\n    const refreshToken = localStorage.getItem('refresh_token');\n\n    if (!refreshToken) return;\n\n    try {\n      const response = await axios.post('http://localhost:8000/auth/refresh', {\n        refresh_token: refreshToken\n      });\n\n      localStorage.setItem('access_token', response.data.access_token);\n      await checkAuth();\n    } catch (error) {\n      logout();\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setUser(null);\n  };\n\n  return { user, loading, logout };\n};\n"})}),"\n",(0,o.jsx)(e.h3,{id:"3-\ucf5c\ubc31-\ud398\uc774\uc9c0",children:"3. \ucf5c\ubc31 \ud398\uc774\uc9c0"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// pages/AuthCallback.tsx\nimport { useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nexport const AuthCallback = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const accessToken = searchParams.get('access_token');\n    const refreshToken = searchParams.get('refresh_token');\n\n    if (accessToken && refreshToken) {\n      // \ud1a0\ud070 \uc800\uc7a5\n      localStorage.setItem('access_token', accessToken);\n      localStorage.setItem('refresh_token', refreshToken);\n\n      // \ud648\uc73c\ub85c \uc774\ub3d9\n      navigate('/');\n    } else {\n      // \uc5d0\ub7ec \ucc98\ub9ac\n      const error = searchParams.get('message');\n      console.error('Login failed:', error);\n      navigate('/login');\n    }\n  }, [searchParams, navigate]);\n\n  return <div>\ub85c\uadf8\uc778 \ucc98\ub9ac \uc911...</div>;\n};\n"})}),"\n",(0,o.jsx)(e.h3,{id:"4-\uba54\uc778-\uc571",children:"4. \uba54\uc778 \uc571"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-typescript",children:"// App.tsx\nimport React from 'react';\nimport { LoginButton } from './components/LoginButton';\nimport { useAuth } from './hooks/useAuth';\n\nexport const App = () => {\n  const { user, loading, logout } = useAuth();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user) {\n    return (\n      <div style={{ padding: '40px', textAlign: 'center' }}>\n        <h1>\uc18c\uc15c \ub85c\uadf8\uc778</h1>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '12px', maxWidth: '300px', margin: '0 auto' }}>\n          <LoginButton provider=\"google\" />\n          <LoginButton provider=\"github\" />\n          <LoginButton provider=\"microsoft\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: '40px' }}>\n      <h1>\ud658\uc601\ud569\ub2c8\ub2e4!</h1>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\n        {user.picture && (\n          <img\n            src={user.picture}\n            alt={user.name}\n            style={{ width: '80px', height: '80px', borderRadius: '50%' }}\n          />\n        )}\n        <div>\n          <h2>{user.name}</h2>\n          <p>{user.email}</p>\n        </div>\n      </div>\n      <button onClick={logout} style={{ marginTop: '20px' }}>\n        \ub85c\uadf8\uc544\uc6c3\n      </button>\n    </div>\n  );\n};\n"})}),"\n",(0,o.jsx)(e.h2,{id:"-\ubc30\ud3ec",children:"\ud83d\ude80 \ubc30\ud3ec"}),"\n",(0,o.jsx)(e.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  postgres:\n    image: postgres:15\n    environment:\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n      POSTGRES_DB: sociallogin\n    ports:\n      - "5432:5432"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:7\n    ports:\n      - "6379:6379"\n\n  backend:\n    build: ./backend\n    ports:\n      - "8000:8000"\n    environment:\n      DATABASE_URL: postgresql://user:password@postgres:5432/sociallogin\n      REDIS_URL: redis://redis:6379\n    depends_on:\n      - postgres\n      - redis\n\n  frontend:\n    build: ./frontend\n    ports:\n      - "3000:3000"\n    depends_on:\n      - backend\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,o.jsx)(e.h3,{id:"\ud504\ub85c\ub355\uc158-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\ud504\ub85c\ub355\uc158 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'production_checklist = {\n    "\u2705 \ud544\uc218": [\n        "HTTPS \uc124\uc815",\n        "\ud658\uacbd\ubcc0\uc218 \uc554\ud638\ud654",\n        "CORS \uc124\uc815",\n        "Rate Limiting",\n        "\ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1",\n        "\uc5d0\ub7ec \ud578\ub4e4\ub9c1",\n        "DB \ub9c8\uc774\uadf8\ub808\uc774\uc158",\n        "\ubc31\uc5c5 \uc804\ub7b5"\n    ],\n    "\u2705 \ubcf4\uc548": [\n        "PKCE \ud65c\uc131\ud654",\n        "State \ud30c\ub77c\ubbf8\ud130",\n        "CSRF \ubcf4\ud638",\n        "XSS \ubc29\uc9c0",\n        "SQL Injection \ubc29\uc9c0",\n        "\ud1a0\ud070 \uc554\ud638\ud654",\n        "Rate Limiting"\n    ],\n    "\u2705 \uc131\ub2a5": [\n        "Redis \uce90\uc2f1",\n        "DB \uc778\ub371\uc2f1",\n        "Connection Pooling",\n        "CDN \uc0ac\uc6a9",\n        "\uc774\ubbf8\uc9c0 \ucd5c\uc801\ud654"\n    ]\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"../advanced/multi-provider",children:"Multi-Provider \uc9c0\uc6d0"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"../advanced/security",children:"\ubcf4\uc548 Best Practices"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"../advanced/token-management",children:"\ud1a0\ud070 \uad00\ub9ac"})}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,o.jsx)(e.p,{children:"\uc18c\uc15c \ub85c\uadf8\uc778\uc744 \uad6c\ud604\ud588\ub2e4\uba74, \uc774\uc81c \uc790\uccb4 OAuth \uc11c\ubc84\ub97c \ub9cc\ub4e4\uc5b4\ubd05\uc2dc\ub2e4!"}),"\n",(0,o.jsxs)(e.p,{children:["\ud83d\udc49 ",(0,o.jsx)(e.a,{href:"./oauth-server",children:"\uc790\uccb4 OAuth \uc11c\ubc84 \uad6c\ucd95"})]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"\ud83d\udca1 \ud301"}),": \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c\ub294 \ubc18\ub4dc\uc2dc HTTPS\ub97c \uc0ac\uc6a9\ud558\uace0, \ubaa8\ub4e0 \ud658\uacbd\ubcc0\uc218\ub97c \uc548\uc804\ud558\uac8c \uad00\ub9ac\ud558\uc138\uc694!"]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}}}]);