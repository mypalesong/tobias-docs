"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[5275],{6252:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>E,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"database/patterns/audit-log","title":"\uac10\uc0ac \ub85c\uadf8","description":"\ub370\uc774\ud130 \ubcc0\uacbd \uc774\ub825\uc744 \ucd94\uc801\ud558\ub294 \uac10\uc0ac \ucd94\uc801 \uc2dc\uc2a4\ud15c","source":"@site/docs/database/patterns/audit-log.md","sourceDirName":"database/patterns","slug":"/database/patterns/audit-log","permalink":"/tobias-docs/comp-1/docs/database/patterns/audit-log","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/database/patterns/audit-log.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"slug":"/database/patterns/audit-log"},"sidebar":"databaseSidebar","previous":{"title":"\uc18c\ud504\ud2b8 \uc0ad\uc81c","permalink":"/tobias-docs/comp-1/docs/database/patterns/soft-delete"},"next":{"title":"\ubc84\uc804 \uad00\ub9ac","permalink":"/tobias-docs/comp-1/docs/database/patterns/versioning"}}');var t=a(4848),d=a(8453);const l={sidebar_position:3,slug:"/database/patterns/audit-log"},i="\uac10\uc0ac \ub85c\uadf8",E={},r=[{value:"\ud83c\udfaf \uac10\uc0ac \ub85c\uadf8\uac00 \ud544\uc694\ud55c \uc774\uc720",id:"-\uac10\uc0ac-\ub85c\uadf8\uac00-\ud544\uc694\ud55c-\uc774\uc720",level:2},{value:"\uc8fc\uc694 \ubaa9\uc801",id:"\uc8fc\uc694-\ubaa9\uc801",level:3},{value:"\ubb34\uc5c7\uc744 \uae30\ub85d\ud560\uae4c?",id:"\ubb34\uc5c7\uc744-\uae30\ub85d\ud560\uae4c",level:3},{value:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604",id:"-\uae30\ubcf8-\uad6c\ud604",level:2},{value:"\ub2e8\uc21c \uac10\uc0ac \ub85c\uadf8",id:"\ub2e8\uc21c-\uac10\uc0ac-\ub85c\uadf8",level:3},{value:"\uc870\ud68c \uc608\uc2dc",id:"\uc870\ud68c-\uc608\uc2dc",level:3},{value:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134",id:"-\uace0\uae09-\ud328\ud134",level:2},{value:"\ud544\ub4dc\ubcc4 \ubcc0\uacbd \ucd94\uc801",id:"\ud544\ub4dc\ubcc4-\ubcc0\uacbd-\ucd94\uc801",level:3},{value:"\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4 \ucd94\uac00",id:"\ucee8\ud14d\uc2a4\ud2b8-\uc815\ubcf4-\ucd94\uac00",level:3},{value:"\ubbfc\uac10 \uc815\ubcf4 \ub9c8\uc2a4\ud0b9",id:"\ubbfc\uac10-\uc815\ubcf4-\ub9c8\uc2a4\ud0b9",level:3},{value:"\ud83d\udcca \uc804\uc6a9 \uac10\uc0ac \ud14c\uc774\ube14 \ud328\ud134",id:"-\uc804\uc6a9-\uac10\uc0ac-\ud14c\uc774\ube14-\ud328\ud134",level:2},{value:"\ud14c\uc774\ube14\ubcc4 \uac10\uc0ac \ub85c\uadf8",id:"\ud14c\uc774\ube14\ubcc4-\uac10\uc0ac-\ub85c\uadf8",level:3},{value:"\ud83d\uddc4\ufe0f \uc131\ub2a5 \ucd5c\uc801\ud654",id:"\ufe0f-\uc131\ub2a5-\ucd5c\uc801\ud654",level:2},{value:"\ud30c\ud2f0\uc154\ub2dd",id:"\ud30c\ud2f0\uc154\ub2dd",level:3},{value:"\ube44\ub3d9\uae30 \ub85c\uae45",id:"\ube44\ub3d9\uae30-\ub85c\uae45",level:3},{value:"\uc120\ud0dd\uc801 \uac10\uc0ac",id:"\uc120\ud0dd\uc801-\uac10\uc0ac",level:3},{value:"\ud83d\udd0d \ubd84\uc11d \ubc0f \ub9ac\ud3ec\ud305",id:"-\ubd84\uc11d-\ubc0f-\ub9ac\ud3ec\ud305",level:2},{value:"\ubcc0\uacbd \uc774\ub825 \uc870\ud68c",id:"\ubcc0\uacbd-\uc774\ub825-\uc870\ud68c",level:3},{value:"\ud65c\ub3d9 \ud1b5\uacc4",id:"\ud65c\ub3d9-\ud1b5\uacc4",level:3},{value:"\ubcf5\uad6c \ucffc\ub9ac \uc0dd\uc131",id:"\ubcf5\uad6c-\ucffc\ub9ac-\uc0dd\uc131",level:3},{value:"\ud83d\udd12 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218",id:"-\ubcf4\uc548-\ubc0f-\uaddc\uc815-\uc900\uc218",level:2},{value:"\uac10\uc0ac \ub85c\uadf8 \ubcf4\ud638",id:"\uac10\uc0ac-\ub85c\uadf8-\ubcf4\ud638",level:3},{value:"\ubcf4\uc874 \uae30\uac04 \uad00\ub9ac",id:"\ubcf4\uc874-\uae30\uac04-\uad00\ub9ac",level:3},{value:"\u2705 \uac10\uc0ac \ub85c\uadf8 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"-\uac10\uc0ac-\ub85c\uadf8-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\uc124\uacc4",id:"\uc124\uacc4",level:3},{value:"\uad6c\ud604",id:"\uad6c\ud604",level:3},{value:"\ubcf4\uc548",id:"\ubcf4\uc548",level:3},{value:"\uc6b4\uc601",id:"\uc6b4\uc601",level:3},{value:"\ud83d\udca1 \ubaa8\ubc94 \uc0ac\ub840",id:"-\ubaa8\ubc94-\uc0ac\ub840",level:2},{value:"\ud83d\ude80 \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function _(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"\uac10\uc0ac-\ub85c\uadf8",children:"\uac10\uc0ac \ub85c\uadf8"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\ub370\uc774\ud130 \ubcc0\uacbd \uc774\ub825\uc744 \ucd94\uc801\ud558\ub294 \uac10\uc0ac \ucd94\uc801 \uc2dc\uc2a4\ud15c"})}),"\n",(0,t.jsx)(e.p,{children:"\uac10\uc0ac \ub85c\uadf8(Audit Log)\ub294 \ub204\uac00, \uc5b8\uc81c, \ubb34\uc5c7\uc744, \uc65c \ubcc0\uacbd\ud588\ub294\uc9c0 \uae30\ub85d\ud558\ub294 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. \ubcf4\uc548, \uaddc\uc815 \uc900\uc218, \ub514\ubc84\uae45\uc5d0 \ud544\uc218\uc801\uc785\ub2c8\ub2e4."}),"\n",(0,t.jsx)(e.h2,{id:"-\uac10\uc0ac-\ub85c\uadf8\uac00-\ud544\uc694\ud55c-\uc774\uc720",children:"\ud83c\udfaf \uac10\uc0ac \ub85c\uadf8\uac00 \ud544\uc694\ud55c \uc774\uc720"}),"\n",(0,t.jsx)(e.h3,{id:"\uc8fc\uc694-\ubaa9\uc801",children:"\uc8fc\uc694 \ubaa9\uc801"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'audit_log_purposes = {\n    "\ubcf4\uc548": "\ubb34\ub2e8 \uc811\uadfc \ubc0f \ubcc0\uacbd \ud0d0\uc9c0",\n    "\uaddc\uc815 \uc900\uc218": "SOX, GDPR, HIPAA \ub4f1 \ubc95\uc801 \uc694\uad6c\uc0ac\ud56d",\n    "\ub514\ubc84\uae45": "\ub370\uc774\ud130 \uc190\uc0c1 \uc6d0\uc778 \ucd94\uc801",\n    "\ubcf5\uad6c": "\uc774\uc804 \uc0c1\ud0dc\ub85c \ub864\ubc31",\n    "\ubd84\uc11d": "\uc0ac\uc6a9 \ud328\ud134 \ubc0f \ud2b8\ub80c\ub4dc \ubd84\uc11d",\n    "\ucc45\uc784 \ucd94\uc801": "\ub204\uac00 \ubcc0\uacbd\ud588\ub294\uc9c0 \uba85\ud655\ud788"\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\ubb34\uc5c7\uc744-\uae30\ub85d\ud560\uae4c",children:"\ubb34\uc5c7\uc744 \uae30\ub85d\ud560\uae4c?"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'audit_log_contents = {\n    "Who (\ub204\uac00)": "\uc0ac\uc6a9\uc790 ID, IP \uc8fc\uc18c, \uc138\uc158 \uc815\ubcf4",\n    "When (\uc5b8\uc81c)": "\ud0c0\uc784\uc2a4\ud0ec\ud504 (UTC)",\n    "What (\ubb34\uc5c7\uc744)": "\ubcc0\uacbd\ub41c \ud14c\uc774\ube14, \ub808\ucf54\ub4dc ID, \ud544\ub4dc",\n    "How (\uc5b4\ub5bb\uac8c)": "INSERT, UPDATE, DELETE",\n    "Before/After (\uc804/\ud6c4)": "\ubcc0\uacbd \uc804 \uac12, \ubcc0\uacbd \ud6c4 \uac12",\n    "Why (\uc65c)": "\ubcc0\uacbd \uc774\uc720, \uc694\uccad ID"\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-\uae30\ubcf8-\uad6c\ud604",children:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604"}),"\n",(0,t.jsx)(e.h3,{id:"\ub2e8\uc21c-\uac10\uc0ac-\ub85c\uadf8",children:"\ub2e8\uc21c \uac10\uc0ac \ub85c\uadf8"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \uac10\uc0ac \ub300\uc0c1 \ud14c\uc774\ube14\nCREATE TABLE users (\n    id BIGSERIAL PRIMARY KEY,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    role VARCHAR(20) DEFAULT 'user',\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \uac10\uc0ac \ub85c\uadf8 \ud14c\uc774\ube14\nCREATE TABLE audit_logs (\n    id BIGSERIAL PRIMARY KEY,\n\n    -- \ub300\uc0c1\n    table_name VARCHAR(100) NOT NULL,\n    record_id BIGINT NOT NULL,\n\n    -- \uc791\uc5c5\n    operation VARCHAR(10) NOT NULL,  -- 'INSERT', 'UPDATE', 'DELETE'\n\n    -- \ubcc0\uacbd \ub0b4\uc6a9\n    old_data JSONB,  -- \ubcc0\uacbd \uc804 (UPDATE, DELETE)\n    new_data JSONB,  -- \ubcc0\uacbd \ud6c4 (INSERT, UPDATE)\n\n    -- \ub204\uac00\n    user_id BIGINT,  -- \ubcc0\uacbd\ud55c \uc0ac\uc6a9\uc790\n    ip_address INET,\n\n    -- \uc5b8\uc81c\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,\n\n    -- \uc778\ub371\uc2a4\n    INDEX idx_audit_logs_table_record (table_name, record_id),\n    INDEX idx_audit_logs_user (user_id),\n    INDEX idx_audit_logs_created (created_at)\n);\n\n-- \ud2b8\ub9ac\uac70 \ud568\uc218\nCREATE OR REPLACE FUNCTION audit_log_trigger()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF TG_OP = 'INSERT' THEN\n        INSERT INTO audit_logs (table_name, record_id, operation, new_data)\n        VALUES (TG_TABLE_NAME, NEW.id, 'INSERT', row_to_json(NEW)::jsonb);\n        RETURN NEW;\n\n    ELSIF TG_OP = 'UPDATE' THEN\n        INSERT INTO audit_logs (table_name, record_id, operation, old_data, new_data)\n        VALUES (TG_TABLE_NAME, NEW.id, 'UPDATE',\n                row_to_json(OLD)::jsonb, row_to_json(NEW)::jsonb);\n        RETURN NEW;\n\n    ELSIF TG_OP = 'DELETE' THEN\n        INSERT INTO audit_logs (table_name, record_id, operation, old_data)\n        VALUES (TG_TABLE_NAME, OLD.id, 'DELETE', row_to_json(OLD)::jsonb);\n        RETURN OLD;\n    END IF;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \ud2b8\ub9ac\uac70 \uc124\uc815\nCREATE TRIGGER users_audit\nAFTER INSERT OR UPDATE OR DELETE ON users\nFOR EACH ROW EXECUTE FUNCTION audit_log_trigger();\n\n-- \uc0ac\uc6a9 \uc608\nINSERT INTO users (email, username) VALUES\n('alice@example.com', 'alice');\n-- audit_logs\uc5d0 INSERT \uae30\ub85d\n\nUPDATE users SET role = 'admin' WHERE id = 1;\n-- audit_logs\uc5d0 UPDATE \uae30\ub85d (\ubcc0\uacbd \uc804/\ud6c4)\n\nDELETE FROM users WHERE id = 1;\n-- audit_logs\uc5d0 DELETE \uae30\ub85d\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\uc870\ud68c-\uc608\uc2dc",children:"\uc870\ud68c \uc608\uc2dc"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ud2b9\uc815 \ub808\ucf54\ub4dc\uc758 \ubcc0\uacbd \uc774\ub825\nSELECT\n    operation,\n    old_data,\n    new_data,\n    created_at\nFROM audit_logs\nWHERE table_name = 'users'\n  AND record_id = 1\nORDER BY created_at DESC;\n\n-- \ud2b9\uc815 \uc0ac\uc6a9\uc790\uac00 \uc218\ud589\ud55c \ubcc0\uacbd\nSELECT\n    table_name,\n    record_id,\n    operation,\n    created_at\nFROM audit_logs\nWHERE user_id = 100\nORDER BY created_at DESC;\n\n-- \ucd5c\uadfc 24\uc2dc\uac04 \ubcc0\uacbd \ub0b4\uc5ed\nSELECT * FROM audit_logs\nWHERE created_at > CURRENT_TIMESTAMP - INTERVAL '24 hours'\nORDER BY created_at DESC;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-\uace0\uae09-\ud328\ud134",children:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134"}),"\n",(0,t.jsx)(e.h3,{id:"\ud544\ub4dc\ubcc4-\ubcc0\uacbd-\ucd94\uc801",children:"\ud544\ub4dc\ubcc4 \ubcc0\uacbd \ucd94\uc801"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ubcc0\uacbd\ub41c \ud544\ub4dc\ub9cc \uae30\ub85d\nCREATE TABLE audit_logs (\n    id BIGSERIAL PRIMARY KEY,\n    table_name VARCHAR(100) NOT NULL,\n    record_id BIGINT NOT NULL,\n    field_name VARCHAR(100) NOT NULL,  -- \ubcc0\uacbd\ub41c \ud544\ub4dc\uba85\n    old_value TEXT,\n    new_value TEXT,\n    user_id BIGINT,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE OR REPLACE FUNCTION audit_field_changes()\nRETURNS TRIGGER AS $$\nDECLARE\n    old_rec jsonb;\n    new_rec jsonb;\n    key text;\nBEGIN\n    IF TG_OP = 'UPDATE' THEN\n        old_rec := row_to_json(OLD)::jsonb;\n        new_rec := row_to_json(NEW)::jsonb;\n\n        -- \uac01 \ud544\ub4dc \ube44\uad50\n        FOR key IN SELECT jsonb_object_keys(new_rec)\n        LOOP\n            IF old_rec->key IS DISTINCT FROM new_rec->key THEN\n                INSERT INTO audit_logs (\n                    table_name, record_id, field_name,\n                    old_value, new_value, user_id\n                )\n                VALUES (\n                    TG_TABLE_NAME,\n                    NEW.id,\n                    key,\n                    old_rec->>key,\n                    new_rec->>key,\n                    current_setting('app.current_user_id', true)::BIGINT\n                );\n            END IF;\n        END LOOP;\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc870\ud68c: \ud2b9\uc815 \ud544\ub4dc\uc758 \ubcc0\uacbd \uc774\ub825\nSELECT\n    old_value,\n    new_value,\n    user_id,\n    created_at\nFROM audit_logs\nWHERE table_name = 'users'\n  AND record_id = 1\n  AND field_name = 'role'\nORDER BY created_at DESC;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\ucee8\ud14d\uc2a4\ud2b8-\uc815\ubcf4-\ucd94\uac00",children:"\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4 \ucd94\uac00"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ub354 \uc790\uc138\ud55c \uac10\uc0ac \ub85c\uadf8\nCREATE TABLE audit_logs (\n    id BIGSERIAL PRIMARY KEY,\n    table_name VARCHAR(100) NOT NULL,\n    record_id BIGINT NOT NULL,\n    operation VARCHAR(10) NOT NULL,\n\n    -- \ubcc0\uacbd \ub0b4\uc6a9\n    old_data JSONB,\n    new_data JSONB,\n\n    -- \ucee8\ud14d\uc2a4\ud2b8\n    user_id BIGINT,\n    username VARCHAR(50),\n    ip_address INET,\n    user_agent TEXT,\n\n    -- \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud14d\uc2a4\ud2b8\n    request_id UUID,  -- \uc694\uccad \ucd94\uc801\n    session_id UUID,\n    endpoint VARCHAR(200),  -- API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\n\n    -- \ube44\uc988\ub2c8\uc2a4 \ucee8\ud14d\uc2a4\ud2b8\n    reason TEXT,  -- \ubcc0\uacbd \uc774\uc720\n    comment TEXT,  -- \ucd94\uac00 \uc124\uba85\n\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \uc138\uc158 \ubcc0\uc218\ub85c \ucee8\ud14d\uc2a4\ud2b8 \uc804\ub2ec\nCREATE OR REPLACE FUNCTION audit_with_context()\nRETURNS TRIGGER AS $$\nBEGIN\n    INSERT INTO audit_logs (\n        table_name,\n        record_id,\n        operation,\n        old_data,\n        new_data,\n        user_id,\n        username,\n        ip_address,\n        request_id,\n        reason\n    )\n    VALUES (\n        TG_TABLE_NAME,\n        COALESCE(NEW.id, OLD.id),\n        TG_OP,\n        CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN row_to_json(OLD)::jsonb END,\n        CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN row_to_json(NEW)::jsonb END,\n        current_setting('app.current_user_id', true)::BIGINT,\n        current_setting('app.current_username', true),\n        current_setting('app.client_ip', true)::INET,\n        current_setting('app.request_id', true)::UUID,\n        current_setting('app.change_reason', true)\n    );\n\n    RETURN COALESCE(NEW, OLD);\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815 (Python \uc608\uc2dc)\n\"\"\"\n# \ud2b8\ub79c\uc7ad\uc158 \uc2dc\uc791 \uc2dc\nawait conn.execute(\"SET app.current_user_id = $1\", user_id)\nawait conn.execute(\"SET app.current_username = $1\", username)\nawait conn.execute(\"SET app.client_ip = $1\", request.client.host)\nawait conn.execute(\"SET app.request_id = $1\", str(request_id))\n\n# \ubcc0\uacbd \uc791\uc5c5\nawait conn.execute(\"UPDATE users SET role = 'admin' WHERE id = $1\", user_id)\n\n# \ud2b8\ub79c\uc7ad\uc158 \uc885\ub8cc \uc2dc \uc790\ub3d9\uc73c\ub85c \ub9ac\uc14b\ub428\n\"\"\"\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\ubbfc\uac10-\uc815\ubcf4-\ub9c8\uc2a4\ud0b9",children:"\ubbfc\uac10 \uc815\ubcf4 \ub9c8\uc2a4\ud0b9"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ubbfc\uac10\ud55c \ud544\ub4dc\ub294 \ub9c8\uc2a4\ud0b9\ud558\uc5ec \uae30\ub85d\nCREATE OR REPLACE FUNCTION audit_with_masking()\nRETURNS TRIGGER AS $$\nDECLARE\n    old_data jsonb;\n    new_data jsonb;\n    sensitive_fields text[] := ARRAY['password_hash', 'ssn', 'credit_card'];\n    field text;\nBEGIN\n    old_data := row_to_json(OLD)::jsonb;\n    new_data := row_to_json(NEW)::jsonb;\n\n    -- \ubbfc\uac10\ud55c \ud544\ub4dc \ub9c8\uc2a4\ud0b9\n    FOREACH field IN ARRAY sensitive_fields\n    LOOP\n        IF old_data ? field THEN\n            old_data := old_data || jsonb_build_object(field, '***REDACTED***');\n        END IF;\n        IF new_data ? field THEN\n            new_data := new_data || jsonb_build_object(field, '***REDACTED***');\n        END IF;\n    END LOOP;\n\n    INSERT INTO audit_logs (table_name, record_id, operation, old_data, new_data)\n    VALUES (TG_TABLE_NAME, COALESCE(NEW.id, OLD.id), TG_OP, old_data, new_data);\n\n    RETURN COALESCE(NEW, OLD);\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-\uc804\uc6a9-\uac10\uc0ac-\ud14c\uc774\ube14-\ud328\ud134",children:"\ud83d\udcca \uc804\uc6a9 \uac10\uc0ac \ud14c\uc774\ube14 \ud328\ud134"}),"\n",(0,t.jsx)(e.h3,{id:"\ud14c\uc774\ube14\ubcc4-\uac10\uc0ac-\ub85c\uadf8",children:"\ud14c\uc774\ube14\ubcc4 \uac10\uc0ac \ub85c\uadf8"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- users \uc804\uc6a9 \uac10\uc0ac \ub85c\uadf8\nCREATE TABLE users_audit (\n    audit_id BIGSERIAL PRIMARY KEY,\n    user_id BIGINT NOT NULL,\n    operation VARCHAR(10) NOT NULL,\n\n    -- \ubcc0\uacbd\ub41c \ud544\ub4dc\ub9cc \uc800\uc7a5\n    email_old VARCHAR(255),\n    email_new VARCHAR(255),\n    username_old VARCHAR(50),\n    username_new VARCHAR(50),\n    role_old VARCHAR(20),\n    role_new VARCHAR(20),\n\n    changed_by BIGINT REFERENCES users(id),\n    changed_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \ud2b8\ub9ac\uac70\nCREATE OR REPLACE FUNCTION users_audit_trigger()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF TG_OP = 'UPDATE' THEN\n        INSERT INTO users_audit (\n            user_id, operation,\n            email_old, email_new,\n            username_old, username_new,\n            role_old, role_new,\n            changed_by\n        )\n        VALUES (\n            NEW.id, 'UPDATE',\n            NULLIF(OLD.email, NEW.email),\n            NULLIF(NEW.email, OLD.email),\n            NULLIF(OLD.username, NEW.username),\n            NULLIF(NEW.username, OLD.username),\n            NULLIF(OLD.role, NEW.role),\n            NULLIF(NEW.role, OLD.role),\n            current_setting('app.current_user_id', true)::BIGINT\n        );\n    END IF;\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc7a5\uc810: \ud0c0\uc785 \uc548\uc804, \ucffc\ub9ac \uac04\ub2e8, \uc778\ub371\uc2a4 \ud6a8\uc728\n-- \ub2e8\uc810: \ud14c\uc774\ube14\ub9c8\ub2e4 \ubcc4\ub3c4 \uac10\uc0ac \ud14c\uc774\ube14 \ud544\uc694\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\ufe0f-\uc131\ub2a5-\ucd5c\uc801\ud654",children:"\ud83d\uddc4\ufe0f \uc131\ub2a5 \ucd5c\uc801\ud654"}),"\n",(0,t.jsx)(e.h3,{id:"\ud30c\ud2f0\uc154\ub2dd",children:"\ud30c\ud2f0\uc154\ub2dd"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ub0a0\uc9dc\ubcc4 \ud30c\ud2f0\uc154\ub2dd\nCREATE TABLE audit_logs (\n    id BIGSERIAL,\n    table_name VARCHAR(100) NOT NULL,\n    record_id BIGINT NOT NULL,\n    operation VARCHAR(10) NOT NULL,\n    old_data JSONB,\n    new_data JSONB,\n    user_id BIGINT,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n) PARTITION BY RANGE (created_at);\n\n-- \uc6d4\ubcc4 \ud30c\ud2f0\uc158\nCREATE TABLE audit_logs_2024_01 PARTITION OF audit_logs\nFOR VALUES FROM ('2024-01-01') TO ('2024-02-01');\n\nCREATE TABLE audit_logs_2024_02 PARTITION OF audit_logs\nFOR VALUES FROM ('2024-02-01') TO ('2024-03-01');\n\n-- \uc790\ub3d9 \ud30c\ud2f0\uc158 \uc0dd\uc131 (pg_partman \ud655\uc7a5 \ud65c\uc6a9)\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\ube44\ub3d9\uae30-\ub85c\uae45",children:"\ube44\ub3d9\uae30 \ub85c\uae45"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ubcc4\ub3c4 \uc2a4\ud0a4\ub9c8\uc5d0 \uac10\uc0ac \ub85c\uadf8 (\uc131\ub2a5 \uaca9\ub9ac)\nCREATE SCHEMA audit;\n\nCREATE TABLE audit.logs (\n    id BIGSERIAL PRIMARY KEY,\n    table_name VARCHAR(100) NOT NULL,\n    record_id BIGINT NOT NULL,\n    operation VARCHAR(10) NOT NULL,\n    data JSONB,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n) WITH (fillfactor = 100);  -- INSERT\ub9cc \ud558\ubbc0\ub85c 100%\n\n-- UNLOGGED \ud14c\uc774\ube14 (\uc784\uc2dc \ud050)\nCREATE UNLOGGED TABLE audit.queue (\n    id BIGSERIAL PRIMARY KEY,\n    table_name VARCHAR(100) NOT NULL,\n    record_id BIGINT NOT NULL,\n    operation VARCHAR(10) NOT NULL,\n    data JSONB,\n    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \ubc31\uadf8\ub77c\uc6b4\ub4dc \uc6cc\ucee4\uac00 queue \u2192 logs\ub85c \uc774\ub3d9\n-- (\uc131\ub2a5 \uc601\ud5a5 \ucd5c\uc18c\ud654)\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\uc120\ud0dd\uc801-\uac10\uc0ac",children:"\uc120\ud0dd\uc801 \uac10\uc0ac"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ud2b9\uc815 \ud544\ub4dc\ub9cc \uac10\uc0ac\nCREATE OR REPLACE FUNCTION audit_selective()\nRETURNS TRIGGER AS $$\nDECLARE\n    audited_fields text[] := ARRAY['email', 'role', 'status'];  -- \uac10\uc0ac\ud560 \ud544\ub4dc\nBEGIN\n    -- \uac10\uc0ac \ub300\uc0c1 \ud544\ub4dc\uac00 \ubcc0\uacbd\ub41c \uacbd\uc6b0\ub9cc \uae30\ub85d\n    IF TG_OP = 'UPDATE' AND (\n        OLD.email IS DISTINCT FROM NEW.email OR\n        OLD.role IS DISTINCT FROM NEW.role OR\n        OLD.status IS DISTINCT FROM NEW.status\n    ) THEN\n        INSERT INTO audit_logs (table_name, record_id, operation, old_data, new_data)\n        VALUES (TG_TABLE_NAME, NEW.id, 'UPDATE',\n                row_to_json(OLD)::jsonb, row_to_json(NEW)::jsonb);\n    END IF;\n\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-\ubd84\uc11d-\ubc0f-\ub9ac\ud3ec\ud305",children:"\ud83d\udd0d \ubd84\uc11d \ubc0f \ub9ac\ud3ec\ud305"}),"\n",(0,t.jsx)(e.h3,{id:"\ubcc0\uacbd-\uc774\ub825-\uc870\ud68c",children:"\ubcc0\uacbd \uc774\ub825 \uc870\ud68c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ud2b9\uc815 \ub808\ucf54\ub4dc\uc758 \uc804\uccb4 \uc774\ub825\nWITH changes AS (\n    SELECT\n        operation,\n        old_data,\n        new_data,\n        user_id,\n        created_at,\n        LAG(created_at) OVER (ORDER BY created_at) as prev_time\n    FROM audit_logs\n    WHERE table_name = 'users' AND record_id = 1\n    ORDER BY created_at\n)\nSELECT\n    operation,\n    old_data,\n    new_data,\n    user_id,\n    created_at,\n    created_at - prev_time as time_since_last_change\nFROM changes;\n\n-- \ud544\ub4dc\ubcc4 \ubcc0\uacbd \uc774\ub825\nSELECT\n    (jsonb_each(new_data)).key as field,\n    (jsonb_each(old_data)).value as old_value,\n    (jsonb_each(new_data)).value as new_value,\n    created_at\nFROM audit_logs\nWHERE table_name = 'users' AND record_id = 1\n  AND operation = 'UPDATE'\nORDER BY created_at DESC;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\ud65c\ub3d9-\ud1b5\uacc4",children:"\ud65c\ub3d9 \ud1b5\uacc4"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \uc0ac\uc6a9\uc790\ubcc4 \ubcc0\uacbd \ud69f\uc218\nSELECT\n    u.username,\n    COUNT(*) as change_count,\n    COUNT(*) FILTER (WHERE al.operation = 'INSERT') as inserts,\n    COUNT(*) FILTER (WHERE al.operation = 'UPDATE') as updates,\n    COUNT(*) FILTER (WHERE al.operation = 'DELETE') as deletes\nFROM audit_logs al\nJOIN users u ON al.user_id = u.id\nWHERE al.created_at > CURRENT_TIMESTAMP - INTERVAL '7 days'\nGROUP BY u.id, u.username\nORDER BY change_count DESC;\n\n-- \ud14c\uc774\ube14\ubcc4 \ubcc0\uacbd \ud1b5\uacc4\nSELECT\n    table_name,\n    operation,\n    COUNT(*) as count,\n    MIN(created_at) as first_change,\n    MAX(created_at) as last_change\nFROM audit_logs\nWHERE created_at > CURRENT_TIMESTAMP - INTERVAL '30 days'\nGROUP BY table_name, operation\nORDER BY table_name, operation;\n\n-- \uc2dc\uac04\ub300\ubcc4 \ud65c\ub3d9\nSELECT\n    DATE_TRUNC('hour', created_at) as hour,\n    COUNT(*) as changes\nFROM audit_logs\nWHERE created_at > CURRENT_TIMESTAMP - INTERVAL '24 hours'\nGROUP BY hour\nORDER BY hour;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\ubcf5\uad6c-\ucffc\ub9ac-\uc0dd\uc131",children:"\ubcf5\uad6c \ucffc\ub9ac \uc0dd\uc131"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \ud2b9\uc815 \ub808\ucf54\ub4dc\ub97c \uc774\uc804 \uc0c1\ud0dc\ub85c \ubcf5\uad6c\ud558\ub294 SQL \uc0dd\uc131\nCREATE OR REPLACE FUNCTION generate_rollback_sql(\n    p_table_name VARCHAR,\n    p_record_id BIGINT,\n    p_target_time TIMESTAMPTZ\n) RETURNS TEXT AS $$\nDECLARE\n    old_state JSONB;\n    sql_text TEXT;\nBEGIN\n    -- \uc9c0\uc815 \uc2dc\uac04 \uc774\uc804\uc758 \ub9c8\uc9c0\ub9c9 \uc0c1\ud0dc \uc870\ud68c\n    SELECT new_data INTO old_state\n    FROM audit_logs\n    WHERE table_name = p_table_name\n      AND record_id = p_record_id\n      AND created_at <= p_target_time\n    ORDER BY created_at DESC\n    LIMIT 1;\n\n    -- UPDATE SQL \uc0dd\uc131\n    sql_text := format(\n        'UPDATE %I SET %s WHERE id = %s',\n        p_table_name,\n        (SELECT string_agg(format('%I = %L', key, value), ', ')\n         FROM jsonb_each_text(old_state)\n         WHERE key != 'id'),\n        p_record_id\n    );\n\n    RETURN sql_text;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc0ac\uc6a9 \uc608\nSELECT generate_rollback_sql('users', 1, '2024-01-15 10:00:00'::TIMESTAMPTZ);\n-- \uacb0\uacfc: UPDATE users SET email = 'old@example.com', role = 'user' WHERE id = 1\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-\ubcf4\uc548-\ubc0f-\uaddc\uc815-\uc900\uc218",children:"\ud83d\udd12 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218"}),"\n",(0,t.jsx)(e.h3,{id:"\uac10\uc0ac-\ub85c\uadf8-\ubcf4\ud638",children:"\uac10\uc0ac \ub85c\uadf8 \ubcf4\ud638"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \uac10\uc0ac \ub85c\uadf8\ub294 \uc218\uc815/\uc0ad\uc81c \ubd88\uac00\nREVOKE UPDATE, DELETE, TRUNCATE ON audit_logs FROM PUBLIC;\nGRANT INSERT, SELECT ON audit_logs TO app_user;\n\n-- \uad00\ub9ac\uc790\ub9cc \uc0ad\uc81c \uac00\ub2a5 (\ubcf4\uc874 \uae30\uac04 \uc774\ud6c4)\nGRANT DELETE ON audit_logs TO admin_user;\n\n-- Row-Level Security\nALTER TABLE audit_logs ENABLE ROW LEVEL SECURITY;\n\n-- \uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \uac10\uc0ac \ub85c\uadf8\ub9cc \uc870\ud68c\nCREATE POLICY user_audit_read ON audit_logs\nFOR SELECT\nTO app_user\nUSING (user_id = current_setting('app.current_user_id')::BIGINT);\n\n-- \uad00\ub9ac\uc790\ub294 \ubaa8\ub450 \uc870\ud68c\nCREATE POLICY admin_audit_read ON audit_logs\nFOR SELECT\nTO admin_user\nUSING (true);\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\ubcf4\uc874-\uae30\uac04-\uad00\ub9ac",children:"\ubcf4\uc874 \uae30\uac04 \uad00\ub9ac"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \uac10\uc0ac \ub85c\uadf8 \ubcf4\uc874 \uc815\ucc45\nCREATE OR REPLACE FUNCTION purge_old_audit_logs()\nRETURNS void AS $$\nBEGIN\n    -- 7\ub144 \uc774\uc0c1 \ub41c \ub85c\uadf8 \uc544\uce74\uc774\ube0c\n    INSERT INTO audit_logs_archive\n    SELECT * FROM audit_logs\n    WHERE created_at < CURRENT_TIMESTAMP - INTERVAL '7 years';\n\n    -- \uc6d0\ubcf8\uc5d0\uc11c \uc0ad\uc81c\n    DELETE FROM audit_logs\n    WHERE created_at < CURRENT_TIMESTAMP - INTERVAL '7 years';\nEND;\n$$ LANGUAGE plpgsql;\n\n-- \uc6d4\ubcc4 \uc2e4\ud589\nSELECT cron.schedule('purge-audit-logs', '0 0 1 * *',\n    'SELECT purge_old_audit_logs()');\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-\uac10\uc0ac-\ub85c\uadf8-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\u2705 \uac10\uc0ac \ub85c\uadf8 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,t.jsx)(e.h3,{id:"\uc124\uacc4",children:"\uc124\uacc4"}),"\n",(0,t.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubb34\uc5c7\uc744 \uac10\uc0ac\ud560\uc9c0 \uacb0\uc815 (\ubaa8\ub4e0 \ud14c\uc774\ube14 vs \uc911\uc694 \ud14c\uc774\ube14)"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubb34\uc5c7\uc744 \uae30\ub85d\ud560\uc9c0 \uc815\uc758 (\uc804\uccb4 vs \ubcc0\uacbd\ub41c \ud544\ub4dc\ub9cc)"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubbfc\uac10 \uc815\ubcf4 \ub9c8\uc2a4\ud0b9 \uc804\ub7b5"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubcf4\uc874 \uae30\uac04 \uc815\ucc45"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"\uad6c\ud604",children:"\uad6c\ud604"}),"\n",(0,t.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud2b8\ub9ac\uac70\ub85c \uc790\ub3d9 \uae30\ub85d"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4 (user_id, IP, \uc774\uc720 \ub4f1)"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","JSONB\ub85c \uc720\uc5f0\ud55c \ub370\uc774\ud130 \uc800\uc7a5"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ud30c\ud2f0\uc154\ub2dd\uc73c\ub85c \uc131\ub2a5 \ucd5c\uc801\ud654"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"\ubcf4\uc548",children:"\ubcf4\uc548"}),"\n",(0,t.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uac10\uc0ac \ub85c\uadf8 \uc218\uc815/\uc0ad\uc81c \ubc29\uc9c0"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc811\uadfc \uad8c\ud55c \uc81c\ud55c"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc554\ud638\ud654 (\ud544\uc694\uc2dc)"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"\uc6b4\uc601",children:"\uc6b4\uc601"}),"\n",(0,t.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\uc815\uae30\uc801\uc778 \uc544\uce74\uc774\ube0c"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubaa8\ub2c8\ud130\ub9c1 \ubc0f \uc54c\ub9bc"]}),"\n",(0,t.jsxs)(e.li,{className:"task-list-item",children:[(0,t.jsx)(e.input,{type:"checkbox",disabled:!0})," ","\ubcf5\uad6c \ud504\ub85c\uc138\uc2a4 \ubb38\uc11c\ud654"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"-\ubaa8\ubc94-\uc0ac\ub840",children:"\ud83d\udca1 \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'audit_best_practices = {\n    "\uc790\ub3d9\ud654": "\ud2b8\ub9ac\uac70\ub85c \uc790\ub3d9 \uae30\ub85d, \uc218\ub3d9 \uc785\ub825 \uae08\uc9c0",\n    "\ubd88\ubcc0\uc131": "\uac10\uc0ac \ub85c\uadf8\ub294 \uc808\ub300 \uc218\uc815/\uc0ad\uc81c \ubd88\uac00",\n    "\uc644\uc804\uc131": "\ubaa8\ub4e0 \ubcc0\uacbd \uae30\ub85d (\ube60\uc9d0\uc5c6\uc774)",\n    "\ucee8\ud14d\uc2a4\ud2b8": "\ub204\uac00, \uc65c \ubcc0\uacbd\ud588\ub294\uc9c0 \uae30\ub85d",\n    "\uc131\ub2a5": "\ube44\ub3d9\uae30 \ucc98\ub9ac, \ud30c\ud2f0\uc154\ub2dd",\n    "\ubcf4\uc548": "\ubbfc\uac10 \uc815\ubcf4 \ub9c8\uc2a4\ud0b9",\n    "\uc811\uadfc\uc131": "\ucffc\ub9ac\ud558\uae30 \uc26c\uc6b4 \uad6c\uc870"\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83d\ude80 \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,t.jsx)(e.p,{children:"\uac10\uc0ac \ub85c\uadf8 \ud328\ud134\uc744 \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c \ubc84\uc804 \uad00\ub9ac\ub97c \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,t.jsxs)(e.p,{children:["\ud83d\udc49 ",(0,t.jsx)(e.a,{href:"./versioning",children:"\ubc84\uc804 \uad00\ub9ac"})]})]})}function o(n={}){const{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(_,{...n})}):_(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>l,x:()=>i});var s=a(6540);const t={},d=s.createContext(t);function l(n){const e=s.useContext(d);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(d.Provider,{value:e},n.children)}}}]);