"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[6420],{1049:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"oauth/intermediate/jwt-tokens","title":"JWT \ud1a0\ud070 \ucc98\ub9ac","description":"JWT (JSON Web Token)\uc758 \uad6c\uc870\ub97c \uc774\ud574\ud558\uace0 FastAPI\uc5d0\uc11c \ud6a8\uacfc\uc801\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/oauth/intermediate/jwt-tokens.md","sourceDirName":"oauth/intermediate","slug":"/oauth/intermediate/jwt-tokens","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/jwt-tokens","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/intermediate/jwt-tokens.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"oauthSidebar","previous":{"title":"GitHub OAuth \ud1b5\ud569","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/github-oauth"},"next":{"title":"\uc18c\uc15c \ub85c\uadf8\uc778 \uc644\uc804 \uad6c\ud604","permalink":"/tobias-docs/comp-1/docs/oauth/scenarios/social-login"}}');var r=s(4848),a=s(8453);const i={sidebar_position:4},o="JWT \ud1a0\ud070 \ucc98\ub9ac",d={},c=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udd0d JWT\ub780?",id:"-jwt\ub780",level:2},{value:"\uc815\uc758",id:"\uc815\uc758",level:3},{value:"\ud83d\udccb JWT \uad6c\uc870",id:"-jwt-\uad6c\uc870",level:2},{value:"1. Header",id:"1-header",level:3},{value:"2. Payload (Claims)",id:"2-payload-claims",level:3},{value:"3. Signature",id:"3-signature",level:3},{value:"\ud83d\udee0\ufe0f FastAPI\uc5d0\uc11c JWT \uc0dd\uc131",id:"\ufe0f-fastapi\uc5d0\uc11c-jwt-\uc0dd\uc131",level:2},{value:"\uc124\uce58",id:"\uc124\uce58",level:3},{value:"JWT \uc0dd\uc131 \ud568\uc218",id:"jwt-\uc0dd\uc131-\ud568\uc218",level:3},{value:"JWT \uac80\uc99d \ud568\uc218",id:"jwt-\uac80\uc99d-\ud568\uc218",level:3},{value:"\ud83d\udd10 FastAPI \uc778\uc99d \uad6c\ud604",id:"-fastapi-\uc778\uc99d-\uad6c\ud604",level:2},{value:"\uc644\uc804\ud55c \uc778\uc99d \uc2dc\uc2a4\ud15c",id:"\uc644\uc804\ud55c-\uc778\uc99d-\uc2dc\uc2a4\ud15c",level:3},{value:"\uc0ac\uc6a9 \uc608",id:"\uc0ac\uc6a9-\uc608",level:3},{value:"\ud83c\udd94 ID Token \ucc98\ub9ac (OIDC)",id:"-id-token-\ucc98\ub9ac-oidc",level:2},{value:"ID Token \uac80\uc99d",id:"id-token-\uac80\uc99d",level:3},{value:"\ud83d\udd04 Refresh Token \ud328\ud134",id:"-refresh-token-\ud328\ud134",level:2},{value:"Refresh Token \uc0dd\uc131",id:"refresh-token-\uc0dd\uc131",level:3},{value:"Refresh Token\uc73c\ub85c \uac31\uc2e0",id:"refresh-token\uc73c\ub85c-\uac31\uc2e0",level:3},{value:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134",id:"-\uace0\uae09-\ud328\ud134",level:2},{value:"1. \uc5ed\ud560 \uae30\ubc18 \uc811\uadfc \uc81c\uc5b4 (RBAC)",id:"1-\uc5ed\ud560-\uae30\ubc18-\uc811\uadfc-\uc81c\uc5b4-rbac",level:3},{value:"2. \ud1a0\ud070 \ube14\ub799\ub9ac\uc2a4\ud2b8 (\ub85c\uadf8\uc544\uc6c3)",id:"2-\ud1a0\ud070-\ube14\ub799\ub9ac\uc2a4\ud2b8-\ub85c\uadf8\uc544\uc6c3",level:3},{value:"3. \uc790\ub3d9 \ud1a0\ud070 \uac31\uc2e0 (Frontend)",id:"3-\uc790\ub3d9-\ud1a0\ud070-\uac31\uc2e0-frontend",level:3},{value:"\ud83d\udee1\ufe0f \ubcf4\uc548 Best Practices",id:"\ufe0f-\ubcf4\uc548-best-practices",level:2},{value:"1. Secret Key \uad00\ub9ac",id:"1-secret-key-\uad00\ub9ac",level:3},{value:"2. \uc54c\uace0\ub9ac\uc998 \uc120\ud0dd",id:"2-\uc54c\uace0\ub9ac\uc998-\uc120\ud0dd",level:3},{value:"3. \uc9e7\uc740 \ub9cc\ub8cc \uc2dc\uac04",id:"3-\uc9e7\uc740-\ub9cc\ub8cc-\uc2dc\uac04",level:3},{value:"4. HTTPS \ud544\uc218",id:"4-https-\ud544\uc218",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"jwt-\ud1a0\ud070-\ucc98\ub9ac",children:"JWT \ud1a0\ud070 \ucc98\ub9ac"})}),"\n",(0,r.jsx)(n.p,{children:"JWT (JSON Web Token)\uc758 \uad6c\uc870\ub97c \uc774\ud574\ud558\uace0 FastAPI\uc5d0\uc11c \ud6a8\uacfc\uc801\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 JWT \uad6c\uc870 \uc774\ud574"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 JWT \uc0dd\uc131 \ubc0f \uac80\uc99d"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 FastAPI\uc5d0\uc11c JWT \ud65c\uc6a9"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 \ubcf4\uc548 Best Practices"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 ID Token vs Access Token"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-jwt\ub780",children:"\ud83d\udd0d JWT\ub780?"}),"\n",(0,r.jsx)(n.h3,{id:"\uc815\uc758",children:"\uc815\uc758"}),"\n",(0,r.jsx)(n.p,{children:"**JWT (JSON Web Token)**\uc740 \ub2f9\uc0ac\uc790 \uac04\uc5d0 \uc815\ubcf4\ub97c \uc548\uc804\ud558\uac8c \uc804\uc1a1\ud558\uae30 \uc704\ud55c \ucef4\ud329\ud2b8\ud558\uace0 \uc790\uccb4 \ud3ec\ud568\ub41c \ubc29\uc2dd\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'jwt_definition = {\n    "\ud615\uc2dd": "Base64URL \uc778\ucf54\ub529\ub41c JSON",\n    "\uad6c\uc131": "Header.Payload.Signature",\n    "\ud2b9\uc9d5": "\uc790\uccb4 \uac80\uc99d \uac00\ub2a5 (self-contained)",\n    "\uc6a9\ub3c4": "\uc778\uc99d, \uc815\ubcf4 \uad50\ud658",\n    "\ud45c\uc900": "RFC 7519"\n}\n\n# JWT \uc608\uc2dc\njwt_example = (\n    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9."  # Header\n    "eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ."  # Payload\n    "SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"  # Signature\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-jwt-\uad6c\uc870",children:"\ud83d\udccb JWT \uad6c\uc870"}),"\n",(0,r.jsx)(n.h3,{id:"1-header",children:"1. Header"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\uc54c\uace0\ub9ac\uc998\uacfc \ud1a0\ud070 \ud0c0\uc785"}),"\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Header (JSON)\nheader = {\n    "alg": "HS256",  # \uc54c\uace0\ub9ac\uc998 (HMAC SHA-256)\n    "typ": "JWT"     # \ud1a0\ud070 \ud0c0\uc785\n}\n\n# Base64URL \uc778\ucf54\ub529\n# eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\n\n# \uc9c0\uc6d0 \uc54c\uace0\ub9ac\uc998\nalgorithms = {\n    "HS256": "HMAC SHA-256 (\ub300\uce6d\ud0a4)",\n    "HS384": "HMAC SHA-384 (\ub300\uce6d\ud0a4)",\n    "HS512": "HMAC SHA-512 (\ub300\uce6d\ud0a4)",\n    "RS256": "RSA SHA-256 (\ube44\ub300\uce6d\ud0a4) - \uad8c\uc7a5",\n    "RS384": "RSA SHA-384 (\ube44\ub300\uce6d\ud0a4)",\n    "RS512": "RSA SHA-512 (\ube44\ub300\uce6d\ud0a4)",\n    "ES256": "ECDSA SHA-256 (\ube44\ub300\uce6d\ud0a4)",\n    "ES384": "ECDSA SHA-384 (\ube44\ub300\uce6d\ud0a4)",\n    "ES512": "ECDSA SHA-512 (\ube44\ub300\uce6d\ud0a4)"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-payload-claims",children:"2. Payload (Claims)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\uc0ac\uc6a9\uc790 \uc815\ubcf4\uc640 \uba54\ud0c0\ub370\uc774\ud130"}),"\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Payload (JSON)\npayload = {\n    # Registered Claims (\ud45c\uc900)\n    "iss": "https://auth.example.com",  # Issuer (\ubc1c\uae09\uc790)\n    "sub": "1234567890",                 # Subject (\uc8fc\uccb4, \uc0ac\uc6a9\uc790 ID)\n    "aud": "https://api.example.com",    # Audience (\ub300\uc0c1)\n    "exp": 1701234567,                   # Expiration Time (\ub9cc\ub8cc \uc2dc\uac04)\n    "nbf": 1701230967,                   # Not Before (\uc720\ud6a8 \uc2dc\uc791 \uc2dc\uac04)\n    "iat": 1701230967,                   # Issued At (\ubc1c\uae09 \uc2dc\uac04)\n    "jti": "unique-token-id",            # JWT ID (\ud1a0\ud070 \uace0\uc720 ID)\n\n    # Public Claims (\uacf5\uac1c)\n    "name": "Alice Smith",\n    "email": "alice@example.com",\n\n    # Private Claims (\ube44\uacf5\uac1c)\n    "user_id": 42,\n    "role": "admin",\n    "permissions": ["read", "write"]\n}\n\n# Base64URL \uc778\ucf54\ub529\n# eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-signature",children:"3. Signature"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud1a0\ud070\uc758 \ubb34\uacb0\uc131\uc744 \ubcf4\uc7a5"}),"\ud569\ub2c8\ub2e4."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Signature \uc0dd\uc131\nimport hmac\nimport hashlib\nimport base64\n\ndef create_signature(header_b64: str, payload_b64: str, secret: str) -> str:\n    """HMAC SHA-256 \uc11c\uba85 \uc0dd\uc131"""\n\n    message = f"{header_b64}.{payload_b64}".encode()\n\n    signature = hmac.new(\n        secret.encode(),\n        message,\n        hashlib.sha256\n    ).digest()\n\n    signature_b64 = base64.urlsafe_b64encode(signature).decode().rstrip(\'=\')\n\n    return signature_b64\n\n# \uac80\uc99d: \ub3d9\uc77c\ud55c secret\uc73c\ub85c \uc11c\uba85 \uc7ac\uc0dd\uc131 \u2192 \ube44\uad50\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-fastapi\uc5d0\uc11c-jwt-\uc0dd\uc131",children:"\ud83d\udee0\ufe0f FastAPI\uc5d0\uc11c JWT \uc0dd\uc131"}),"\n",(0,r.jsx)(n.h3,{id:"\uc124\uce58",children:"\uc124\uce58"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install python-jose[cryptography]\npip install passlib[bcrypt]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"jwt-\uc0dd\uc131-\ud568\uc218",children:"JWT \uc0dd\uc131 \ud568\uc218"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from jose import jwt, JWTError\nfrom datetime import datetime, timedelta\nfrom typing import Optional\n\n# \uc124\uc815\nSECRET_KEY = "your-secret-key-keep-it-secret"\nALGORITHM = "HS256"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\ndef create_access_token(\n    data: dict,\n    expires_delta: Optional[timedelta] = None\n) -> str:\n    """Access Token \uc0dd\uc131"""\n\n    to_encode = data.copy()\n\n    # \ub9cc\ub8cc \uc2dc\uac04 \uc124\uc815\n    if expires_delta:\n        expire = datetime.utcnow() + expires_delta\n    else:\n        expire = datetime.utcnow() + timedelta(minutes=15)\n\n    to_encode.update({"exp": expire})\n\n    # JWT \uc0dd\uc131\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n\n    return encoded_jwt\n\n# \uc0ac\uc6a9 \uc608\nuser_data = {\n    "sub": "user123",\n    "email": "alice@example.com",\n    "role": "admin"\n}\n\naccess_token = create_access_token(\n    data=user_data,\n    expires_delta=timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n)\n\nprint(access_token)\n# eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n'})}),"\n",(0,r.jsx)(n.h3,{id:"jwt-\uac80\uc99d-\ud568\uc218",children:"JWT \uac80\uc99d \ud568\uc218"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from jose import jwt, JWTError\nfrom fastapi import HTTPException, status\n\ndef verify_token(token: str) -> dict:\n    """JWT \uac80\uc99d \ubc0f \ub514\ucf54\ub529"""\n\n    try:\n        # JWT \ub514\ucf54\ub529 \ubc0f \uac80\uc99d\n        payload = jwt.decode(\n            token,\n            SECRET_KEY,\n            algorithms=[ALGORITHM]\n        )\n\n        # sub claim \ud655\uc778 (\uc0ac\uc6a9\uc790 ID)\n        user_id: str = payload.get("sub")\n        if user_id is None:\n            raise HTTPException(\n                status_code=status.HTTP_401_UNAUTHORIZED,\n                detail="Invalid token"\n            )\n\n        return payload\n\n    except JWTError as e:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=f"Invalid token: {str(e)}"\n        )\n\n# \uc0ac\uc6a9 \uc608\ntry:\n    payload = verify_token(access_token)\n    print(payload)\n    # {\'sub\': \'user123\', \'email\': \'alice@example.com\', \'exp\': 1701234567}\nexcept HTTPException as e:\n    print(f"Error: {e.detail}")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-fastapi-\uc778\uc99d-\uad6c\ud604",children:"\ud83d\udd10 FastAPI \uc778\uc99d \uad6c\ud604"}),"\n",(0,r.jsx)(n.h3,{id:"\uc644\uc804\ud55c-\uc778\uc99d-\uc2dc\uc2a4\ud15c",children:"\uc644\uc804\ud55c \uc778\uc99d \uc2dc\uc2a4\ud15c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Depends, HTTPException, status\nfrom fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\nfrom pydantic import BaseModel\nfrom jose import jwt, JWTError\nfrom passlib.context import CryptContext\nfrom datetime import datetime, timedelta\nfrom typing import Optional\n\napp = FastAPI()\n\n# \ube44\ubc00\ubc88\ud638 \ud574\uc2f1\npwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")\n\n# OAuth2 \uc2a4\ud0b4\noauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")\n\n# \uc124\uc815\nSECRET_KEY = "your-secret-key"\nALGORITHM = "HS256"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\n# ==================== \ubaa8\ub378 ====================\n\nclass User(BaseModel):\n    username: str\n    email: str\n    full_name: str | None = None\n    disabled: bool = False\n\nclass UserInDB(User):\n    hashed_password: str\n\nclass Token(BaseModel):\n    access_token: str\n    token_type: str\n\nclass TokenData(BaseModel):\n    username: str | None = None\n\n# ==================== \uac00\uc9dc DB ====================\n\nfake_users_db = {\n    "alice": {\n        "username": "alice",\n        "full_name": "Alice Smith",\n        "email": "alice@example.com",\n        "hashed_password": "$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW",  # "secret"\n        "disabled": False,\n    }\n}\n\n# ==================== \uc720\ud2f8\ub9ac\ud2f0 ====================\n\ndef verify_password(plain_password: str, hashed_password: str) -> bool:\n    """\ube44\ubc00\ubc88\ud638 \uac80\uc99d"""\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password: str) -> str:\n    """\ube44\ubc00\ubc88\ud638 \ud574\uc2f1"""\n    return pwd_context.hash(password)\n\ndef get_user(db, username: str):\n    """\uc0ac\uc6a9\uc790 \uc870\ud68c"""\n    if username in db:\n        user_dict = db[username]\n        return UserInDB(**user_dict)\n\ndef authenticate_user(db, username: str, password: str):\n    """\uc0ac\uc6a9\uc790 \uc778\uc99d"""\n    user = get_user(db, username)\n    if not user:\n        return False\n    if not verify_password(password, user.hashed_password):\n        return False\n    return user\n\ndef create_access_token(data: dict, expires_delta: Optional[timedelta] = None):\n    """Access Token \uc0dd\uc131"""\n    to_encode = data.copy()\n\n    if expires_delta:\n        expire = datetime.utcnow() + expires_delta\n    else:\n        expire = datetime.utcnow() + timedelta(minutes=15)\n\n    to_encode.update({"exp": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n\n    return encoded_jwt\n\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\n    """\ud604\uc7ac \uc0ac\uc6a9\uc790 \uac00\uc838\uc624\uae30 (\uc758\uc874\uc131)"""\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail="Could not validate credentials",\n        headers={"WWW-Authenticate": "Bearer"},\n    )\n\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get("sub")\n        if username is None:\n            raise credentials_exception\n        token_data = TokenData(username=username)\n    except JWTError:\n        raise credentials_exception\n\n    user = get_user(fake_users_db, username=token_data.username)\n    if user is None:\n        raise credentials_exception\n\n    return user\n\nasync def get_current_active_user(\n    current_user: User = Depends(get_current_user)\n):\n    """\ud65c\uc131 \uc0ac\uc6a9\uc790\ub9cc (\uc758\uc874\uc131)"""\n    if current_user.disabled:\n        raise HTTPException(status_code=400, detail="Inactive user")\n    return current_user\n\n# ==================== \ub77c\uc6b0\ud2b8 ====================\n\n@app.post("/token", response_model=Token)\nasync def login(form_data: OAuth2PasswordRequestForm = Depends()):\n    """\ub85c\uadf8\uc778 (JWT \ubc1c\uae09)"""\n    user = authenticate_user(\n        fake_users_db,\n        form_data.username,\n        form_data.password\n    )\n\n    if not user:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail="Incorrect username or password",\n            headers={"WWW-Authenticate": "Bearer"},\n        )\n\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    access_token = create_access_token(\n        data={"sub": user.username},\n        expires_delta=access_token_expires\n    )\n\n    return {"access_token": access_token, "token_type": "bearer"}\n\n@app.get("/users/me", response_model=User)\nasync def read_users_me(current_user: User = Depends(get_current_active_user)):\n    """\ud604\uc7ac \uc0ac\uc6a9\uc790 \uc815\ubcf4"""\n    return current_user\n\n@app.get("/users/me/items")\nasync def read_own_items(current_user: User = Depends(get_current_active_user)):\n    """\ud604\uc7ac \uc0ac\uc6a9\uc790\uc758 \uc544\uc774\ud15c"""\n    return [{"item_id": "Foo", "owner": current_user.username}]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"\uc0ac\uc6a9-\uc608",children:"\uc0ac\uc6a9 \uc608"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# 1. \ub85c\uadf8\uc778 (\ud1a0\ud070 \ubc1b\uae30)\ncurl -X POST "http://localhost:8000/token" \\\n  -H "Content-Type: application/x-www-form-urlencoded" \\\n  -d "username=alice&password=secret"\n\n# \uc751\ub2f5\n{\n  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",\n  "token_type": "bearer"\n}\n\n# 2. \ubcf4\ud638\ub41c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc811\uadfc\ncurl -X GET "http://localhost:8000/users/me" \\\n  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."\n\n# \uc751\ub2f5\n{\n  "username": "alice",\n  "email": "alice@example.com",\n  "full_name": "Alice Smith",\n  "disabled": false\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-id-token-\ucc98\ub9ac-oidc",children:"\ud83c\udd94 ID Token \ucc98\ub9ac (OIDC)"}),"\n",(0,r.jsx)(n.h3,{id:"id-token-\uac80\uc99d",children:"ID Token \uac80\uc99d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from jose import jwt, jwk\nfrom jose.utils import base64url_decode\nimport httpx\n\nasync def get_google_public_keys():\n    \"\"\"Google \uacf5\uac1c \ud0a4 \uac00\uc838\uc624\uae30\"\"\"\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://www.googleapis.com/oauth2/v3/certs'\n        )\n        return response.json()\n\nasync def verify_id_token(id_token: str, client_id: str):\n    \"\"\"Google ID Token \uac80\uc99d\"\"\"\n\n    try:\n        # 1. \uacf5\uac1c \ud0a4 \uac00\uc838\uc624\uae30\n        jwks = await get_google_public_keys()\n\n        # 2. Header\uc5d0\uc11c kid \ucd94\ucd9c\n        unverified_header = jwt.get_unverified_header(id_token)\n        kid = unverified_header['kid']\n\n        # 3. kid\ub85c \uacf5\uac1c \ud0a4 \ucc3e\uae30\n        key = next(\n            (k for k in jwks['keys'] if k['kid'] == kid),\n            None\n        )\n\n        if not key:\n            raise ValueError(\"Public key not found\")\n\n        # 4. JWT \uac80\uc99d \ubc0f \ub514\ucf54\ub529\n        payload = jwt.decode(\n            id_token,\n            key,\n            algorithms=['RS256'],\n            audience=client_id,\n            issuer='https://accounts.google.com'\n        )\n\n        # 5. Claims \uac80\uc99d\n        assert payload['aud'] == client_id, \"Invalid audience\"\n        assert payload['iss'] == 'https://accounts.google.com', \"Invalid issuer\"\n        assert payload['exp'] > datetime.now().timestamp(), \"Token expired\"\n\n        return payload\n\n    except Exception as e:\n        raise HTTPException(\n            status_code=401,\n            detail=f\"Invalid ID token: {str(e)}\"\n        )\n\n# \uc0ac\uc6a9 \uc608\n@app.get('/auth/google')\nasync def auth_google(request: Request):\n    token = await oauth.google.authorize_access_token(request)\n\n    # ID Token \uac80\uc99d (Authlib\uac00 \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ud558\uc9c0\ub9cc, \uc218\ub3d9 \uac80\uc99d \uc608\uc2dc)\n    id_token = token.get('id_token')\n    if id_token:\n        payload = await verify_id_token(id_token, GOOGLE_CLIENT_ID)\n        print(payload)\n        # {\n        #   'sub': '10769150350006150715113082367',\n        #   'email': 'alice@example.com',\n        #   'name': 'Alice Smith',\n        #   ...\n        # }\n\n    return {\"user\": token.get('userinfo')}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-refresh-token-\ud328\ud134",children:"\ud83d\udd04 Refresh Token \ud328\ud134"}),"\n",(0,r.jsx)(n.h3,{id:"refresh-token-\uc0dd\uc131",children:"Refresh Token \uc0dd\uc131"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def create_tokens(user_id: str):\n    """Access Token + Refresh Token \uc0dd\uc131"""\n\n    # Access Token (\uc9e7\uc740 \uc218\uba85)\n    access_token_expires = timedelta(minutes=15)\n    access_token = create_access_token(\n        data={"sub": user_id, "type": "access"},\n        expires_delta=access_token_expires\n    )\n\n    # Refresh Token (\uae34 \uc218\uba85)\n    refresh_token_expires = timedelta(days=30)\n    refresh_token = create_access_token(\n        data={"sub": user_id, "type": "refresh"},\n        expires_delta=refresh_token_expires\n    )\n\n    return {\n        "access_token": access_token,\n        "refresh_token": refresh_token,\n        "token_type": "bearer"\n    }\n\n@app.post("/login")\nasync def login(username: str, password: str):\n    """\ub85c\uadf8\uc778 (Access + Refresh Token)"""\n\n    user = authenticate_user(fake_users_db, username, password)\n    if not user:\n        raise HTTPException(status_code=401, detail="Invalid credentials")\n\n    tokens = create_tokens(user.username)\n\n    return tokens\n'})}),"\n",(0,r.jsx)(n.h3,{id:"refresh-token\uc73c\ub85c-\uac31\uc2e0",children:"Refresh Token\uc73c\ub85c \uac31\uc2e0"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@app.post("/refresh")\nasync def refresh_token(refresh_token: str):\n    """Refresh Token\uc73c\ub85c \uc0c8 Access Token \ubc1c\uae09"""\n\n    try:\n        # Refresh Token \uac80\uc99d\n        payload = jwt.decode(refresh_token, SECRET_KEY, algorithms=[ALGORITHM])\n\n        # \ud0c0\uc785 \ud655\uc778\n        if payload.get("type") != "refresh":\n            raise HTTPException(status_code=401, detail="Invalid token type")\n\n        user_id = payload.get("sub")\n        if not user_id:\n            raise HTTPException(status_code=401, detail="Invalid token")\n\n        # \uc0c8 Access Token \uc0dd\uc131\n        access_token = create_access_token(\n            data={"sub": user_id, "type": "access"},\n            expires_delta=timedelta(minutes=15)\n        )\n\n        return {\n            "access_token": access_token,\n            "token_type": "bearer"\n        }\n\n    except JWTError:\n        raise HTTPException(status_code=401, detail="Invalid refresh token")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-\uace0\uae09-\ud328\ud134",children:"\ud83c\udfa8 \uace0\uae09 \ud328\ud134"}),"\n",(0,r.jsx)(n.h3,{id:"1-\uc5ed\ud560-\uae30\ubc18-\uc811\uadfc-\uc81c\uc5b4-rbac",children:"1. \uc5ed\ud560 \uae30\ubc18 \uc811\uadfc \uc81c\uc5b4 (RBAC)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from enum import Enum\n\nclass Role(str, Enum):\n    ADMIN = "admin"\n    USER = "user"\n    GUEST = "guest"\n\ndef create_access_token_with_role(user_id: str, role: Role):\n    """\uc5ed\ud560 \ud3ec\ud568 \ud1a0\ud070"""\n    return create_access_token(\n        data={\n            "sub": user_id,\n            "role": role.value,\n            "permissions": get_permissions(role)\n        }\n    )\n\ndef get_permissions(role: Role) -> list[str]:\n    """\uc5ed\ud560\ubcc4 \uad8c\ud55c"""\n    permissions_map = {\n        Role.ADMIN: ["read", "write", "delete", "admin"],\n        Role.USER: ["read", "write"],\n        Role.GUEST: ["read"]\n    }\n    return permissions_map.get(role, [])\n\n# \uc5ed\ud560 \ud655\uc778 \uc758\uc874\uc131\ndef require_role(required_role: Role):\n    """\ud2b9\uc815 \uc5ed\ud560 \ud544\uc694"""\n    async def role_checker(token: str = Depends(oauth2_scheme)):\n        payload = verify_token(token)\n        user_role = payload.get("role")\n\n        if user_role != required_role.value:\n            raise HTTPException(\n                status_code=403,\n                detail=f"Required role: {required_role.value}"\n            )\n\n        return payload\n\n    return role_checker\n\n# \uc0ac\uc6a9 \uc608\n@app.delete("/users/{user_id}")\nasync def delete_user(\n    user_id: int,\n    current_user: dict = Depends(require_role(Role.ADMIN))\n):\n    """\uad00\ub9ac\uc790 \uc804\uc6a9: \uc0ac\uc6a9\uc790 \uc0ad\uc81c"""\n    return {"message": f"User {user_id} deleted by {current_user[\'sub\']}"}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-\ud1a0\ud070-\ube14\ub799\ub9ac\uc2a4\ud2b8-\ub85c\uadf8\uc544\uc6c3",children:"2. \ud1a0\ud070 \ube14\ub799\ub9ac\uc2a4\ud2b8 (\ub85c\uadf8\uc544\uc6c3)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from datetime import datetime\n\n# \ube14\ub799\ub9ac\uc2a4\ud2b8 (\uc2e4\uc81c\ub85c\ub294 Redis \uc0ac\uc6a9 \uad8c\uc7a5)\ntoken_blacklist = set()\n\ndef revoke_token(token: str):\n    """\ud1a0\ud070 \ud3d0\uae30"""\n    token_blacklist.add(token)\n\ndef is_token_revoked(token: str) -> bool:\n    """\ud1a0\ud070 \ud3d0\uae30 \ud655\uc778"""\n    return token in token_blacklist\n\nasync def get_current_user_with_blacklist(token: str = Depends(oauth2_scheme)):\n    """\ube14\ub799\ub9ac\uc2a4\ud2b8 \ud655\uc778 \ud3ec\ud568"""\n\n    # \ube14\ub799\ub9ac\uc2a4\ud2b8 \ud655\uc778\n    if is_token_revoked(token):\n        raise HTTPException(status_code=401, detail="Token has been revoked")\n\n    # \uc77c\ubc18 \uac80\uc99d\n    payload = verify_token(token)\n    return payload\n\n@app.post("/logout")\nasync def logout(token: str = Depends(oauth2_scheme)):\n    """\ub85c\uadf8\uc544\uc6c3 (\ud1a0\ud070 \ud3d0\uae30)"""\n    revoke_token(token)\n    return {"message": "Successfully logged out"}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-\uc790\ub3d9-\ud1a0\ud070-\uac31\uc2e0-frontend",children:"3. \uc790\ub3d9 \ud1a0\ud070 \uac31\uc2e0 (Frontend)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Frontend (JavaScript)\nclass TokenManager {\n    constructor() {\n        this.accessToken = null;\n        this.refreshToken = null;\n        this.refreshTimer = null;\n    }\n\n    async login(username, password) {\n        const response = await fetch('/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username, password})\n        });\n\n        const data = await response.json();\n        this.accessToken = data.access_token;\n        this.refreshToken = data.refresh_token;\n\n        // \uc790\ub3d9 \uac31\uc2e0 \uc2a4\ucf00\uc904\ub9c1 (14\ubd84 \ud6c4)\n        this.scheduleRefresh(14 * 60 * 1000);\n    }\n\n    scheduleRefresh(delay) {\n        clearTimeout(this.refreshTimer);\n        this.refreshTimer = setTimeout(() => this.refresh(), delay);\n    }\n\n    async refresh() {\n        const response = await fetch('/refresh', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({refresh_token: this.refreshToken})\n        });\n\n        const data = await response.json();\n        this.accessToken = data.access_token;\n\n        // \ub2e4\uc74c \uac31\uc2e0 \uc2a4\ucf00\uc904\ub9c1\n        this.scheduleRefresh(14 * 60 * 1000);\n    }\n\n    async apiCall(url, options = {}) {\n        options.headers = {\n            ...options.headers,\n            'Authorization': `Bearer ${this.accessToken}`\n        };\n\n        let response = await fetch(url, options);\n\n        // 401 \uc5d0\ub7ec \uc2dc \ud1a0\ud070 \uac31\uc2e0 \ud6c4 \uc7ac\uc2dc\ub3c4\n        if (response.status === 401) {\n            await this.refresh();\n            options.headers['Authorization'] = `Bearer ${this.accessToken}`;\n            response = await fetch(url, options);\n        }\n\n        return response;\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-\ubcf4\uc548-best-practices",children:"\ud83d\udee1\ufe0f \ubcf4\uc548 Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-secret-key-\uad00\ub9ac",children:"1. Secret Key \uad00\ub9ac"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u274c \ub098\uc05c \uc608\nSECRET_KEY = "my-secret"\n\n# \u2705 \uc88b\uc740 \uc608\nimport secrets\n\n# \uac15\ub825\ud55c secret \uc0dd\uc131\nSECRET_KEY = secrets.token_urlsafe(32)\n\n# \ub610\ub294 \ud658\uacbd\ubcc0\uc218\nimport os\nSECRET_KEY = os.getenv("JWT_SECRET_KEY")\n\n# secret \uc0dd\uc131 \uba85\ub839\uc5b4\n# python -c "import secrets; print(secrets.token_urlsafe(32))"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-\uc54c\uace0\ub9ac\uc998-\uc120\ud0dd",children:"2. \uc54c\uace0\ub9ac\uc998 \uc120\ud0dd"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# \u2705 \uad8c\uc7a5: RS256 (\ube44\ub300\uce6d\ud0a4)\n# - \uacf5\uac1c \ud0a4\ub85c \uac80\uc99d \uac00\ub2a5\n# - Private \ud0a4 \ub178\ucd9c \uc704\ud5d8 \uac10\uc18c\n\nALGORITHM = "RS256"\n\n# \u26a0\ufe0f \uc8fc\uc758: HS256 (\ub300\uce6d\ud0a4)\n# - Secret \ud0a4 \uacf5\uc720 \ud544\uc694\n# - \uc791\uc740 \ud504\ub85c\uc81d\ud2b8\uc6a9\n\nALGORITHM = "HS256"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-\uc9e7\uc740-\ub9cc\ub8cc-\uc2dc\uac04",children:"3. \uc9e7\uc740 \ub9cc\ub8cc \uc2dc\uac04"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# \u2705 Access Token: 15-30\ubd84\nACCESS_TOKEN_EXPIRE_MINUTES = 15\n\n# \u2705 Refresh Token: 7-30\uc77c\nREFRESH_TOKEN_EXPIRE_DAYS = 7\n\n# \u274c \ub108\ubb34 \uae34 \ub9cc\ub8cc \uc2dc\uac04 (\ubcf4\uc548 \uc704\ud5d8)\nACCESS_TOKEN_EXPIRE_MINUTES = 1440  # 24\uc2dc\uac04\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-https-\ud544\uc218",children:"4. HTTPS \ud544\uc218"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# \ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 HTTPS \ud544\uc218!\n# JWT\ub294 \uc554\ud638\ud654\ub418\uc9c0 \uc54a\uc74c (\uc11c\uba85\ub9cc)\n\n# payload\ub294 Base64 \ub514\ucf54\ub529\uc73c\ub85c \ub204\uad6c\ub098 \uc77d\uc744 \uc218 \uc788\uc74c\nimport base64\nimport json\n\npayload_b64 = \"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIn0\"\npayload_json = base64.urlsafe_b64decode(payload_b64 + \"==\")\npayload = json.loads(payload_json)\n# {'sub': '1234567890', 'name': 'John Doe'}\n\n# \u2192 HTTPS \uc5c6\uc774\ub294 \uc911\uac04\uc5d0\uc11c \ud0c8\ucde8 \uac00\ub2a5!\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./fastapi-basics",children:"FastAPI OAuth \uae30\ucd08"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./google-oauth",children:"Google OAuth \ud1b5\ud569"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./github-oauth",children:"GitHub OAuth \ud1b5\ud569"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../advanced/security",children:"\ubcf4\uc548 Best Practices"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../advanced/token-management",children:"\ud1a0\ud070 \uad00\ub9ac"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,r.jsx)(n.p,{children:"JWT \ud1a0\ud070 \ucc98\ub9ac\ub97c \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c \uace0\uae09 \ubcf4\uc548 \uae30\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,r.jsx)(n.a,{href:"../advanced/pkce",children:"PKCE \uad6c\ud604"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": JWT\ub294 \uc554\ud638\ud654\uac00 \uc544\ub2cc \uc11c\uba85\uc785\ub2c8\ub2e4. \ubbfc\uac10\ud55c \uc815\ubcf4\ub294 JWT\uc5d0 \ub123\uc9c0 \ub9c8\uc138\uc694!"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);