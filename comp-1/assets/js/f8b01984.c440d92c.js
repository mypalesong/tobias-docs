"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[2365],{2972:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"sqlalchemy/intermediate/joins","title":"Join\uacfc \ub85c\ub529 \uc804\ub7b5","description":"N+1 \ucffc\ub9ac \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uace0 \ub370\uc774\ud130 \ub85c\ub529\uc744 \ucd5c\uc801\ud654\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/sqlalchemy/intermediate/joins.md","sourceDirName":"sqlalchemy/intermediate","slug":"/sqlalchemy/intermediate/joins","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/intermediate/joins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sqlalchemy/intermediate/joins.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"sqlalchemySidebar","previous":{"title":"\ucffc\ub9ac \uc791\uc131","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/intermediate/queries"},"next":{"title":"\uc138\uc158 \uad00\ub9ac","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/intermediate/sessions"}}');var o=n(4848),i=n(8453);const t={sidebar_position:4},r="Join\uacfc \ub85c\ub529 \uc804\ub7b5",a={},d=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udc0c Lazy Loading (\uc9c0\uc5f0 \ub85c\ub529)",id:"-lazy-loading-\uc9c0\uc5f0-\ub85c\ub529",level:2},{value:"\uae30\ubcf8 \ub3d9\uc791",id:"\uae30\ubcf8-\ub3d9\uc791",level:3},{value:"Lazy Loading\uc758 \uc7a5\uc810",id:"lazy-loading\uc758-\uc7a5\uc810",level:3},{value:"Lazy Loading\uc758 \ubb38\uc81c: N+1 \ucffc\ub9ac",id:"lazy-loading\uc758-\ubb38\uc81c-n1-\ucffc\ub9ac",level:3},{value:"\u26a1 Eager Loading (\uc989\uc2dc \ub85c\ub529)",id:"-eager-loading-\uc989\uc2dc-\ub85c\ub529",level:2},{value:"selectinload() - SELECT IN \uc804\ub7b5",id:"selectinload---select-in-\uc804\ub7b5",level:3},{value:"joinedload() - JOIN \uc804\ub7b5",id:"joinedload---join-\uc804\ub7b5",level:3},{value:"selectinload() vs joinedload()",id:"selectinload-vs-joinedload",level:3},{value:"\ud83d\udd17 \uc911\ucca9 \ub85c\ub529",id:"-\uc911\ucca9-\ub85c\ub529",level:2},{value:"\uc5ec\ub7ec \ub2e8\uacc4 \ub85c\ub529",id:"\uc5ec\ub7ec-\ub2e8\uacc4-\ub85c\ub529",level:3},{value:"\uc5ec\ub7ec \uad00\uacc4 \ub3d9\uc2dc \ub85c\ub529",id:"\uc5ec\ub7ec-\uad00\uacc4-\ub3d9\uc2dc-\ub85c\ub529",level:3},{value:"\ud83c\udfa8 \ub85c\ub529 \uc804\ub7b5 \uc0c1\uc138",id:"-\ub85c\ub529-\uc804\ub7b5-\uc0c1\uc138",level:2},{value:"subqueryload() - \uc11c\ube0c\ucffc\ub9ac \uc804\ub7b5",id:"subqueryload---\uc11c\ube0c\ucffc\ub9ac-\uc804\ub7b5",level:3},{value:"contains_eager() - \uc774\ubbf8 JOIN\ub41c \uacbd\uc6b0",id:"contains_eager---\uc774\ubbf8-join\ub41c-\uacbd\uc6b0",level:3},{value:"noload() - \ub85c\ub529 \ubc29\uc9c0",id:"noload---\ub85c\ub529-\ubc29\uc9c0",level:3},{value:"raiseload() - \ub85c\ub529 \uc2dc \uc5d0\ub7ec",id:"raiseload---\ub85c\ub529-\uc2dc-\uc5d0\ub7ec",level:3},{value:"\ud83d\udca1 \uc2e4\uc804 \ucd5c\uc801\ud654 \ud328\ud134",id:"-\uc2e4\uc804-\ucd5c\uc801\ud654-\ud328\ud134",level:2},{value:"\ud328\ud134 1: \uc870\uac74\ubd80 \ub85c\ub529",id:"\ud328\ud134-1-\uc870\uac74\ubd80-\ub85c\ub529",level:3},{value:"\ud328\ud134 2: \uae30\ubcf8 \ub85c\ub529 \uc804\ub7b5 \uc124\uc815",id:"\ud328\ud134-2-\uae30\ubcf8-\ub85c\ub529-\uc804\ub7b5-\uc124\uc815",level:3},{value:"\ud328\ud134 3: API\ubcc4 \ucd5c\uc801\ud654",id:"\ud328\ud134-3-api\ubcc4-\ucd5c\uc801\ud654",level:3},{value:"\ud328\ud134 4: \ud398\uc774\uc9c0\ub124\uc774\uc158 + Eager Loading",id:"\ud328\ud134-4-\ud398\uc774\uc9c0\ub124\uc774\uc158--eager-loading",level:3},{value:"\ud83d\udcca \uc131\ub2a5 \uce21\uc815",id:"-\uc131\ub2a5-\uce21\uc815",level:2},{value:"\ucffc\ub9ac \uc218 \ud655\uc778",id:"\ucffc\ub9ac-\uc218-\ud655\uc778",level:3},{value:"\uc131\ub2a5 \ube44\uad50",id:"\uc131\ub2a5-\ube44\uad50",level:3},{value:"\ud83c\udfaf \uc2e4\uc804 \uc608\uc81c: \ube14\ub85c\uadf8 \ud3ec\uc2a4\ud2b8 \uc870\ud68c",id:"-\uc2e4\uc804-\uc608\uc81c-\ube14\ub85c\uadf8-\ud3ec\uc2a4\ud2b8-\uc870\ud68c",level:2},{value:"\ub098\uc05c \uc608 (N+1 \ubb38\uc81c)",id:"\ub098\uc05c-\uc608-n1-\ubb38\uc81c",level:3},{value:"\uc88b\uc740 \uc608 (Eager Loading)",id:"\uc88b\uc740-\uc608-eager-loading",level:3},{value:"\ud83d\udca1 \ud504\ub85c \ud301",id:"-\ud504\ub85c-\ud301",level:2},{value:"1. \uae30\ubcf8\uc740 Lazy, \ud544\uc694\uc2dc Eager",id:"1-\uae30\ubcf8\uc740-lazy-\ud544\uc694\uc2dc-eager",level:3},{value:"2. One-to-Many\ub294 selectinload",id:"2-one-to-many\ub294-selectinload",level:3},{value:"3. One-to-One\uc740 joinedload",id:"3-one-to-one\uc740-joinedload",level:3},{value:"4. \uac1c\ubc1c \uc911 raiseload \ud65c\uc6a9",id:"4-\uac1c\ubc1c-\uc911-raiseload-\ud65c\uc6a9",level:3},{value:"5. \ubcf5\uc7a1\ud55c \uacbd\uc6b0 \uba85\uc2dc\uc801 JOIN",id:"5-\ubcf5\uc7a1\ud55c-\uacbd\uc6b0-\uba85\uc2dc\uc801-join",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"join\uacfc-\ub85c\ub529-\uc804\ub7b5",children:"Join\uacfc \ub85c\ub529 \uc804\ub7b5"})}),"\n",(0,o.jsx)(s.p,{children:"N+1 \ucffc\ub9ac \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uace0 \ub370\uc774\ud130 \ub85c\ub529\uc744 \ucd5c\uc801\ud654\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,o.jsx)(s.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"\u2705 Lazy Loading vs Eager Loading \uc774\ud574"}),"\n",(0,o.jsx)(s.li,{children:"\u2705 N+1 \ucffc\ub9ac \ubb38\uc81c \uc778\uc2dd \ubc0f \ud574\uacb0"}),"\n",(0,o.jsxs)(s.li,{children:["\u2705 ",(0,o.jsx)(s.code,{children:"selectinload()"}),", ",(0,o.jsx)(s.code,{children:"joinedload()"})," \ud65c\uc6a9"]}),"\n",(0,o.jsx)(s.li,{children:"\u2705 \ub85c\ub529 \uc804\ub7b5 \uc120\ud0dd \uae30\uc900"}),"\n",(0,o.jsx)(s.li,{children:"\u2705 \uc131\ub2a5 \ucd5c\uc801\ud654 \ud328\ud134"}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"-lazy-loading-\uc9c0\uc5f0-\ub85c\ub529",children:"\ud83d\udc0c Lazy Loading (\uc9c0\uc5f0 \ub85c\ub529)"}),"\n",(0,o.jsx)(s.h3,{id:"\uae30\ubcf8-\ub3d9\uc791",children:"\uae30\ubcf8 \ub3d9\uc791"}),"\n",(0,o.jsxs)(s.p,{children:["Lazy Loading\uc740 SQLAlchemy\uc758 ",(0,o.jsx)(s.strong,{children:"\uae30\ubcf8 \ub3d9\uc791"}),"\uc785\ub2c8\ub2e4."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy import select\n\nwith Session(engine) as session:\n    # User\ub9cc \uc870\ud68c\n    user = session.get(User, 1)\n\n    # \uc774 \uc2dc\uc810\uc5d0 posts\ub294 \ub85c\ub4dc\ub418\uc9c0 \uc54a\uc74c\n    print(user.username)\n\n    # posts \uc811\uadfc \uc2dc \ucd94\uac00 \ucffc\ub9ac \ubc1c\uc0dd!\n    for post in user.posts:  # \u2190 \uc5ec\uae30\uc11c SELECT \ucffc\ub9ac \uc2e4\ud589\n        print(post.title)\n"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc2e4\ud589\ub418\ub294 SQL:"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-sql",children:"-- 1. User \uc870\ud68c\nSELECT * FROM users WHERE id = 1;\n\n-- 2. posts \uc811\uadfc \uc2dc (Lazy Loading)\nSELECT * FROM posts WHERE user_id = 1;\n"})}),"\n",(0,o.jsx)(s.h3,{id:"lazy-loading\uc758-\uc7a5\uc810",children:"Lazy Loading\uc758 \uc7a5\uc810"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 \ud544\uc694\ud55c \ub370\uc774\ud130\ub9cc \ub85c\ub4dc\nuser = session.get(User, 1)\nprint(user.username)  # posts\ub294 \ub85c\ub4dc \uc548 \ub428 (\uba54\ubaa8\ub9ac \uc808\uc57d)\n"})}),"\n",(0,o.jsx)(s.h3,{id:"lazy-loading\uc758-\ubb38\uc81c-n1-\ucffc\ub9ac",children:"Lazy Loading\uc758 \ubb38\uc81c: N+1 \ucffc\ub9ac"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'# \u274c N+1 \ucffc\ub9ac \ubb38\uc81c\nwith Session(engine) as session:\n    users = session.execute(select(User)).scalars().all()  # 1\uac1c \ucffc\ub9ac\n\n    for user in users:  # N\uac1c\uc758 \ucd94\uac00 \ucffc\ub9ac!\n        print(f"{user.username}:")\n        for post in user.posts:  # \uac01 user\ub9c8\ub2e4 \ucffc\ub9ac \uc2e4\ud589\n            print(f"  - {post.title}")\n'})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc2e4\ud589\ub418\ub294 SQL (users\uac00 100\uba85\uc774\uba74 101\uac1c \ucffc\ub9ac!):"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-sql",children:"-- 1\ubc88 \ucffc\ub9ac\nSELECT * FROM users;\n\n-- 100\ubc88 \ucffc\ub9ac (\uac01 user\ub9c8\ub2e4)\nSELECT * FROM posts WHERE user_id = 1;\nSELECT * FROM posts WHERE user_id = 2;\nSELECT * FROM posts WHERE user_id = 3;\n...\nSELECT * FROM posts WHERE user_id = 100;\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-eager-loading-\uc989\uc2dc-\ub85c\ub529",children:"\u26a1 Eager Loading (\uc989\uc2dc \ub85c\ub529)"}),"\n",(0,o.jsx)(s.h3,{id:"selectinload---select-in-\uc804\ub7b5",children:"selectinload() - SELECT IN \uc804\ub7b5"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"\uac00\uc7a5 \uad8c\uc7a5\ub418\ub294 \ubc29\ubc95"}),": \ubcc4\ub3c4 \ucffc\ub9ac\ub85c \ub370\uc774\ud130\ub97c \ubbf8\ub9ac \ub85c\ub4dc"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'from sqlalchemy.orm import selectinload\n\nwith Session(engine) as session:\n    # posts\ub97c \ubbf8\ub9ac \ub85c\ub4dc\n    stmt = select(User).options(selectinload(User.posts))\n    users = session.execute(stmt).scalars().all()\n\n    # \ucd94\uac00 \ucffc\ub9ac \uc5c6\uc774 \uc811\uadfc\n    for user in users:\n        for post in user.posts:  # \ucffc\ub9ac \uc5c6\uc74c!\n            print(f"{user.username}: {post.title}")\n'})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc2e4\ud589\ub418\ub294 SQL (\ub2e8 2\uac1c \ucffc\ub9ac!):"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-sql",children:"-- 1. User \uc870\ud68c\nSELECT * FROM users;\n\n-- 2. \ubaa8\ub4e0 posts\ub97c \ud55c\ubc88\uc5d0 (IN \uc0ac\uc6a9)\nSELECT * FROM posts\nWHERE posts.user_id IN (1, 2, 3, ..., 100);\n"})}),"\n",(0,o.jsx)(s.h3,{id:"joinedload---join-\uc804\ub7b5",children:"joinedload() - JOIN \uc804\ub7b5"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"\ud558\ub098\uc758 \ucffc\ub9ac\ub85c"})," User\uc640 Post\ub97c \ud55c\ubc88\uc5d0 \uc870\ud68c"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'from sqlalchemy.orm import joinedload\n\nwith Session(engine) as session:\n    # JOIN\uc73c\ub85c \ud55c\ubc88\uc5d0 \ub85c\ub4dc\n    stmt = select(User).options(joinedload(User.posts))\n    users = session.execute(stmt).scalars().unique().all()\n\n    for user in users:\n        for post in user.posts:  # \ucffc\ub9ac \uc5c6\uc74c!\n            print(f"{user.username}: {post.title}")\n'})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc2e4\ud589\ub418\ub294 SQL (1\uac1c \ucffc\ub9ac!):"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-sql",children:"SELECT users.*, posts.*\nFROM users\nLEFT OUTER JOIN posts ON users.id = posts.user_id;\n"})}),"\n",(0,o.jsx)(s.h3,{id:"selectinload-vs-joinedload",children:"selectinload() vs joinedload()"}),"\n",(0,o.jsxs)(s.table,{children:[(0,o.jsx)(s.thead,{children:(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.th,{children:"\ud2b9\uc131"}),(0,o.jsx)(s.th,{children:"selectinload()"}),(0,o.jsx)(s.th,{children:"joinedload()"})]})}),(0,o.jsxs)(s.tbody,{children:[(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"\ucffc\ub9ac \uc218"}),(0,o.jsx)(s.td,{children:"2\uac1c (User + Posts)"}),(0,o.jsx)(s.td,{children:"1\uac1c (JOIN)"})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"\uc911\ubcf5 \ud589"}),(0,o.jsx)(s.td,{children:"\uc5c6\uc74c"}),(0,o.jsx)(s.td,{children:"\uc788\uc74c (unique() \ud544\uc694)"})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"\uc131\ub2a5"}),(0,o.jsx)(s.td,{children:"One-to-Many\uc5d0 \uc88b\uc74c"}),(0,o.jsx)(s.td,{children:"One-to-One\uc5d0 \uc88b\uc74c"})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"\ubcf5\uc7a1\ud55c JOIN"}),(0,o.jsx)(s.td,{children:"\ubb38\uc81c \uc5c6\uc74c"}),(0,o.jsx)(s.td,{children:"\ub290\ub824\uc9c8 \uc218 \uc788\uc74c"})]}),(0,o.jsxs)(s.tr,{children:[(0,o.jsx)(s.td,{children:"\uad8c\uc7a5"}),(0,o.jsx)(s.td,{children:(0,o.jsx)(s.strong,{children:"\ub300\ubd80\ubd84\uc758 \uacbd\uc6b0"})}),(0,o.jsx)(s.td,{children:"\uac04\ub2e8\ud55c \uad00\uacc4"})]})]})]}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc0ac\uc6a9 \uac00\uc774\ub4dc:"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 One-to-Many \u2192 selectinload\nstmt = select(User).options(selectinload(User.posts))\n\n# \u2705 One-to-One \u2192 joinedload\nstmt = select(User).options(joinedload(User.profile))\n\n# \u2705 Many-to-Many \u2192 selectinload\nstmt = select(Post).options(selectinload(Post.tags))\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-\uc911\ucca9-\ub85c\ub529",children:"\ud83d\udd17 \uc911\ucca9 \ub85c\ub529"}),"\n",(0,o.jsx)(s.h3,{id:"\uc5ec\ub7ec-\ub2e8\uacc4-\ub85c\ub529",children:"\uc5ec\ub7ec \ub2e8\uacc4 \ub85c\ub529"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'from sqlalchemy.orm import selectinload\n\nwith Session(engine) as session:\n    # User \u2192 Post \u2192 Comment (3\ub2e8\uacc4)\n    stmt = select(User).options(\n        selectinload(User.posts).selectinload(Post.comments)\n    )\n    users = session.execute(stmt).scalars().all()\n\n    for user in users:\n        for post in user.posts:\n            print(f"{post.title} - {len(post.comments)}\uac1c \ub313\uae00")\n'})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc2e4\ud589\ub418\ub294 SQL (3\uac1c \ucffc\ub9ac):"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-sql",children:"-- 1. User\nSELECT * FROM users;\n\n-- 2. Posts\nSELECT * FROM posts WHERE posts.user_id IN (...);\n\n-- 3. Comments\nSELECT * FROM comments WHERE comments.post_id IN (...);\n"})}),"\n",(0,o.jsx)(s.h3,{id:"\uc5ec\ub7ec-\uad00\uacc4-\ub3d9\uc2dc-\ub85c\ub529",children:"\uc5ec\ub7ec \uad00\uacc4 \ub3d9\uc2dc \ub85c\ub529"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import selectinload, joinedload\n\nwith Session(engine) as session:\n    # User\uc758 \uc5ec\ub7ec \uad00\uacc4\ub97c \ub3d9\uc2dc\uc5d0 \ub85c\ub4dc\n    stmt = select(User).options(\n        selectinload(User.posts),\n        selectinload(User.comments),\n        joinedload(User.profile)\n    )\n    users = session.execute(stmt).scalars().unique().all()\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-\ub85c\ub529-\uc804\ub7b5-\uc0c1\uc138",children:"\ud83c\udfa8 \ub85c\ub529 \uc804\ub7b5 \uc0c1\uc138"}),"\n",(0,o.jsx)(s.h3,{id:"subqueryload---\uc11c\ube0c\ucffc\ub9ac-\uc804\ub7b5",children:"subqueryload() - \uc11c\ube0c\ucffc\ub9ac \uc804\ub7b5"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import subqueryload\n\nwith Session(engine) as session:\n    stmt = select(User).options(subqueryload(User.posts))\n    users = session.execute(stmt).scalars().all()\n"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uc2e4\ud589\ub418\ub294 SQL:"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-sql",children:"-- 1. User\nSELECT * FROM users;\n\n-- 2. Posts (\uc11c\ube0c\ucffc\ub9ac \uc0ac\uc6a9)\nSELECT * FROM posts\nWHERE posts.user_id IN (\n    SELECT users.id FROM users\n);\n"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"selectinload() vs subqueryload():"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"selectinload()"}),": \ub354 \uac04\ub2e8, \ub300\ubd80\ubd84 \ub354 \ube60\ub984 (\uad8c\uc7a5)"]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"subqueryload()"}),": \ubcf5\uc7a1\ud55c \ucffc\ub9ac\uc5d0\uc11c \uc720\uc6a9\ud560 \uc218 \uc788\uc74c"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"contains_eager---\uc774\ubbf8-join\ub41c-\uacbd\uc6b0",children:"contains_eager() - \uc774\ubbf8 JOIN\ub41c \uacbd\uc6b0"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import contains_eager\n\nwith Session(engine) as session:\n    # \uc774\ubbf8 JOIN\uc744 \ud588\uc744 \ub54c\n    stmt = select(User)\\\n        .join(User.posts)\\\n        .where(Post.is_published == True)\\\n        .options(contains_eager(User.posts))\n\n    users = session.execute(stmt).scalars().unique().all()\n"})}),"\n",(0,o.jsx)(s.h3,{id:"noload---\ub85c\ub529-\ubc29\uc9c0",children:"noload() - \ub85c\ub529 \ubc29\uc9c0"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import noload\n\nwith Session(engine) as session:\n    # posts\ub97c \uc544\uc608 \ub85c\ub4dc\ud558\uc9c0 \uc54a\uc74c\n    stmt = select(User).options(noload(User.posts))\n    users = session.execute(stmt).scalars().all()\n\n    # \uc811\uadfc \uc2dc \ube48 \ub9ac\uc2a4\ud2b8 \ubc18\ud658 (\ucffc\ub9ac \uc5c6\uc74c)\n    print(users[0].posts)  # []\n"})}),"\n",(0,o.jsx)(s.h3,{id:"raiseload---\ub85c\ub529-\uc2dc-\uc5d0\ub7ec",children:"raiseload() - \ub85c\ub529 \uc2dc \uc5d0\ub7ec"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import raiseload\n\nwith Session(engine) as session:\n    # posts \uc811\uadfc \uc2dc \uc5d0\ub7ec \ubc1c\uc0dd (\uac1c\ubc1c \uc911 N+1 \ud0d0\uc9c0\uc6a9)\n    stmt = select(User).options(raiseload(User.posts))\n    users = session.execute(stmt).scalars().all()\n\n    # \uc5d0\ub7ec \ubc1c\uc0dd!\n    print(users[0].posts)  # InvalidRequestError\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-\uc2e4\uc804-\ucd5c\uc801\ud654-\ud328\ud134",children:"\ud83d\udca1 \uc2e4\uc804 \ucd5c\uc801\ud654 \ud328\ud134"}),"\n",(0,o.jsx)(s.h3,{id:"\ud328\ud134-1-\uc870\uac74\ubd80-\ub85c\ub529",children:"\ud328\ud134 1: \uc870\uac74\ubd80 \ub85c\ub529"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'from sqlalchemy.orm import selectinload\n\ndef get_users(\n    session: Session,\n    load_posts: bool = False,\n    load_comments: bool = False\n):\n    """\ud544\uc694\ud55c \uad00\uacc4\ub9cc \ub85c\ub4dc"""\n    stmt = select(User)\n\n    if load_posts:\n        stmt = stmt.options(selectinload(User.posts))\n\n    if load_comments:\n        stmt = stmt.options(selectinload(User.comments))\n\n    return session.execute(stmt).scalars().all()\n\n# \uc0ac\uc6a9\nusers = get_users(session, load_posts=True)  # posts\ub9cc \ub85c\ub4dc\nusers = get_users(session, load_posts=True, load_comments=True)  # \ub458 \ub2e4 \ub85c\ub4dc\n'})}),"\n",(0,o.jsx)(s.h3,{id:"\ud328\ud134-2-\uae30\ubcf8-\ub85c\ub529-\uc804\ub7b5-\uc124\uc815",children:"\ud328\ud134 2: \uae30\ubcf8 \ub85c\ub529 \uc804\ub7b5 \uc124\uc815"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import relationship\n\nclass User(Base):\n    __tablename__ = 'users'\n\n    id: Mapped[int] = mapped_column(primary_key=True)\n\n    # lazy='select' (\uae30\ubcf8\uac12, Lazy Loading)\n    posts: Mapped[list[\"Post\"]] = relationship(lazy='select')\n\n    # lazy='selectin' (\ud56d\uc0c1 Eager Loading)\n    profile: Mapped[\"Profile\"] = relationship(lazy='selectin')\n\n    # lazy='joined' (\ud56d\uc0c1 JOIN)\n    settings: Mapped[\"Settings\"] = relationship(lazy='joined')\n"})}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.strong,{children:"\uad8c\uc7a5\uc0ac\ud56d:"})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 \ub300\ubd80\ubd84: lazy='select' (\uae30\ubcf8\uac12) + \ud544\uc694\uc2dc options()\nposts: Mapped[list[\"Post\"]] = relationship()\n\n# \u26a0\ufe0f lazy='selectin' \uc2e0\uc911\ud788 \uc0ac\uc6a9\n# \ud56d\uc0c1 \ub85c\ub4dc\ud558\ubbc0\ub85c \ubd88\ud544\uc694\ud55c \uacbd\uc6b0 \uba54\ubaa8\ub9ac \ub0ad\ube44\n"})}),"\n",(0,o.jsx)(s.h3,{id:"\ud328\ud134-3-api\ubcc4-\ucd5c\uc801\ud654",children:"\ud328\ud134 3: API\ubcc4 \ucd5c\uc801\ud654"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import selectinload, joinedload\n\n# API 1: \uc0ac\uc6a9\uc790 \ubaa9\ub85d (\ud3ec\uc2a4\ud2b8 \uc218\ub9cc \ud544\uc694)\ndef get_users_list(session: Session):\n    stmt = select(\n        User.id,\n        User.username,\n        func.count(Post.id).label('post_count')\n    ).outerjoin(Post)\\\n     .group_by(User.id, User.username)\n\n    return session.execute(stmt).all()\n\n# API 2: \uc0ac\uc6a9\uc790 \uc0c1\uc138 (\ubaa8\ub4e0 \uad00\uacc4 \ud544\uc694)\ndef get_user_detail(session: Session, user_id: int):\n    stmt = select(User)\\\n        .where(User.id == user_id)\\\n        .options(\n            selectinload(User.posts).selectinload(Post.comments),\n            selectinload(User.comments),\n            joinedload(User.profile)\n        )\n\n    return session.execute(stmt).scalar_one()\n\n# API 3: \ud3ec\uc2a4\ud2b8 \ubaa9\ub85d (\uc791\uc131\uc790\ub9cc \ud544\uc694)\ndef get_posts_list(session: Session):\n    stmt = select(Post).options(joinedload(Post.author))\n\n    return session.execute(stmt).scalars().unique().all()\n"})}),"\n",(0,o.jsx)(s.h3,{id:"\ud328\ud134-4-\ud398\uc774\uc9c0\ub124\uc774\uc158--eager-loading",children:"\ud328\ud134 4: \ud398\uc774\uc9c0\ub124\uc774\uc158 + Eager Loading"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy import select\nfrom sqlalchemy.orm import selectinload\n\ndef get_posts_page(\n    session: Session,\n    page: int = 1,\n    per_page: int = 10\n):\n    \"\"\"\ud398\uc774\uc9d5 + Eager Loading\"\"\"\n    stmt = select(Post)\\\n        .options(\n            joinedload(Post.author),\n            selectinload(Post.tags),\n            selectinload(Post.comments).joinedload(Comment.author)\n        )\\\n        .order_by(Post.created_at.desc())\\\n        .limit(per_page)\\\n        .offset((page - 1) * per_page)\n\n    posts = session.execute(stmt).scalars().unique().all()\n\n    # \ucd1d \uac1c\uc218 (\ubcc4\ub3c4 \ucffc\ub9ac)\n    count_stmt = select(func.count(Post.id))\n    total = session.execute(count_stmt).scalar()\n\n    return {\n        'posts': posts,\n        'total': total,\n        'page': page,\n        'per_page': per_page,\n        'total_pages': (total + per_page - 1) // per_page\n    }\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-\uc131\ub2a5-\uce21\uc815",children:"\ud83d\udcca \uc131\ub2a5 \uce21\uc815"}),"\n",(0,o.jsx)(s.h3,{id:"\ucffc\ub9ac-\uc218-\ud655\uc778",children:"\ucffc\ub9ac \uc218 \ud655\uc778"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"import logging\n\n# SQL \ub85c\uae45 \ud65c\uc131\ud654\nlogging.basicConfig()\nlogging.getLogger('sqlalchemy.engine').setLevel(logging.INFO)\n\nwith Session(engine) as session:\n    # \ubaa8\ub4e0 SQL \ucffc\ub9ac\uac00 \ucd9c\ub825\ub428\n    users = session.execute(select(User)).scalars().all()\n    for user in users:\n        print(user.posts)  # \ucffc\ub9ac \ud655\uc778 \uac00\ub2a5\n"})}),"\n",(0,o.jsx)(s.h3,{id:"\uc131\ub2a5-\ube44\uad50",children:"\uc131\ub2a5 \ube44\uad50"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:'import time\nfrom sqlalchemy.orm import selectinload\n\n# \u274c Lazy Loading\nstart = time.time()\nwith Session(engine) as session:\n    users = session.execute(select(User)).scalars().all()\n    for user in users:\n        for post in user.posts:\n            pass\nlazy_time = time.time() - start\nprint(f"Lazy Loading: {lazy_time:.3f}s")\n\n# \u2705 Eager Loading\nstart = time.time()\nwith Session(engine) as session:\n    stmt = select(User).options(selectinload(User.posts))\n    users = session.execute(stmt).scalars().all()\n    for user in users:\n        for post in user.posts:\n            pass\neager_time = time.time() - start\nprint(f"Eager Loading: {eager_time:.3f}s")\n\nprint(f"\uc18d\ub3c4 \ud5a5\uc0c1: {lazy_time / eager_time:.1f}\ubc30")\n'})}),"\n",(0,o.jsx)(s.h2,{id:"-\uc2e4\uc804-\uc608\uc81c-\ube14\ub85c\uadf8-\ud3ec\uc2a4\ud2b8-\uc870\ud68c",children:"\ud83c\udfaf \uc2e4\uc804 \uc608\uc81c: \ube14\ub85c\uadf8 \ud3ec\uc2a4\ud2b8 \uc870\ud68c"}),"\n",(0,o.jsx)(s.h3,{id:"\ub098\uc05c-\uc608-n1-\ubb38\uc81c",children:"\ub098\uc05c \uc608 (N+1 \ubb38\uc81c)"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u274c N+1 \ucffc\ub9ac \ubc1c\uc0dd\ndef get_posts_bad(session: Session):\n    posts = session.execute(select(Post)).scalars().all()\n\n    results = []\n    for post in posts:\n        results.append({\n            'title': post.title,\n            'author': post.author.username,  # \ucffc\ub9ac!\n            'comment_count': len(post.comments),  # \ucffc\ub9ac!\n            'tags': [tag.name for tag in post.tags]  # \ucffc\ub9ac!\n        })\n\n    return results\n\n# \ud3ec\uc2a4\ud2b8 100\uac1c \u2192 301\uac1c \ucffc\ub9ac! (1 + 100 + 100 + 100)\n"})}),"\n",(0,o.jsx)(s.h3,{id:"\uc88b\uc740-\uc608-eager-loading",children:"\uc88b\uc740 \uc608 (Eager Loading)"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 4\uac1c \ucffc\ub9ac\ub85c \ucd5c\uc801\ud654\ndef get_posts_good(session: Session):\n    stmt = select(Post).options(\n        joinedload(Post.author),  # JOIN (\uac19\uc740 \ucffc\ub9ac)\n        selectinload(Post.comments),  # +1 \ucffc\ub9ac\n        selectinload(Post.tags)  # +1 \ucffc\ub9ac\n    )\n\n    posts = session.execute(stmt).scalars().unique().all()\n\n    results = []\n    for post in posts:\n        results.append({\n            'title': post.title,\n            'author': post.author.username,  # \ucffc\ub9ac \uc5c6\uc74c!\n            'comment_count': len(post.comments),  # \ucffc\ub9ac \uc5c6\uc74c!\n            'tags': [tag.name for tag in post.tags]  # \ucffc\ub9ac \uc5c6\uc74c!\n        })\n\n    return results\n\n# \ud3ec\uc2a4\ud2b8 100\uac1c \u2192 3\uac1c \ucffc\ub9ac! (Post+Author JOIN + Comments + Tags)\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-\ud504\ub85c-\ud301",children:"\ud83d\udca1 \ud504\ub85c \ud301"}),"\n",(0,o.jsx)(s.h3,{id:"1-\uae30\ubcf8\uc740-lazy-\ud544\uc694\uc2dc-eager",children:"1. \uae30\ubcf8\uc740 Lazy, \ud544\uc694\uc2dc Eager"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 \uae30\ubcf8 \ud328\ud134\nclass User(Base):\n    posts: Mapped[list[\"Post\"]] = relationship()  # lazy='select'\n\n# \ud544\uc694\ud55c \uacf3\uc5d0\uc11c\ub9cc\nstmt = select(User).options(selectinload(User.posts))\n"})}),"\n",(0,o.jsx)(s.h3,{id:"2-one-to-many\ub294-selectinload",children:"2. One-to-Many\ub294 selectinload"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 One-to-Many\nstmt = select(User).options(selectinload(User.posts))\n\n# \u274c joinedload\ub294 \uc911\ubcf5 \ud589 \ubc1c\uc0dd\nstmt = select(User).options(joinedload(User.posts))  # \ube44\ud6a8\uc728\uc801\n"})}),"\n",(0,o.jsx)(s.h3,{id:"3-one-to-one\uc740-joinedload",children:"3. One-to-One\uc740 joinedload"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 One-to-One\nstmt = select(User).options(joinedload(User.profile))\n\n# \u26a0\ufe0f selectinload\ub3c4 \uac00\ub2a5\ud558\uc9c0\ub9cc \ucffc\ub9ac 2\uac1c\nstmt = select(User).options(selectinload(User.profile))\n"})}),"\n",(0,o.jsx)(s.h3,{id:"4-\uac1c\ubc1c-\uc911-raiseload-\ud65c\uc6a9",children:"4. \uac1c\ubc1c \uc911 raiseload \ud65c\uc6a9"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import raiseload\n\n# \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c N+1 \ud0d0\uc9c0\nif DEBUG:\n    stmt = select(User).options(raiseload('*'))\n    users = session.execute(stmt).scalars().all()\n    for user in users:\n        print(user.posts)  # InvalidRequestError \ubc1c\uc0dd!\n"})}),"\n",(0,o.jsx)(s.h3,{id:"5-\ubcf5\uc7a1\ud55c-\uacbd\uc6b0-\uba85\uc2dc\uc801-join",children:"5. \ubcf5\uc7a1\ud55c \uacbd\uc6b0 \uba85\uc2dc\uc801 JOIN"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-python",children:"# \u2705 \ubcf5\uc7a1\ud55c \uc870\uac74 + Eager Loading\nstmt = select(User)\\\n    .join(Post)\\\n    .where(Post.is_published == True)\\\n    .options(contains_eager(User.posts))\\\n    .distinct()\n"})}),"\n",(0,o.jsx)(s.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"./relationships",children:"\uad00\uacc4(Relationship) \uc815\uc758"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"./queries",children:"\ucffc\ub9ac \uc791\uc131"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"../advanced/performance",children:"\uc131\ub2a5 \ucd5c\uc801\ud654"})}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,o.jsx)(s.p,{children:"\ub85c\ub529 \uc804\ub7b5\uc744 \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c \uc138\uc158 \uad00\ub9ac\ub97c \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,o.jsxs)(s.p,{children:["\ud83d\udc49 ",(0,o.jsx)(s.a,{href:"./sessions",children:"\uc138\uc158 \uad00\ub9ac"})]}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"\ud83d\udca1 \ud301"}),": N+1 \ucffc\ub9ac \ubb38\uc81c\ub294 SQLAlchemy\uc758 \uac00\uc7a5 \ud754\ud55c \uc131\ub2a5 \ubb38\uc81c\uc785\ub2c8\ub2e4. SQL \ub85c\uae45\uc744 \ud65c\uc131\ud654\ud558\uc5ec \ucffc\ub9ac \uc218\ub97c \ud56d\uc0c1 \ud655\uc778\ud558\uc138\uc694!"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>r});var l=n(6540);const o={},i=l.createContext(o);function t(e){const s=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),l.createElement(i.Provider,{value:s},e.children)}}}]);