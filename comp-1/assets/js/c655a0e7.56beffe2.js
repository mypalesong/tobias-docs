"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9133],{4174:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"oauth/intermediate/google-oauth","title":"Google OAuth \ud1b5\ud569","description":"FastAPI\uc5d0\uc11c Google OAuth 2.0 / OIDC\ub97c \uc644\ubcbd\ud558\uac8c \ud1b5\ud569\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/oauth/intermediate/google-oauth.md","sourceDirName":"oauth/intermediate","slug":"/oauth/intermediate/google-oauth","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/google-oauth","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/oauth/intermediate/google-oauth.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"oauthSidebar","previous":{"title":"FastAPI OAuth \uae30\ucd08","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/fastapi-basics"},"next":{"title":"GitHub OAuth \ud1b5\ud569","permalink":"/tobias-docs/comp-1/docs/oauth/intermediate/github-oauth"}}');var o=t(4848),i=t(8453);const a={sidebar_position:2},r="Google OAuth \ud1b5\ud569",l={},c=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\ude80 Google Cloud Console \uc124\uc815",id:"-google-cloud-console-\uc124\uc815",level:2},{value:"1. \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131",id:"1-\ud504\ub85c\uc81d\ud2b8-\uc0dd\uc131",level:3},{value:"2. OAuth \ub3d9\uc758 \ud654\uba74 \uc124\uc815",id:"2-oauth-\ub3d9\uc758-\ud654\uba74-\uc124\uc815",level:3},{value:"3. OAuth \ud074\ub77c\uc774\uc5b8\ud2b8 ID \uc0dd\uc131",id:"3-oauth-\ud074\ub77c\uc774\uc5b8\ud2b8-id-\uc0dd\uc131",level:3},{value:"4. Client ID &amp; Secret \uc800\uc7a5",id:"4-client-id--secret-\uc800\uc7a5",level:3},{value:"\ud83d\udce6 \uc124\uce58",id:"-\uc124\uce58",level:2},{value:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604",id:"-\uae30\ubcf8-\uad6c\ud604",level:2},{value:"\uc804\uccb4 \ucf54\ub4dc (main.py)",id:"\uc804\uccb4-\ucf54\ub4dc-mainpy",level:3},{value:"\ud83d\udd0d \uc0c1\uc138 \uc124\uba85",id:"-\uc0c1\uc138-\uc124\uba85",level:2},{value:"1. Discovery Document",id:"1-discovery-document",level:3},{value:"2. \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30",id:"2-\uc0ac\uc6a9\uc790-\uc815\ubcf4-\uac00\uc838\uc624\uae30",level:3},{value:"3. Scopes (\uad8c\ud55c \ubc94\uc704)",id:"3-scopes-\uad8c\ud55c-\ubc94\uc704",level:3},{value:"\ud83c\udfa8 Google API \ud65c\uc6a9",id:"-google-api-\ud65c\uc6a9",level:2},{value:"Google Calendar API",id:"google-calendar-api",level:3},{value:"Google Drive API",id:"google-drive-api",level:3},{value:"Gmail API",id:"gmail-api",level:3},{value:"\ud83d\udd04 Refresh Token",id:"-refresh-token",level:2},{value:"\uc790\ub3d9 \ud1a0\ud070 \uac31\uc2e0",id:"\uc790\ub3d9-\ud1a0\ud070-\uac31\uc2e0",level:3},{value:"\ud83d\udee1\ufe0f \ubcf4\uc548 \uac15\ud654",id:"\ufe0f-\ubcf4\uc548-\uac15\ud654",level:2},{value:"1. PKCE \uc801\uc6a9",id:"1-pkce-\uc801\uc6a9",level:3},{value:"2. State \uac80\uc99d (Authlib \uc790\ub3d9 \ucc98\ub9ac)",id:"2-state-\uac80\uc99d-authlib-\uc790\ub3d9-\ucc98\ub9ac",level:3},{value:"3. ID Token \uac80\uc99d",id:"3-id-token-\uac80\uc99d",level:3},{value:"\ud83d\udcca \uc0ac\uc6a9\uc790 DB \uc800\uc7a5",id:"-\uc0ac\uc6a9\uc790-db-\uc800\uc7a5",level:2},{value:"SQLAlchemy \uc5f0\ub3d9",id:"sqlalchemy-\uc5f0\ub3d9",level:3},{value:"\ud83d\ude80 \ud504\ub85c\ub355\uc158 \ubc30\ud3ec",id:"-\ud504\ub85c\ub355\uc158-\ubc30\ud3ec",level:2},{value:"\ud658\uacbd\ubcc0\uc218 \uc124\uc815",id:"\ud658\uacbd\ubcc0\uc218-\uc124\uc815",level:3},{value:"HTTPS \ud544\uc218",id:"https-\ud544\uc218",level:3},{value:"\ub3c4\uba54\uc778 \uac80\uc99d",id:"\ub3c4\uba54\uc778-\uac80\uc99d",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"google-oauth-\ud1b5\ud569",children:"Google OAuth \ud1b5\ud569"})}),"\n",(0,o.jsx)(n.p,{children:"FastAPI\uc5d0\uc11c Google OAuth 2.0 / OIDC\ub97c \uc644\ubcbd\ud558\uac8c \ud1b5\ud569\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u2705 Google Cloud Console \uc124\uc815"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Google OAuth \uad6c\ud604"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 Google API \ud65c\uc6a9"}),"\n",(0,o.jsx)(n.li,{children:"\u2705 \ud504\ub85c\ub355\uc158 \ubc30\ud3ec"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-google-cloud-console-\uc124\uc815",children:"\ud83d\ude80 Google Cloud Console \uc124\uc815"}),"\n",(0,o.jsx)(n.h3,{id:"1-\ud504\ub85c\uc81d\ud2b8-\uc0dd\uc131",children:"1. \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://console.cloud.google.com/",children:"Google Cloud Console"})," \uc811\uc18d"]}),"\n",(0,o.jsx)(n.li,{children:"\uc0c8 \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131"}),"\n",(0,o.jsxs)(n.li,{children:["\ud504\ub85c\uc81d\ud2b8 \uc774\ub984: ",(0,o.jsx)(n.code,{children:"my-fastapi-oauth-app"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-oauth-\ub3d9\uc758-\ud654\uba74-\uc124\uc815",children:"2. OAuth \ub3d9\uc758 \ud654\uba74 \uc124\uc815"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"APIs & Services > OAuth consent screen"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# \uc0ac\uc6a9\uc790 \uc720\ud615\nUser Type: External  # \ub204\uad6c\ub098 \ub85c\uadf8\uc778 \uac00\ub2a5\n\n# \uc571 \uc815\ubcf4\nApp name: My FastAPI App\nUser support email: your-email@example.com\nDeveloper contact email: your-email@example.com\n\n# \ubc94\uc704 (Scopes)\nScopes:\n  - .../auth/userinfo.email\n  - .../auth/userinfo.profile\n  - openid\n\n# \ud14c\uc2a4\ud2b8 \uc0ac\uc6a9\uc790 (\uac1c\ubc1c \uc911)\nTest users:\n  - test1@example.com\n  - test2@example.com\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-oauth-\ud074\ub77c\uc774\uc5b8\ud2b8-id-\uc0dd\uc131",children:"3. OAuth \ud074\ub77c\uc774\uc5b8\ud2b8 ID \uc0dd\uc131"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"APIs & Services > Credentials > Create Credentials > OAuth client ID"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"Application type: Web application\n\nName: FastAPI OAuth Client\n\n# \uc2b9\uc778\ub41c JavaScript \uc6d0\ubcf8\nAuthorized JavaScript origins:\n  - http://localhost:8000\n  - https://yourdomain.com\n\n# \uc2b9\uc778\ub41c \ub9ac\ub514\ub809\uc158 URI\nAuthorized redirect URIs:\n  - http://localhost:8000/auth/google\n  - https://yourdomain.com/auth/google\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-client-id--secret-\uc800\uc7a5",children:"4. Client ID & Secret \uc800\uc7a5"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# \uc0dd\uc131 \ud6c4 \ud45c\uc2dc\ub418\ub294 \uc815\ubcf4\ub97c .env\uc5d0 \uc800\uc7a5\n\n# .env\nGOOGLE_CLIENT_ID=123456789012-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com\nGOOGLE_CLIENT_SECRET=GOCSPX-AbCdEfGhIjKlMnOpQrStUvWxYz\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-\uc124\uce58",children:"\ud83d\udce6 \uc124\uce58"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install fastapi uvicorn\npip install authlib httpx\npip install python-dotenv\npip install itsdangerous  # \uc138\uc158 \uad00\ub9ac\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-\uae30\ubcf8-\uad6c\ud604",children:"\ud83d\udd27 \uae30\ubcf8 \uad6c\ud604"}),"\n",(0,o.jsx)(n.h3,{id:"\uc804\uccb4-\ucf54\ub4dc-mainpy",children:"\uc804\uccb4 \ucf54\ub4dc (main.py)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from fastapi import FastAPI, Request, HTTPException\nfrom fastapi.responses import RedirectResponse, HTMLResponse\nfrom starlette.middleware.sessions import SessionMiddleware\nfrom authlib.integrations.starlette_client import OAuth\nfrom starlette.config import Config\nimport httpx\n\n# \ud658\uacbd\ubcc0\uc218 \ub85c\ub4dc\nconfig = Config('.env')\n\n# FastAPI \uc571\napp = FastAPI(title=\"Google OAuth Example\")\n\n# \uc138\uc158 \ubbf8\ub4e4\uc6e8\uc5b4\napp.add_middleware(\n    SessionMiddleware,\n    secret_key=config('SECRET_KEY', default='super-secret-key')\n)\n\n# OAuth \uc124\uc815\noauth = OAuth(config)\n\noauth.register(\n    name='google',\n    client_id=config('GOOGLE_CLIENT_ID'),\n    client_secret=config('GOOGLE_CLIENT_SECRET'),\n    server_metadata_url='https://accounts.google.com/.well-known/openid-configuration',\n    client_kwargs={\n        'scope': 'openid email profile'\n    }\n)\n\n# ==================== \ub77c\uc6b0\ud2b8 ====================\n\n@app.get('/', response_class=HTMLResponse)\nasync def home(request: Request):\n    \"\"\"\ud648\ud398\uc774\uc9c0\"\"\"\n    user = request.session.get('user')\n\n    if user:\n        return f\"\"\"\n        <html>\n            <body>\n                <h1>\ud658\uc601\ud569\ub2c8\ub2e4, {user['name']}\ub2d8!</h1>\n                <img src=\"{user['picture']}\" alt=\"\ud504\ub85c\ud544\" width=\"100\">\n                <p>\uc774\uba54\uc77c: {user['email']}</p>\n                <a href=\"/logout\">\ub85c\uadf8\uc544\uc6c3</a>\n                <br><br>\n                <a href=\"/profile\">\ub0b4 \ud504\ub85c\ud544</a>\n                <a href=\"/api/calendar\">\uce98\ub9b0\ub354 \uc774\ubca4\ud2b8</a>\n            </body>\n        </html>\n        \"\"\"\n    else:\n        return \"\"\"\n        <html>\n            <body>\n                <h1>Google OAuth \uc608\uc81c</h1>\n                <a href=\"/login\">Google\ub85c \ub85c\uadf8\uc778</a>\n            </body>\n        </html>\n        \"\"\"\n\n@app.get('/login')\nasync def login(request: Request):\n    \"\"\"Google \ub85c\uadf8\uc778 \uc2dc\uc791\"\"\"\n    redirect_uri = request.url_for('auth')\n    return await oauth.google.authorize_redirect(request, redirect_uri)\n\n@app.get('/auth')\nasync def auth(request: Request):\n    \"\"\"Google OAuth \ucf5c\ubc31\"\"\"\n    try:\n        # Access Token \ubc1b\uae30\n        token = await oauth.google.authorize_access_token(request)\n\n        # \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30\n        user = token.get('userinfo')\n\n        if not user:\n            raise HTTPException(status_code=400, detail=\"Failed to get user info\")\n\n        # \uc138\uc158\uc5d0 \uc800\uc7a5\n        request.session['user'] = {\n            'sub': user['sub'],\n            'email': user['email'],\n            'name': user['name'],\n            'picture': user.get('picture'),\n            'email_verified': user.get('email_verified')\n        }\n\n        # \ud1a0\ud070 \uc800\uc7a5\n        request.session['tokens'] = {\n            'access_token': token['access_token'],\n            'refresh_token': token.get('refresh_token'),\n            'id_token': token.get('id_token'),\n            'expires_in': token.get('expires_in')\n        }\n\n        return RedirectResponse(url='/')\n\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@app.get('/logout')\nasync def logout(request: Request):\n    \"\"\"\ub85c\uadf8\uc544\uc6c3\"\"\"\n    request.session.clear()\n    return RedirectResponse(url='/')\n\n@app.get('/profile')\nasync def profile(request: Request):\n    \"\"\"\uc0ac\uc6a9\uc790 \ud504\ub85c\ud544\"\"\"\n    user = request.session.get('user')\n\n    if not user:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n\n    return user\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-\uc0c1\uc138-\uc124\uba85",children:"\ud83d\udd0d \uc0c1\uc138 \uc124\uba85"}),"\n",(0,o.jsx)(n.h3,{id:"1-discovery-document",children:"1. Discovery Document"}),"\n",(0,o.jsx)(n.p,{children:"Google\uc740 OIDC Discovery Document\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"# Discovery Document URL\ndiscovery_url = \"https://accounts.google.com/.well-known/openid-configuration\"\n\n# Authlib\ub294 \uc774 URL\ub85c \ubaa8\ub4e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc790\ub3d9 \uc124\uc815\noauth.register(\n    name='google',\n    server_metadata_url=discovery_url,  # \uc790\ub3d9 \uc124\uc815!\n    # authorization_endpoint, token_endpoint \ub4f1 \uc790\ub3d9\uc73c\ub85c \uac00\uc838\uc634\n)\n\n# \uc218\ub3d9 \uc124\uc815 (\uad8c\uc7a5 \uc548 \ud568)\noauth.register(\n    name='google',\n    authorize_url='https://accounts.google.com/o/oauth2/v2/auth',\n    access_token_url='https://oauth2.googleapis.com/token',\n    userinfo_endpoint='https://openidconnect.googleapis.com/v1/userinfo',\n    # ...\n)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-\uc0ac\uc6a9\uc790-\uc815\ubcf4-\uac00\uc838\uc624\uae30",children:"2. \uc0ac\uc6a9\uc790 \uc815\ubcf4 \uac00\uc838\uc624\uae30"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# \ubc29\ubc95 1: ID Token\uc5d0\uc11c (\uad8c\uc7a5)\ntoken = await oauth.google.authorize_access_token(request)\nuser = token.get(\'userinfo\')  # Authlib\uac00 \uc790\ub3d9\uc73c\ub85c ID Token \ud30c\uc2f1\n\n# ID Token\uc5d0 \ud3ec\ud568\ub41c \uc815\ubcf4\nid_token_claims = {\n    "iss": "https://accounts.google.com",\n    "sub": "10769150350006150715113082367",  # \uc0ac\uc6a9\uc790 \uace0\uc720 ID\n    "aud": "your-client-id",\n    "exp": 1701234567,\n    "iat": 1701230967,\n    "email": "alice@example.com",\n    "email_verified": True,\n    "name": "Alice Smith",\n    "picture": "https://lh3.googleusercontent.com/...",\n    "given_name": "Alice",\n    "family_name": "Smith",\n    "locale": "en"\n}\n\n# \ubc29\ubc95 2: UserInfo Endpoint (\ucd94\uac00 \uc815\ubcf4 \ud544\uc694 \uc2dc)\nasync with httpx.AsyncClient() as client:\n    response = await client.get(\n        \'https://openidconnect.googleapis.com/v1/userinfo\',\n        headers={\'Authorization\': f\'Bearer {token["access_token"]}\'}\n    )\n    userinfo = response.json()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-scopes-\uad8c\ud55c-\ubc94\uc704",children:"3. Scopes (\uad8c\ud55c \ubc94\uc704)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# \uae30\ubcf8 OIDC Scopes\nbasic_scopes = {\n    "openid": "\ud544\uc218 - OIDC \ud65c\uc131\ud654",\n    "email": "\uc774\uba54\uc77c \uc8fc\uc18c",\n    "profile": "\ud504\ub85c\ud544 \uc815\ubcf4 (name, picture)"\n}\n\n# Google API Scopes\ngoogle_api_scopes = {\n    "https://www.googleapis.com/auth/calendar.readonly": "\uce98\ub9b0\ub354 \uc77d\uae30",\n    "https://www.googleapis.com/auth/calendar": "\uce98\ub9b0\ub354 \uc77d\uae30/\uc4f0\uae30",\n    "https://www.googleapis.com/auth/drive.file": "Drive \ud30c\uc77c \uc811\uadfc",\n    "https://www.googleapis.com/auth/gmail.readonly": "Gmail \uc77d\uae30",\n    "https://www.googleapis.com/auth/photoslibrary.readonly": "Photos \uc77d\uae30"\n}\n\n# \uc0ac\uc6a9 \uc608\noauth.register(\n    name=\'google\',\n    client_kwargs={\n        \'scope\': \'openid email profile https://www.googleapis.com/auth/calendar.readonly\'\n    }\n)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"-google-api-\ud65c\uc6a9",children:"\ud83c\udfa8 Google API \ud65c\uc6a9"}),"\n",(0,o.jsx)(n.h3,{id:"google-calendar-api",children:"Google Calendar API"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"@app.get('/api/calendar')\nasync def get_calendar_events(request: Request):\n    \"\"\"Google Calendar \uc774\ubca4\ud2b8 \uac00\uc838\uc624\uae30\"\"\"\n\n    # \uc778\uc99d \ud655\uc778\n    user = request.session.get('user')\n    if not user:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n\n    # Access Token \uac00\uc838\uc624\uae30\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401, detail=\"No tokens\")\n\n    access_token = tokens['access_token']\n\n    # Calendar API \ud638\ucd9c\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://www.googleapis.com/calendar/v3/calendars/primary/events',\n            headers={'Authorization': f'Bearer {access_token}'},\n            params={\n                'maxResults': 10,\n                'orderBy': 'startTime',\n                'singleEvents': True,\n                'timeMin': datetime.now().isoformat() + 'Z'\n            }\n        )\n\n        if response.status_code != 200:\n            raise HTTPException(\n                status_code=response.status_code,\n                detail=\"Failed to fetch calendar events\"\n            )\n\n        return response.json()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"google-drive-api",children:"Google Drive API"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"@app.get('/api/drive/files')\nasync def get_drive_files(request: Request):\n    \"\"\"Google Drive \ud30c\uc77c \ubaa9\ub85d\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401)\n\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://www.googleapis.com/drive/v3/files',\n            headers={'Authorization': f'Bearer {tokens[\"access_token\"]}'},\n            params={\n                'pageSize': 10,\n                'fields': 'files(id, name, mimeType, createdTime)'\n            }\n        )\n\n        return response.json()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"gmail-api",children:"Gmail API"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"@app.get('/api/gmail/messages')\nasync def get_gmail_messages(request: Request):\n    \"\"\"Gmail \uba54\uc2dc\uc9c0 \ubaa9\ub85d\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401)\n\n    async with httpx.AsyncClient() as client:\n        response = await client.get(\n            'https://gmail.googleapis.com/gmail/v1/users/me/messages',\n            headers={'Authorization': f'Bearer {tokens[\"access_token\"]}'},\n            params={'maxResults': 10}\n        )\n\n        return response.json()\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-refresh-token",children:"\ud83d\udd04 Refresh Token"}),"\n",(0,o.jsx)(n.h3,{id:"\uc790\ub3d9-\ud1a0\ud070-\uac31\uc2e0",children:"\uc790\ub3d9 \ud1a0\ud070 \uac31\uc2e0"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from datetime import datetime, timedelta\n\nasync def refresh_access_token(request: Request):\n    \"\"\"Access Token \uac31\uc2e0\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens or 'refresh_token' not in tokens:\n        raise HTTPException(status_code=401, detail=\"No refresh token\")\n\n    async with httpx.AsyncClient() as client:\n        response = await client.post(\n            'https://oauth2.googleapis.com/token',\n            data={\n                'grant_type': 'refresh_token',\n                'refresh_token': tokens['refresh_token'],\n                'client_id': GOOGLE_CLIENT_ID,\n                'client_secret': GOOGLE_CLIENT_SECRET\n            }\n        )\n\n        if response.status_code != 200:\n            raise HTTPException(status_code=401, detail=\"Failed to refresh token\")\n\n        new_token = response.json()\n\n        # \uc138\uc158 \uc5c5\ub370\uc774\ud2b8\n        tokens['access_token'] = new_token['access_token']\n        tokens['expires_in'] = new_token['expires_in']\n        request.session['tokens'] = tokens\n\n        return new_token['access_token']\n\n# Dependency\ub85c \uc0ac\uc6a9\nasync def get_valid_access_token(request: Request) -> str:\n    \"\"\"\uc720\ud6a8\ud55c Access Token \ubc18\ud658 (\ud544\uc694 \uc2dc \uc790\ub3d9 \uac31\uc2e0)\"\"\"\n\n    tokens = request.session.get('tokens')\n    if not tokens:\n        raise HTTPException(status_code=401, detail=\"Not authenticated\")\n\n    # \ub9cc\ub8cc \ud655\uc778 (\uc2e4\uc81c\ub85c\ub294 expires_at \uc800\uc7a5 \ud544\uc694)\n    # \uc5ec\uae30\uc11c\ub294 \ub2e8\uc21c\ud654\n\n    return tokens['access_token']\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-\ubcf4\uc548-\uac15\ud654",children:"\ud83d\udee1\ufe0f \ubcf4\uc548 \uac15\ud654"}),"\n",(0,o.jsx)(n.h3,{id:"1-pkce-\uc801\uc6a9",children:"1. PKCE \uc801\uc6a9"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import hashlib\nimport base64\nimport secrets\n\n@app.get('/login')\nasync def login(request: Request):\n    \"\"\"PKCE\uc640 \ud568\uaed8 \ub85c\uadf8\uc778\"\"\"\n\n    # Code Verifier \uc0dd\uc131\n    code_verifier = secrets.token_urlsafe(32)\n    request.session['code_verifier'] = code_verifier\n\n    # Code Challenge \uc0dd\uc131\n    code_challenge = base64.urlsafe_b64encode(\n        hashlib.sha256(code_verifier.encode()).digest()\n    ).decode().rstrip('=')\n\n    # Redirect URI\n    redirect_uri = request.url_for('auth')\n\n    # PKCE \ud30c\ub77c\ubbf8\ud130 \ud3ec\ud568\n    return await oauth.google.authorize_redirect(\n        request,\n        redirect_uri,\n        code_challenge=code_challenge,\n        code_challenge_method='S256'\n    )\n\n@app.get('/auth')\nasync def auth(request: Request):\n    \"\"\"PKCE \uac80\uc99d\uacfc \ud568\uaed8 \ucf5c\ubc31\"\"\"\n\n    code_verifier = request.session.pop('code_verifier', None)\n    if not code_verifier:\n        raise HTTPException(status_code=400, detail=\"Missing code verifier\")\n\n    # Token \uc694\uccad (code_verifier \ud3ec\ud568)\n    token = await oauth.google.authorize_access_token(\n        request,\n        code_verifier=code_verifier\n    )\n\n    # ... \ub098\uba38\uc9c0 \ucc98\ub9ac\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-state-\uac80\uc99d-authlib-\uc790\ub3d9-\ucc98\ub9ac",children:"2. State \uac80\uc99d (Authlib \uc790\ub3d9 \ucc98\ub9ac)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"# Authlib\ub294 \uae30\ubcf8\uc801\uc73c\ub85c state parameter\ub97c \uc790\ub3d9 \uc0dd\uc131/\uac80\uc99d\n# SessionMiddleware \ud544\uc218!\n\n# \uc218\ub3d9 \uac80\uc99d (\ud544\uc694 \uc2dc)\nimport secrets\n\n@app.get('/login')\nasync def login(request: Request):\n    # State \uc0dd\uc131\n    state = secrets.token_urlsafe(32)\n    request.session['oauth_state'] = state\n\n    return await oauth.google.authorize_redirect(\n        request,\n        request.url_for('auth'),\n        state=state\n    )\n\n@app.get('/auth')\nasync def auth(request: Request):\n    # State \uac80\uc99d\n    state = request.query_params.get('state')\n    saved_state = request.session.pop('oauth_state', None)\n\n    if state != saved_state:\n        raise HTTPException(status_code=400, detail=\"Invalid state\")\n\n    # ... Token \uad50\ud658\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-id-token-\uac80\uc99d",children:"3. ID Token \uac80\uc99d"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from jose import jwt, JWTError\n\nasync def verify_id_token(id_token: str, client_id: str):\n    \"\"\"ID Token \uac80\uc99d\"\"\"\n\n    try:\n        # Google \uacf5\uac1c \ud0a4 \uac00\uc838\uc624\uae30\n        async with httpx.AsyncClient() as client:\n            response = await client.get(\n                'https://www.googleapis.com/oauth2/v3/certs'\n            )\n            jwks = response.json()\n\n        # JWT \uac80\uc99d\n        payload = jwt.decode(\n            id_token,\n            jwks,\n            algorithms=['RS256'],\n            audience=client_id,\n            issuer='https://accounts.google.com'\n        )\n\n        # \ucd94\uac00 \uac80\uc99d\n        assert payload['aud'] == client_id\n        assert payload['iss'] == 'https://accounts.google.com'\n        assert payload['exp'] > datetime.now().timestamp()\n\n        return payload\n\n    except JWTError as e:\n        raise HTTPException(status_code=401, detail=f\"Invalid ID token: {e}\")\n\n# Authlib\ub294 \uc790\ub3d9\uc73c\ub85c ID Token \uac80\uc99d \uc218\ud589\n# \uc218\ub3d9 \uac80\uc99d\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\ub9cc \uc704 \ud568\uc218 \uc0ac\uc6a9\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-\uc0ac\uc6a9\uc790-db-\uc800\uc7a5",children:"\ud83d\udcca \uc0ac\uc6a9\uc790 DB \uc800\uc7a5"}),"\n",(0,o.jsx)(n.h3,{id:"sqlalchemy-\uc5f0\ub3d9",children:"SQLAlchemy \uc5f0\ub3d9"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from sqlalchemy import create_engine, Column, Integer, String, DateTime, Boolean\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\nfrom datetime import datetime\n\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    google_sub = Column(String(255), unique=True, nullable=False)\n    email = Column(String(255), nullable=False)\n    name = Column(String(255))\n    picture = Column(String(500))\n    email_verified = Column(Boolean, default=False)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    last_login = Column(DateTime, default=datetime.utcnow)\n\n# DB \uc5f0\uacb0\nengine = create_engine('sqlite:///./users.db')\nBase.metadata.create_all(engine)\nSessionLocal = sessionmaker(bind=engine)\n\n@app.get('/auth')\nasync def auth(request: Request):\n    \"\"\"OAuth \ucf5c\ubc31 + DB \uc800\uc7a5\"\"\"\n\n    token = await oauth.google.authorize_access_token(request)\n    userinfo = token.get('userinfo')\n\n    # DB \uc138\uc158\n    db = SessionLocal()\n\n    try:\n        # \uc0ac\uc6a9\uc790 \ucc3e\uae30 \ub610\ub294 \uc0dd\uc131\n        user = db.query(User).filter_by(google_sub=userinfo['sub']).first()\n\n        if user:\n            # \uae30\uc874 \uc0ac\uc6a9\uc790 \uc5c5\ub370\uc774\ud2b8\n            user.email = userinfo['email']\n            user.name = userinfo['name']\n            user.picture = userinfo.get('picture')\n            user.last_login = datetime.utcnow()\n        else:\n            # \uc0c8 \uc0ac\uc6a9\uc790 \uc0dd\uc131\n            user = User(\n                google_sub=userinfo['sub'],\n                email=userinfo['email'],\n                name=userinfo['name'],\n                picture=userinfo.get('picture'),\n                email_verified=userinfo.get('email_verified', False)\n            )\n            db.add(user)\n\n        db.commit()\n\n        # \uc138\uc158\uc5d0 \uc800\uc7a5\n        request.session['user_id'] = user.id\n\n        return RedirectResponse(url='/')\n\n    finally:\n        db.close()\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-\ud504\ub85c\ub355\uc158-\ubc30\ud3ec",children:"\ud83d\ude80 \ud504\ub85c\ub355\uc158 \ubc30\ud3ec"}),"\n",(0,o.jsx)(n.h3,{id:"\ud658\uacbd\ubcc0\uc218-\uc124\uc815",children:"\ud658\uacbd\ubcc0\uc218 \uc124\uc815"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# \ud504\ub85c\ub355\uc158 \ud658\uacbd\ubcc0\uc218\nexport GOOGLE_CLIENT_ID="your-production-client-id"\nexport GOOGLE_CLIENT_SECRET="your-production-client-secret"\nexport SECRET_KEY="$(openssl rand -hex 32)"\nexport BASE_URL="https://yourdomain.com"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"https-\ud544\uc218",children:"HTTPS \ud544\uc218"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"# \ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 HTTPS \ud544\uc218\napp.add_middleware(\n    SessionMiddleware,\n    secret_key=os.getenv('SECRET_KEY'),\n    https_only=True,  # HTTPS\ub9cc\n    same_site='lax'\n)\n\n# Redirect URI\ub3c4 HTTPS\n# https://yourdomain.com/auth/google\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\ub3c4\uba54\uc778-\uac80\uc99d",children:"\ub3c4\uba54\uc778 \uac80\uc99d"}),"\n",(0,o.jsx)(n.p,{children:"Google Cloud Console\uc5d0\uc11c \ud504\ub85c\ub355\uc158 \ub3c4\uba54\uc778 \ucd94\uac00:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"Authorized redirect URIs:\n  - https://yourdomain.com/auth/google\n  - https://api.yourdomain.com/auth/google\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"./fastapi-basics",children:"FastAPI OAuth \uae30\ucd08"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"./github-oauth",children:"GitHub OAuth \ud1b5\ud569"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"./jwt-tokens",children:"JWT \ud1a0\ud070 \ucc98\ub9ac"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"../advanced/security",children:"\ubcf4\uc548 Best Practices"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,o.jsx)(n.p,{children:"Google OAuth\ub97c \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c GitHub OAuth\ub3c4 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,o.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,o.jsx)(n.a,{href:"./github-oauth",children:"GitHub OAuth \ud1b5\ud569"})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": Google\uc740 OIDC\ub97c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ud558\ubbc0\ub85c Discovery Document\ub97c \ud65c\uc6a9\ud558\uba74 \uc124\uc815\uc774 \ub9e4\uc6b0 \uac04\ub2e8\ud569\ub2c8\ub2e4!"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(6540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);