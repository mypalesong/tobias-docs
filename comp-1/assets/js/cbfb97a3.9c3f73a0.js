"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[2092],{6316:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>l,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"sqlalchemy/scenarios/ecommerce","title":"\uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uacc4","description":"\uc2e4\uc81c \uc1fc\ud551\ubab0\uc758 \uc644\uc804\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ucc98\uc74c\ubd80\ud130 \uc124\uacc4\ud558\uace0 \uad6c\ud604\ud569\ub2c8\ub2e4.","source":"@site/docs/sqlalchemy/scenarios/ecommerce.md","sourceDirName":"sqlalchemy/scenarios","slug":"/sqlalchemy/scenarios/ecommerce","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/scenarios/ecommerce","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sqlalchemy/scenarios/ecommerce.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"sqlalchemySidebar","previous":{"title":"\uc2e4\uc804\ud3b8 \uc18c\uac1c","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/scenarios/intro"},"next":{"title":"FastAPI + SQLAlchemy \ud1b5\ud569","permalink":"/tobias-docs/comp-1/docs/sqlalchemy/scenarios/fastapi-integration"}}');var t=a(4848),i=a(8453);const d={sidebar_position:2},s="\uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uacc4",o={},c=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udcca \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2a4\ud0a4\ub9c8",id:"-\ub370\uc774\ud130\ubca0\uc774\uc2a4-\uc2a4\ud0a4\ub9c8",level:2},{value:"ER \ub2e4\uc774\uc5b4\uadf8\ub7a8",id:"er-\ub2e4\uc774\uc5b4\uadf8\ub7a8",level:3},{value:"\ud83d\udd27 \ubaa8\ub378 \uc815\uc758",id:"-\ubaa8\ub378-\uc815\uc758",level:2},{value:"\uae30\ubcf8 Mixin",id:"\uae30\ubcf8-mixin",level:3},{value:"User \ubaa8\ub378",id:"user-\ubaa8\ub378",level:3},{value:"Address \ubaa8\ub378",id:"address-\ubaa8\ub378",level:3},{value:"Category \ubaa8\ub378",id:"category-\ubaa8\ub378",level:3},{value:"Product \ubaa8\ub378",id:"product-\ubaa8\ub378",level:3},{value:"ProductCategory (Association Table)",id:"productcategory-association-table",level:3},{value:"ProductImage \ubaa8\ub378",id:"productimage-\ubaa8\ub378",level:3},{value:"ProductVariant \ubaa8\ub378",id:"productvariant-\ubaa8\ub378",level:3},{value:"Order \ubaa8\ub378",id:"order-\ubaa8\ub378",level:3},{value:"OrderItem \ubaa8\ub378",id:"orderitem-\ubaa8\ub378",level:3},{value:"CartItem \ubaa8\ub378",id:"cartitem-\ubaa8\ub378",level:3},{value:"Review \ubaa8\ub378",id:"review-\ubaa8\ub378",level:3},{value:"\ud83d\udee0\ufe0f \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1",id:"\ufe0f-\ube44\uc988\ub2c8\uc2a4-\ub85c\uc9c1",level:2},{value:"\uc7ac\uace0 \uad00\ub9ac Service",id:"\uc7ac\uace0-\uad00\ub9ac-service",level:3},{value:"\uc8fc\ubb38 \ucc98\ub9ac Service",id:"\uc8fc\ubb38-\ucc98\ub9ac-service",level:3},{value:"\ud83d\udcca \ud1b5\uacc4 \ucffc\ub9ac",id:"-\ud1b5\uacc4-\ucffc\ub9ac",level:2},{value:"\uc778\uae30 \uc0c1\ud488",id:"\uc778\uae30-\uc0c1\ud488",level:3},{value:"\uc0ac\uc6a9\uc790\ubcc4 \uc8fc\ubb38 \ud1b5\uacc4",id:"\uc0ac\uc6a9\uc790\ubcc4-\uc8fc\ubb38-\ud1b5\uacc4",level:3},{value:"\ud83d\udca1 \ud504\ub85c \ud301",id:"-\ud504\ub85c-\ud301",level:2},{value:"1. \uc7ac\uace0 \ub3d9\uc2dc\uc131 \uc81c\uc5b4",id:"1-\uc7ac\uace0-\ub3d9\uc2dc\uc131-\uc81c\uc5b4",level:3},{value:"2. \uc8fc\ubb38 \uc815\ubcf4 \uc2a4\ub0c5\uc0f7",id:"2-\uc8fc\ubb38-\uc815\ubcf4-\uc2a4\ub0c5\uc0f7",level:3},{value:"3. \uc778\ub371\uc2a4 \ucd5c\uc801\ud654",id:"3-\uc778\ub371\uc2a4-\ucd5c\uc801\ud654",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\uc804\uc790\uc0c1\uac70\ub798-\ub370\uc774\ud130\ubca0\uc774\uc2a4-\uc124\uacc4",children:"\uc804\uc790\uc0c1\uac70\ub798 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uacc4"})}),"\n",(0,t.jsx)(n.p,{children:"\uc2e4\uc81c \uc1fc\ud551\ubab0\uc758 \uc644\uc804\ud55c \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ucc98\uc74c\ubd80\ud130 \uc124\uacc4\ud558\uace0 \uad6c\ud604\ud569\ub2c8\ub2e4."}),"\n",(0,t.jsx)(n.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 \uc644\uc804\ud55c E-Commerce \uc2a4\ud0a4\ub9c8 \uc124\uacc4"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 \ubcf5\uc7a1\ud55c \uad00\uacc4 \ubaa8\ub378\ub9c1"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 \uc7ac\uace0 \uad00\ub9ac \uc2dc\uc2a4\ud15c"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 \uc8fc\ubb38 \ucc98\ub9ac \ud50c\ub85c\uc6b0"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 \uc131\ub2a5 \ucd5c\uc801\ud654"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ub370\uc774\ud130\ubca0\uc774\uc2a4-\uc2a4\ud0a4\ub9c8",children:"\ud83d\udcca \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2a4\ud0a4\ub9c8"}),"\n",(0,t.jsx)(n.h3,{id:"er-\ub2e4\uc774\uc5b4\uadf8\ub7a8",children:"ER \ub2e4\uc774\uc5b4\uadf8\ub7a8"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Users \u2500\u2500\u2500\u2500< Orders \u2500\u2500\u2500\u2500< OrderItems >\u2500\u2500\u2500\u2500 Products\n  \u2502                                          \u2502\n  \u2514\u2500< Addresses                              \u251c\u2500< ProductImages\n  \u2514\u2500< Reviews                                \u251c\u2500< ProductVariants\n  \u2514\u2500< CartItems >\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2518\n                                             \u2502\n                                        Categories\n                                             \u2502\n                                        ProductCategories\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\ubaa8\ub378-\uc815\uc758",children:"\ud83d\udd27 \ubaa8\ub378 \uc815\uc758"}),"\n",(0,t.jsx)(n.h3,{id:"\uae30\ubcf8-mixin",children:"\uae30\ubcf8 Mixin"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import uuid\nfrom datetime import datetime\nfrom sqlalchemy import DateTime, func\nfrom sqlalchemy.dialects.postgresql import UUID\nfrom sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column\n\nclass Base(DeclarativeBase):\n    pass\n\nclass TimestampMixin:\n    """\uc0dd\uc131/\uc218\uc815 \uc2dc\uac04 \uc790\ub3d9 \uad00\ub9ac"""\n    created_at: Mapped[datetime] = mapped_column(\n        DateTime(timezone=True),\n        server_default=func.now()\n    )\n    updated_at: Mapped[datetime] = mapped_column(\n        DateTime(timezone=True),\n        server_default=func.now(),\n        onupdate=func.now()\n    )\n\nclass UUIDMixin:\n    """UUID Primary Key"""\n    id: Mapped[uuid.UUID] = mapped_column(\n        UUID(as_uuid=True),\n        primary_key=True,\n        default=uuid.uuid4\n    )\n'})}),"\n",(0,t.jsx)(n.h3,{id:"user-\ubaa8\ub378",children:"User \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from sqlalchemy import String, Boolean\nfrom sqlalchemy.orm import Mapped, mapped_column, relationship\n\nclass User(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = \'users\'\n\n    # \uae30\ubcf8 \uc815\ubcf4\n    email: Mapped[str] = mapped_column(String(255), unique=True, index=True)\n    username: Mapped[str] = mapped_column(String(50), unique=True, index=True)\n    password_hash: Mapped[str] = mapped_column(String(255))\n\n    # \ud504\ub85c\ud544\n    first_name: Mapped[str | None] = mapped_column(String(50))\n    last_name: Mapped[str | None] = mapped_column(String(50))\n    phone: Mapped[str | None] = mapped_column(String(20))\n\n    # \uc0c1\ud0dc\n    is_active: Mapped[bool] = mapped_column(Boolean, default=True)\n    is_verified: Mapped[bool] = mapped_column(Boolean, default=False)\n    is_admin: Mapped[bool] = mapped_column(Boolean, default=False)\n\n    # \uad00\uacc4\n    addresses: Mapped[list["Address"]] = relationship(\n        back_populates="user",\n        cascade="all, delete-orphan"\n    )\n    orders: Mapped[list["Order"]] = relationship(\n        back_populates="user",\n        cascade="all, delete-orphan"\n    )\n    cart_items: Mapped[list["CartItem"]] = relationship(\n        back_populates="user",\n        cascade="all, delete-orphan"\n    )\n    reviews: Mapped[list["Review"]] = relationship(\n        back_populates="user",\n        cascade="all, delete-orphan"\n    )\n\n    __table_args__ = (\n        Index(\'idx_user_email_active\', \'email\', \'is_active\'),\n    )\n'})}),"\n",(0,t.jsx)(n.h3,{id:"address-\ubaa8\ub378",children:"Address \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Address(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'addresses'\n\n    user_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('users.id'))\n\n    # \uc8fc\uc18c \uc815\ubcf4\n    full_name: Mapped[str] = mapped_column(String(100))\n    phone: Mapped[str] = mapped_column(String(20))\n    address_line1: Mapped[str] = mapped_column(String(255))\n    address_line2: Mapped[str | None] = mapped_column(String(255))\n    city: Mapped[str] = mapped_column(String(100))\n    state: Mapped[str] = mapped_column(String(100))\n    postal_code: Mapped[str] = mapped_column(String(20))\n    country: Mapped[str] = mapped_column(String(2))  # ISO 3166-1 alpha-2\n\n    # \ud50c\ub798\uadf8\n    is_default: Mapped[bool] = mapped_column(Boolean, default=False)\n\n    # \uad00\uacc4\n    user: Mapped[\"User\"] = relationship(back_populates=\"addresses\")\n"})}),"\n",(0,t.jsx)(n.h3,{id:"category-\ubaa8\ub378",children:"Category \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class Category(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = \'categories\'\n\n    name: Mapped[str] = mapped_column(String(100), unique=True)\n    slug: Mapped[str] = mapped_column(String(100), unique=True, index=True)\n    description: Mapped[str | None] = mapped_column(Text)\n\n    # \uacc4\uce35 \uad6c\uc870 (Self-referential)\n    parent_id: Mapped[uuid.UUID | None] = mapped_column(ForeignKey(\'categories.id\'))\n\n    # \uad00\uacc4\n    parent: Mapped["Category | None"] = relationship(\n        back_populates="children",\n        remote_side="Category.id"\n    )\n    children: Mapped[list["Category"]] = relationship(\n        back_populates="parent",\n        cascade="all, delete-orphan"\n    )\n    products: Mapped[list["Product"]] = relationship(\n        secondary="product_categories",\n        back_populates="categories"\n    )\n'})}),"\n",(0,t.jsx)(n.h3,{id:"product-\ubaa8\ub378",children:"Product \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from decimal import Decimal\nfrom sqlalchemy import Numeric, Integer, Text, CheckConstraint\nfrom sqlalchemy.dialects.postgresql import JSONB, ARRAY\n\nclass Product(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'products'\n\n    # \uae30\ubcf8 \uc815\ubcf4\n    name: Mapped[str] = mapped_column(String(255), index=True)\n    slug: Mapped[str] = mapped_column(String(255), unique=True, index=True)\n    description: Mapped[str] = mapped_column(Text)\n    short_description: Mapped[str | None] = mapped_column(String(500))\n\n    # \uac00\uaca9 (\uc815\ud655\ud55c \uae08\uc561)\n    price: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n    compare_at_price: Mapped[Decimal | None] = mapped_column(Numeric(10, 2))\n    cost: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n\n    # \uc7ac\uace0\n    stock: Mapped[int] = mapped_column(Integer, default=0)\n    low_stock_threshold: Mapped[int] = mapped_column(Integer, default=10)\n\n    # SKU\n    sku: Mapped[str] = mapped_column(String(100), unique=True, index=True)\n\n    # \uc0c1\ud0dc\n    is_active: Mapped[bool] = mapped_column(Boolean, default=True)\n    is_featured: Mapped[bool] = mapped_column(Boolean, default=False)\n\n    # PostgreSQL \ud2b9\ud654 \ud0c0\uc785\n    tags: Mapped[list[str]] = mapped_column(ARRAY(String(50)), default=list)\n    specifications: Mapped[dict] = mapped_column(JSONB, default=dict)\n\n    # \uad00\uacc4\n    categories: Mapped[list[\"Category\"]] = relationship(\n        secondary=\"product_categories\",\n        back_populates=\"products\"\n    )\n    images: Mapped[list[\"ProductImage\"]] = relationship(\n        back_populates=\"product\",\n        cascade=\"all, delete-orphan\"\n    )\n    variants: Mapped[list[\"ProductVariant\"]] = relationship(\n        back_populates=\"product\",\n        cascade=\"all, delete-orphan\"\n    )\n    reviews: Mapped[list[\"Review\"]] = relationship(\n        back_populates=\"product\",\n        cascade=\"all, delete-orphan\"\n    )\n\n    __table_args__ = (\n        CheckConstraint('price > 0', name='check_price_positive'),\n        CheckConstraint('cost >= 0', name='check_cost_non_negative'),\n        CheckConstraint('stock >= 0', name='check_stock_non_negative'),\n        Index('idx_product_active_featured', 'is_active', 'is_featured'),\n        Index('idx_product_price', 'price'),\n        Index('idx_product_tags', 'tags', postgresql_using='gin'),\n    )\n"})}),"\n",(0,t.jsx)(n.h3,{id:"productcategory-association-table",children:"ProductCategory (Association Table)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"product_categories = Table(\n    'product_categories',\n    Base.metadata,\n    Column('product_id', UUID(as_uuid=True), ForeignKey('products.id'), primary_key=True),\n    Column('category_id', UUID(as_uuid=True), ForeignKey('categories.id'), primary_key=True),\n    Column('created_at', DateTime(timezone=True), server_default=func.now())\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"productimage-\ubaa8\ub378",children:"ProductImage \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class ProductImage(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'product_images'\n\n    product_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('products.id'))\n\n    url: Mapped[str] = mapped_column(String(500))\n    alt_text: Mapped[str | None] = mapped_column(String(255))\n    position: Mapped[int] = mapped_column(Integer, default=0)\n    is_primary: Mapped[bool] = mapped_column(Boolean, default=False)\n\n    # \uad00\uacc4\n    product: Mapped[\"Product\"] = relationship(back_populates=\"images\")\n\n    __table_args__ = (\n        Index('idx_product_images_product', 'product_id', 'position'),\n    )\n"})}),"\n",(0,t.jsx)(n.h3,{id:"productvariant-\ubaa8\ub378",children:"ProductVariant \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class ProductVariant(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = \'product_variants\'\n\n    product_id: Mapped[uuid.UUID] = mapped_column(ForeignKey(\'products.id\'))\n\n    # \ubcc0\ud615 \uc815\ubcf4\n    name: Mapped[str] = mapped_column(String(100))  # "Size: Large, Color: Red"\n    sku: Mapped[str] = mapped_column(String(100), unique=True, index=True)\n\n    # \uac00\uaca9/\uc7ac\uace0\n    price: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n    stock: Mapped[int] = mapped_column(Integer, default=0)\n\n    # \uc635\uc158 (JSONB)\n    options: Mapped[dict] = mapped_column(JSONB)  # {"size": "L", "color": "red"}\n\n    # \uad00\uacc4\n    product: Mapped["Product"] = relationship(back_populates="variants")\n\n    __table_args__ = (\n        CheckConstraint(\'price > 0\', name=\'check_variant_price_positive\'),\n        CheckConstraint(\'stock >= 0\', name=\'check_variant_stock_non_negative\'),\n    )\n'})}),"\n",(0,t.jsx)(n.h3,{id:"order-\ubaa8\ub378",children:"Order \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Order(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'orders'\n\n    user_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('users.id'))\n\n    # \uc8fc\ubb38 \ubc88\ud638\n    order_number: Mapped[str] = mapped_column(String(50), unique=True, index=True)\n\n    # \uc0c1\ud0dc\n    status: Mapped[str] = mapped_column(\n        String(20),\n        default='pending',\n        index=True\n    )  # pending, paid, processing, shipped, delivered, cancelled\n\n    # \uae08\uc561\n    subtotal: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n    shipping_cost: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n    tax: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n    total: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n\n    # \ubc30\uc1a1 \uc8fc\uc18c (\uc2a4\ub0c5\uc0f7)\n    shipping_address: Mapped[dict] = mapped_column(JSONB)\n\n    # \uacb0\uc81c \uc815\ubcf4\n    payment_method: Mapped[str | None] = mapped_column(String(50))\n    payment_id: Mapped[str | None] = mapped_column(String(255))\n    paid_at: Mapped[datetime | None] = mapped_column(DateTime(timezone=True))\n\n    # \ubc30\uc1a1 \uc815\ubcf4\n    shipped_at: Mapped[datetime | None] = mapped_column(DateTime(timezone=True))\n    delivered_at: Mapped[datetime | None] = mapped_column(DateTime(timezone=True))\n    tracking_number: Mapped[str | None] = mapped_column(String(100))\n\n    # \uad00\uacc4\n    user: Mapped[\"User\"] = relationship(back_populates=\"orders\")\n    items: Mapped[list[\"OrderItem\"]] = relationship(\n        back_populates=\"order\",\n        cascade=\"all, delete-orphan\"\n    )\n\n    __table_args__ = (\n        CheckConstraint('total >= 0', name='check_total_non_negative'),\n        Index('idx_order_user_status', 'user_id', 'status'),\n        Index('idx_order_created', 'created_at'),\n    )\n"})}),"\n",(0,t.jsx)(n.h3,{id:"orderitem-\ubaa8\ub378",children:"OrderItem \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class OrderItem(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'order_items'\n\n    order_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('orders.id'))\n    product_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('products.id'))\n    variant_id: Mapped[uuid.UUID | None] = mapped_column(ForeignKey('product_variants.id'))\n\n    # \uc8fc\ubb38 \uc2dc\uc810\uc758 \uc815\ubcf4 (\uc2a4\ub0c5\uc0f7)\n    product_name: Mapped[str] = mapped_column(String(255))\n    variant_name: Mapped[str | None] = mapped_column(String(100))\n    price: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n\n    # \uc218\ub7c9\n    quantity: Mapped[int] = mapped_column(Integer)\n\n    # \uc18c\uacc4\n    subtotal: Mapped[Decimal] = mapped_column(Numeric(10, 2))\n\n    # \uad00\uacc4\n    order: Mapped[\"Order\"] = relationship(back_populates=\"items\")\n    product: Mapped[\"Product\"] = relationship()\n    variant: Mapped[\"ProductVariant | None\"] = relationship()\n\n    __table_args__ = (\n        CheckConstraint('quantity > 0', name='check_quantity_positive'),\n        CheckConstraint('price > 0', name='check_item_price_positive'),\n    )\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cartitem-\ubaa8\ub378",children:"CartItem \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class CartItem(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'cart_items'\n\n    user_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('users.id'))\n    product_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('products.id'))\n    variant_id: Mapped[uuid.UUID | None] = mapped_column(ForeignKey('product_variants.id'))\n\n    quantity: Mapped[int] = mapped_column(Integer, default=1)\n\n    # \uad00\uacc4\n    user: Mapped[\"User\"] = relationship(back_populates=\"cart_items\")\n    product: Mapped[\"Product\"] = relationship()\n    variant: Mapped[\"ProductVariant | None\"] = relationship()\n\n    __table_args__ = (\n        CheckConstraint('quantity > 0', name='check_cart_quantity_positive'),\n        # \uac19\uc740 \uc81c\ud488/\ubcc0\ud615\uc740 \ud558\ub098\uc758 \uc7a5\ubc14\uad6c\ub2c8 \uc544\uc774\ud15c\n        UniqueConstraint('user_id', 'product_id', 'variant_id', name='uq_cart_item'),\n        Index('idx_cart_user', 'user_id'),\n    )\n"})}),"\n",(0,t.jsx)(n.h3,{id:"review-\ubaa8\ub378",children:"Review \ubaa8\ub378"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Review(UUIDMixin, TimestampMixin, Base):\n    __tablename__ = 'reviews'\n\n    user_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('users.id'))\n    product_id: Mapped[uuid.UUID] = mapped_column(ForeignKey('products.id'))\n\n    rating: Mapped[int] = mapped_column(Integer)  # 1-5\n    title: Mapped[str] = mapped_column(String(200))\n    content: Mapped[str] = mapped_column(Text)\n\n    # \uac80\uc99d \uad6c\ub9e4\n    is_verified_purchase: Mapped[bool] = mapped_column(Boolean, default=False)\n\n    # \uad00\uacc4\n    user: Mapped[\"User\"] = relationship(back_populates=\"reviews\")\n    product: Mapped[\"Product\"] = relationship(back_populates=\"reviews\")\n\n    __table_args__ = (\n        CheckConstraint('rating >= 1 AND rating <= 5', name='check_rating_range'),\n        # \ud55c \uc0ac\uc6a9\uc790\ub294 \uac19\uc740 \uc81c\ud488\uc5d0 \ud558\ub098\uc758 \ub9ac\ubdf0\n        UniqueConstraint('user_id', 'product_id', name='uq_user_product_review'),\n        Index('idx_review_product_rating', 'product_id', 'rating'),\n    )\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-\ube44\uc988\ub2c8\uc2a4-\ub85c\uc9c1",children:"\ud83d\udee0\ufe0f \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1"}),"\n",(0,t.jsx)(n.h3,{id:"\uc7ac\uace0-\uad00\ub9ac-service",children:"\uc7ac\uace0 \uad00\ub9ac Service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from sqlalchemy import select\nfrom sqlalchemy.orm import Session\n\nclass InventoryService:\n    def __init__(self, session: Session):\n        self.session = session\n\n    def reserve_stock(self, product_id: uuid.UUID, quantity: int) -> bool:\n        """\uc7ac\uace0 \uc608\uc57d (\ub3d9\uc2dc\uc131 \uc81c\uc5b4)"""\n        stmt = select(Product)\\\n            .where(Product.id == product_id)\\\n            .with_for_update()\n\n        product = self.session.execute(stmt).scalar_one()\n\n        if product.stock >= quantity:\n            product.stock -= quantity\n            self.session.flush()\n            return True\n\n        return False\n\n    def release_stock(self, product_id: uuid.UUID, quantity: int):\n        """\uc7ac\uace0 \ud574\uc81c"""\n        stmt = select(Product)\\\n            .where(Product.id == product_id)\\\n            .with_for_update()\n\n        product = self.session.execute(stmt).scalar_one()\n        product.stock += quantity\n        self.session.flush()\n\n    def check_low_stock(self) -> list[Product]:\n        """\uc7ac\uace0 \ubd80\uc871 \uc81c\ud488 \uc870\ud68c"""\n        stmt = select(Product).where(\n            Product.stock <= Product.low_stock_threshold,\n            Product.is_active == True\n        )\n        return self.session.execute(stmt).scalars().all()\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\uc8fc\ubb38-\ucc98\ub9ac-service",children:"\uc8fc\ubb38 \ucc98\ub9ac Service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import secrets\nfrom decimal import Decimal\n\nclass OrderService:\n    def __init__(self, session: Session):\n        self.session = session\n        self.inventory = InventoryService(session)\n\n    def create_order(self, user_id: uuid.UUID, cart_items: list[CartItem], address_id: uuid.UUID) -> Order:\n        \"\"\"\uc8fc\ubb38 \uc0dd\uc131\"\"\"\n        # \uc8fc\ubb38 \ubc88\ud638 \uc0dd\uc131\n        order_number = self._generate_order_number()\n\n        # \ubc30\uc1a1 \uc8fc\uc18c \uc870\ud68c\n        address = self.session.get(Address, address_id)\n        if not address or address.user_id != user_id:\n            raise ValueError(\"Invalid address\")\n\n        # \uc8fc\ubb38 \uc0dd\uc131\n        order = Order(\n            user_id=user_id,\n            order_number=order_number,\n            status='pending',\n            shipping_address={\n                'full_name': address.full_name,\n                'phone': address.phone,\n                'address_line1': address.address_line1,\n                'address_line2': address.address_line2,\n                'city': address.city,\n                'state': address.state,\n                'postal_code': address.postal_code,\n                'country': address.country,\n            }\n        )\n\n        subtotal = Decimal('0')\n\n        # \uc8fc\ubb38 \uc544\uc774\ud15c \uc0dd\uc131\n        for cart_item in cart_items:\n            # \uc7ac\uace0 \ud655\uc778 \ubc0f \uc608\uc57d\n            product = cart_item.variant or cart_item.product\n\n            if not self.inventory.reserve_stock(product.id, cart_item.quantity):\n                raise ValueError(f\"Insufficient stock for {product.name}\")\n\n            # \uc8fc\ubb38 \uc544\uc774\ud15c \uc0dd\uc131\n            order_item = OrderItem(\n                order=order,\n                product_id=cart_item.product_id,\n                variant_id=cart_item.variant_id,\n                product_name=cart_item.product.name,\n                variant_name=cart_item.variant.name if cart_item.variant else None,\n                price=product.price,\n                quantity=cart_item.quantity,\n                subtotal=product.price * cart_item.quantity\n            )\n\n            self.session.add(order_item)\n            subtotal += order_item.subtotal\n\n        # \uae08\uc561 \uacc4\uc0b0\n        shipping_cost = self._calculate_shipping(subtotal)\n        tax = self._calculate_tax(subtotal)\n        total = subtotal + shipping_cost + tax\n\n        order.subtotal = subtotal\n        order.shipping_cost = shipping_cost\n        order.tax = tax\n        order.total = total\n\n        self.session.add(order)\n        self.session.flush()\n\n        # \uc7a5\ubc14\uad6c\ub2c8 \ube44\uc6b0\uae30\n        for cart_item in cart_items:\n            self.session.delete(cart_item)\n\n        return order\n\n    def cancel_order(self, order_id: uuid.UUID) -> Order:\n        \"\"\"\uc8fc\ubb38 \ucde8\uc18c\"\"\"\n        order = self.session.get(Order, order_id)\n\n        if order.status not in ['pending', 'paid']:\n            raise ValueError(\"Cannot cancel order in current status\")\n\n        # \uc7ac\uace0 \ubcf5\uc6d0\n        for item in order.items:\n            product = item.variant or item.product\n            self.inventory.release_stock(product.id, item.quantity)\n\n        order.status = 'cancelled'\n        self.session.flush()\n\n        return order\n\n    def _generate_order_number(self) -> str:\n        \"\"\"\uc8fc\ubb38 \ubc88\ud638 \uc0dd\uc131\"\"\"\n        timestamp = datetime.now().strftime('%Y%m%d')\n        random_suffix = secrets.token_hex(4).upper()\n        return f\"ORD-{timestamp}-{random_suffix}\"\n\n    def _calculate_shipping(self, subtotal: Decimal) -> Decimal:\n        \"\"\"\ubc30\uc1a1\ube44 \uacc4\uc0b0\"\"\"\n        if subtotal >= Decimal('50'):\n            return Decimal('0')  # \ubb34\ub8cc \ubc30\uc1a1\n        return Decimal('5.99')\n\n    def _calculate_tax(self, subtotal: Decimal) -> Decimal:\n        \"\"\"\uc138\uae08 \uacc4\uc0b0 (10%)\"\"\"\n        return (subtotal * Decimal('0.1')).quantize(Decimal('0.01'))\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\ud1b5\uacc4-\ucffc\ub9ac",children:"\ud83d\udcca \ud1b5\uacc4 \ucffc\ub9ac"}),"\n",(0,t.jsx)(n.h3,{id:"\uc778\uae30-\uc0c1\ud488",children:"\uc778\uae30 \uc0c1\ud488"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def get_popular_products(session: Session, limit: int = 10):\n    \"\"\"\ud310\ub9e4\ub7c9 \uae30\uc900 \uc778\uae30 \uc0c1\ud488\"\"\"\n    stmt = select(\n        Product.id,\n        Product.name,\n        func.sum(OrderItem.quantity).label('total_sold'),\n        func.count(func.distinct(Order.id)).label('order_count')\n    ).join(OrderItem)\\\n     .join(Order)\\\n     .where(Order.status.in_(['paid', 'processing', 'shipped', 'delivered']))\\\n     .group_by(Product.id, Product.name)\\\n     .order_by(func.desc('total_sold'))\\\n     .limit(limit)\n\n    return session.execute(stmt).all()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\uc0ac\uc6a9\uc790\ubcc4-\uc8fc\ubb38-\ud1b5\uacc4",children:"\uc0ac\uc6a9\uc790\ubcc4 \uc8fc\ubb38 \ud1b5\uacc4"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def get_user_order_stats(session: Session, user_id: uuid.UUID):\n    \"\"\"\uc0ac\uc6a9\uc790 \uc8fc\ubb38 \ud1b5\uacc4\"\"\"\n    stmt = select(\n        func.count(Order.id).label('total_orders'),\n        func.sum(Order.total).label('total_spent'),\n        func.avg(Order.total).label('avg_order_value'),\n        func.max(Order.created_at).label('last_order_date')\n    ).where(\n        Order.user_id == user_id,\n        Order.status != 'cancelled'\n    )\n\n    return session.execute(stmt).first()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\ud504\ub85c-\ud301",children:"\ud83d\udca1 \ud504\ub85c \ud301"}),"\n",(0,t.jsx)(n.h3,{id:"1-\uc7ac\uace0-\ub3d9\uc2dc\uc131-\uc81c\uc5b4",children:"1. \uc7ac\uace0 \ub3d9\uc2dc\uc131 \uc81c\uc5b4"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \u2705 FOR UPDATE \uc0ac\uc6a9\nstmt = select(Product).where(Product.id == product_id).with_for_update()\nproduct = session.execute(stmt).scalar_one()\n\n# \u274c \uc7a0\uae08 \uc5c6\uc774 \uc7ac\uace0 \ucc28\uac10 (Race Condition)\nproduct = session.get(Product, product_id)\nproduct.stock -= quantity\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-\uc8fc\ubb38-\uc815\ubcf4-\uc2a4\ub0c5\uc0f7",children:"2. \uc8fc\ubb38 \uc815\ubcf4 \uc2a4\ub0c5\uc0f7"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \u2705 \uc8fc\ubb38 \uc2dc\uc810\uc758 \uc815\ubcf4 \uc800\uc7a5\norder_item = OrderItem(\n    product_name=product.name,  # \uc2a4\ub0c5\uc0f7\n    price=product.price,  # \uc2a4\ub0c5\uc0f7\n    quantity=quantity\n)\n\n# \u274c \uc678\ub798 \ud0a4\ub9cc \uc800\uc7a5 (\uc81c\ud488\uba85/\uac00\uaca9\uc774 \ubcc0\uacbd\ub420 \uc218 \uc788\uc74c)\norder_item = OrderItem(\n    product_id=product.id,\n    quantity=quantity\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-\uc778\ub371\uc2a4-\ucd5c\uc801\ud654",children:"3. \uc778\ub371\uc2a4 \ucd5c\uc801\ud654"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# \uc790\uc8fc \uc0ac\uc6a9\ud558\ub294 \ucffc\ub9ac\uc5d0 \ub9de\ub294 \uc778\ub371\uc2a4\nIndex('idx_product_active_featured', 'is_active', 'is_featured')\nIndex('idx_order_user_status', 'user_id', 'status')\nIndex('idx_order_created', 'created_at')\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../intermediate/relationships",children:"\uad00\uacc4(Relationship) \uc815\uc758"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../advanced/performance",children:"\uc131\ub2a5 \ucd5c\uc801\ud654"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../advanced/transactions",children:"\ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,t.jsx)(n.p,{children:"E-Commerce \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uacc4\ub97c \ub9c8\uc2a4\ud130\ud588\ub2e4\uba74, \uc774\uc81c FastAPI\uc640 \ud1b5\ud569\ud574\ubd05\uc2dc\ub2e4!"}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,t.jsx)(n.a,{href:"./fastapi-integration",children:"FastAPI \ud1b5\ud569"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udca1 \ud301"}),": \uc2e4\uc81c \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uc774 \uad6c\uc870\ub97c \uae30\ubc18\uc73c\ub85c \ube44\uc988\ub2c8\uc2a4 \uc694\uad6c\uc0ac\ud56d\uc5d0 \ub9de\uac8c \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uc138\uc694!"]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>s});var r=a(6540);const t={},i=r.createContext(t);function d(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);