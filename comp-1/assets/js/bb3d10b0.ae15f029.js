"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[1251],{4456:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"sqlalchemy/intermediate/sessions","title":"\uc138\uc158 \uad00\ub9ac","description":"SQLAlchemy \uc138\uc158\uc758 \uc0dd\uba85\uc8fc\uae30\ub97c \uc774\ud574\ud558\uace0 \ud2b8\ub79c\uc7ad\uc158\uc744 \uc62c\ubc14\ub974\uac8c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4.","source":"@site/docs/sqlalchemy/intermediate/sessions.md","sourceDirName":"sqlalchemy/intermediate","slug":"/sqlalchemy/intermediate/sessions","permalink":"/docs/sqlalchemy/intermediate/sessions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sqlalchemy/intermediate/sessions.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"sqlalchemySidebar","previous":{"title":"Join\uacfc \ub85c\ub529 \uc804\ub7b5","permalink":"/docs/sqlalchemy/intermediate/joins"},"next":{"title":"\uc2e4\uc804\ud3b8 \uc18c\uac1c","permalink":"/docs/sqlalchemy/scenarios/intro"}}');var r=n(4848),o=n(8453);const l={sidebar_position:5},a="\uc138\uc158 \uad00\ub9ac",t={},d=[{value:"\ud83c\udfaf \ubaa9\ud45c",id:"-\ubaa9\ud45c",level:2},{value:"\ud83d\udcd6 Session\uc774\ub780?",id:"-session\uc774\ub780",level:2},{value:"Session\uc758 \uc5ed\ud560",id:"session\uc758-\uc5ed\ud560",level:3},{value:"\ud83d\udd27 Session \uc0dd\uc131 \ubc29\ubc95",id:"-session-\uc0dd\uc131-\ubc29\ubc95",level:2},{value:"\ubc29\ubc95 1: \uc9c1\uc811 \uc0dd\uc131 (\uac04\ub2e8\ud55c \uc2a4\ud06c\ub9bd\ud2b8)",id:"\ubc29\ubc95-1-\uc9c1\uc811-\uc0dd\uc131-\uac04\ub2e8\ud55c-\uc2a4\ud06c\ub9bd\ud2b8",level:3},{value:"\ubc29\ubc95 2: sessionmaker (\uc560\ud50c\ub9ac\ucf00\uc774\uc158)",id:"\ubc29\ubc95-2-sessionmaker-\uc560\ud50c\ub9ac\ucf00\uc774\uc158",level:3},{value:"\ubc29\ubc95 3: scoped_session (\uba40\ud2f0\uc2a4\ub808\ub4dc)",id:"\ubc29\ubc95-3-scoped_session-\uba40\ud2f0\uc2a4\ub808\ub4dc",level:3},{value:"\ud83d\udd04 Session \uc0dd\uba85\uc8fc\uae30",id:"-session-\uc0dd\uba85\uc8fc\uae30",level:2},{value:"Session \uc0c1\ud0dc",id:"session-\uc0c1\ud0dc",level:3},{value:"\uc0c1\ud0dc \ud655\uc778",id:"\uc0c1\ud0dc-\ud655\uc778",level:3},{value:"\ud83d\udcbe \ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac",id:"-\ud2b8\ub79c\uc7ad\uc158-\uad00\ub9ac",level:2},{value:"\uae30\ubcf8 \ud328\ud134",id:"\uae30\ubcf8-\ud328\ud134",level:3},{value:"begin() \uc0ac\uc6a9",id:"begin-\uc0ac\uc6a9",level:3},{value:"\uba85\uc2dc\uc801 \ud2b8\ub79c\uc7ad\uc158",id:"\uba85\uc2dc\uc801-\ud2b8\ub79c\uc7ad\uc158",level:3},{value:"\ud83d\udd01 flush() vs commit()",id:"-flush-vs-commit",level:2},{value:"flush() - DB \ubc18\uc601, \ud2b8\ub79c\uc7ad\uc158 \uc720\uc9c0",id:"flush---db-\ubc18\uc601-\ud2b8\ub79c\uc7ad\uc158-\uc720\uc9c0",level:3},{value:"commit() - \ud2b8\ub79c\uc7ad\uc158 \uc644\ub8cc",id:"commit---\ud2b8\ub79c\uc7ad\uc158-\uc644\ub8cc",level:3},{value:"\uc5b8\uc81c flush()\ub97c \uc0ac\uc6a9\ud560\uae4c?",id:"\uc5b8\uc81c-flush\ub97c-\uc0ac\uc6a9\ud560\uae4c",level:3},{value:"\ud83c\udfd7\ufe0f Session \ud328\ud134",id:"\ufe0f-session-\ud328\ud134",level:2},{value:"\ud328\ud134 1: Context Manager (\uad8c\uc7a5)",id:"\ud328\ud134-1-context-manager-\uad8c\uc7a5",level:3},{value:"\ud328\ud134 2: Try-Finally",id:"\ud328\ud134-2-try-finally",level:3},{value:"\ud328\ud134 3: Dependency Injection (FastAPI)",id:"\ud328\ud134-3-dependency-injection-fastapi",level:3},{value:"\ud328\ud134 4: Session per Request (Flask)",id:"\ud328\ud134-4-session-per-request-flask",level:3},{value:"\ud83d\udd0d Identity Map",id:"-identity-map",level:2},{value:"\uac19\uc740 ID\ub294 \uac19\uc740 \uac1d\uccb4",id:"\uac19\uc740-id\ub294-\uac19\uc740-\uac1d\uccb4",level:3},{value:"Identity Map \ucd08\uae30\ud654",id:"identity-map-\ucd08\uae30\ud654",level:3},{value:"\uc804\uccb4 \ucd08\uae30\ud654",id:"\uc804\uccb4-\ucd08\uae30\ud654",level:3},{value:"\ud83d\udd04 refresh() - DB\uc5d0\uc11c \uc7ac\uc870\ud68c",id:"-refresh---db\uc5d0\uc11c-\uc7ac\uc870\ud68c",level:2},{value:"\ub370\uc774\ud130 \uc0c8\ub85c\uace0\uce68",id:"\ub370\uc774\ud130-\uc0c8\ub85c\uace0\uce68",level:3},{value:"\u2699\ufe0f Session \uc635\uc158",id:"\ufe0f-session-\uc635\uc158",level:2},{value:"autocommit (\uc0ac\uc6a9 \ube44\uad8c\uc7a5)",id:"autocommit-\uc0ac\uc6a9-\ube44\uad8c\uc7a5",level:3},{value:"autoflush",id:"autoflush",level:3},{value:"expire_on_commit",id:"expire_on_commit",level:3},{value:"\ud83d\udca1 \uc2e4\uc804 \ud328\ud134",id:"-\uc2e4\uc804-\ud328\ud134",level:2},{value:"Repository \ud328\ud134",id:"repository-\ud328\ud134",level:3},{value:"Unit of Work \ud328\ud134",id:"unit-of-work-\ud328\ud134",level:3},{value:"\uc11c\ube44\uc2a4 \ub808\uc774\uc5b4 \ud328\ud134",id:"\uc11c\ube44\uc2a4-\ub808\uc774\uc5b4-\ud328\ud134",level:3},{value:"\ud83d\udee1\ufe0f \uc138\uc158 \uc548\uc804\uc131",id:"\ufe0f-\uc138\uc158-\uc548\uc804\uc131",level:2},{value:"\uc138\uc158 \uacf5\uc720 \uae08\uc9c0",id:"\uc138\uc158-\uacf5\uc720-\uae08\uc9c0",level:3},{value:"\uc2a4\ub808\ub4dc \uc548\uc804\uc131",id:"\uc2a4\ub808\ub4dc-\uc548\uc804\uc131",level:3},{value:"\ud83d\udca1 \ud504\ub85c \ud301",id:"-\ud504\ub85c-\ud301",level:2},{value:"1. \ud56d\uc0c1 Context Manager \uc0ac\uc6a9",id:"1-\ud56d\uc0c1-context-manager-\uc0ac\uc6a9",level:3},{value:"2. Session\uc740 \uc9e7\uac8c \uc720\uc9c0",id:"2-session\uc740-\uc9e7\uac8c-\uc720\uc9c0",level:3},{value:"3. Detached \uac1d\uccb4 \uc8fc\uc758",id:"3-detached-\uac1d\uccb4-\uc8fc\uc758",level:3},{value:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c",id:"-\uad00\ub828-\ubb38\uc11c",level:2},{value:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"\uc138\uc158-\uad00\ub9ac",children:"\uc138\uc158 \uad00\ub9ac"})}),"\n",(0,r.jsx)(s.p,{children:"SQLAlchemy \uc138\uc158\uc758 \uc0dd\uba85\uc8fc\uae30\ub97c \uc774\ud574\ud558\uace0 \ud2b8\ub79c\uc7ad\uc158\uc744 \uc62c\ubc14\ub974\uac8c \uad00\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6c1\ub2c8\ub2e4."}),"\n",(0,r.jsx)(s.h2,{id:"-\ubaa9\ud45c",children:"\ud83c\udfaf \ubaa9\ud45c"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"\u2705 Session \uc0dd\uba85\uc8fc\uae30 \uc774\ud574"}),"\n",(0,r.jsx)(s.li,{children:"\u2705 \ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac (Commit/Rollback)"}),"\n",(0,r.jsx)(s.li,{children:"\u2705 Session vs SessionLocal \ud328\ud134"}),"\n",(0,r.jsx)(s.li,{children:"\u2705 \ucee8\ud14d\uc2a4\ud2b8 \ub9e4\ub2c8\uc800 \ud65c\uc6a9"}),"\n",(0,r.jsx)(s.li,{children:"\u2705 \uc138\uc158 \uc0c1\ud0dc \uad00\ub9ac"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"-session\uc774\ub780",children:"\ud83d\udcd6 Session\uc774\ub780?"}),"\n",(0,r.jsx)(s.h3,{id:"session\uc758-\uc5ed\ud560",children:"Session\uc758 \uc5ed\ud560"}),"\n",(0,r.jsxs)(s.p,{children:["Session\uc740 ORM\uacfc \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0ac\uc774\uc758 ",(0,r.jsx)(s.strong,{children:"\uc911\uac1c\uc790"}),"\uc785\ub2c8\ub2e4:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Identity Map"}),": \uac19\uc740 ID\uc758 \uac1d\uccb4\ub294 \ud558\ub098\ub9cc \uc720\uc9c0"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Unit of Work"}),": \ubcc0\uacbd\uc0ac\ud56d\uc744 \ucd94\uc801\ud558\uace0 \uc77c\uad04 \ucc98\ub9ac"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Transaction"}),": \uc5ec\ub7ec \uc791\uc5c5\uc744 \ud558\ub098\uc758 \ud2b8\ub79c\uc7ad\uc158\uc73c\ub85c \ubb36\uc74c"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import Session\n\nwith Session(engine) as session:\n    # Session \uc0ac\uc6a9\n    user = User(username='alice')\n    session.add(user)\n    session.commit()\n# \uc790\ub3d9\uc73c\ub85c session.close() \ud638\ucd9c\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-session-\uc0dd\uc131-\ubc29\ubc95",children:"\ud83d\udd27 Session \uc0dd\uc131 \ubc29\ubc95"}),"\n",(0,r.jsx)(s.h3,{id:"\ubc29\ubc95-1-\uc9c1\uc811-\uc0dd\uc131-\uac04\ub2e8\ud55c-\uc2a4\ud06c\ub9bd\ud2b8",children:"\ubc29\ubc95 1: \uc9c1\uc811 \uc0dd\uc131 (\uac04\ub2e8\ud55c \uc2a4\ud06c\ub9bd\ud2b8)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from sqlalchemy import create_engine\nfrom sqlalchemy.orm import Session\n\nengine = create_engine('postgresql://...')\n\n# Session \uc0dd\uc131\nwith Session(engine) as session:\n    user = User(username='alice')\n    session.add(user)\n    session.commit()\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\ubc29\ubc95-2-sessionmaker-\uc560\ud50c\ub9ac\ucf00\uc774\uc158",children:"\ubc29\ubc95 2: sessionmaker (\uc560\ud50c\ub9ac\ucf00\uc774\uc158)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine('postgresql://...')\n\n# Session Factory \uc0dd\uc131\nSessionLocal = sessionmaker(\n    autocommit=False,  # \uc790\ub3d9 \ucee4\ubc0b \ube44\ud65c\uc131\ud654 (\uad8c\uc7a5)\n    autoflush=False,   # \uc790\ub3d9 flush \ube44\ud65c\uc131\ud654\n    bind=engine\n)\n\n# Session \uc0ac\uc6a9\nwith SessionLocal() as session:\n    user = User(username='alice')\n    session.add(user)\n    session.commit()\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\ubc29\ubc95-3-scoped_session-\uba40\ud2f0\uc2a4\ub808\ub4dc",children:"\ubc29\ubc95 3: scoped_session (\uba40\ud2f0\uc2a4\ub808\ub4dc)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import sessionmaker, scoped_session\n\nengine = create_engine('postgresql://...')\n\n# Thread-local Session\nsession_factory = sessionmaker(bind=engine)\nSession = scoped_session(session_factory)\n\n# \uc0ac\uc6a9\nsession = Session()\ntry:\n    user = User(username='alice')\n    session.add(user)\n    session.commit()\nfinally:\n    Session.remove()  # \uc2a4\ub808\ub4dc \ub85c\uceec \uc138\uc158 \uc81c\uac70\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-session-\uc0dd\uba85\uc8fc\uae30",children:"\ud83d\udd04 Session \uc0dd\uba85\uc8fc\uae30"}),"\n",(0,r.jsx)(s.h3,{id:"session-\uc0c1\ud0dc",children:"Session \uc0c1\ud0dc"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    # 1. Transient (\uc784\uc2dc): DB\uc640 \ubb34\uad00\n    user = User(username='alice')\n\n    # 2. Pending (\ub300\uae30): Session\uc5d0 \ucd94\uac00\ub428, \uc544\uc9c1 DB\uc5d0\ub294 \uc5c6\uc74c\n    session.add(user)\n\n    # 3. Persistent (\uc601\uc18d): DB\uc5d0 \uc800\uc7a5\ub428\n    session.commit()\n    print(user.id)  # ID \ud560\ub2f9\ub428\n\n    # 4. Detached (\ubd84\ub9ac): Session\uc5d0\uc11c \uc81c\uac70\ub428\n    session.expunge(user)\n\n    # 5. Deleted (\uc0ad\uc81c \uc608\uc815): \uc0ad\uc81c \ub300\uae30\n    session.delete(user)\n    session.commit()  # DB\uc5d0\uc11c \uc0ad\uc81c\ub428\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\uc0c1\ud0dc-\ud655\uc778",children:"\uc0c1\ud0dc \ud655\uc778"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from sqlalchemy import inspect\n\nwith Session(engine) as session:\n    user = User(username='alice')\n\n    # Transient\n    insp = inspect(user)\n    print(insp.transient)  # True\n    print(insp.pending)    # False\n\n    session.add(user)\n\n    # Pending\n    print(insp.transient)  # False\n    print(insp.pending)    # True\n\n    session.commit()\n\n    # Persistent\n    print(insp.persistent)  # True\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-\ud2b8\ub79c\uc7ad\uc158-\uad00\ub9ac",children:"\ud83d\udcbe \ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac"}),"\n",(0,r.jsx)(s.h3,{id:"\uae30\ubcf8-\ud328\ud134",children:"\uae30\ubcf8 \ud328\ud134"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    try:\n        # \uc791\uc5c5 \uc218\ud589\n        user = User(username='alice')\n        session.add(user)\n\n        post = Post(title='First Post', author=user)\n        session.add(post)\n\n        # \ubaa8\ub450 \uc131\uacf5\ud558\uba74 \ucee4\ubc0b\n        session.commit()\n    except Exception as e:\n        # \ud558\ub098\ub77c\ub3c4 \uc2e4\ud328\ud558\uba74 \ub864\ubc31\n        session.rollback()\n        raise\n"})}),"\n",(0,r.jsx)(s.h3,{id:"begin-\uc0ac\uc6a9",children:"begin() \uc0ac\uc6a9"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    with session.begin():\n        # begin() \ube14\ub85d \ub0b4\uc5d0\uc11c\ub294 \uc790\ub3d9 \ucee4\ubc0b/\ub864\ubc31\n        user = User(username='alice')\n        session.add(user)\n        # \ube14\ub85d \uc885\ub8cc \uc2dc \uc790\ub3d9 \ucee4\ubc0b, \uc5d0\ub7ec \uc2dc \uc790\ub3d9 \ub864\ubc31\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\uba85\uc2dc\uc801-\ud2b8\ub79c\uc7ad\uc158",children:"\uba85\uc2dc\uc801 \ud2b8\ub79c\uc7ad\uc158"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    # \ud2b8\ub79c\uc7ad\uc158 \uc2dc\uc791\n    session.begin()\n\n    try:\n        user1 = User(username='alice')\n        user2 = User(username='bob')\n\n        session.add_all([user1, user2])\n\n        # \uc218\ub3d9 \ucee4\ubc0b\n        session.commit()\n    except Exception:\n        # \uc218\ub3d9 \ub864\ubc31\n        session.rollback()\n        raise\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-flush-vs-commit",children:"\ud83d\udd01 flush() vs commit()"}),"\n",(0,r.jsx)(s.h3,{id:"flush---db-\ubc18\uc601-\ud2b8\ub79c\uc7ad\uc158-\uc720\uc9c0",children:"flush() - DB \ubc18\uc601, \ud2b8\ub79c\uc7ad\uc158 \uc720\uc9c0"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    user = User(username='alice')\n    session.add(user)\n\n    # DB\uc5d0 INSERT \uc2e4\ud589, \ud2b8\ub79c\uc7ad\uc158\uc740 \uc544\uc9c1 \uc5f4\ub824\uc788\uc74c\n    session.flush()\n\n    print(user.id)  # ID \uc0ac\uc6a9 \uac00\ub2a5 (RETURNING\uc73c\ub85c \ubc1b\uc74c)\n\n    # \ub2e4\ub978 \uc791\uc5c5...\n    post = Post(title='First Post', user_id=user.id)\n    session.add(post)\n\n    # \ud2b8\ub79c\uc7ad\uc158 \uc644\ub8cc\n    session.commit()\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"\uc0dd\uc131\ub418\ub294 SQL:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"-- flush()\nINSERT INTO users (username) VALUES ('alice') RETURNING id;\n\n-- commit()\nINSERT INTO posts (title, user_id) VALUES ('First Post', 1);\nCOMMIT;\n"})}),"\n",(0,r.jsx)(s.h3,{id:"commit---\ud2b8\ub79c\uc7ad\uc158-\uc644\ub8cc",children:"commit() - \ud2b8\ub79c\uc7ad\uc158 \uc644\ub8cc"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    user = User(username='alice')\n    session.add(user)\n\n    # \ud2b8\ub79c\uc7ad\uc158 \ucee4\ubc0b (\ubaa8\ub4e0 \ubcc0\uacbd\uc0ac\ud56d \uc800\uc7a5)\n    session.commit()\n\n    # \uc0c8 \ud2b8\ub79c\uc7ad\uc158 \uc2dc\uc791\ub428\n    user.username = 'alice_updated'\n    session.commit()\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\uc5b8\uc81c-flush\ub97c-\uc0ac\uc6a9\ud560\uae4c",children:"\uc5b8\uc81c flush()\ub97c \uc0ac\uc6a9\ud560\uae4c?"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    # \u2705 flush() \uc0ac\uc6a9: ID\uac00 \ud544\uc694\ud560 \ub54c\n    parent = Parent(name='Parent')\n    session.add(parent)\n    session.flush()  # parent.id \uc0dd\uc131\n\n    child = Child(name='Child', parent_id=parent.id)\n    session.add(child)\n    session.commit()\n\n    # \u274c flush() \ubd88\ud544\uc694: relationship \uc0ac\uc6a9\n    parent = Parent(name='Parent')\n    child = Child(name='Child', parent=parent)  # relationship\ub85c \uc5f0\uacb0\n    session.add(parent)\n    session.commit()  # SQLAlchemy\uac00 \uc54c\uc544\uc11c \ucc98\ub9ac\n"})}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-session-\ud328\ud134",children:"\ud83c\udfd7\ufe0f Session \ud328\ud134"}),"\n",(0,r.jsx)(s.h3,{id:"\ud328\ud134-1-context-manager-\uad8c\uc7a5",children:"\ud328\ud134 1: Context Manager (\uad8c\uc7a5)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \u2705 \uac00\uc7a5 \uc548\uc804\ud55c \ubc29\ubc95\ndef create_user(username: str):\n    with Session(engine) as session:\n        with session.begin():\n            user = User(username=username)\n            session.add(user)\n            # \uc790\ub3d9 \ucee4\ubc0b/\ub864\ubc31, \uc790\ub3d9 close\n        return user.id\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\ud328\ud134-2-try-finally",children:"\ud328\ud134 2: Try-Finally"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def create_user(username: str):\n    session = Session(engine)\n    try:\n        user = User(username=username)\n        session.add(user)\n        session.commit()\n        return user.id\n    except Exception:\n        session.rollback()\n        raise\n    finally:\n        session.close()\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\ud328\ud134-3-dependency-injection-fastapi",children:"\ud328\ud134 3: Dependency Injection (FastAPI)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'from sqlalchemy.orm import sessionmaker\n\nSessionLocal = sessionmaker(bind=engine)\n\ndef get_db():\n    """DB \uc138\uc158 \uc758\uc874\uc131"""\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n# FastAPI \uc5d4\ub4dc\ud3ec\uc778\ud2b8\nfrom fastapi import Depends\n\n@app.get("/users/")\ndef read_users(db: Session = Depends(get_db)):\n    users = db.execute(select(User)).scalars().all()\n    return users\n'})}),"\n",(0,r.jsx)(s.h3,{id:"\ud328\ud134-4-session-per-request-flask",children:"\ud328\ud134 4: Session per Request (Flask)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'from flask import Flask, g\nfrom sqlalchemy.orm import sessionmaker\n\napp = Flask(__name__)\nSessionLocal = sessionmaker(bind=engine)\n\n@app.before_request\ndef before_request():\n    """\uc694\uccad \uc2dc\uc791 \uc2dc \uc138\uc158 \uc0dd\uc131"""\n    g.db = SessionLocal()\n\n@app.teardown_request\ndef teardown_request(exception=None):\n    """\uc694\uccad \uc885\ub8cc \uc2dc \uc138\uc158 \ub2eb\uae30"""\n    db = g.pop(\'db\', None)\n    if db is not None:\n        if exception:\n            db.rollback()\n        db.close()\n\n@app.route(\'/users\')\ndef get_users():\n    users = g.db.execute(select(User)).scalars().all()\n    return {\'users\': [u.username for u in users]}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"-identity-map",children:"\ud83d\udd0d Identity Map"}),"\n",(0,r.jsx)(s.h3,{id:"\uac19\uc740-id\ub294-\uac19\uc740-\uac1d\uccb4",children:"\uac19\uc740 ID\ub294 \uac19\uc740 \uac1d\uccb4"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    # \uccab \ubc88\uc9f8 \uc870\ud68c\n    user1 = session.get(User, 1)\n\n    # \ub450 \ubc88\uc9f8 \uc870\ud68c (\ucffc\ub9ac \uc5c6\uc74c!)\n    user2 = session.get(User, 1)\n\n    # \uac19\uc740 \uac1d\uccb4\n    print(user1 is user2)  # True\n    print(id(user1) == id(user2))  # True\n"})}),"\n",(0,r.jsx)(s.h3,{id:"identity-map-\ucd08\uae30\ud654",children:"Identity Map \ucd08\uae30\ud654"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    user = session.get(User, 1)\n\n    # Identity Map\uc5d0\uc11c \uc81c\uac70\n    session.expunge(user)\n\n    # \ub2e4\uc2dc \uc870\ud68c (\ucffc\ub9ac \ubc1c\uc0dd)\n    user2 = session.get(User, 1)\n\n    print(user is user2)  # False\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\uc804\uccb4-\ucd08\uae30\ud654",children:"\uc804\uccb4 \ucd08\uae30\ud654"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    user = session.get(User, 1)\n\n    # \ubaa8\ub4e0 \uac1d\uccb4 \uc81c\uac70\n    session.expunge_all()\n\n    # \ub2e4\uc2dc \uc870\ud68c\n    user2 = session.get(User, 1)\n    print(user is user2)  # False\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-refresh---db\uc5d0\uc11c-\uc7ac\uc870\ud68c",children:"\ud83d\udd04 refresh() - DB\uc5d0\uc11c \uc7ac\uc870\ud68c"}),"\n",(0,r.jsx)(s.h3,{id:"\ub370\uc774\ud130-\uc0c8\ub85c\uace0\uce68",children:"\ub370\uc774\ud130 \uc0c8\ub85c\uace0\uce68"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"with Session(engine) as session:\n    user = session.get(User, 1)\n    print(user.username)  # 'alice'\n\n    # \ub2e4\ub978 \uc138\uc158\uc5d0\uc11c \uc218\uc815\ud588\ub2e4\uace0 \uac00\uc815\n    # UPDATE users SET username='alice_new' WHERE id=1\n\n    # \uc138\uc158\uc758 user\ub294 \uc5ec\uc804\ud788 'alice'\n    print(user.username)  # 'alice' (\uce90\uc2dc\ub41c \uac12)\n\n    # DB\uc5d0\uc11c \uc7ac\uc870\ud68c\n    session.refresh(user)\n    print(user.username)  # 'alice_new' (\ucd5c\uc2e0 \uac12)\n"})}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-session-\uc635\uc158",children:"\u2699\ufe0f Session \uc635\uc158"}),"\n",(0,r.jsx)(s.h3,{id:"autocommit-\uc0ac\uc6a9-\ube44\uad8c\uc7a5",children:"autocommit (\uc0ac\uc6a9 \ube44\uad8c\uc7a5)"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \u274c autocommit=True (\uad8c\uc7a5\ud558\uc9c0 \uc54a\uc74c)\nSessionLocal = sessionmaker(\n    autocommit=True,  # \uac01 \uc791\uc5c5\uc774 \uc790\ub3d9 \ucee4\ubc0b\ub428\n    bind=engine\n)\n\n# \u2705 autocommit=False (\uad8c\uc7a5)\nSessionLocal = sessionmaker(\n    autocommit=False,  # \uba85\uc2dc\uc801 commit \ud544\uc694\n    bind=engine\n)\n"})}),"\n",(0,r.jsx)(s.h3,{id:"autoflush",children:"autoflush"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# autoflush=True (\uae30\ubcf8\uac12)\nSessionLocal = sessionmaker(\n    autoflush=True,  # \ucffc\ub9ac \uc804 \uc790\ub3d9 flush\n    bind=engine\n)\n\nwith SessionLocal() as session:\n    user = User(username='alice')\n    session.add(user)\n\n    # \ucffc\ub9ac \uc2e4\ud589 \uc804 \uc790\ub3d9 flush\n    count = session.execute(select(func.count(User.id))).scalar()\n    # alice\uac00 \ud3ec\ud568\ub41c \uac1c\uc218 \ubc18\ud658\n\n# autoflush=False\nSessionLocal = sessionmaker(\n    autoflush=False,  # \uc218\ub3d9 flush \ud544\uc694\n    bind=engine\n)\n\nwith SessionLocal() as session:\n    user = User(username='alice')\n    session.add(user)\n\n    # flush \uc548 \ub428, alice \uc81c\uc678\ub41c \uac1c\uc218 \ubc18\ud658\n    count = session.execute(select(func.count(User.id))).scalar()\n\n    session.flush()  # \uc218\ub3d9 flush\n    count = session.execute(select(func.count(User.id))).scalar()\n"})}),"\n",(0,r.jsx)(s.h3,{id:"expire_on_commit",children:"expire_on_commit"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# expire_on_commit=True (\uae30\ubcf8\uac12)\nSessionLocal = sessionmaker(\n    expire_on_commit=True,  # commit \ud6c4 \uac1d\uccb4 \ub9cc\ub8cc\n    bind=engine\n)\n\nwith SessionLocal() as session:\n    user = User(username='alice')\n    session.add(user)\n    session.commit()\n\n    # \uc811\uadfc \uc2dc SELECT \ucffc\ub9ac \ubc1c\uc0dd (\ub9cc\ub8cc\ub428)\n    print(user.username)  # SELECT \ubc1c\uc0dd\n\n# expire_on_commit=False\nSessionLocal = sessionmaker(\n    expire_on_commit=False,  # commit \ud6c4\uc5d0\ub3c4 \uc720\uc9c0\n    bind=engine\n)\n\nwith SessionLocal() as session:\n    user = User(username='alice')\n    session.add(user)\n    session.commit()\n\n    # \ucffc\ub9ac \uc5c6\uc74c (\uce90\uc2dc \uc0ac\uc6a9)\n    print(user.username)  # SELECT \uc5c6\uc74c\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-\uc2e4\uc804-\ud328\ud134",children:"\ud83d\udca1 \uc2e4\uc804 \ud328\ud134"}),"\n",(0,r.jsx)(s.h3,{id:"repository-\ud328\ud134",children:"Repository \ud328\ud134"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from typing import Optional, List\nfrom sqlalchemy.orm import Session\n\nclass UserRepository:\n    def __init__(self, session: Session):\n        self.session = session\n\n    def create(self, username: str, email: str) -> User:\n        user = User(username=username, email=email)\n        self.session.add(user)\n        self.session.flush()\n        return user\n\n    def get_by_id(self, user_id: int) -> Optional[User]:\n        return self.session.get(User, user_id)\n\n    def get_by_username(self, username: str) -> Optional[User]:\n        stmt = select(User).where(User.username == username)\n        return self.session.execute(stmt).scalar_one_or_none()\n\n    def get_all(self, skip: int = 0, limit: int = 100) -> List[User]:\n        stmt = select(User).offset(skip).limit(limit)\n        return self.session.execute(stmt).scalars().all()\n\n    def update(self, user: User) -> User:\n        self.session.flush()\n        return user\n\n    def delete(self, user: User):\n        self.session.delete(user)\n        self.session.flush()\n\n# \uc0ac\uc6a9\nwith Session(engine) as session:\n    with session.begin():\n        repo = UserRepository(session)\n\n        # \uc0dd\uc131\n        user = repo.create(username='alice', email='alice@example.com')\n\n        # \uc870\ud68c\n        found = repo.get_by_username('alice')\n\n        # \uc218\uc815\n        found.email = 'new@example.com'\n        repo.update(found)\n\n        # \uc0ad\uc81c\n        repo.delete(found)\n"})}),"\n",(0,r.jsx)(s.h3,{id:"unit-of-work-\ud328\ud134",children:"Unit of Work \ud328\ud134"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'from contextlib import contextmanager\nfrom sqlalchemy.orm import Session\n\n@contextmanager\ndef transaction_scope(session_factory):\n    """\ud2b8\ub79c\uc7ad\uc158 \ucee8\ud14d\uc2a4\ud2b8"""\n    session = session_factory()\n    try:\n        yield session\n        session.commit()\n    except Exception:\n        session.rollback()\n        raise\n    finally:\n        session.close()\n\n# \uc0ac\uc6a9\nSessionLocal = sessionmaker(bind=engine)\n\nwith transaction_scope(SessionLocal) as session:\n    user = User(username=\'alice\')\n    session.add(user)\n    # \uc790\ub3d9 \ucee4\ubc0b/\ub864\ubc31\n'})}),"\n",(0,r.jsx)(s.h3,{id:"\uc11c\ube44\uc2a4-\ub808\uc774\uc5b4-\ud328\ud134",children:"\uc11c\ube44\uc2a4 \ub808\uc774\uc5b4 \ud328\ud134"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"from sqlalchemy.orm import Session\n\nclass UserService:\n    def __init__(self, session: Session):\n        self.session = session\n        self.repo = UserRepository(session)\n\n    def register_user(self, username: str, email: str, password: str) -> User:\n        \"\"\"\uc0ac\uc6a9\uc790 \ub4f1\ub85d (\ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1)\"\"\"\n        # \uc911\ubcf5 \uccb4\ud06c\n        if self.repo.get_by_username(username):\n            raise ValueError(f\"Username '{username}' already exists\")\n\n        if self.repo.get_by_email(email):\n            raise ValueError(f\"Email '{email}' already exists\")\n\n        # \ube44\ubc00\ubc88\ud638 \ud574\uc2dc\ud654 (\uc2e4\uc81c\ub85c\ub294 bcrypt \ub4f1 \uc0ac\uc6a9)\n        password_hash = hash_password(password)\n\n        # \uc0ac\uc6a9\uc790 \uc0dd\uc131\n        user = self.repo.create(\n            username=username,\n            email=email,\n            password_hash=password_hash\n        )\n\n        # \ud658\uc601 \uc774\uba54\uc77c \ubc1c\uc1a1\n        send_welcome_email(user.email)\n\n        return user\n\n# \uc0ac\uc6a9\nwith Session(engine) as session:\n    with session.begin():\n        service = UserService(session)\n        user = service.register_user('alice', 'alice@example.com', 'secret123')\n"})}),"\n",(0,r.jsx)(s.h2,{id:"\ufe0f-\uc138\uc158-\uc548\uc804\uc131",children:"\ud83d\udee1\ufe0f \uc138\uc158 \uc548\uc804\uc131"}),"\n",(0,r.jsx)(s.h3,{id:"\uc138\uc158-\uacf5\uc720-\uae08\uc9c0",children:"\uc138\uc158 \uacf5\uc720 \uae08\uc9c0"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \u274c \ub098\uc05c \uc608: \uc138\uc158 \uacf5\uc720\nsession = Session(engine)\n\ndef create_user(username: str):\n    user = User(username=username)\n    session.add(user)\n    session.commit()\n\ndef create_post(title: str):\n    post = Post(title=title)\n    session.add(post)\n    session.commit()\n\n# \ubb38\uc81c: \uac19\uc740 \uc138\uc158 \uc0ac\uc6a9\n\n# \u2705 \uc88b\uc740 \uc608: \uac01\uc790 \uc138\uc158 \uc0ac\uc6a9\ndef create_user(session: Session, username: str):\n    user = User(username=username)\n    session.add(user)\n    session.flush()\n\ndef create_post(session: Session, title: str):\n    post = Post(title=title)\n    session.add(post)\n    session.flush()\n\nwith Session(engine) as session:\n    with session.begin():\n        create_user(session, 'alice')\n        create_post(session, 'First Post')\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\uc2a4\ub808\ub4dc-\uc548\uc804\uc131",children:"\uc2a4\ub808\ub4dc \uc548\uc804\uc131"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \u274c \uc2a4\ub808\ub4dc \uac04 \uc138\uc158 \uacf5\uc720 \uae08\uc9c0\nsession = Session(engine)  # \uc804\uc5ed \uc138\uc158\n\ndef worker():\n    user = session.get(User, 1)  # \uc704\ud5d8!\n\n# \u2705 \uc2a4\ub808\ub4dc\ub9c8\ub2e4 \uc138\uc158 \uc0dd\uc131\nfrom sqlalchemy.orm import scoped_session, sessionmaker\n\nsession_factory = sessionmaker(bind=engine)\nSession = scoped_session(session_factory)\n\ndef worker():\n    session = Session()  # \uc2a4\ub808\ub4dc\ubcc4 \uc138\uc158\n    try:\n        user = session.get(User, 1)\n        session.commit()\n    finally:\n        Session.remove()\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-\ud504\ub85c-\ud301",children:"\ud83d\udca1 \ud504\ub85c \ud301"}),"\n",(0,r.jsx)(s.h3,{id:"1-\ud56d\uc0c1-context-manager-\uc0ac\uc6a9",children:"1. \ud56d\uc0c1 Context Manager \uc0ac\uc6a9"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \u2705 \uad8c\uc7a5\nwith Session(engine) as session:\n    with session.begin():\n        # \uc791\uc5c5\n        pass\n\n# \u274c \ube44\uad8c\uc7a5\nsession = Session(engine)\nsession.add(user)\nsession.commit()\nsession.close()  # \uc78a\uc5b4\ubc84\ub9ac\uae30 \uc26c\uc6c0\n"})}),"\n",(0,r.jsx)(s.h3,{id:"2-session\uc740-\uc9e7\uac8c-\uc720\uc9c0",children:"2. Session\uc740 \uc9e7\uac8c \uc720\uc9c0"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \u2705 \uc9e7\uc740 \uc138\uc158\ndef get_user(user_id: int):\n    with Session(engine) as session:\n        return session.get(User, user_id)\n\n# \u274c \uae34 \uc138\uc158 (\uba54\ubaa8\ub9ac \ub204\uc218)\nsession = Session(engine)  # \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791 \uc2dc\n# ... \uacc4\uc18d \uc0ac\uc6a9 ...\n"})}),"\n",(0,r.jsx)(s.h3,{id:"3-detached-\uac1d\uccb4-\uc8fc\uc758",children:"3. Detached \uac1d\uccb4 \uc8fc\uc758"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# \uc138\uc158 \ubc16\uc5d0\uc11c \uac1d\uccb4 \uc0ac\uc6a9 \uc2dc\nwith Session(engine) as session:\n    user = session.get(User, 1)\n# session \ub2eb\ud798, user\ub294 detached\n\n# \u274c detached \uac1d\uccb4 \uc218\uc815\nuser.username = 'new_name'  # DB\uc5d0 \ubc18\uc601 \uc548 \ub428\n\n# \u2705 merge\ub85c \uc7ac\uc5f0\uacb0\nwith Session(engine) as session:\n    user = session.merge(user)\n    user.username = 'new_name'\n    session.commit()\n"})}),"\n",(0,r.jsx)(s.h2,{id:"-\uad00\ub828-\ubb38\uc11c",children:"\ud83d\udd17 \uad00\ub828 \ubb38\uc11c"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"../basic/crud",children:"\uae30\ubcf8 CRUD \uc791\uc5c5"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"../advanced/transactions",children:"\ud2b8\ub79c\uc7ad\uc158 \uad00\ub9ac"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"../advanced/performance",children:"\uc131\ub2a5 \ucd5c\uc801\ud654"})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83c\udfaf \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,r.jsx)(s.p,{children:"\uc911\uae09\ud3b8\uc744 \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \uace0\uae09 \uae30\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,r.jsxs)(s.p,{children:["\ud83d\udc49 ",(0,r.jsx)(s.a,{href:"../advanced/intro",children:"\uace0\uae09\ud3b8 \uc18c\uac1c"})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"\ud83d\udca1 \ud301"}),': Session\uc740 "\uc791\uc5c5 \ub2e8\uc704"\uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \uc694\uccad/\uc791\uc5c5\ub9c8\ub2e4 \ud558\ub098\uc758 \uc138\uc158\uc744 \uc0ac\uc6a9\ud558\uc138\uc694!']})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>a});var i=n(6540);const r={},o=i.createContext(r);function l(e){const s=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);