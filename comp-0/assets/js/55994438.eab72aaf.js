"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[6366],{5215:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"rabbitmq/advanced/security","title":"Security - \ubcf4\uc548","description":"RabbitMQ\ub97c \uc548\uc804\ud558\uac8c \uc6b4\uc601\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!","source":"@site/docs/rabbitmq/advanced/security.md","sourceDirName":"rabbitmq/advanced","slug":"/rabbitmq/advanced/security","permalink":"/tobias-docs/comp-0/docs/rabbitmq/advanced/security","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rabbitmq/advanced/security.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"rabbitmqSidebar","previous":{"title":"Performance - \uc131\ub2a5 \ucd5c\uc801\ud654","permalink":"/tobias-docs/comp-0/docs/rabbitmq/advanced/performance"},"next":{"title":"\uae30\ucd08\ud3b8 \uc18c\uac1c","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/intro"}}');var t=s(4848),l=s(8453);const r={sidebar_position:5},a="Security - \ubcf4\uc548",o={},c=[{value:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c",id:"-\ud559\uc2b5-\ubaa9\ud45c",level:2},{value:"\ud83d\udd10 \uc0ac\uc6a9\uc790 \ubc0f \uad8c\ud55c \uad00\ub9ac",id:"-\uc0ac\uc6a9\uc790-\ubc0f-\uad8c\ud55c-\uad00\ub9ac",level:2},{value:"\uc0ac\uc6a9\uc790 \uc0dd\uc131 \ubc0f \uad00\ub9ac",id:"\uc0ac\uc6a9\uc790-\uc0dd\uc131-\ubc0f-\uad00\ub9ac",level:3},{value:"\ud0dc\uadf8 (\uc5ed\ud560)",id:"\ud0dc\uadf8-\uc5ed\ud560",level:3},{value:"\uad8c\ud55c \uc124\uc815",id:"\uad8c\ud55c-\uc124\uc815",level:3},{value:"\ud83c\udfe2 vHost \ubd84\ub9ac",id:"-vhost-\ubd84\ub9ac",level:2},{value:"vHost \uc0dd\uc131 \ubc0f \uad00\ub9ac",id:"vhost-\uc0dd\uc131-\ubc0f-\uad00\ub9ac",level:3},{value:"Python\uc5d0\uc11c vHost \uc0ac\uc6a9",id:"python\uc5d0\uc11c-vhost-\uc0ac\uc6a9",level:3},{value:"\ud83d\udd12 TLS/SSL \uc124\uc815",id:"-tlsssl-\uc124\uc815",level:2},{value:"\uc778\uc99d\uc11c \uc0dd\uc131 (Self-Signed)",id:"\uc778\uc99d\uc11c-\uc0dd\uc131-self-signed",level:3},{value:"RabbitMQ TLS \uc124\uc815",id:"rabbitmq-tls-\uc124\uc815",level:3},{value:"Python TLS \uc5f0\uacb0",id:"python-tls-\uc5f0\uacb0",level:3},{value:"\ud83d\udee1\ufe0f \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548",id:"\ufe0f-\ub124\ud2b8\uc6cc\ud06c-\ubcf4\uc548",level:2},{value:"\ubc29\ud654\ubcbd \uc124\uc815 (iptables)",id:"\ubc29\ud654\ubcbd-\uc124\uc815-iptables",level:3},{value:"Docker Compose \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac",id:"docker-compose-\ub124\ud2b8\uc6cc\ud06c-\uaca9\ub9ac",level:3},{value:"\ud83d\udcdd \uac10\uc0ac \ub85c\uadf8",id:"-\uac10\uc0ac-\ub85c\uadf8",level:2},{value:"\ub85c\uadf8 \uc124\uc815",id:"\ub85c\uadf8-\uc124\uc815",level:3},{value:"Python \uac10\uc0ac \ub85c\uadf8",id:"python-\uac10\uc0ac-\ub85c\uadf8",level:3},{value:"\u26a0\ufe0f \ubcf4\uc548 \uccb4\ud06c\ub9ac\uc2a4\ud2b8",id:"\ufe0f-\ubcf4\uc548-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",level:2},{value:"\uc778\uc99d \ubc0f \uad8c\ud55c",id:"\uc778\uc99d-\ubc0f-\uad8c\ud55c",level:3},{value:"\ub124\ud2b8\uc6cc\ud06c",id:"\ub124\ud2b8\uc6cc\ud06c",level:3},{value:"\uc6b4\uc601",id:"\uc6b4\uc601",level:3},{value:"\ud83d\udd0d \ubcf4\uc548 \uc810\uac80",id:"-\ubcf4\uc548-\uc810\uac80",level:2},{value:"\uc790\ub3d9\ud654\ub41c \ubcf4\uc548 \uc810\uac80",id:"\uc790\ub3d9\ud654\ub41c-\ubcf4\uc548-\uc810\uac80",level:3},{value:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac",id:"-\ud575\uc2ec-\uc815\ub9ac",level:2},{value:"\ud83d\udcda \ub9c8\ubb34\ub9ac",id:"-\ub9c8\ubb34\ub9ac",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"security---\ubcf4\uc548",children:"Security - \ubcf4\uc548"})}),"\n",(0,t.jsx)(n.p,{children:"RabbitMQ\ub97c \uc548\uc804\ud558\uac8c \uc6b4\uc601\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,t.jsx)(n.h2,{id:"-\ud559\uc2b5-\ubaa9\ud45c",children:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"TLS/SSL \uc124\uc815"}),"\n",(0,t.jsx)(n.li,{children:"\uc0ac\uc6a9\uc790 \ubc0f \uad8c\ud55c \uad00\ub9ac"}),"\n",(0,t.jsx)(n.li,{children:"vHost \ubd84\ub9ac"}),"\n",(0,t.jsx)(n.li,{children:"\ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548"}),"\n",(0,t.jsx)(n.li,{children:"\uac10\uc0ac \ub85c\uadf8"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\uc0ac\uc6a9\uc790-\ubc0f-\uad8c\ud55c-\uad00\ub9ac",children:"\ud83d\udd10 \uc0ac\uc6a9\uc790 \ubc0f \uad8c\ud55c \uad00\ub9ac"}),"\n",(0,t.jsx)(n.h3,{id:"\uc0ac\uc6a9\uc790-\uc0dd\uc131-\ubc0f-\uad00\ub9ac",children:"\uc0ac\uc6a9\uc790 \uc0dd\uc131 \ubc0f \uad00\ub9ac"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# 1. \uc0ac\uc6a9\uc790 \uc0dd\uc131\ndocker exec rabbitmq rabbitmqctl add_user developer dev_password123\n\n# 2. \ud0dc\uadf8 \ubd80\uc5ec (\uc5ed\ud560)\ndocker exec rabbitmq rabbitmqctl set_user_tags developer management\n\n# 3. \uad8c\ud55c \ubd80\uc5ec\ndocker exec rabbitmq rabbitmqctl set_permissions -p / developer ".*" ".*" ".*"\n\n# 4. \uc0ac\uc6a9\uc790 \ubaa9\ub85d\ndocker exec rabbitmq rabbitmqctl list_users\n\n# 5. \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd\ndocker exec rabbitmq rabbitmqctl change_password developer new_password456\n\n# 6. \uc0ac\uc6a9\uc790 \uc0ad\uc81c\ndocker exec rabbitmq rabbitmqctl delete_user developer\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\ud0dc\uadf8-\uc5ed\ud560",children:"\ud0dc\uadf8 (\uc5ed\ud560)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# administrator: \ubaa8\ub4e0 \uad8c\ud55c\nrabbitmqctl set_user_tags admin administrator\n\n# management: Management UI \uc811\uadfc\nrabbitmqctl set_user_tags developer management\n\n# monitoring: \uc77d\uae30 \uc804\uc6a9 (\ubaa8\ub2c8\ud130\ub9c1\uc6a9)\nrabbitmqctl set_user_tags monitor monitoring\n\n# \uc5ec\ub7ec \ud0dc\uadf8 \ub3d9\uc2dc \ubd80\uc5ec\nrabbitmqctl set_user_tags admin administrator management\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\uad8c\ud55c-\uc124\uc815",children:"\uad8c\ud55c \uc124\uc815"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# set_permissions [-p vhost] <user> <conf> <write> <read>\n# conf: \ud050/exchange \uc124\uc815 \uad8c\ud55c\n# write: \uba54\uc2dc\uc9c0 \ubc1c\ud589 \uad8c\ud55c\n# read: \uba54\uc2dc\uc9c0 \uc18c\ube44 \uad8c\ud55c\n\n# \ubaa8\ub4e0 \uad8c\ud55c\nrabbitmqctl set_permissions -p / admin ".*" ".*" ".*"\n\n# \ud2b9\uc815 \ud050\ub9cc \uc811\uadfc\nrabbitmqctl set_permissions -p / developer "^orders.*" "^orders.*" "^orders.*"\n\n# \uc77d\uae30 \uc804\uc6a9\nrabbitmqctl set_permissions -p / monitor "" "" ".*"\n\n# \uad8c\ud55c \ubaa9\ub85d\nrabbitmqctl list_permissions -p /\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-vhost-\ubd84\ub9ac",children:"\ud83c\udfe2 vHost \ubd84\ub9ac"}),"\n",(0,t.jsx)(n.h3,{id:"vhost-\uc0dd\uc131-\ubc0f-\uad00\ub9ac",children:"vHost \uc0dd\uc131 \ubc0f \uad00\ub9ac"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# 1. vHost \uc0dd\uc131\ndocker exec rabbitmq rabbitmqctl add_vhost production\ndocker exec rabbitmq rabbitmqctl add_vhost development\n\n# 2. vHost \ubaa9\ub85d\ndocker exec rabbitmq rabbitmqctl list_vhosts\n\n# 3. \uc0ac\uc6a9\uc790\uc5d0\uac8c vHost \uad8c\ud55c \ubd80\uc5ec\ndocker exec rabbitmq rabbitmqctl set_permissions \\\n  -p production \\\n  prod_user \\\n  ".*" ".*" ".*"\n\n# 4. vHost \uc0ad\uc81c\ndocker exec rabbitmq rabbitmqctl delete_vhost development\n'})}),"\n",(0,t.jsx)(n.h3,{id:"python\uc5d0\uc11c-vhost-\uc0ac\uc6a9",children:"Python\uc5d0\uc11c vHost \uc0ac\uc6a9"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# vhost_example.py\nimport pika\n\nclass VHostClient:\n    \"\"\"vHost\ubcc4 \ud074\ub77c\uc774\uc5b8\ud2b8\"\"\"\n\n    def __init__(\n        self,\n        host='localhost',\n        vhost='/',\n        username='guest',\n        password='guest'\n    ):\n        credentials = pika.PlainCredentials(username, password)\n\n        self.connection = pika.BlockingConnection(\n            pika.ConnectionParameters(\n                host=host,\n                virtual_host=vhost,  # vHost \uc9c0\uc815\n                credentials=credentials\n            )\n        )\n        self.channel = self.connection.channel()\n\n    def publish(self, queue_name: str, message: str):\n        \"\"\"\uba54\uc2dc\uc9c0 \ubc1c\ud589\"\"\"\n        self.channel.queue_declare(queue=queue_name, durable=True)\n\n        self.channel.basic_publish(\n            exchange='',\n            routing_key=queue_name,\n            body=message\n        )\n\n        print(f\" [x] Sent to vHost: {message}\")\n\n    def close(self):\n        self.connection.close()\n\n# \uc0ac\uc6a9 \uc608\nif __name__ == '__main__':\n    # Production vHost\n    prod_client = VHostClient(\n        vhost='production',\n        username='prod_user',\n        password='prod_password'\n    )\n    prod_client.publish('orders', 'Production order')\n    prod_client.close()\n\n    # Development vHost\n    dev_client = VHostClient(\n        vhost='development',\n        username='dev_user',\n        password='dev_password'\n    )\n    dev_client.publish('orders', 'Development order')\n    dev_client.close()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-tlsssl-\uc124\uc815",children:"\ud83d\udd12 TLS/SSL \uc124\uc815"}),"\n",(0,t.jsx)(n.h3,{id:"\uc778\uc99d\uc11c-\uc0dd\uc131-self-signed",children:"\uc778\uc99d\uc11c \uc0dd\uc131 (Self-Signed)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# tls_setup.sh\n\n#!/bin/bash\n\n# 1. CA \ud0a4 \uc0dd\uc131\nopenssl genrsa -out ca_key.pem 2048\n\n# 2. CA \uc778\uc99d\uc11c \uc0dd\uc131\nopenssl req -new -x509 -key ca_key.pem -out ca_certificate.pem -days 3650 \\\n  -subj "/C=KR/ST=Seoul/L=Seoul/O=MyCompany/CN=MyCA"\n\n# 3. \uc11c\ubc84 \ud0a4 \uc0dd\uc131\nopenssl genrsa -out server_key.pem 2048\n\n# 4. \uc11c\ubc84 CSR \uc0dd\uc131\nopenssl req -new -key server_key.pem -out server.csr \\\n  -subj "/C=KR/ST=Seoul/L=Seoul/O=MyCompany/CN=rabbitmq"\n\n# 5. \uc11c\ubc84 \uc778\uc99d\uc11c \uc0dd\uc131\nopenssl x509 -req -in server.csr -CA ca_certificate.pem -CAkey ca_key.pem \\\n  -CAcreateserial -out server_certificate.pem -days 365\n\n# 6. \ud074\ub77c\uc774\uc5b8\ud2b8 \ud0a4 \uc0dd\uc131\nopenssl genrsa -out client_key.pem 2048\n\n# 7. \ud074\ub77c\uc774\uc5b8\ud2b8 CSR \uc0dd\uc131\nopenssl req -new -key client_key.pem -out client.csr \\\n  -subj "/C=KR/ST=Seoul/L=Seoul/O=MyCompany/CN=client"\n\n# 8. \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\uc99d\uc11c \uc0dd\uc131\nopenssl x509 -req -in client.csr -CA ca_certificate.pem -CAkey ca_key.pem \\\n  -CAcreateserial -out client_certificate.pem -days 365\n\necho "\u2713 TLS certificates generated"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"rabbitmq-tls-\uc124\uc815",children:"RabbitMQ TLS \uc124\uc815"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"# rabbitmq.conf\n\n# TLS listeners\nlisteners.ssl.default = 5671\n\n# \uc778\uc99d\uc11c \ud30c\uc77c \uacbd\ub85c\nssl_options.cacertfile = /etc/rabbitmq/certs/ca_certificate.pem\nssl_options.certfile = /etc/rabbitmq/certs/server_certificate.pem\nssl_options.keyfile = /etc/rabbitmq/certs/server_key.pem\n\n# TLS \ubc84\uc804 (1.2 \uc774\uc0c1)\nssl_options.versions.1 = tlsv1.2\nssl_options.versions.2 = tlsv1.3\n\n# \ud074\ub77c\uc774\uc5b8\ud2b8 \uc778\uc99d \uc694\uad6c\nssl_options.verify = verify_peer\nssl_options.fail_if_no_peer_cert = true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"python-tls-\uc5f0\uacb0",children:"Python TLS \uc5f0\uacb0"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# tls_client.py\nimport pika\nimport ssl\n\nclass TLSClient:\n    \"\"\"TLS/SSL \uc5f0\uacb0 \ud074\ub77c\uc774\uc5b8\ud2b8\"\"\"\n\n    def __init__(self, host='localhost'):\n        # SSL Context \uc0dd\uc131\n        ssl_context = ssl.create_default_context(\n            cafile='certs/ca_certificate.pem'\n        )\n        ssl_context.load_cert_chain(\n            certfile='certs/client_certificate.pem',\n            keyfile='certs/client_key.pem'\n        )\n\n        # SSL Options\n        ssl_options = pika.SSLOptions(ssl_context, host)\n\n        # \uc5f0\uacb0 \ud30c\ub77c\ubbf8\ud130\n        parameters = pika.ConnectionParameters(\n            host=host,\n            port=5671,  # TLS \ud3ec\ud2b8\n            ssl_options=ssl_options,\n            credentials=pika.PlainCredentials('admin', 'admin123')\n        )\n\n        self.connection = pika.BlockingConnection(parameters)\n        self.channel = self.connection.channel()\n\n        print(\" [\u2713] TLS connection established\")\n\n    def publish(self, queue_name: str, message: str):\n        \"\"\"\uba54\uc2dc\uc9c0 \ubc1c\ud589\"\"\"\n        self.channel.queue_declare(queue=queue_name, durable=True)\n\n        self.channel.basic_publish(\n            exchange='',\n            routing_key=queue_name,\n            body=message\n        )\n\n        print(f\" [x] Sent via TLS: {message}\")\n\n    def close(self):\n        self.connection.close()\n\n# \uc0ac\uc6a9 \uc608\nif __name__ == '__main__':\n    client = TLSClient()\n    client.publish('secure_orders', 'Encrypted message')\n    client.close()\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-\ub124\ud2b8\uc6cc\ud06c-\ubcf4\uc548",children:"\ud83d\udee1\ufe0f \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548"}),"\n",(0,t.jsx)(n.h3,{id:"\ubc29\ud654\ubcbd-\uc124\uc815-iptables",children:"\ubc29\ud654\ubcbd \uc124\uc815 (iptables)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# firewall_setup.sh\n\n#!/bin/bash\n\n# \uae30\ubcf8 \uc815\ucc45: \ubaa8\ub450 \ucc28\ub2e8\niptables -P INPUT DROP\niptables -P FORWARD DROP\niptables -P OUTPUT ACCEPT\n\n# Loopback \ud5c8\uc6a9\niptables -A INPUT -i lo -j ACCEPT\n\n# \uae30\uc874 \uc5f0\uacb0 \ud5c8\uc6a9\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n# RabbitMQ \ud3ec\ud2b8 \ud5c8\uc6a9 (\ud2b9\uc815 IP\ub9cc)\nALLOWED_IPS=("10.0.0.100" "10.0.0.101")\n\nfor ip in "${ALLOWED_IPS[@]}"; do\n  # AMQP\n  iptables -A INPUT -p tcp -s $ip --dport 5672 -j ACCEPT\n\n  # AMQP/TLS\n  iptables -A INPUT -p tcp -s $ip --dport 5671 -j ACCEPT\n\n  # Management UI (\ub0b4\ubd80 \ub124\ud2b8\uc6cc\ud06c\ub9cc)\n  iptables -A INPUT -p tcp -s $ip --dport 15672 -j ACCEPT\ndone\n\n# Prometheus (\ubaa8\ub2c8\ud130\ub9c1 \uc11c\ubc84\ub9cc)\niptables -A INPUT -p tcp -s 10.0.0.200 --dport 15692 -j ACCEPT\n\n# \ub098\uba38\uc9c0 \ucc28\ub2e8\niptables -A INPUT -j DROP\n\necho "\u2713 Firewall rules applied"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"docker-compose-\ub124\ud2b8\uc6cc\ud06c-\uaca9\ub9ac",children:"Docker Compose \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  rabbitmq:\n    image: rabbitmq:3-management\n    networks:\n      - backend  # \ubc31\uc5d4\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub9cc\n    ports:\n      - "127.0.0.1:15672:15672"  # Management UI (localhost\ub9cc)\n\n  api:\n    image: my-api:latest\n    networks:\n      - backend\n      - frontend\n    environment:\n      - RABBITMQ_HOST=rabbitmq\n\n  nginx:\n    image: nginx:latest\n    networks:\n      - frontend  # \ud504\ub860\ud2b8\uc5d4\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub9cc\n    ports:\n      - "80:80"\n      - "443:443"\n\nnetworks:\n  backend:\n    internal: true  # \uc678\ubd80 \uc811\uadfc \ucc28\ub2e8\n  frontend:\n    driver: bridge\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-\uac10\uc0ac-\ub85c\uadf8",children:"\ud83d\udcdd \uac10\uc0ac \ub85c\uadf8"}),"\n",(0,t.jsx)(n.h3,{id:"\ub85c\uadf8-\uc124\uc815",children:"\ub85c\uadf8 \uc124\uc815"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"# rabbitmq.conf\n\n# \ub85c\uadf8 \ub808\ubca8\nlog.console.level = info\nlog.file.level = info\n\n# \uc5f0\uacb0 \ub85c\uadf8\nlog.connection.level = info\n\n# \ucc44\ub110 \ub85c\uadf8\nlog.channel.level = info\n\n# \ud050 \ub85c\uadf8\nlog.queue.level = info\n\n# \ub85c\uadf8 \ud30c\uc77c \ub85c\ud14c\uc774\uc158\nlog.file.rotation.date = $D0\nlog.file.rotation.size = 10485760  # 10MB\n"})}),"\n",(0,t.jsx)(n.h3,{id:"python-\uac10\uc0ac-\ub85c\uadf8",children:"Python \uac10\uc0ac \ub85c\uadf8"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# audit_logger.py\nimport pika\nimport json\nimport logging\nfrom datetime import datetime\n\nclass AuditLogger:\n    \"\"\"\uac10\uc0ac \ub85c\uae45\"\"\"\n\n    def __init__(self):\n        # \ub85c\uac70 \uc124\uc815\n        logging.basicConfig(\n            level=logging.INFO,\n            format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n            handlers=[\n                logging.FileHandler('audit.log'),\n                logging.StreamHandler()\n            ]\n        )\n        self.logger = logging.getLogger('RabbitMQ-Audit')\n\n    def log_connection(self, user: str, vhost: str, action: str):\n        \"\"\"\uc5f0\uacb0 \ub85c\uadf8\"\"\"\n        log_entry = {\n            'timestamp': datetime.now().isoformat(),\n            'type': 'connection',\n            'user': user,\n            'vhost': vhost,\n            'action': action\n        }\n        self.logger.info(json.dumps(log_entry))\n\n    def log_publish(self, user: str, exchange: str, routing_key: str):\n        \"\"\"\ubc1c\ud589 \ub85c\uadf8\"\"\"\n        log_entry = {\n            'timestamp': datetime.now().isoformat(),\n            'type': 'publish',\n            'user': user,\n            'exchange': exchange,\n            'routing_key': routing_key\n        }\n        self.logger.info(json.dumps(log_entry))\n\n    def log_consume(self, user: str, queue: str):\n        \"\"\"\uc18c\ube44 \ub85c\uadf8\"\"\"\n        log_entry = {\n            'timestamp': datetime.now().isoformat(),\n            'type': 'consume',\n            'user': user,\n            'queue': queue\n        }\n        self.logger.info(json.dumps(log_entry))\n\n# \uc0ac\uc6a9 \uc608\nif __name__ == '__main__':\n    audit = AuditLogger()\n\n    audit.log_connection('admin', '/', 'connect')\n    audit.log_publish('admin', 'orders_exchange', 'order.created')\n    audit.log_consume('worker1', 'orders_queue')\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-\ubcf4\uc548-\uccb4\ud06c\ub9ac\uc2a4\ud2b8",children:"\u26a0\ufe0f \ubcf4\uc548 \uccb4\ud06c\ub9ac\uc2a4\ud2b8"}),"\n",(0,t.jsx)(n.h3,{id:"\uc778\uc99d-\ubc0f-\uad8c\ud55c",children:"\uc778\uc99d \ubc0f \uad8c\ud55c"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uae30\ubcf8 guest \uacc4\uc815 \ube44\ud65c\uc131\ud654"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uac15\ub825\ud55c \ube44\ubc00\ubc88\ud638 \uc815\ucc45"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ucd5c\uc18c \uad8c\ud55c \uc6d0\uce59 \uc801\uc6a9"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","vHost \ubd84\ub9ac\ub85c \uaca9\ub9ac"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uc815\uae30\uc801\uc778 \uad8c\ud55c \uac10\uc0ac"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"\ub124\ud2b8\uc6cc\ud06c",children:"\ub124\ud2b8\uc6cc\ud06c"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","TLS/SSL \ud65c\uc131\ud654"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ubc29\ud654\ubcbd \uc124\uc815"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Management UI \uc811\uadfc \uc81c\ud55c"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Prometheus \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubcf4\ud638"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"\uc6b4\uc601",children:"\uc6b4\uc601"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uac10\uc0ac \ub85c\uadf8 \ud65c\uc131\ud654"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uc815\uae30\uc801\uc778 \ubcf4\uc548 \ud328\uce58"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ubaa8\ub2c8\ud130\ub9c1 \ubc0f \uc54c\ub9bc"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\ubc31\uc5c5 \ubc0f \ubcf5\uad6c \uacc4\ud68d"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\uce68\uc785 \ud0d0\uc9c0 \uc2dc\uc2a4\ud15c (IDS)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ubcf4\uc548-\uc810\uac80",children:"\ud83d\udd0d \ubcf4\uc548 \uc810\uac80"}),"\n",(0,t.jsx)(n.h3,{id:"\uc790\ub3d9\ud654\ub41c-\ubcf4\uc548-\uc810\uac80",children:"\uc790\ub3d9\ud654\ub41c \ubcf4\uc548 \uc810\uac80"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# security_check.py\nimport requests\nfrom requests.auth import HTTPBasicAuth\n\nclass SecurityChecker:\n    """\ubcf4\uc548 \uc810\uac80 \ub3c4\uad6c"""\n\n    def __init__(self, host=\'localhost\', user=\'admin\', password=\'admin\'):\n        self.base_url = f\'http://{host}:15672/api\'\n        self.auth = HTTPBasicAuth(user, password)\n\n    def check_default_user(self):\n        """\uae30\ubcf8 \uc0ac\uc6a9\uc790 \uccb4\ud06c"""\n        response = requests.get(\n            f\'{self.base_url}/users\',\n            auth=self.auth\n        )\n        users = response.json()\n\n        issues = []\n        for user in users:\n            if user[\'name\'] == \'guest\':\n                issues.append("\u26a0\ufe0f  Default \'guest\' user is enabled")\n\n        return issues\n\n    def check_weak_passwords(self):\n        """\uc57d\ud55c \ube44\ubc00\ubc88\ud638 \uccb4\ud06c (\uae38\uc774\ub9cc)"""\n        # \uc2e4\uc81c\ub85c\ub294 \ube44\ubc00\ubc88\ud638 \uc815\ucc45 \uc11c\ubc84\uc5d0\uc11c \ud655\uc778\n        return []\n\n    def check_permissions(self):\n        """\uacfc\ub3c4\ud55c \uad8c\ud55c \uccb4\ud06c"""\n        response = requests.get(\n            f\'{self.base_url}/users\',\n            auth=self.auth\n        )\n        users = response.json()\n\n        issues = []\n        for user in users:\n            tags = user.get(\'tags\', \'\')\n            if \'administrator\' in tags and user[\'name\'] != \'admin\':\n                issues.append(\n                    f"\u26a0\ufe0f  User \'{user[\'name\']}\' has administrator tag"\n                )\n\n        return issues\n\n    def check_tls(self):\n        """TLS \ud65c\uc131\ud654 \uccb4\ud06c"""\n        # \uc2e4\uc81c\ub85c\ub294 \ud3ec\ud2b8 5671 \uccb4\ud06c\n        issues = []\n        # \uc2dc\ubbac\ub808\uc774\uc158\n        # if not tls_enabled:\n        #     issues.append("\u26a0\ufe0f  TLS is not enabled")\n\n        return issues\n\n    def run_all_checks(self):\n        """\ubaa8\ub4e0 \uccb4\ud06c \uc2e4\ud589"""\n        print(" Security Check Report")\n        print(" " + "="*50)\n\n        all_issues = []\n\n        # \uccb4\ud06c \uc2e4\ud589\n        checks = [\n            ("Default Users", self.check_default_user),\n            ("Weak Passwords", self.check_weak_passwords),\n            ("Permissions", self.check_permissions),\n            ("TLS", self.check_tls),\n        ]\n\n        for check_name, check_func in checks:\n            print(f"\\n Checking {check_name}...")\n            issues = check_func()\n\n            if issues:\n                all_issues.extend(issues)\n                for issue in issues:\n                    print(f"   {issue}")\n            else:\n                print("   \u2713 OK")\n\n        # \uc694\uc57d\n        print(f"\\n Summary:")\n        print(f" Total issues found: {len(all_issues)}")\n\n        if all_issues:\n            print("\\n Action Required:")\n            for issue in all_issues:\n                print(f"   \u2022 {issue}")\n\n# \uc0ac\uc6a9 \uc608\nif __name__ == \'__main__\':\n    checker = SecurityChecker()\n    checker.run_all_checks()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-\ud575\uc2ec-\uc815\ub9ac",children:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\uc0ac\uc6a9\uc790 \uad00\ub9ac"}),": \ucd5c\uc18c \uad8c\ud55c \uc6d0\uce59, guest \ube44\ud65c\uc131\ud654"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"vHost \ubd84\ub9ac"}),": \ud658\uacbd\ubcc4, \ud300\ubcc4 \uaca9\ub9ac"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TLS/SSL"}),": \ub370\uc774\ud130 \uc554\ud638\ud654"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548"}),": \ubc29\ud654\ubcbd, \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\uac10\uc0ac \ub85c\uadf8"}),": \ubaa8\ub4e0 \ud65c\ub3d9 \uae30\ub85d"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ub9c8\ubb34\ub9ac",children:"\ud83d\udcda \ub9c8\ubb34\ub9ac"}),"\n",(0,t.jsx)(n.p,{children:"\uace0\uae09\ud3b8\uc744 \uc644\ub8cc\ud588\uc2b5\ub2c8\ub2e4! \uc774\uc81c \uc2e4\uc804 \uc608\uc81c\ub4e4\uc744 \uc0b4\ud3b4\ubcf4\uc138\uc694."}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,t.jsx)(n.a,{href:"../examples/intro",children:"\uc2e4\uc804 \uc608\uc81c \ubaa9\ub85d"})]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(6540);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);