"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[9740],{5989:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rabbitmq/advanced/clustering","title":"Clustering - \ud074\ub7ec\uc2a4\ud130\ub9c1","description":"\uace0\uac00\uc6a9\uc131\uc744 \uc704\ud55c RabbitMQ \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!","source":"@site/docs/rabbitmq/advanced/clustering.md","sourceDirName":"rabbitmq/advanced","slug":"/rabbitmq/advanced/clustering","permalink":"/docs/rabbitmq/advanced/clustering","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rabbitmq/advanced/clustering.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"rabbitmqSidebar","previous":{"title":"\uace0\uae09\ud3b8 \uc18c\uac1c","permalink":"/docs/rabbitmq/advanced/intro"},"next":{"title":"Monitoring - \ubaa8\ub2c8\ud130\ub9c1","permalink":"/docs/rabbitmq/advanced/monitoring"}}');var t=r(4848),o=r(8453);const s={sidebar_position:2},a="Clustering - \ud074\ub7ec\uc2a4\ud130\ub9c1",c={},l=[{value:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c",id:"-\ud559\uc2b5-\ubaa9\ud45c",level:2},{value:"\ud83d\udcca \ud074\ub7ec\uc2a4\ud130 \uad6c\uc870",id:"-\ud074\ub7ec\uc2a4\ud130-\uad6c\uc870",level:2},{value:"\ud83d\udd27 Docker Compose\ub85c \ud074\ub7ec\uc2a4\ud130 \uad6c\ucd95",id:"-docker-compose\ub85c-\ud074\ub7ec\uc2a4\ud130-\uad6c\ucd95",level:2},{value:"docker-compose.yml",id:"docker-composeyml",level:3},{value:"\ud074\ub7ec\uc2a4\ud130 \uc2dc\uc791 \ubc0f \uc124\uc815",id:"\ud074\ub7ec\uc2a4\ud130-\uc2dc\uc791-\ubc0f-\uc124\uc815",level:3},{value:"\ud83d\udca1 Quorum Queue (\uad8c\uc7a5)",id:"-quorum-queue-\uad8c\uc7a5",level:2},{value:"Python \ucf54\ub4dc\ub85c Quorum Queue \uc0dd\uc131",id:"python-\ucf54\ub4dc\ub85c-quorum-queue-\uc0dd\uc131",level:3},{value:"Producer &amp; Consumer",id:"producer--consumer",level:3},{value:"\ud83d\udd0d \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \uba85\ub839\uc5b4",id:"-\ud074\ub7ec\uc2a4\ud130-\uad00\ub9ac-\uba85\ub839\uc5b4",level:2},{value:"\ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc \ud655\uc778",id:"\ud074\ub7ec\uc2a4\ud130-\uc0c1\ud0dc-\ud655\uc778",level:3},{value:"\ub178\ub4dc \ucd94\uac00/\uc81c\uac70",id:"\ub178\ub4dc-\ucd94\uac00\uc81c\uac70",level:3},{value:"\ud050 \ub3d9\uae30\ud654",id:"\ud050-\ub3d9\uae30\ud654",level:3},{value:"\ud83e\uddea \uc7a5\uc560 \ubcf5\uad6c \ud14c\uc2a4\ud2b8",id:"-\uc7a5\uc560-\ubcf5\uad6c-\ud14c\uc2a4\ud2b8",level:2},{value:"\uc2dc\ub098\ub9ac\uc624 1: \ub178\ub4dc \uc7a5\uc560",id:"\uc2dc\ub098\ub9ac\uc624-1-\ub178\ub4dc-\uc7a5\uc560",level:3},{value:"\uc2dc\ub098\ub9ac\uc624 2: Split-Brain \uc2dc\ubbac\ub808\uc774\uc158",id:"\uc2dc\ub098\ub9ac\uc624-2-split-brain-\uc2dc\ubbac\ub808\uc774\uc158",level:3},{value:"\ud83d\udca1 Classic Mirrored Queue (\ub808\uac70\uc2dc)",id:"-classic-mirrored-queue-\ub808\uac70\uc2dc",level:2},{value:"Policy \uc124\uc815 (CLI)",id:"policy-\uc124\uc815-cli",level:3},{value:"\u2696\ufe0f Quorum Queue vs Classic Mirrored Queue",id:"\ufe0f-quorum-queue-vs-classic-mirrored-queue",level:2},{value:"\ud83d\udcca \ubaa8\ub2c8\ud130\ub9c1",id:"-\ubaa8\ub2c8\ud130\ub9c1",level:2},{value:"Python\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc \ud655\uc778",id:"python\uc73c\ub85c-\ud074\ub7ec\uc2a4\ud130-\uc0c1\ud0dc-\ud655\uc778",level:3},{value:"\u26a0\ufe0f \uc8fc\uc758\uc0ac\ud56d",id:"\ufe0f-\uc8fc\uc758\uc0ac\ud56d",level:2},{value:"1. Erlang Cookie \uc77c\uce58",id:"1-erlang-cookie-\uc77c\uce58",level:3},{value:"2. \ub514\uc2a4\ud06c \uacf5\uac04 \uc8fc\uc758",id:"2-\ub514\uc2a4\ud06c-\uacf5\uac04-\uc8fc\uc758",level:3},{value:"3. \uba54\ubaa8\ub9ac \uad00\ub9ac",id:"3-\uba54\ubaa8\ub9ac-\uad00\ub9ac",level:3},{value:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac",id:"-\ud575\uc2ec-\uc815\ub9ac",level:2},{value:"\ud83d\udcda \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"clustering---\ud074\ub7ec\uc2a4\ud130\ub9c1",children:"Clustering - \ud074\ub7ec\uc2a4\ud130\ub9c1"})}),"\n",(0,t.jsx)(n.p,{children:"\uace0\uac00\uc6a9\uc131\uc744 \uc704\ud55c RabbitMQ \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,t.jsx)(n.h2,{id:"-\ud559\uc2b5-\ubaa9\ud45c",children:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"RabbitMQ \ud074\ub7ec\uc2a4\ud130 \uad6c\uc870 \uc774\ud574"}),"\n",(0,t.jsx)(n.li,{children:"\ud074\ub7ec\uc2a4\ud130 \uad6c\ucd95 \ubc0f \uc124\uc815"}),"\n",(0,t.jsx)(n.li,{children:"Quorum Queue\uc640 Classic Mirrored Queue"}),"\n",(0,t.jsx)(n.li,{children:"\ub178\ub4dc \uc7a5\uc560 \ubcf5\uad6c"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ud074\ub7ec\uc2a4\ud130-\uad6c\uc870",children:"\ud83d\udcca \ud074\ub7ec\uc2a4\ud130 \uad6c\uc870"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Node 1    \u2502\u2500\u2500\u2500\u2500\u2502   Node 2    \u2502\u2500\u2500\u2500\u2500\u2502   Node 3    \u2502\n\u2502  (Master)   \u2502     \u2502  (Mirror)   \u2502     \u2502  (Mirror)   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502                   \u2502                   \u2502\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    Erlang Cluster\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\uc7a5\uc810"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\uace0\uac00\uc6a9\uc131 (High Availability)"}),"\n",(0,t.jsx)(n.li,{children:"\ubd80\ud558 \ubd84\uc0b0"}),"\n",(0,t.jsx)(n.li,{children:"\uc7a5\uc560 \ubcf5\uad6c (Failover)"}),"\n",(0,t.jsx)(n.li,{children:"\ud655\uc7a5\uc131"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-docker-compose\ub85c-\ud074\ub7ec\uc2a4\ud130-\uad6c\ucd95",children:"\ud83d\udd27 Docker Compose\ub85c \ud074\ub7ec\uc2a4\ud130 \uad6c\ucd95"}),"\n",(0,t.jsx)(n.h3,{id:"docker-composeyml",children:"docker-compose.yml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  rabbitmq-1:\n    image: rabbitmq:3-management\n    hostname: rabbitmq-1\n    environment:\n      - RABBITMQ_ERLANG_COOKIE=secret_cookie_value\n      - RABBITMQ_DEFAULT_USER=admin\n      - RABBITMQ_DEFAULT_PASS=admin123\n    ports:\n      - "5672:5672"\n      - "15672:15672"\n    networks:\n      - rabbitmq-cluster\n    volumes:\n      - rabbitmq-1-data:/var/lib/rabbitmq\n\n  rabbitmq-2:\n    image: rabbitmq:3-management\n    hostname: rabbitmq-2\n    environment:\n      - RABBITMQ_ERLANG_COOKIE=secret_cookie_value\n      - RABBITMQ_DEFAULT_USER=admin\n      - RABBITMQ_DEFAULT_PASS=admin123\n    ports:\n      - "5673:5672"\n      - "15673:15672"\n    networks:\n      - rabbitmq-cluster\n    volumes:\n      - rabbitmq-2-data:/var/lib/rabbitmq\n    depends_on:\n      - rabbitmq-1\n\n  rabbitmq-3:\n    image: rabbitmq:3-management\n    hostname: rabbitmq-3\n    environment:\n      - RABBITMQ_ERLANG_COOKIE=secret_cookie_value\n      - RABBITMQ_DEFAULT_USER=admin\n      - RABBITMQ_DEFAULT_PASS=admin123\n    ports:\n      - "5674:5672"\n      - "15674:15672"\n    networks:\n      - rabbitmq-cluster\n    volumes:\n      - rabbitmq-3-data:/var/lib/rabbitmq\n    depends_on:\n      - rabbitmq-1\n\nnetworks:\n  rabbitmq-cluster:\n    driver: bridge\n\nvolumes:\n  rabbitmq-1-data:\n  rabbitmq-2-data:\n  rabbitmq-3-data:\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\ud074\ub7ec\uc2a4\ud130-\uc2dc\uc791-\ubc0f-\uc124\uc815",children:"\ud074\ub7ec\uc2a4\ud130 \uc2dc\uc791 \ubc0f \uc124\uc815"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. \ucee8\ud14c\uc774\ub108 \uc2dc\uc791\ndocker-compose up -d\n\n# 2. \ub178\ub4dc\ub4e4\uc774 \uc2e4\ud589 \uc911\uc778\uc9c0 \ud655\uc778\ndocker-compose ps\n\n# 3. Node 2\ub97c Node 1\uc5d0 \uc870\uc778\ndocker exec -it rabbitmq-2 rabbitmqctl stop_app\ndocker exec -it rabbitmq-2 rabbitmqctl reset\ndocker exec -it rabbitmq-2 rabbitmqctl join_cluster rabbit@rabbitmq-1\ndocker exec -it rabbitmq-2 rabbitmqctl start_app\n\n# 4. Node 3\ub97c Node 1\uc5d0 \uc870\uc778\ndocker exec -it rabbitmq-3 rabbitmqctl stop_app\ndocker exec -it rabbitmq-3 rabbitmqctl reset\ndocker exec -it rabbitmq-3 rabbitmqctl join_cluster rabbit@rabbitmq-1\ndocker exec -it rabbitmq-3 rabbitmqctl start_app\n\n# 5. \ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc \ud655\uc778\ndocker exec -it rabbitmq-1 rabbitmqctl cluster_status\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-quorum-queue-\uad8c\uc7a5",children:"\ud83d\udca1 Quorum Queue (\uad8c\uc7a5)"}),"\n",(0,t.jsx)(n.h3,{id:"python-\ucf54\ub4dc\ub85c-quorum-queue-\uc0dd\uc131",children:"Python \ucf54\ub4dc\ub85c Quorum Queue \uc0dd\uc131"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# quorum_queue_setup.py\nimport pika\n\ndef setup_quorum_queue():\n    \"\"\"Quorum Queue \uc0dd\uc131\"\"\"\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost', 5672)\n    )\n    channel = connection.channel()\n\n    # \ud83d\udd11 Quorum Queue \uc120\uc5b8\n    channel.queue_declare(\n        queue='orders.quorum',\n        durable=True,\n        arguments={\n            'x-queue-type': 'quorum',  # Quorum Queue\n            'x-max-length': 10000,     # \ucd5c\ub300 \uba54\uc2dc\uc9c0 \uc218\n            'x-max-in-memory-length': 0  # \ubaa8\ub450 \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\n        }\n    )\n\n    print(\" [\u2713] Quorum queue created: orders.quorum\")\n    connection.close()\n\nif __name__ == '__main__':\n    setup_quorum_queue()\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Quorum Queue \ud2b9\uc9d5"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 \ub370\uc774\ud130 \uc548\uc804\uc131 (Replication)"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 \uc790\ub3d9 \uc7a5\uc560 \ubcf5\uad6c"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Poison Message \ucc98\ub9ac"}),"\n",(0,t.jsx)(n.li,{children:"\u274c \uba54\uc2dc\uc9c0 \uc6b0\uc120\uc21c\uc704 \ubbf8\uc9c0\uc6d0"}),"\n",(0,t.jsx)(n.li,{children:"\u274c TTL \ubbf8\uc9c0\uc6d0 (\ud050 \ub808\ubca8\ub9cc \uac00\ub2a5)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"producer--consumer",children:"Producer & Consumer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# producer.py\nimport pika\nimport json\n\ndef send_order(order_id: str):\n    \"\"\"\uc8fc\ubb38 \ubc1c\ud589 (Quorum Queue)\"\"\"\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost', 5672)\n    )\n    channel = connection.channel()\n\n    order_data = {\n        'order_id': order_id,\n        'amount': 100.0,\n        'status': 'pending'\n    }\n\n    channel.basic_publish(\n        exchange='',\n        routing_key='orders.quorum',\n        body=json.dumps(order_data),\n        properties=pika.BasicProperties(\n            delivery_mode=2,  # Persistent\n            content_type='application/json'\n        )\n    )\n\n    print(f\" [x] Order sent: {order_id}\")\n    connection.close()\n\n# \uc0ac\uc6a9 \uc608\nif __name__ == '__main__':\n    for i in range(10):\n        send_order(f'ORD-{i+1:03d}')\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# consumer.py\nimport pika\nimport json\n\ndef callback(ch, method, properties, body):\n    """\uc8fc\ubb38 \ucc98\ub9ac"""\n    order = json.loads(body.decode())\n    print(f" [x] Processing order: {order[\'order_id\']}")\n\n    # \ucc98\ub9ac \ud6c4 ACK\n    ch.basic_ack(delivery_tag=method.delivery_tag)\n\ndef start_consumer(port=5672):\n    """Consumer \uc2dc\uc791"""\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters(\'localhost\', port)\n    )\n    channel = connection.channel()\n\n    channel.basic_qos(prefetch_count=1)\n\n    channel.basic_consume(\n        queue=\'orders.quorum\',\n        on_message_callback=callback\n    )\n\n    print(f\' [*] Consumer waiting on port {port}...\')\n    channel.start_consuming()\n\nif __name__ == \'__main__\':\n    import sys\n    port = int(sys.argv[1]) if len(sys.argv) > 1 else 5672\n\n    try:\n        start_consumer(port)\n    except KeyboardInterrupt:\n        print(\'\\nConsumer stopped\')\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-\ud074\ub7ec\uc2a4\ud130-\uad00\ub9ac-\uba85\ub839\uc5b4",children:"\ud83d\udd0d \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \uba85\ub839\uc5b4"}),"\n",(0,t.jsx)(n.h3,{id:"\ud074\ub7ec\uc2a4\ud130-\uc0c1\ud0dc-\ud655\uc778",children:"\ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc \ud655\uc778"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc\ndocker exec rabbitmq-1 rabbitmqctl cluster_status\n\n# \ub178\ub4dc \ubaa9\ub85d\ndocker exec rabbitmq-1 rabbitmqctl list_nodes\n\n# \ud050 \ubaa9\ub85d (\ubaa8\ub4e0 \ub178\ub4dc)\ndocker exec rabbitmq-1 rabbitmqctl list_queues name type durable auto_delete arguments\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\ub178\ub4dc-\ucd94\uac00\uc81c\uac70",children:"\ub178\ub4dc \ucd94\uac00/\uc81c\uac70"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \ub178\ub4dc \ucd94\uac00\ndocker exec rabbitmq-4 rabbitmqctl stop_app\ndocker exec rabbitmq-4 rabbitmqctl join_cluster rabbit@rabbitmq-1\ndocker exec rabbitmq-4 rabbitmqctl start_app\n\n# \ub178\ub4dc \uc81c\uac70\ndocker exec rabbitmq-2 rabbitmqctl stop_app\ndocker exec rabbitmq-1 rabbitmqctl forget_cluster_node rabbit@rabbitmq-2\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\ud050-\ub3d9\uae30\ud654",children:"\ud050 \ub3d9\uae30\ud654"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \ubaa8\ub4e0 \ubbf8\ub7ec\ub9c1 \ud050 \ub3d9\uae30\ud654\ndocker exec rabbitmq-1 rabbitmqctl sync_queue orders.quorum\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\uc7a5\uc560-\ubcf5\uad6c-\ud14c\uc2a4\ud2b8",children:"\ud83e\uddea \uc7a5\uc560 \ubcf5\uad6c \ud14c\uc2a4\ud2b8"}),"\n",(0,t.jsx)(n.h3,{id:"\uc2dc\ub098\ub9ac\uc624-1-\ub178\ub4dc-\uc7a5\uc560",children:"\uc2dc\ub098\ub9ac\uc624 1: \ub178\ub4dc \uc7a5\uc560"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# test_failover.py\nimport pika\nimport time\nimport subprocess\n\ndef test_node_failure():\n    \"\"\"\ub178\ub4dc \uc7a5\uc560 \ud14c\uc2a4\ud2b8\"\"\"\n\n    # 1. Producer \uc2dc\uc791 (Node 1 \uc0ac\uc6a9)\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost', 5672)\n    )\n    channel = connection.channel()\n\n    # \uba54\uc2dc\uc9c0 10\uac1c \ubc1c\ud589\n    for i in range(10):\n        channel.basic_publish(\n            exchange='',\n            routing_key='orders.quorum',\n            body=f'Order {i+1}'\n        )\n        print(f\" [x] Sent: Order {i+1}\")\n        time.sleep(0.5)\n\n    connection.close()\n\n    # 2. Node 1 \uc911\uc9c0 (\uc7a5\uc560 \uc2dc\ubbac\ub808\uc774\uc158)\n    print(\"\\n [!] Stopping Node 1...\")\n    subprocess.run(['docker-compose', 'stop', 'rabbitmq-1'])\n    time.sleep(3)\n\n    # 3. Node 2\ub85c \uc5f0\uacb0 \uc2dc\ub3c4\n    print(\"\\n [\u2192] Connecting to Node 2...\")\n    try:\n        connection = pika.BlockingConnection(\n            pika.ConnectionParameters('localhost', 5673)\n        )\n        channel = connection.channel()\n\n        # Consumer\ub85c \uba54\uc2dc\uc9c0 \ud655\uc778\n        for _ in range(10):\n            method, properties, body = channel.basic_get(\n                queue='orders.quorum',\n                auto_ack=True\n            )\n            if method:\n                print(f\" [\u2713] Received from Node 2: {body.decode()}\")\n\n        connection.close()\n        print(\"\\n [\u2713] Failover successful! Messages preserved.\")\n\n    except Exception as e:\n        print(f\"\\n [\u2717] Failover failed: {e}\")\n\n    # 4. Node 1 \uc7ac\uc2dc\uc791\n    print(\"\\n [\u2192] Restarting Node 1...\")\n    subprocess.run(['docker-compose', 'start', 'rabbitmq-1'])\n\nif __name__ == '__main__':\n    test_node_failure()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\uc2dc\ub098\ub9ac\uc624-2-split-brain-\uc2dc\ubbac\ub808\uc774\uc158",children:"\uc2dc\ub098\ub9ac\uc624 2: Split-Brain \uc2dc\ubbac\ub808\uc774\uc158"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \ub124\ud2b8\uc6cc\ud06c \ubd84\ub9ac (Node 1\uacfc Node 2 \uc0ac\uc774)\ndocker network disconnect rabbitmq-cluster rabbitmq-2\n\n# \uc0c1\ud0dc \ud655\uc778\ndocker exec rabbitmq-1 rabbitmqctl cluster_status\ndocker exec rabbitmq-2 rabbitmqctl cluster_status\n\n# \ub124\ud2b8\uc6cc\ud06c \ubcf5\uad6c\ndocker network connect rabbitmq-cluster rabbitmq-2\n\n# \ud074\ub7ec\uc2a4\ud130 \uc7ac\ub3d9\uae30\ud654\ndocker exec rabbitmq-2 rabbitmqctl stop_app\ndocker exec rabbitmq-2 rabbitmqctl start_app\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-classic-mirrored-queue-\ub808\uac70\uc2dc",children:"\ud83d\udca1 Classic Mirrored Queue (\ub808\uac70\uc2dc)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# mirrored_queue_setup.py\nimport pika\n\ndef setup_mirrored_queue():\n    """Classic Mirrored Queue \uc0dd\uc131"""\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters(\'localhost\', 5672)\n    )\n    channel = connection.channel()\n\n    # Policy \uc124\uc815 (Management UI \ub610\ub294 CLI\ub85c)\n    # rabbitmqctl set_policy ha-all "^orders\\." \\\n    #   \'{"ha-mode":"all","ha-sync-mode":"automatic"}\' \\\n    #   --apply-to queues\n\n    # Queue \uc120\uc5b8\n    channel.queue_declare(\n        queue=\'orders.mirrored\',\n        durable=True\n    )\n\n    print(" [\u2713] Mirrored queue created: orders.mirrored")\n    print(" [i] Apply policy: ha-all")\n    connection.close()\n\nif __name__ == \'__main__\':\n    setup_mirrored_queue()\n'})}),"\n",(0,t.jsx)(n.h3,{id:"policy-\uc124\uc815-cli",children:"Policy \uc124\uc815 (CLI)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# \ubaa8\ub4e0 \ud050 \ubbf8\ub7ec\ub9c1 (ha-all)\ndocker exec rabbitmq-1 rabbitmqctl set_policy ha-all \\\n  "^" \\\n  \'{"ha-mode":"all","ha-sync-mode":"automatic"}\' \\\n  --apply-to queues\n\n# \ud2b9\uc815 \ud328\ud134 \ubbf8\ub7ec\ub9c1\ndocker exec rabbitmq-1 rabbitmqctl set_policy ha-orders \\\n  "^orders\\." \\\n  \'{"ha-mode":"exactly","ha-params":2,"ha-sync-mode":"automatic"}\' \\\n  --apply-to queues\n\n# Policy \ubaa9\ub85d\ndocker exec rabbitmq-1 rabbitmqctl list_policies\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-quorum-queue-vs-classic-mirrored-queue",children:"\u2696\ufe0f Quorum Queue vs Classic Mirrored Queue"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\ud2b9\uc9d5"}),(0,t.jsx)(n.th,{children:"Quorum Queue"}),(0,t.jsx)(n.th,{children:"Classic Mirrored"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\ub370\uc774\ud130 \uc548\uc804\uc131"})}),(0,t.jsx)(n.td,{children:"\u2705 Raft \ud569\uc758 \uc54c\uace0\ub9ac\uc998"}),(0,t.jsx)(n.td,{children:"\u26a0\ufe0f Master-Slave"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\uc131\ub2a5"})}),(0,t.jsx)(n.td,{children:"\u26a1 \ube60\ub984"}),(0,t.jsx)(n.td,{children:"\ud83d\udc0c \ub290\ub9bc"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\uba54\ubaa8\ub9ac \uc0ac\uc6a9"})}),(0,t.jsx)(n.td,{children:"\ud83d\udcbe \ud6a8\uc728\uc801"}),(0,t.jsx)(n.td,{children:"\ud83d\udcbe \ub192\uc74c"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Poison Message"})}),(0,t.jsx)(n.td,{children:"\u2705 \uc790\ub3d9 \ucc98\ub9ac"}),(0,t.jsx)(n.td,{children:"\u274c \uc218\ub3d9 \ucc98\ub9ac"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\uba54\uc2dc\uc9c0 \uc6b0\uc120\uc21c\uc704"})}),(0,t.jsx)(n.td,{children:"\u274c \ubbf8\uc9c0\uc6d0"}),(0,t.jsx)(n.td,{children:"\u2705 \uc9c0\uc6d0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"TTL"})}),(0,t.jsx)(n.td,{children:"\u26a0\ufe0f \ud050 \ub808\ubca8\ub9cc"}),(0,t.jsx)(n.td,{children:"\u2705 \uc644\uc804 \uc9c0\uc6d0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"\uad8c\uc7a5 \uc0ac\uc6a9"})}),(0,t.jsx)(n.td,{children:"\u2705 \uc2e0\uaddc \ud504\ub85c\uc81d\ud2b8"}),(0,t.jsx)(n.td,{children:"\u274c \ub808\uac70\uc2dc\ub9cc"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"-\ubaa8\ub2c8\ud130\ub9c1",children:"\ud83d\udcca \ubaa8\ub2c8\ud130\ub9c1"}),"\n",(0,t.jsx)(n.h3,{id:"python\uc73c\ub85c-\ud074\ub7ec\uc2a4\ud130-\uc0c1\ud0dc-\ud655\uc778",children:"Python\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc \ud655\uc778"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# cluster_monitor.py\nimport requests\nfrom requests.auth import HTTPBasicAuth\n\ndef get_cluster_status():\n    """\ud074\ub7ec\uc2a4\ud130 \uc0c1\ud0dc \uc870\ud68c"""\n    url = \'http://localhost:15672/api/nodes\'\n    auth = HTTPBasicAuth(\'admin\', \'admin123\')\n\n    response = requests.get(url, auth=auth)\n    nodes = response.json()\n\n    print(" Cluster Status:")\n    print(" " + "="*50)\n\n    for node in nodes:\n        print(f" Node: {node[\'name\']}")\n        print(f"   Running: {node[\'running\']}")\n        print(f"   Memory: {node[\'mem_used\'] / 1024 / 1024:.2f} MB")\n        print(f"   Disk Free: {node[\'disk_free\'] / 1024 / 1024:.2f} MB")\n        print(f"   Uptime: {node[\'uptime\'] / 1000:.0f}s")\n        print()\n\nif __name__ == \'__main__\':\n    get_cluster_status()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-\uc8fc\uc758\uc0ac\ud56d",children:"\u26a0\ufe0f \uc8fc\uc758\uc0ac\ud56d"}),"\n",(0,t.jsx)(n.h3,{id:"1-erlang-cookie-\uc77c\uce58",children:"1. Erlang Cookie \uc77c\uce58"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# \ubaa8\ub4e0 \ub178\ub4dc\uc758 Erlang Cookie\uac00 \uac19\uc544\uc57c \ud568\necho "secret_cookie_value" > /var/lib/rabbitmq/.erlang.cookie\nchmod 400 /var/lib/rabbitmq/.erlang.cookie\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-\ub514\uc2a4\ud06c-\uacf5\uac04-\uc8fc\uc758",children:"2. \ub514\uc2a4\ud06c \uacf5\uac04 \uc8fc\uc758"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \ub514\uc2a4\ud06c \ubd80\uc871 \uc2dc \ub178\ub4dc \uc815\uc9c0\n# /etc/rabbitmq/rabbitmq.conf\ndisk_free_limit.relative = 1.5\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-\uba54\ubaa8\ub9ac-\uad00\ub9ac",children:"3. \uba54\ubaa8\ub9ac \uad00\ub9ac"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \uba54\ubaa8\ub9ac \ud55c\uacc4 \uc124\uc815\n# /etc/rabbitmq/rabbitmq.conf\nvm_memory_high_watermark.relative = 0.4\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-\ud575\uc2ec-\uc815\ub9ac",children:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Quorum Queue"}),": \uc2e0\uaddc \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad8c\uc7a5, Raft \ud569\uc758 \uc54c\uace0\ub9ac\uc998"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Classic Mirrored"}),": \ub808\uac70\uc2dc, \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uacc4\ud68d \ud544\uc694"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Erlang Cookie"}),": \ud074\ub7ec\uc2a4\ud130 \uc778\uc99d\uc5d0 \ud544\uc218"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\uc7a5\uc560 \ubcf5\uad6c"}),": \uc790\ub3d9 Failover, \uba54\uc2dc\uc9c0 \ubcf4\uc874"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83d\udcda \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,t.jsx)(n.a,{href:"./monitoring",children:"\ubaa8\ub2c8\ud130\ub9c1"})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var i=r(6540);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);