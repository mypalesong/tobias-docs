"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[4397],{8453:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>t});var i=r(6540);const a={},s=i.createContext(a);function l(n){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),i.createElement(s.Provider,{value:e},n.children)}},8951:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"rabbitmq/basic/routing","title":"Routing - \uc120\ud0dd\uc801 \ub77c\uc6b0\ud305","description":"Routing Key\ub97c \uc0ac\uc6a9\ud574 \uba54\uc2dc\uc9c0\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \uc804\ub2ec\ud558\ub294 \ud328\ud134\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!","source":"@site/docs/rabbitmq/basic/routing.md","sourceDirName":"rabbitmq/basic","slug":"/rabbitmq/basic/routing","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/routing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rabbitmq/basic/routing.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"rabbitmqSidebar","previous":{"title":"Publish/Subscribe - \ube0c\ub85c\ub4dc\uce90\uc2a4\ud305","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/publish-subscribe"},"next":{"title":"Topics - \ud328\ud134 \ub9e4\uce6d","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/topics"}}');var a=r(4848),s=r(8453);const l={sidebar_position:7},t="Routing - \uc120\ud0dd\uc801 \ub77c\uc6b0\ud305",c={},o=[{value:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c",id:"-\ud559\uc2b5-\ubaa9\ud45c",level:2},{value:"\ud83d\udcca \ud328\ud134 \uad6c\uc870",id:"-\ud328\ud134-\uad6c\uc870",level:2},{value:"\ud83d\udcdd \uc2dc\ub098\ub9ac\uc624",id:"-\uc2dc\ub098\ub9ac\uc624",level:2},{value:"\ud83d\udd27 \uad6c\ud604",id:"-\uad6c\ud604",level:2},{value:"Publisher (\ub85c\uadf8 \ubc1c\ud589)",id:"publisher-\ub85c\uadf8-\ubc1c\ud589",level:3},{value:"Error Handler (ERROR\ub9cc \ucc98\ub9ac)",id:"error-handler-error\ub9cc-\ucc98\ub9ac",level:3},{value:"Warning Handler (WARNING\ub9cc \ucc98\ub9ac)",id:"warning-handler-warning\ub9cc-\ucc98\ub9ac",level:3},{value:"All Logger (\ubaa8\ub4e0 \ub808\ubca8 \ucc98\ub9ac)",id:"all-logger-\ubaa8\ub4e0-\ub808\ubca8-\ucc98\ub9ac",level:3},{value:"\ud83e\uddea \ud14c\uc2a4\ud2b8 \ucf54\ub4dc",id:"-\ud14c\uc2a4\ud2b8-\ucf54\ub4dc",level:2},{value:"\ud83c\udfa8 \uc2e4\ud589 \uc608\uc81c",id:"-\uc2e4\ud589-\uc608\uc81c",level:2},{value:"1. Handler\ub4e4 \uc2e4\ud589",id:"1-handler\ub4e4-\uc2e4\ud589",level:3},{value:"2. \ub85c\uadf8 \ubc1c\ud589",id:"2-\ub85c\uadf8-\ubc1c\ud589",level:3},{value:"\ud83d\udca1 \ud575\uc2ec \uac1c\ub150",id:"-\ud575\uc2ec-\uac1c\ub150",level:2},{value:"1. Direct Exchange",id:"1-direct-exchange",level:3},{value:"2. Routing Key",id:"2-routing-key",level:3},{value:"3. \uc5ec\ub7ec \ubc14\uc778\ub529",id:"3-\uc5ec\ub7ec-\ubc14\uc778\ub529",level:3},{value:"\ud83d\udd0d Exchange \ud0c0\uc785 \ube44\uad50",id:"-exchange-\ud0c0\uc785-\ube44\uad50",level:2},{value:"Fanout vs Direct",id:"fanout-vs-direct",level:3},{value:"\ud83d\udca1 \uc2e4\uc804 \ud65c\uc6a9 \uc0ac\ub840",id:"-\uc2e4\uc804-\ud65c\uc6a9-\uc0ac\ub840",level:2},{value:"1. \uc54c\ub9bc \ucc44\ub110 \uc120\ud0dd",id:"1-\uc54c\ub9bc-\ucc44\ub110-\uc120\ud0dd",level:3},{value:"2. \uc11c\ubc84\ubcc4 \uc791\uc5c5 \ubd84\ubc30",id:"2-\uc11c\ubc84\ubcc4-\uc791\uc5c5-\ubd84\ubc30",level:3},{value:"3. \ub85c\uadf8 \ub808\ubca8\ubcc4 \uc800\uc7a5",id:"3-\ub85c\uadf8-\ub808\ubca8\ubcc4-\uc800\uc7a5",level:3},{value:"\u2705 \uc2e4\uc2b5 \uacfc\uc81c",id:"-\uc2e4\uc2b5-\uacfc\uc81c",level:2},{value:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac",id:"-\ud575\uc2ec-\uc815\ub9ac",level:2},{value:"\ud83d\udcda \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components},{Details:r}=e;return r||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"routing---\uc120\ud0dd\uc801-\ub77c\uc6b0\ud305",children:"Routing - \uc120\ud0dd\uc801 \ub77c\uc6b0\ud305"})}),"\n",(0,a.jsx)(e.p,{children:"Routing Key\ub97c \uc0ac\uc6a9\ud574 \uba54\uc2dc\uc9c0\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \uc804\ub2ec\ud558\ub294 \ud328\ud134\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,a.jsx)(e.h2,{id:"-\ud559\uc2b5-\ubaa9\ud45c",children:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Direct Exchange \uc774\ud574"}),"\n",(0,a.jsx)(e.li,{children:"Routing Key \ud65c\uc6a9"}),"\n",(0,a.jsx)(e.li,{children:"\uc120\ud0dd\uc801 \uad6c\ub3c5 \uad6c\ud604"}),"\n",(0,a.jsx)(e.li,{children:"\uc5ec\ub7ec \ubc14\uc778\ub529 \ucc98\ub9ac"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\ud328\ud134-\uad6c\uc870",children:"\ud83d\udcca \ud328\ud134 \uad6c\uc870"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"                       \u250c\u2192 Queue (error)    \u2192 Consumer 1\nProducer \u2192 [Direct     \u251c\u2192 Queue (warning)  \u2192 Consumer 2\n            Exchange]  \u2514\u2192 Queue (info)     \u2192 Consumer 3\n   (routing_key)\n"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"\ud2b9\uc9d5"}),":"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Routing Key \uae30\ubc18 \ub77c\uc6b0\ud305"}),"\n",(0,a.jsx)(e.li,{children:"\uc815\ud655\ud55c \ub9e4\uce6d (Exact match)"}),"\n",(0,a.jsx)(e.li,{children:"\uc120\ud0dd\uc801 \uba54\uc2dc\uc9c0 \uc218\uc2e0"}),"\n",(0,a.jsx)(e.li,{children:"\ub85c\uadf8 \ub808\ubca8\ubcc4 \ucc98\ub9ac\uc5d0 \uc720\uc6a9"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\uc2dc\ub098\ub9ac\uc624",children:"\ud83d\udcdd \uc2dc\ub098\ub9ac\uc624"}),"\n",(0,a.jsx)(e.p,{children:"\ub85c\uadf8 \ub808\ubca8\ubcc4 \ucc98\ub9ac \uc2dc\uc2a4\ud15c:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Application\uc774 \ub85c\uadf8 \ub808\ubca8\uacfc \ud568\uaed8 \ubc1c\ud589"}),"\n",(0,a.jsxs)(e.li,{children:["Consumer\ub294 \uad00\uc2ec\uc788\ub294 \ub808\ubca8\ub9cc \uad6c\ub3c5","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Error Handler: ERROR\ub9cc \ucc98\ub9ac"}),"\n",(0,a.jsx)(e.li,{children:"Warning Handler: WARNING\ub9cc \ucc98\ub9ac"}),"\n",(0,a.jsx)(e.li,{children:"All Logger: \ubaa8\ub4e0 \ub808\ubca8 \ucc98\ub9ac"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\uad6c\ud604",children:"\ud83d\udd27 \uad6c\ud604"}),"\n",(0,a.jsx)(e.h3,{id:"publisher-\ub85c\uadf8-\ubc1c\ud589",children:"Publisher (\ub85c\uadf8 \ubc1c\ud589)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# routing_publisher.py\nimport pika\nimport sys\nimport json\nfrom datetime import datetime\n\nclass RoutingLogPublisher:\n    \"\"\"Routing Key\ub97c \uc0ac\uc6a9\ud55c \ub85c\uadf8 \ubc1c\ud589\uc790\"\"\"\n\n    def __init__(self, host='localhost'):\n        self.host = host\n        self.exchange = 'direct_logs'\n\n    def publish_log(self, severity: str, message: str):\n        \"\"\"\n        \ub85c\uadf8 \ubc1c\ud589\n\n        Args:\n            severity: \ub85c\uadf8 \ub808\ubca8 (info, warning, error)\n            message: \ub85c\uadf8 \uba54\uc2dc\uc9c0\n        \"\"\"\n        connection = pika.BlockingConnection(\n            pika.ConnectionParameters(self.host)\n        )\n        channel = connection.channel()\n\n        # Direct Exchange \uc120\uc5b8\n        channel.exchange_declare(\n            exchange=self.exchange,\n            exchange_type='direct'\n        )\n\n        log_data = {\n            'severity': severity,\n            'message': message,\n            'timestamp': datetime.now().isoformat()\n        }\n\n        # Routing key = severity (info, warning, error)\n        channel.basic_publish(\n            exchange=self.exchange,\n            routing_key=severity,  # \ud83d\udd11 \ud575\uc2ec: routing_key\n            body=json.dumps(log_data)\n        )\n\n        print(f\" [x] Sent [{severity}]: {message}\")\n        connection.close()\n\n# \uc0ac\uc6a9 \uc608\nif __name__ == '__main__':\n    publisher = RoutingLogPublisher()\n\n    # \ub2e4\uc591\ud55c \ub808\ubca8\uc758 \ub85c\uadf8 \ubc1c\ud589\n    publisher.publish_log('info', 'User logged in: user123')\n    publisher.publish_log('warning', 'Disk space low: 15% remaining')\n    publisher.publish_log('error', 'Payment processing failed: timeout')\n    publisher.publish_log('info', 'Cache cleared successfully')\n    publisher.publish_log('error', 'Database connection lost')\n"})}),"\n",(0,a.jsx)(e.h3,{id:"error-handler-error\ub9cc-\ucc98\ub9ac",children:"Error Handler (ERROR\ub9cc \ucc98\ub9ac)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# error_handler.py\nimport pika\nimport json\nimport smtplib\nfrom email.message import EmailMessage\n\ndef handle_error(ch, method, properties, body):\n    \"\"\"ERROR \ub85c\uadf8 \ucc98\ub9ac \ubc0f \uc54c\ub9bc\"\"\"\n    log_data = json.loads(body.decode())\n\n    print(f\"\"\"\n    \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    \ud83d\udea8 ERROR ALERT\n    \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    Severity: {log_data['severity']}\n    Time: {log_data['timestamp']}\n    Message: {log_data['message']}\n\n    Action: Sending notification to admin...\n    \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    \"\"\")\n\n    # \uc2e4\uc81c\ub85c\ub294 \uc774\uba54\uc77c, Slack \ub4f1\uc73c\ub85c \uc54c\ub9bc \ubc1c\uc1a1\n    # send_email_alert(log_data)\n    # send_slack_alert(log_data)\n\n    ch.basic_ack(delivery_tag=method.delivery_tag)\n\ndef start():\n    \"\"\"Error Handler \uc2dc\uc791\"\"\"\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n\n    channel.exchange_declare(\n        exchange='direct_logs',\n        exchange_type='direct'\n    )\n\n    # ERROR \uc804\uc6a9 \ud050\n    result = channel.queue_declare(queue='', exclusive=True)\n    queue_name = result.method.queue\n\n    # \ud83d\udd11 \ud575\uc2ec: 'error' routing key\ub9cc \ubc14\uc778\ub529\n    channel.queue_bind(\n        exchange='direct_logs',\n        queue=queue_name,\n        routing_key='error'  # ERROR\ub9cc \ubc1b\uc74c\n    )\n\n    channel.basic_consume(\n        queue=queue_name,\n        on_message_callback=handle_error\n    )\n\n    print(' [*] Error Handler waiting for ERROR logs...')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        start()\n    except KeyboardInterrupt:\n        print('\\nError Handler stopped')\n"})}),"\n",(0,a.jsx)(e.h3,{id:"warning-handler-warning\ub9cc-\ucc98\ub9ac",children:"Warning Handler (WARNING\ub9cc \ucc98\ub9ac)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# warning_handler.py\nimport pika\nimport json\n\ndef handle_warning(ch, method, properties, body):\n    \"\"\"WARNING \ub85c\uadf8 \ucc98\ub9ac\"\"\"\n    log_data = json.loads(body.decode())\n\n    print(f\"\"\"\n    \u26a0\ufe0f  WARNING DETECTED\n    \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    Time: {log_data['timestamp']}\n    Message: {log_data['message']}\n\n    Action: Logging to monitoring system...\n    \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n    \"\"\")\n\n    ch.basic_ack(delivery_tag=method.delivery_tag)\n\ndef start():\n    \"\"\"Warning Handler \uc2dc\uc791\"\"\"\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n\n    channel.exchange_declare(\n        exchange='direct_logs',\n        exchange_type='direct'\n    )\n\n    result = channel.queue_declare(queue='', exclusive=True)\n    queue_name = result.method.queue\n\n    # \ud83d\udd11 \ud575\uc2ec: 'warning' routing key\ub9cc \ubc14\uc778\ub529\n    channel.queue_bind(\n        exchange='direct_logs',\n        queue=queue_name,\n        routing_key='warning'  # WARNING\ub9cc \ubc1b\uc74c\n    )\n\n    channel.basic_consume(\n        queue=queue_name,\n        on_message_callback=handle_warning\n    )\n\n    print(' [*] Warning Handler waiting for WARNING logs...')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        start()\n    except KeyboardInterrupt:\n        print('\\nWarning Handler stopped')\n"})}),"\n",(0,a.jsx)(e.h3,{id:"all-logger-\ubaa8\ub4e0-\ub808\ubca8-\ucc98\ub9ac",children:"All Logger (\ubaa8\ub4e0 \ub808\ubca8 \ucc98\ub9ac)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# all_logger.py\nimport pika\nimport json\n\ndef log_all(ch, method, properties, body):\n    \"\"\"\ubaa8\ub4e0 \ub85c\uadf8 \uae30\ub85d\"\"\"\n    log_data = json.loads(body.decode())\n\n    # \ub808\ubca8\ubcc4 \uc544\uc774\ucf58\n    icons = {\n        'info': '\u2139\ufe0f',\n        'warning': '\u26a0\ufe0f',\n        'error': '\ud83d\udea8'\n    }\n\n    icon = icons.get(log_data['severity'], '\ud83d\udcdd')\n\n    print(f\"{icon} [{log_data['timestamp']}] \"\n          f\"{log_data['severity'].upper()}: {log_data['message']}\")\n\n    # \ud30c\uc77c\uc5d0\ub3c4 \uc800\uc7a5\n    with open('all_logs.txt', 'a', encoding='utf-8') as f:\n        f.write(f\"[{log_data['timestamp']}] \"\n                f\"{log_data['severity'].upper()}: {log_data['message']}\\n\")\n\n    ch.basic_ack(delivery_tag=method.delivery_tag)\n\ndef start():\n    \"\"\"All Logger \uc2dc\uc791\"\"\"\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n\n    channel.exchange_declare(\n        exchange='direct_logs',\n        exchange_type='direct'\n    )\n\n    result = channel.queue_declare(queue='', exclusive=True)\n    queue_name = result.method.queue\n\n    # \ud83d\udd11 \ud575\uc2ec: \uc5ec\ub7ec routing key \ubc14\uc778\ub529\n    severities = ['info', 'warning', 'error']\n    for severity in severities:\n        channel.queue_bind(\n            exchange='direct_logs',\n            queue=queue_name,\n            routing_key=severity  # \ubaa8\ub4e0 \ub808\ubca8 \ubc1b\uc74c\n        )\n\n    channel.basic_consume(\n        queue=queue_name,\n        on_message_callback=log_all\n    )\n\n    print(' [*] All Logger waiting for ALL logs...')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        start()\n    except KeyboardInterrupt:\n        print('\\nAll Logger stopped')\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\ud14c\uc2a4\ud2b8-\ucf54\ub4dc",children:"\ud83e\uddea \ud14c\uc2a4\ud2b8 \ucf54\ub4dc"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# test_routing.py\nimport pytest\nimport pika\nimport json\n\nclass TestRouting:\n    \"\"\"Routing \ud328\ud134 \ud14c\uc2a4\ud2b8\"\"\"\n\n    @pytest.fixture\n    def setup(self):\n        \"\"\"\ud14c\uc2a4\ud2b8 \ud658\uacbd \uc124\uc815\"\"\"\n        connection = pika.BlockingConnection(\n            pika.ConnectionParameters('localhost')\n        )\n        channel = connection.channel()\n\n        try:\n            channel.exchange_delete(exchange='test_direct_logs')\n        except:\n            pass\n\n        yield channel\n        connection.close()\n\n    def test_direct_exchange_routing(self, setup):\n        \"\"\"Direct Exchange \ub77c\uc6b0\ud305 \ud14c\uc2a4\ud2b8\"\"\"\n        channel = setup\n\n        channel.exchange_declare(\n            exchange='test_direct_logs',\n            exchange_type='direct'\n        )\n\n        # 3\uac1c \ud050 \uc0dd\uc131 (\uac01\uac01 \ub2e4\ub978 routing key)\n        error_queue = channel.queue_declare(queue='', exclusive=True).method.queue\n        warning_queue = channel.queue_declare(queue='', exclusive=True).method.queue\n        info_queue = channel.queue_declare(queue='', exclusive=True).method.queue\n\n        # \ubc14\uc778\ub529\n        channel.queue_bind(\n            exchange='test_direct_logs',\n            queue=error_queue,\n            routing_key='error'\n        )\n        channel.queue_bind(\n            exchange='test_direct_logs',\n            queue=warning_queue,\n            routing_key='warning'\n        )\n        channel.queue_bind(\n            exchange='test_direct_logs',\n            queue=info_queue,\n            routing_key='info'\n        )\n\n        # ERROR \uba54\uc2dc\uc9c0 \ubc1c\ud589\n        error_msg = json.dumps({'severity': 'error', 'message': 'Test error'})\n        channel.basic_publish(\n            exchange='test_direct_logs',\n            routing_key='error',\n            body=error_msg\n        )\n\n        # ERROR \ud050\ub9cc \uba54\uc2dc\uc9c0 \ubc1b\uc74c\n        method, properties, body = channel.basic_get(\n            queue=error_queue,\n            auto_ack=True\n        )\n        assert body.decode() == error_msg\n\n        # WARNING, INFO \ud050\ub294 \ube44\uc5b4\uc788\uc74c\n        assert channel.basic_get(queue=warning_queue, auto_ack=True)[0] is None\n        assert channel.basic_get(queue=info_queue, auto_ack=True)[0] is None\n\n    def test_multiple_bindings(self, setup):\n        \"\"\"\ud558\ub098\uc758 \ud050\uc5d0 \uc5ec\ub7ec routing key \ubc14\uc778\ub529 \ud14c\uc2a4\ud2b8\"\"\"\n        channel = setup\n\n        channel.exchange_declare(\n            exchange='test_direct_logs',\n            exchange_type='direct'\n        )\n\n        # 1\uac1c \ud050\uc5d0 \uc5ec\ub7ec routing key \ubc14\uc778\ub529\n        all_queue = channel.queue_declare(queue='', exclusive=True).method.queue\n\n        for severity in ['info', 'warning', 'error']:\n            channel.queue_bind(\n                exchange='test_direct_logs',\n                queue=all_queue,\n                routing_key=severity\n            )\n\n        # \ub2e4\uc591\ud55c \ub808\ubca8 \uba54\uc2dc\uc9c0 \ubc1c\ud589\n        messages = []\n        for severity in ['info', 'warning', 'error']:\n            msg = json.dumps({'severity': severity, 'message': f'Test {severity}'})\n            channel.basic_publish(\n                exchange='test_direct_logs',\n                routing_key=severity,\n                body=msg\n            )\n            messages.append(msg)\n\n        # \ubaa8\ub4e0 \uba54\uc2dc\uc9c0\ub97c \ubc1b\uc558\ub294\uc9c0 \ud655\uc778\n        received = []\n        for _ in range(3):\n            method, properties, body = channel.basic_get(\n                queue=all_queue,\n                auto_ack=True\n            )\n            received.append(body.decode())\n\n        assert len(received) == 3\n        for msg in messages:\n            assert msg in received\n\n    def test_routing_key_mismatch(self, setup):\n        \"\"\"Routing key\uac00 \ub9e4\uce6d\ub418\uc9c0 \uc54a\uc73c\uba74 \uba54\uc2dc\uc9c0 \ubbf8\uc804\ub2ec\"\"\"\n        channel = setup\n\n        channel.exchange_declare(\n            exchange='test_direct_logs',\n            exchange_type='direct'\n        )\n\n        # 'error'\ub9cc \ubc14\uc778\ub529\n        queue = channel.queue_declare(queue='', exclusive=True).method.queue\n        channel.queue_bind(\n            exchange='test_direct_logs',\n            queue=queue,\n            routing_key='error'\n        )\n\n        # 'info' \uba54\uc2dc\uc9c0 \ubc1c\ud589 (\ub9e4\uce6d \uc548\ub428)\n        channel.basic_publish(\n            exchange='test_direct_logs',\n            routing_key='info',\n            body='Test info'\n        )\n\n        # \ud050\uac00 \ube44\uc5b4\uc788\uc5b4\uc57c \ud568\n        method, properties, body = channel.basic_get(\n            queue=queue,\n            auto_ack=True\n        )\n        assert method is None\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\uc2e4\ud589-\uc608\uc81c",children:"\ud83c\udfa8 \uc2e4\ud589 \uc608\uc81c"}),"\n",(0,a.jsx)(e.h3,{id:"1-handler\ub4e4-\uc2e4\ud589",children:"1. Handler\ub4e4 \uc2e4\ud589"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# \ud130\ubbf8\ub110 1 - Error Handler\npython error_handler.py\n\n# \ud130\ubbf8\ub110 2 - Warning Handler\npython warning_handler.py\n\n# \ud130\ubbf8\ub110 3 - All Logger\npython all_logger.py\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-\ub85c\uadf8-\ubc1c\ud589",children:"2. \ub85c\uadf8 \ubc1c\ud589"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# \ud130\ubbf8\ub110 4\npython routing_publisher.py\n"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"\ucd9c\ub825 \uacb0\uacfc"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"# Error Handler (ERROR\ub9cc \ubc1b\uc74c)\n\ud83d\udea8 ERROR ALERT\nSeverity: error\nMessage: Payment processing failed: timeout\n---\n\ud83d\udea8 ERROR ALERT\nSeverity: error\nMessage: Database connection lost\n\n# Warning Handler (WARNING\ub9cc \ubc1b\uc74c)\n\u26a0\ufe0f  WARNING DETECTED\nMessage: Disk space low: 15% remaining\n\n# All Logger (\ubaa8\ub4e0 \ub808\ubca8 \ubc1b\uc74c)\n\u2139\ufe0f [2024-01-15T10:30:45] INFO: User logged in: user123\n\u26a0\ufe0f [2024-01-15T10:30:46] WARNING: Disk space low: 15% remaining\n\ud83d\udea8 [2024-01-15T10:30:47] ERROR: Payment processing failed: timeout\n\u2139\ufe0f [2024-01-15T10:30:48] INFO: Cache cleared successfully\n\ud83d\udea8 [2024-01-15T10:30:49] ERROR: Database connection lost\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\ud575\uc2ec-\uac1c\ub150",children:"\ud83d\udca1 \ud575\uc2ec \uac1c\ub150"}),"\n",(0,a.jsx)(e.h3,{id:"1-direct-exchange",children:"1. Direct Exchange"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# Exchange \uc120\uc5b8\nchannel.exchange_declare(\n    exchange='direct_logs',\n    exchange_type='direct'  # Routing key \uc815\ud655\ud788 \ub9e4\uce6d\n)\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-routing-key",children:"2. Routing Key"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# Publisher: routing_key \uc9c0\uc815\nchannel.basic_publish(\n    exchange='direct_logs',\n    routing_key='error',  # \ud83d\udd11 \uc774 \ud0a4\ub85c \ub77c\uc6b0\ud305\n    body=message\n)\n\n# Consumer: \ub3d9\uc77c\ud55c routing_key\ub85c \ubc14\uc778\ub529\nchannel.queue_bind(\n    exchange='direct_logs',\n    queue=queue_name,\n    routing_key='error'  # \ud83d\udd11 \uc774 \ud0a4\ub9cc \ubc1b\uc74c\n)\n"})}),"\n",(0,a.jsx)(e.h3,{id:"3-\uc5ec\ub7ec-\ubc14\uc778\ub529",children:"3. \uc5ec\ub7ec \ubc14\uc778\ub529"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \ud558\ub098\uc758 \ud050\uc5d0 \uc5ec\ub7ec routing key \ubc14\uc778\ub529 \uac00\ub2a5\nseverities = ['info', 'warning', 'error']\nfor severity in severities:\n    channel.queue_bind(\n        exchange='direct_logs',\n        queue=queue_name,\n        routing_key=severity\n    )\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-exchange-\ud0c0\uc785-\ube44\uad50",children:"\ud83d\udd0d Exchange \ud0c0\uc785 \ube44\uad50"}),"\n",(0,a.jsx)(e.h3,{id:"fanout-vs-direct",children:"Fanout vs Direct"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# Fanout: \ubaa8\ub4e0 \ud050\uc5d0 \uc804\uc1a1 (routing_key \ubb34\uc2dc)\nchannel.exchange_declare(exchange='logs', exchange_type='fanout')\nchannel.basic_publish(exchange='logs', routing_key='', body=msg)\n# \u2192 \ubaa8\ub4e0 \ubc14\uc778\ub529\ub41c \ud050\uac00 \ubc1b\uc74c\n\n# Direct: routing_key \uc815\ud655\ud788 \ub9e4\uce6d\nchannel.exchange_declare(exchange='direct_logs', exchange_type='direct')\nchannel.basic_publish(exchange='direct_logs', routing_key='error', body=msg)\n# \u2192 'error'\ub85c \ubc14\uc778\ub529\ub41c \ud050\ub9cc \ubc1b\uc74c\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\uc2e4\uc804-\ud65c\uc6a9-\uc0ac\ub840",children:"\ud83d\udca1 \uc2e4\uc804 \ud65c\uc6a9 \uc0ac\ub840"}),"\n",(0,a.jsx)(e.h3,{id:"1-\uc54c\ub9bc-\ucc44\ub110-\uc120\ud0dd",children:"1. \uc54c\ub9bc \ucc44\ub110 \uc120\ud0dd"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \uc0ac\uc6a9\uc790 \uc124\uc815\uc5d0 \ub530\ub77c \uc54c\ub9bc \ucc44\ub110 \uc120\ud0dd\nuser_preferences = {\n    'email': True,\n    'sms': False,\n    'push': True\n}\n\nfor channel_type, enabled in user_preferences.items():\n    if enabled:\n        channel.basic_publish(\n            exchange='notifications',\n            routing_key=channel_type,  # 'email' \ub610\ub294 'push'\n            body=notification\n        )\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-\uc11c\ubc84\ubcc4-\uc791\uc5c5-\ubd84\ubc30",children:"2. \uc11c\ubc84\ubcc4 \uc791\uc5c5 \ubd84\ubc30"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \uc11c\ubc84 \uc704\uce58\uc5d0 \ub530\ub77c \uc791\uc5c5 \ubd84\ubc30\nchannel.basic_publish(\n    exchange='tasks',\n    routing_key='asia',  # 'asia', 'europe', 'us' \ub4f1\n    body=task_data\n)\n"})}),"\n",(0,a.jsx)(e.h3,{id:"3-\ub85c\uadf8-\ub808\ubca8\ubcc4-\uc800\uc7a5",children:"3. \ub85c\uadf8 \ub808\ubca8\ubcc4 \uc800\uc7a5"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \uc911\uc694\ud55c \ub85c\uadf8\ub9cc \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc800\uc7a5\nif log_level in ['error', 'critical']:\n    channel.basic_publish(\n        exchange='logs',\n        routing_key='database',  # DB \uc800\uc7a5\n        body=log_data\n    )\nelse:\n    channel.basic_publish(\n        exchange='logs',\n        routing_key='file',  # \ud30c\uc77c \uc800\uc7a5\n        body=log_data\n    )\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\uc2e4\uc2b5-\uacfc\uc81c",children:"\u2705 \uc2e4\uc2b5 \uacfc\uc81c"}),"\n",(0,a.jsx)(e.p,{children:"\ub2e4\uc74c \uc2dc\uc2a4\ud15c\uc744 \uad6c\ud604\ud558\uc138\uc694:"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\uc774\ubca4\ud2b8 \ucc98\ub9ac \uc2dc\uc2a4\ud15c"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Publisher: \uc774\ubca4\ud2b8 \ubc1c\ud589 (payment, order, shipping)"}),"\n",(0,a.jsx)(e.li,{children:"Payment Handler: payment \uc774\ubca4\ud2b8\ub9cc \ucc98\ub9ac"}),"\n",(0,a.jsx)(e.li,{children:"Order Handler: order \uc774\ubca4\ud2b8\ub9cc \ucc98\ub9ac"}),"\n",(0,a.jsx)(e.li,{children:"Analytics: \ubaa8\ub4e0 \uc774\ubca4\ud2b8 \uc218\uc9d1"}),"\n"]}),"\n",(0,a.jsxs)(r,{children:[(0,a.jsx)("summary",{children:"\uc815\ub2f5 \ubcf4\uae30"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# event_publisher.py\nimport pika\nimport json\n\ndef publish_event(event_type: str, data: dict):\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n\n    channel.exchange_declare(\n        exchange='events',\n        exchange_type='direct'\n    )\n\n    channel.basic_publish(\n        exchange='events',\n        routing_key=event_type,\n        body=json.dumps(data)\n    )\n\n    print(f\" [x] Published {event_type} event\")\n    connection.close()\n\n# \uc0ac\uc6a9 \uc608\npublish_event('payment', {'amount': 100, 'user_id': 123})\npublish_event('order', {'order_id': 'ORD-456', 'items': 3})\npublish_event('shipping', {'tracking_id': 'TRK-789'})\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# payment_handler.py\nimport pika\nimport json\n\ndef handle_payment(ch, method, properties, body):\n    data = json.loads(body.decode())\n    print(f\" [x] Processing payment: ${data['amount']}\")\n    ch.basic_ack(delivery_tag=method.delivery_tag)\n\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters('localhost')\n)\nchannel = connection.channel()\n\nchannel.exchange_declare(exchange='events', exchange_type='direct')\nresult = channel.queue_declare(queue='', exclusive=True)\nqueue_name = result.method.queue\n\nchannel.queue_bind(\n    exchange='events',\n    queue=queue_name,\n    routing_key='payment'\n)\n\nchannel.basic_consume(\n    queue=queue_name,\n    on_message_callback=handle_payment\n)\n\nprint(' [*] Payment Handler waiting...')\nchannel.start_consuming()\n"})})]}),"\n",(0,a.jsx)(e.h2,{id:"-\ud575\uc2ec-\uc815\ub9ac",children:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Direct Exchange"}),": Routing key \uc815\ud655\ud788 \ub9e4\uce6d"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Routing Key"}),": \uba54\uc2dc\uc9c0 \ub77c\uc6b0\ud305 \uae30\uc900"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\uc120\ud0dd\uc801 \uad6c\ub3c5"}),": \ud544\uc694\ud55c \uba54\uc2dc\uc9c0\ub9cc \uc218\uc2e0"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\uc5ec\ub7ec \ubc14\uc778\ub529"}),": \ud558\ub098\uc758 \ud050\uc5d0 \uc5ec\ub7ec routing key \uac00\ub2a5"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83d\udcda \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,a.jsxs)(e.p,{children:["\ud83d\udc49 ",(0,a.jsx)(e.a,{href:"./topics",children:"Topics - \ud328\ud134 \ub9e4\uce6d"})]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}}}]);