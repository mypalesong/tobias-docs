"use strict";(globalThis.webpackChunkgithub_docs=globalThis.webpackChunkgithub_docs||[]).push([[2602],{759:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>t,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>r});const l=JSON.parse('{"id":"rabbitmq/basic/hello-world","title":"Hello World - \uccab \uba54\uc2dc\uc9c0","description":"\uac00\uc7a5 \uac04\ub2e8\ud55c \uba54\uc2dc\uc9c0 \uc804\uc1a1\uacfc \uc218\uc2e0\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!","source":"@site/docs/rabbitmq/basic/hello-world.md","sourceDirName":"rabbitmq/basic","slug":"/rabbitmq/basic/hello-world","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/hello-world","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rabbitmq/basic/hello-world.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"rabbitmqSidebar","previous":{"title":"RabbitMQ \uc124\uce58 \ubc0f \uc124\uc815","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/installation"},"next":{"title":"Work Queue - \uc791\uc5c5 \ubd84\ubc30","permalink":"/tobias-docs/comp-0/docs/rabbitmq/basic/work-queues"}}');var a=s(4848),c=s(8453);const o={sidebar_position:4},i="Hello World - \uccab \uba54\uc2dc\uc9c0",t={},r=[{value:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c",id:"-\ud559\uc2b5-\ubaa9\ud45c",level:2},{value:"\ud83d\udcca \ud328\ud134 \uad6c\uc870",id:"-\ud328\ud134-\uad6c\uc870",level:2},{value:"\ud83d\udcdd Producer \uc791\uc131",id:"-producer-\uc791\uc131",level:2},{value:"\ud83d\udce5 Consumer \uc791\uc131",id:"-consumer-\uc791\uc131",level:2},{value:"\ud83e\uddea \ud14c\uc2a4\ud2b8 \ucf54\ub4dc",id:"-\ud14c\uc2a4\ud2b8-\ucf54\ub4dc",level:2},{value:"\ud83c\udfa8 \uc2e4\uc804 \uc608\uc81c",id:"-\uc2e4\uc804-\uc608\uc81c",level:2},{value:"1. CLI \ub3c4\uad6c",id:"1-cli-\ub3c4\uad6c",level:3},{value:"2. JSON \uba54\uc2dc\uc9c0",id:"2-json-\uba54\uc2dc\uc9c0",level:3},{value:"3. Context Manager \ud328\ud134",id:"3-context-manager-\ud328\ud134",level:3},{value:"\ud83d\udd0d Management UI\uc5d0\uc11c \ud655\uc778",id:"-management-ui\uc5d0\uc11c-\ud655\uc778",level:2},{value:"\ud83d\udca1 \uc8fc\uc694 \ud3ec\uc778\ud2b8",id:"-\uc8fc\uc694-\ud3ec\uc778\ud2b8",level:2},{value:"queue_declare\uc758 \uba71\ub4f1\uc131",id:"queue_declare\uc758-\uba71\ub4f1\uc131",level:3},{value:"auto_ack\uc758 \uc758\ubbf8",id:"auto_ack\uc758-\uc758\ubbf8",level:3},{value:"\uc5f0\uacb0 \ub9ac\uc18c\uc2a4 \uad00\ub9ac",id:"\uc5f0\uacb0-\ub9ac\uc18c\uc2a4-\uad00\ub9ac",level:3},{value:"\ud83d\udea8 \uc790\uc8fc \ubc1c\uc0dd\ud558\ub294 \uc5d0\ub7ec",id:"-\uc790\uc8fc-\ubc1c\uc0dd\ud558\ub294-\uc5d0\ub7ec",level:2},{value:"1. \ud050\uac00 \uc5c6\uc74c",id:"1-\ud050\uac00-\uc5c6\uc74c",level:3},{value:"2. \uc5f0\uacb0 \ud0c0\uc784\uc544\uc6c3",id:"2-\uc5f0\uacb0-\ud0c0\uc784\uc544\uc6c3",level:3},{value:"\u2705 \uc2e4\uc2b5 \uacfc\uc81c",id:"-\uc2e4\uc2b5-\uacfc\uc81c",level:2},{value:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac",id:"-\ud575\uc2ec-\uc815\ub9ac",level:2},{value:"\ud83d\udcda \ub2e4\uc74c \ub2e8\uacc4",id:"-\ub2e4\uc74c-\ub2e8\uacc4",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...n.components},{Details:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"hello-world---\uccab-\uba54\uc2dc\uc9c0",children:"Hello World - \uccab \uba54\uc2dc\uc9c0"})}),"\n",(0,a.jsx)(e.p,{children:"\uac00\uc7a5 \uac04\ub2e8\ud55c \uba54\uc2dc\uc9c0 \uc804\uc1a1\uacfc \uc218\uc2e0\uc744 \ubc30\uc6cc\ubd05\uc2dc\ub2e4!"}),"\n",(0,a.jsx)(e.h2,{id:"-\ud559\uc2b5-\ubaa9\ud45c",children:"\ud83c\udfaf \ud559\uc2b5 \ubaa9\ud45c"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Producer \uc791\uc131\ud558\uae30"}),"\n",(0,a.jsx)(e.li,{children:"Consumer \uc791\uc131\ud558\uae30"}),"\n",(0,a.jsx)(e.li,{children:"\uba54\uc2dc\uc9c0 \uc804\uc1a1 \ubc0f \uc218\uc2e0"}),"\n",(0,a.jsx)(e.li,{children:"\ud14c\uc2a4\ud2b8 \ucf54\ub4dc \uc791\uc131"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\ud328\ud134-\uad6c\uc870",children:"\ud83d\udcca \ud328\ud134 \uad6c\uc870"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"Producer  --\x3e  [Queue]  --\x3e  Consumer\n   (P)           hello          (C)\n"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"\ud2b9\uc9d5"}),":"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"1:1 \ud1b5\uc2e0"}),"\n",(0,a.jsx)(e.li,{children:"\uac00\uc7a5 \uac04\ub2e8\ud55c \ud328\ud134"}),"\n",(0,a.jsx)(e.li,{children:"Exchange \uc0ac\uc6a9 \uc548 \ud568 (\uae30\ubcf8 Exchange \uc0ac\uc6a9)"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-producer-\uc791\uc131",children:"\ud83d\udcdd Producer \uc791\uc131"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# producer/send.py\nimport pika\n\ndef send_message(message: str):\n    \"\"\"\uba54\uc2dc\uc9c0\ub97c hello \ud050\ub85c \uc804\uc1a1\"\"\"\n\n    # 1. \uc5f0\uacb0 \uc0dd\uc131\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n\n    # 2. \ud050 \uc120\uc5b8 (\uc5c6\uc73c\uba74 \uc0dd\uc131)\n    channel.queue_declare(queue='hello')\n\n    # 3. \uba54\uc2dc\uc9c0 \ubc1c\ud589\n    channel.basic_publish(\n        exchange='',              # \uae30\ubcf8 exchange \uc0ac\uc6a9\n        routing_key='hello',      # \ud050 \uc774\ub984\n        body=message\n    )\n\n    print(f\" [x] Sent '{message}'\")\n\n    # 4. \uc5f0\uacb0 \uc885\ub8cc\n    connection.close()\n\nif __name__ == '__main__':\n    send_message('Hello World!')\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"python producer/send.py\n# [x] Sent 'Hello World!'\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-consumer-\uc791\uc131",children:"\ud83d\udce5 Consumer \uc791\uc131"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# consumer/receive.py\nimport pika\n\ndef callback(ch, method, properties, body):\n    """\uba54\uc2dc\uc9c0\ub97c \ubc1b\uc558\uc744 \ub54c \uc2e4\ud589\ub418\ub294 \ucf5c\ubc31"""\n    print(f" [x] Received {body.decode()}")\n\ndef start_consumer():\n    """Consumer \uc2dc\uc791"""\n\n    # 1. \uc5f0\uacb0 \uc0dd\uc131\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters(\'localhost\')\n    )\n    channel = connection.channel()\n\n    # 2. \ud050 \uc120\uc5b8 (Producer\uc640 \ub3d9\uc77c\ud55c \ud050)\n    channel.queue_declare(queue=\'hello\')\n\n    # 3. Consumer \uc124\uc815\n    channel.basic_consume(\n        queue=\'hello\',\n        on_message_callback=callback,\n        auto_ack=True  # \uc790\ub3d9 \ud655\uc778\n    )\n\n    print(\' [*] Waiting for messages. To exit press CTRL+C\')\n\n    # 4. \uba54\uc2dc\uc9c0 \ub300\uae30 \uc2dc\uc791\n    channel.start_consuming()\n\nif __name__ == \'__main__\':\n    try:\n        start_consumer()\n    except KeyboardInterrupt:\n        print(\'Interrupted\')\n'})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"python consumer/receive.py\n# [*] Waiting for messages. To exit press CTRL+C\n# [x] Received Hello World!\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\ud14c\uc2a4\ud2b8-\ucf54\ub4dc",children:"\ud83e\uddea \ud14c\uc2a4\ud2b8 \ucf54\ub4dc"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# tests/test_hello_world.py\nimport pytest\nimport pika\nimport time\nfrom threading import Thread\n\nclass TestHelloWorld:\n    \"\"\"Hello World \ud328\ud134 \ud14c\uc2a4\ud2b8\"\"\"\n\n    @pytest.fixture\n    def connection(self):\n        \"\"\"RabbitMQ \uc5f0\uacb0 fixture\"\"\"\n        conn = pika.BlockingConnection(\n            pika.ConnectionParameters('localhost')\n        )\n        yield conn\n        conn.close()\n\n    @pytest.fixture\n    def channel(self, connection):\n        \"\"\"\ucc44\ub110 fixture\"\"\"\n        ch = connection.channel()\n        ch.queue_declare(queue='test_hello')\n        yield ch\n        # \ud14c\uc2a4\ud2b8 \ud6c4 \ud050 \uc0ad\uc81c\n        ch.queue_delete(queue='test_hello')\n\n    def test_send_message(self, channel):\n        \"\"\"\uba54\uc2dc\uc9c0 \uc804\uc1a1 \ud14c\uc2a4\ud2b8\"\"\"\n        # \uba54\uc2dc\uc9c0 \ubc1c\ud589\n        channel.basic_publish(\n            exchange='',\n            routing_key='test_hello',\n            body='Test Message'\n        )\n\n        # \ud050\uc5d0 \uba54\uc2dc\uc9c0\uac00 \uc788\ub294\uc9c0 \ud655\uc778\n        method, properties, body = channel.basic_get(\n            queue='test_hello',\n            auto_ack=True\n        )\n\n        assert body == b'Test Message'\n\n    def test_receive_message(self, channel):\n        \"\"\"\uba54\uc2dc\uc9c0 \uc218\uc2e0 \ud14c\uc2a4\ud2b8\"\"\"\n        received_messages = []\n\n        def callback(ch, method, properties, body):\n            received_messages.append(body.decode())\n\n        # Consumer \uc124\uc815\n        channel.basic_consume(\n            queue='test_hello',\n            on_message_callback=callback,\n            auto_ack=True\n        )\n\n        # \uba54\uc2dc\uc9c0 \ubc1c\ud589\n        channel.basic_publish(\n            exchange='',\n            routing_key='test_hello',\n            body='Test Message'\n        )\n\n        # \uc9e7\uc740 \uc2dc\uac04 \ub3d9\uc548 \uba54\uc2dc\uc9c0 \uc218\uc2e0\n        connection = channel.connection\n        connection.process_data_events(time_limit=1)\n\n        assert 'Test Message' in received_messages\n\n    def test_multiple_messages(self, channel):\n        \"\"\"\uc5ec\ub7ec \uba54\uc2dc\uc9c0 \uc804\uc1a1 \ud14c\uc2a4\ud2b8\"\"\"\n        messages = ['Message 1', 'Message 2', 'Message 3']\n\n        # \uba54\uc2dc\uc9c0 \ubc1c\ud589\n        for msg in messages:\n            channel.basic_publish(\n                exchange='',\n                routing_key='test_hello',\n                body=msg\n            )\n\n        # \uba54\uc2dc\uc9c0 \uc218\uc2e0 \ud655\uc778\n        received = []\n        for _ in range(len(messages)):\n            method, properties, body = channel.basic_get(\n                queue='test_hello',\n                auto_ack=True\n            )\n            if body:\n                received.append(body.decode())\n\n        assert received == messages\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# \ud14c\uc2a4\ud2b8 \uc2e4\ud589\npytest tests/test_hello_world.py -v\n\n# \ucd9c\ub825:\n# tests/test_hello_world.py::TestHelloWorld::test_send_message PASSED\n# tests/test_hello_world.py::TestHelloWorld::test_receive_message PASSED\n# tests/test_hello_world.py::TestHelloWorld::test_multiple_messages PASSED\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\uc2e4\uc804-\uc608\uc81c",children:"\ud83c\udfa8 \uc2e4\uc804 \uc608\uc81c"}),"\n",(0,a.jsx)(e.h3,{id:"1-cli-\ub3c4\uad6c",children:"1. CLI \ub3c4\uad6c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# cli_send.py\nimport sys\nimport pika\n\ndef main():\n    if len(sys.argv) < 2:\n        print(\"Usage: python cli_send.py <message>\")\n        sys.exit(1)\n\n    message = ' '.join(sys.argv[1:])\n\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n    channel.queue_declare(queue='hello')\n\n    channel.basic_publish(\n        exchange='',\n        routing_key='hello',\n        body=message\n    )\n\n    print(f\" [x] Sent '{message}'\")\n    connection.close()\n\nif __name__ == '__main__':\n    main()\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"python cli_send.py \"\uc548\ub155\ud558\uc138\uc694 RabbitMQ!\"\n# [x] Sent '\uc548\ub155\ud558\uc138\uc694 RabbitMQ!'\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-json-\uba54\uc2dc\uc9c0",children:"2. JSON \uba54\uc2dc\uc9c0"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# send_json.py\nimport pika\nimport json\n\ndef send_json_message(data: dict):\n    \"\"\"JSON \uba54\uc2dc\uc9c0 \uc804\uc1a1\"\"\"\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n    channel.queue_declare(queue='json_queue')\n\n    # dict\ub97c JSON \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\n    message = json.dumps(data)\n\n    channel.basic_publish(\n        exchange='',\n        routing_key='json_queue',\n        body=message,\n        properties=pika.BasicProperties(\n            content_type='application/json',\n        )\n    )\n\n    print(f\" [x] Sent JSON: {message}\")\n    connection.close()\n\n# \uc0ac\uc6a9 \uc608\nsend_json_message({\n    'user_id': 123,\n    'action': 'login',\n    'timestamp': '2024-01-26T10:00:00'\n})\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# receive_json.py\nimport pika\nimport json\n\ndef callback(ch, method, properties, body):\n    \"\"\"JSON \uba54\uc2dc\uc9c0 \uc218\uc2e0\"\"\"\n    data = json.loads(body)\n    print(f\" [x] Received JSON:\")\n    print(f\"     User ID: {data['user_id']}\")\n    print(f\"     Action: {data['action']}\")\n    print(f\"     Time: {data['timestamp']}\")\n\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters('localhost')\n)\nchannel = connection.channel()\nchannel.queue_declare(queue='json_queue')\n\nchannel.basic_consume(\n    queue='json_queue',\n    on_message_callback=callback,\n    auto_ack=True\n)\n\nprint(' [*] Waiting for JSON messages...')\nchannel.start_consuming()\n"})}),"\n",(0,a.jsx)(e.h3,{id:"3-context-manager-\ud328\ud134",children:"3. Context Manager \ud328\ud134"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# rabbitmq_context.py\nimport pika\nfrom contextlib import contextmanager\n\n@contextmanager\ndef rabbitmq_connection(host=\'localhost\'):\n    """\uc5f0\uacb0 \ucee8\ud14d\uc2a4\ud2b8 \ub9e4\ub2c8\uc800"""\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters(host)\n    )\n    try:\n        yield connection\n    finally:\n        connection.close()\n\n@contextmanager\ndef rabbitmq_channel(host=\'localhost\'):\n    """\ucc44\ub110 \ucee8\ud14d\uc2a4\ud2b8 \ub9e4\ub2c8\uc800"""\n    with rabbitmq_connection(host) as connection:\n        channel = connection.channel()\n        try:\n            yield channel\n        finally:\n            pass  # \ucc44\ub110\uc740 \uc5f0\uacb0 \uc885\ub8cc \uc2dc \uc790\ub3d9 \ub2eb\ud798\n\n# \uc0ac\uc6a9 \uc608\nwith rabbitmq_channel() as channel:\n    channel.queue_declare(queue=\'hello\')\n    channel.basic_publish(\n        exchange=\'\',\n        routing_key=\'hello\',\n        body=\'Context Manager \ud14c\uc2a4\ud2b8\'\n    )\n    print(" [x] Message sent!")\n'})}),"\n",(0,a.jsx)(e.h2,{id:"-management-ui\uc5d0\uc11c-\ud655\uc778",children:"\ud83d\udd0d Management UI\uc5d0\uc11c \ud655\uc778"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"http://localhost:15672",children:"http://localhost:15672"})," \uc811\uc18d"]}),"\n",(0,a.jsx)(e.li,{children:"Queues \ud0ed \ud074\ub9ad"}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"hello"})," \ud050 \ucc3e\uae30"]}),"\n",(0,a.jsx)(e.li,{children:"\ud050 \uc774\ub984 \ud074\ub9ad\ud558\uc5ec \uc0c1\uc138 \uc815\ubcf4 \ud655\uc778"}),"\n",(0,a.jsx)(e.li,{children:'"Get messages" \uc139\uc158\uc5d0\uc11c \uba54\uc2dc\uc9c0 \ud655\uc778 \uac00\ub2a5'}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\uc8fc\uc694-\ud3ec\uc778\ud2b8",children:"\ud83d\udca1 \uc8fc\uc694 \ud3ec\uc778\ud2b8"}),"\n",(0,a.jsx)(e.h3,{id:"queue_declare\uc758-\uba71\ub4f1\uc131",children:"queue_declare\uc758 \uba71\ub4f1\uc131"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \uc5ec\ub7ec \ubc88 \ud638\ucd9c\ud574\ub3c4 \uc548\uc804 (\uc774\ubbf8 \uc788\uc73c\uba74 \ubb34\uc2dc)\nchannel.queue_declare(queue='hello')\nchannel.queue_declare(queue='hello')\nchannel.queue_declare(queue='hello')\n"})}),"\n",(0,a.jsx)(e.h3,{id:"auto_ack\uc758-\uc758\ubbf8",children:"auto_ack\uc758 \uc758\ubbf8"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# auto_ack=True: \uba54\uc2dc\uc9c0\ub97c \ubc1b\uc790\ub9c8\uc790 \uc790\ub3d9 \ud655\uc778\nchannel.basic_consume(\n    queue='hello',\n    on_message_callback=callback,\n    auto_ack=True  # \uc790\ub3d9 \ud655\uc778 ON\n)\n\n# auto_ack=False: \uc218\ub3d9\uc73c\ub85c \ud655\uc778\ud574\uc57c \ud568 (\ub2e4\uc74c \ucc55\ud130\uc5d0\uc11c)\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\uc5f0\uacb0-\ub9ac\uc18c\uc2a4-\uad00\ub9ac",children:"\uc5f0\uacb0 \ub9ac\uc18c\uc2a4 \uad00\ub9ac"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# \u274c \ub098\uc05c \uc608: \uc5f0\uacb0\uc744 \ub2eb\uc9c0 \uc54a\uc74c\ndef send_message(msg):\n    connection = pika.BlockingConnection(...)\n    channel = connection.channel()\n    channel.basic_publish(...)\n    # connection.close() \ub204\ub77d!\n\n# \u2705 \uc88b\uc740 \uc608: \ud56d\uc0c1 \uc5f0\uacb0 \uc885\ub8cc\ndef send_message(msg):\n    connection = pika.BlockingConnection(...)\n    try:\n        channel = connection.channel()\n        channel.basic_publish(...)\n    finally:\n        connection.close()\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\uc790\uc8fc-\ubc1c\uc0dd\ud558\ub294-\uc5d0\ub7ec",children:"\ud83d\udea8 \uc790\uc8fc \ubc1c\uc0dd\ud558\ub294 \uc5d0\ub7ec"}),"\n",(0,a.jsx)(e.h3,{id:"1-\ud050\uac00-\uc5c6\uc74c",children:"1. \ud050\uac00 \uc5c6\uc74c"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# pika.exceptions.ChannelClosedByBroker: (404, \"NOT_FOUND\")\n\n# \ud574\uacb0: queue_declare \uba3c\uc800 \ud638\ucd9c\nchannel.queue_declare(queue='hello')\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-\uc5f0\uacb0-\ud0c0\uc784\uc544\uc6c3",children:"2. \uc5f0\uacb0 \ud0c0\uc784\uc544\uc6c3"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# pika.exceptions.AMQPConnectionError\n\n# \ud574\uacb0: RabbitMQ\uac00 \uc2e4\ud589 \uc911\uc778\uc9c0 \ud655\uc778\ndocker ps | grep rabbitmq\n"})}),"\n",(0,a.jsx)(e.h2,{id:"-\uc2e4\uc2b5-\uacfc\uc81c",children:"\u2705 \uc2e4\uc2b5 \uacfc\uc81c"}),"\n",(0,a.jsx)(e.p,{children:"\ub2e4\uc74c \ud504\ub85c\uadf8\ub7a8\uc744 \ub9cc\ub4e4\uc5b4\ubcf4\uc138\uc694:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\uc0ac\uc6a9\uc790\ub85c\ubd80\ud130 \uba54\uc2dc\uc9c0\ub97c \uc785\ub825\ubc1b\uc544 \uc804\uc1a1\ud558\ub294 Producer"}),"\n",(0,a.jsx)(e.li,{children:"\ubc1b\uc740 \uba54\uc2dc\uc9c0\ub97c \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud558\ub294 Consumer"}),"\n",(0,a.jsx)(e.li,{children:"\ub450 \ud504\ub85c\uadf8\ub7a8\uc744 \ud14c\uc2a4\ud2b8\ud558\ub294 pytest \ucf54\ub4dc"}),"\n"]}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"\uc815\ub2f5 \ubcf4\uae30"}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# producer_input.py\nimport pika\n\ndef main():\n    connection = pika.BlockingConnection(\n        pika.ConnectionParameters('localhost')\n    )\n    channel = connection.channel()\n    channel.queue_declare(queue='user_messages')\n\n    while True:\n        message = input(\"\uba54\uc2dc\uc9c0 \uc785\ub825 (quit to exit): \")\n        if message.lower() == 'quit':\n            break\n\n        channel.basic_publish(\n            exchange='',\n            routing_key='user_messages',\n            body=message\n        )\n        print(f\" [x] Sent: {message}\")\n\n    connection.close()\n\nif __name__ == '__main__':\n    main()\n"})}),(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# consumer_file.py\nimport pika\nfrom datetime import datetime\n\ndef callback(ch, method, properties, body):\n    message = body.decode()\n    timestamp = datetime.now().isoformat()\n\n    with open('messages.log', 'a') as f:\n        f.write(f\"[{timestamp}] {message}\\n\")\n\n    print(f\" [x] Saved: {message}\")\n\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters('localhost')\n)\nchannel = connection.channel()\nchannel.queue_declare(queue='user_messages')\n\nchannel.basic_consume(\n    queue='user_messages',\n    on_message_callback=callback,\n    auto_ack=True\n)\n\nprint(' [*] Waiting for messages...')\nchannel.start_consuming()\n"})})]}),"\n",(0,a.jsx)(e.h2,{id:"-\ud575\uc2ec-\uc815\ub9ac",children:"\ud83d\udcda \ud575\uc2ec \uc815\ub9ac"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"queue_declare()"}),": \ud050 \uc0dd\uc131/\ud655\uc778"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"basic_publish()"}),": \uba54\uc2dc\uc9c0 \ubc1c\ud589"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"basic_consume()"}),": \uba54\uc2dc\uc9c0 \uc218\uc2e0 \uc2dc\uc791"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"auto_ack=True"}),": \uc790\ub3d9 \uba54\uc2dc\uc9c0 \ud655\uc778"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"-\ub2e4\uc74c-\ub2e8\uacc4",children:"\ud83d\udcda \ub2e4\uc74c \ub2e8\uacc4"}),"\n",(0,a.jsx)(e.p,{children:"Hello World \ud328\ud134\uc744 \ub9c8\uc2a4\ud130\ud588\uc2b5\ub2c8\ub2e4!"}),"\n",(0,a.jsxs)(e.p,{children:["\ud83d\udc49 ",(0,a.jsx)(e.a,{href:"./work-queues",children:"Work Queue - \uc791\uc5c5 \ubd84\ubc30"})]})]})}function h(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>i});var l=s(6540);const a={},c=l.createContext(a);function o(n){const e=l.useContext(c);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),l.createElement(c.Provider,{value:e},n.children)}}}]);